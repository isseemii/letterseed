{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"_createContext.mjs","sources":["file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_createContext/createGlobalScopedContext.ts"],"sourcesContent":["import {type Context, createContext} from 'react'\n\nimport {SANITY_VERSION} from '../core/version'\n\nconst MISSING_CONTEXT_HELP_URL = 'https://www.sanity.io/help/missing-context-error'\n\n/**\n * @internal\n * @hidden\n */\nexport function createGlobalScopedContext<ContextType, const T extends ContextType = ContextType>(\n  /**\n   * It's important to prefix these keys as they are global\n   */\n  key: `sanity/_singletons/context/${string}`,\n  defaultValue: T,\n): Context<ContextType> {\n  const symbol = Symbol.for(key)\n\n  /**\n   * Prevent errors about re-renders on React SSR on Next.js App Router, as well as JSDOM-based\n   * environments such as when we extract schemas etc from the studio configuration.\n   */\n  if (\n    typeof document === 'undefined' ||\n    (typeof window !== 'undefined' &&\n      typeof window.navigator !== 'undefined' &&\n      window.navigator.userAgent.includes('jsdom'))\n  ) {\n    const context = createContext<ContextType>(defaultValue)\n    context.displayName = key\n    return context\n  }\n\n  if (!globalScope[symbol]) {\n    globalScope[symbol] = {context: createContext<T>(defaultValue), version: SANITY_VERSION}\n  } else if (globalScope[symbol].version !== SANITY_VERSION) {\n    throw new TypeError(\n      `Duplicate instances of context \"${key}\" with incompatible versions detected: Expected ${SANITY_VERSION} but got ${globalScope[symbol].version}.\\n\\n` +\n        `For more information, please visit ${MISSING_CONTEXT_HELP_URL}`,\n    )\n  } else if (!warned.has(SANITY_VERSION)) {\n    console.warn(\n      `Duplicate instances of context \"${key}\" detected. This is likely a mistake and may cause unexpected behavior.\\n\\n` +\n        `For more information, please visit ${MISSING_CONTEXT_HELP_URL}`,\n    )\n    warned.add(SANITY_VERSION)\n  }\n\n  return globalScope[symbol].context\n}\n\nconst warned = new Set<typeof SANITY_VERSION>()\n\n/**\n * Gets the global scope instance in a given environment.\n *\n * The strategy is to return the most modern, and if not, the most common:\n * - The `globalThis` variable is the modern approach to accessing the global scope\n * - The `window` variable is the global scope in a web browser\n * - The `self` variable is the global scope in workers and others\n * - The `global` variable is the global scope in Node.js\n */\nfunction getGlobalScope() {\n  if (typeof globalThis !== 'undefined') return globalThis\n  if (typeof window !== 'undefined') return window\n  if (typeof self !== 'undefined') return self\n  if (typeof global !== 'undefined') return global\n\n  throw new Error('sanity: could not locate global scope')\n}\n\nconst globalScope = getGlobalScope() as any\n"],"names":["MISSING_CONTEXT_HELP_URL","createGlobalScopedContext","key","defaultValue","symbol","Symbol","for","document","window","navigator","userAgent","includes","context","createContext","displayName","globalScope","version","SANITY_VERSION","TypeError","warned","has","console","warn","add","Set","getGlobalScope","globalThis","self","global","Error"],"mappings":";;;;;;;AAIA,MAAMA,2BAA2B;AAM1B,SAASC,0BAIdC,GAAAA,EACAC,YAAAA,EACsB;IACtB,MAAMC,SAASC,OAAOC,GAAAA,CAAIJ,GAAG;IAM7B,IACE,OAAOK,WAAa,OACnB,OAAOC,SAAW,OACjB,OAAOA,OAAOC,SAAAA,GAAc,OAC5BD,OAAOC,SAAAA,CAAUC,SAAAA,CAAUC,QAAAA,CAAS,OAAO,GAC7C;QACA,MAAMC,4KAAUC,gBAAAA,EAA2BV,YAAY;QACvDS,OAAAA,QAAQE,WAAAA,GAAcZ,KACfU;IACT;IAEA,IAAI,CAACG,WAAAA,CAAYX,MAAM,CAAA,EACrBW,WAAAA,CAAYX,MAAM,CAAA,GAAI;QAACQ,2KAASC,gBAAAA,EAAiBV,YAAY;QAAGa,uKAASC,iBAAAA;IAAAA;SACpE;QAAA,IAAIF,WAAAA,CAAYX,MAAM,CAAA,CAAEY,OAAAA,mKAAYC,iBAAAA,EACzC,MAAM,IAAIC,UACR,CAAA,gCAAA,EAAmChB,GAAG,CAAA,gDAAA,gKAAmDe,iBAAc,CAAA,SAAA,EAAYF,WAAAA,CAAYX,MAAM,CAAA,CAAEY,OAAO,CAAA;;mCAAA,EACtGhB,wBAAwB,EAClE;QACUmB,OAAOC,GAAAA,+JAAIH,iBAAc,KAAA,CACnCI,QAAQC,IAAAA,CACN,CAAA,gCAAA,EAAmCpB,GAAG,CAAA;;mCAAA,EACEF,wBAAwB,EAClE,GACAmB,OAAOI,GAAAA,+JAAIN,iBAAc,CAAA;IAAA;IAG3B,OAAOF,WAAAA,CAAYX,MAAM,CAAA,CAAEQ,OAAAA;AAC7B;AAEA,MAAMO,SAAAA,aAAAA,GAAAA,IAAaK,IAAAA;AAWnB,SAASC,iBAAiB;IACxB,IAAI,OAAOC,aAAe,IAAa,CAAA,OAAOA;IAC9C,IAAI,OAAOlB,SAAW,IAAa,CAAA,OAAOA;IAC1C,IAAI,OAAOmB,OAAS,IAAa,CAAA,OAAOA;IACxC,IAAI,OAAOC,SAAW,IAAa,CAAA,OAAOA;IAE1C,MAAM,IAAIC,MAAM,uCAAuC;AACzD;AAEA,MAAMd,cAAcU,eAAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"file":"_singletons.mjs","sources":["file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/ActiveWorkspaceMatcherContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/AddonDatasetContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/AppIdCacheContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/CalendarContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/ChangeIndicatorTrackerContexts.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/ColorSchemeSetValueContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/ColorSchemeValueContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/CommentInputContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/CommentsAuthoringPathContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/CommentsContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/CommentsEnabledContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/CommentsIntentContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/CommentsOnboardingContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/CommentsSelectedPathContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/CommentsUpsellContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/CopyPasteContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/DiffContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/DocumentActionPropsContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/DocumentChangeContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/DocumentFieldActionsContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/DocumentIdContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/DocumentLimitContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/DocumentPaneContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/DocumentSheetListContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/EventsContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/FieldActionsContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/FormBuilderContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/FormCallbacksContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/FormFieldPresenceContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/FormValueContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/FreeTrialContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/GetFormValueContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/HoveredFieldContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/IsLastPaneContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/LocaleContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/MediaLibraryIdsContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/MentionUserContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/NavbarContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/PackageVersionInfoContext.tsx","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/PaneContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/PaneLayoutContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/PaneRouterContext.tsx","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/PerspectiveContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/PortableTextMarkersContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/PortableTextMemberItemElementRefsContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/PortableTextMemberItemsContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/PresenceContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/PresenceTrackerContexts.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/PresentationContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/PresentationDisplayedDocumentContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/PresentationDocumentContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/PresentationNavigateContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/PresentationPanelsContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/PresentationParamsContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/PresentationSharedStateContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/PreviewCardContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/RawPerspectiveContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/ReferenceInputOptionsContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/ReferenceItemRefContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/ReleasesMetadataContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/ReleasesTableContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/ReleasesUpsellContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/ResourceCacheContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/ReviewChangesContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/RouterContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/RouterHistoryContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/SanityCreateConfigContext.tsx","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/ScheduledPublishingEnabledContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/SchedulePublishingUpsellContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/ScrollContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/SearchContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/SortableItemIdContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/SourceContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/StructureToolContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/StudioAnnouncementsContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/TasksContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/TasksEnabledContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/TasksNavigationContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/TasksUpsellContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/TreeEditingEnabledContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/UserColorManagerContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/ValidationContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/VirtualizerScrollInstanceContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/WorkspaceContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/WorkspacesContext.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/_singletons/context/ZIndexContext.ts"],"sourcesContent":["import {createContext} from 'sanity/_createContext'\n\nimport type {ActiveWorkspaceMatcherContextValue} from '../../core/studio/activeWorkspaceMatcher/ActiveWorkspaceMatcherContext'\n\n/** @internal */\nexport const ActiveWorkspaceMatcherContext =\n  createContext<ActiveWorkspaceMatcherContextValue | null>(\n    'sanity/_singletons/context/active-workspace-matcher',\n    null,\n  )\n","import {createContext} from 'sanity/_createContext'\n\nimport type {AddonDatasetContextValue} from '../../core/studio/addonDataset/types'\n\n/**\n * @beta\n * @hidden\n */\nexport const AddonDatasetContext = createContext<AddonDatasetContextValue | null>(\n  'sanity/_singletons/context/addon-dataset',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {AppIdCache} from '../../core/create/studio-app/appIdCache'\n\n/**\n * @internal\n */\nexport const AppIdCacheContext = createContext<AppIdCache | null>(\n  'sanity/_singletons/context/app-id-cache',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CalendarContextValue} from '../../core/studio/components/navbar/search/components/filters/filter/inputs/date/datePicker/calendar/contexts/CalendarContext'\n\n/**\n * @internal\n */\nexport const CalendarContext = createContext<CalendarContextValue | undefined>(\n  'sanity/_singletons/context/calendar',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {\n  ChangeIndicatorTrackerContextStoreType,\n  ChangeIndicatorTrackerGetSnapshotType,\n} from '../../core/changeIndicators/ChangeIndicatorTrackerContexts'\n\n/** @internal */\nexport const ChangeIndicatorTrackerContextStore =\n  createContext<ChangeIndicatorTrackerContextStoreType>(\n    'sanity/_singletons/context/change-indicator-tracker-store',\n    null,\n  )\n\n/** @internal */\nexport const ChangeIndicatorTrackerContextGetSnapshot =\n  createContext<ChangeIndicatorTrackerGetSnapshotType>(\n    'sanity/_singletons/context/change-indicator-tracker-get-snapshot',\n    null,\n  )\n","import {createContext} from 'sanity/_createContext'\n\nimport type {StudioThemeColorSchemeKey} from '../../core/theme/types'\n\n/**\n * The setter for ColorSchemeValueContext, in a separate context to avoid unnecessary re-renders\n * If set to false then the UI should adjust to reflect that the Studio can't change the color scheme\n * @internal\n */\nexport const ColorSchemeSetValueContext = createContext<\n  ((nextScheme: StudioThemeColorSchemeKey) => void) | false | null\n>('sanity/_singletons/context/color-scheme-set-value', null)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {StudioThemeColorSchemeKey} from '../../core/theme/types'\n\n/**\n * Used to keep track of the internal value, which can be \"system\" in addition to \"light\" and \"dark\"\n * @internal\n */\nexport const ColorSchemeValueContext = createContext<StudioThemeColorSchemeKey | null>(\n  'sanity/_singletons/context/color-scheme-value',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentInputContextValue} from '../../core/comments/components/pte/comment-input/CommentInputProvider'\n\n/**\n * @internal\n */\nexport const CommentInputContext = createContext<CommentInputContextValue | null>(\n  'sanity/_singletons/context/comment-input',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsAuthoringPathContextValue} from '../../core/comments/context/authoring-path/types'\n\n/**\n * @beta\n * @hidden\n */\nexport const CommentsAuthoringPathContext = createContext<CommentsAuthoringPathContextValue | null>(\n  'sanity/_singletons/context/comments-authoring-path',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsContextValue} from '../../core/comments/context/comments/types'\n\n/**\n * @internal\n */\nexport const CommentsContext = createContext<CommentsContextValue | null>(\n  'sanity/_singletons/context/comments',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsEnabledContextValue} from '../../core/comments/context/enabled/types'\n\n// NOTE: We initialize this context with a default value (`enabled: false`)\n// rather than `null` to handle cases where the comments feature's availability\n// isn't explicitly provided by a surrounding provider component. Typically,\n// comments functionality is included by default in all new studio\n// configurations. Therefore, in the absence of a specific provider\n// (CommentsEnabledProvider), we assume that the feature is disabled.\n/**\n * @internal\n */\nexport const CommentsEnabledContext = createContext<CommentsEnabledContextValue>(\n  'sanity/_singletons/context/comments-enabled',\n  {\n    enabled: false,\n    mode: null,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsIntentContextValue} from '../../core/comments/context/intent/types'\n\n/**\n * @internal\n */\nexport const CommentsIntentContext = createContext<CommentsIntentContextValue | undefined>(\n  'sanity/_singletons/context/comments-intent',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsOnboardingContextValue} from '../../core/comments/context/onboarding/types'\n\n/**\n * @internal\n */\nexport const CommentsOnboardingContext = createContext<CommentsOnboardingContextValue | null>(\n  'sanity/_singletons/context/comments-onboarding',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsSelectedPathContextValue} from '../../core/comments/context/selected-path/types'\n\n/**\n * @internal\n */\nexport const CommentsSelectedPathContext = createContext<CommentsSelectedPathContextValue | null>(\n  'sanity/_singletons/context/comments-selected-path',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsUpsellContextValue} from '../../core/comments/context/upsell/types'\n\n/**\n * @internal\n */\nexport const CommentsUpsellContext = createContext<CommentsUpsellContextValue | null>(\n  'sanity/_singletons/context/comments-upsell',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CopyPasteContextType} from '../../core/studio/copyPaste'\n\n/**\n * @beta\n * @hidden\n */\nexport const CopyPasteContext = createContext<CopyPasteContextType | null>(\n  'sanity/_singletons/context/copy-paste',\n  null,\n)\n","import type {Path} from '@sanity/types'\nimport {createContext} from 'sanity/_createContext'\n\n/** @internal */\nexport const DiffContext = createContext<{\n  path: Path\n}>('sanity/_singletons/context/diff', {\n  path: [],\n})\n","import {createContext} from 'sanity/_createContext'\n\nimport type {DocumentActionProps} from '../../core/config/document/actions'\n\n/**\n * @internal\n */\nexport const DocumentActionPropsContext = createContext<DocumentActionProps | undefined>(\n  'sanity/_singletons/context/document-action-props',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {DocumentChangeContextInstance} from '../../core/field/diff/contexts/DocumentChangeContext'\n\n/** @internal */\nexport const DocumentChangeContext = createContext<DocumentChangeContextInstance | null>(\n  'sanity/_singletons/context/document-change',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {DocumentFieldAction} from '../../core/config/document/fieldActions/types'\n\n/**\n * @internal\n */\nexport interface DocumentFieldActionsContextValue {\n  actions: DocumentFieldAction[]\n}\n\n/**\n * @internal\n */\nexport const DocumentFieldActionsContext = createContext<DocumentFieldActionsContextValue | null>(\n  'sanity/_singletons/context/document-field-actions',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\n/**\n * @internal\n */\nexport interface DocumentIdContextValue {\n  id: string\n}\n\n/**\n * @internal\n */\nexport const DocumentIdContext = createContext<DocumentIdContextValue | null>(\n  'sanity/_singletons/context/document-id',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {UpsellDialogViewedInfo} from '../../core/studio/upsell'\nimport type {UpsellData} from '../../core/studio/upsell/types'\n\n/**\n * @internal\n */\nexport interface DocumentLimitUpsellContextValue {\n  upsellDialogOpen: boolean\n  handleOpenDialog: (source: UpsellDialogViewedInfo['source']) => void\n  upsellData: UpsellData | null\n  telemetryLogs: {\n    dialogSecondaryClicked: () => void\n    dialogPrimaryClicked: () => void\n    panelPrimaryClicked: () => void\n    panelSecondaryClicked: () => void\n  }\n}\n\n/**\n * @internal\n */\nexport const DocumentLimitUpsellContext = createContext<DocumentLimitUpsellContextValue | null>(\n  'sanity/_singletons/context/document-limit-upsell',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {DocumentPaneContextValue} from '../../structure/panes/document/DocumentPaneContext'\n\n/** @internal */\nexport const DocumentPaneContext = createContext<DocumentPaneContextValue | null>(\n  'sanity/_singletons/context/document-pane',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {DocumentSheetListContextValue} from '../../structure/panes/documentList/sheetList/DocumentSheetListProvider'\n\n/** @internal */\nexport const DocumentSheetListContext = createContext<DocumentSheetListContextValue | undefined>(\n  'sanity/_singletons/context/document-sheet-list',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {EventsStore} from '../../core/store/events/types'\n\n/**\n * @internal\n */\nexport const EventsContext = createContext<EventsStore | null>(\n  'sanity/_singletons/context/events',\n  null,\n)\n","import type {ReactNode} from 'react'\nimport {createContext} from 'sanity/_createContext'\n\nimport type {DocumentFieldActionNode} from '../../core/config/document/fieldActions/types'\nimport type {FieldCommentsProps} from '../../core/form/types/fieldProps'\n\n/** @internal */\nexport interface FieldActionsContextValue {\n  actions: DocumentFieldActionNode[]\n  __internal_comments?: FieldCommentsProps\n  __internal_slot?: ReactNode\n  focused?: boolean\n  hovered: boolean\n  onMouseEnter: () => void\n  onMouseLeave: () => void\n}\n\n/** @internal */\nexport const FieldActionsContext = createContext<FieldActionsContextValue>(\n  'sanity/_singletons/context/field-actions',\n  {\n    actions: [],\n    focused: false,\n    hovered: false,\n    // eslint-disable-next-line camelcase\n    __internal_slot: undefined,\n    // eslint-disable-next-line camelcase\n    __internal_comments: undefined,\n    onMouseEnter: () => undefined,\n    onMouseLeave: () => undefined,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {FormBuilderContextValue} from '../../core/form/FormBuilderContext'\n\n/**\n * @internal\n */\nexport const FormBuilderContext = createContext<FormBuilderContextValue | null>(\n  'sanity/_singletons/context/form-builder',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {FormCallbacksValue} from '../../core/form/studio/contexts/FormCallbacks'\n\n/**\n * @internal\n */\nexport const FormCallbacksContext = createContext<FormCallbacksValue | null>(\n  'sanity/_singletons/context/form-callbacks',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {FormNodePresence} from '../../core/presence/types'\n\n/** @internal */\nexport const FormFieldPresenceContext = createContext<FormNodePresence[]>(\n  'sanity/_singletons/context/form-field-presence',\n  [],\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {FormValueContextValue} from '../../core/form/contexts/FormValue'\n\n/**\n * @internal\n */\nexport const FormValueContext = createContext<FormValueContextValue | null>(\n  'sanity/_singletons/context/form-value',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {FreeTrialContextProps} from '../../core/studio/components/navbar/free-trial/FreeTrialContext'\n\n/**\n * @internal\n */\nexport const FreeTrialContext = createContext<FreeTrialContextProps | undefined>(\n  'sanity/_singletons/context/free-trial',\n  undefined,\n)\n","import type {Path} from '@sanity/types'\nimport {createContext} from 'sanity/_createContext'\n\n/**\n * @internal\n * @hidden\n */\nexport type GetFormValueContextValue = (path: Path) => unknown\n\n/**\n * @internal\n */\nexport const GetFormValueContext = createContext<GetFormValueContextValue | null>(\n  'sanity/_singletons/context/get-form-value',\n  null,\n)\n","import type {Path} from '@sanity/types'\nimport {createContext} from 'sanity/_createContext'\n\n/** @internal */\nexport interface HoveredFieldContextValue {\n  store: {\n    subscribe: (onStoreCallback: () => void) => () => void\n    getSnapshot: () => string[]\n  }\n  onMouseEnter: (path: Path) => void\n  onMouseLeave: (path: Path) => void\n}\n\n/** @internal */\nexport const HoveredFieldContext = createContext<HoveredFieldContextValue>(\n  'sanity/_singletons/context/hovered-field',\n  {\n    store: {\n      subscribe: () => () => undefined,\n      getSnapshot: () => [],\n    },\n    onMouseEnter: () => undefined,\n    onMouseLeave: () => undefined,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\n/**\n * TODO: remove this context when alternate document-specific context are\n * introduced.\n *\n * The following context is used in the structure tool to set the active\n * document if it's the last pane open in the structure tool. This is a\n * temporary context provider that was introduced when the comments and tasks\n * plugins were refactor and decoupled from the structure tool. ideally this\n * should be removed and replaced with a document-specific context that gives\n * plugin authors access to what the `usePane`, `usePaneRouter`, and\n * `useDocumentPane` provides without exposing specifics from the structure tool\n */\n/**\n * @internal\n */\nexport const IsLastPaneContext = createContext<boolean>(\n  'sanity/_singletons/context/is-last-pane',\n  false,\n)\n","// eslint-disable-next-line @sanity/i18n/no-i18next-import -- figure out how to have the linter be fine with importing types-only\nimport type {i18n} from 'i18next'\nimport {createContext} from 'sanity/_createContext'\n\nimport type {Locale} from '../../core/i18n/types'\n\n/**\n * @internal\n * @hidden\n */\nexport interface LocaleContextValue {\n  locales: Locale[]\n  currentLocale: Locale\n  __internal: {\n    i18next: i18n\n  }\n  changeLocale: (newLocale: string) => Promise<void>\n}\n\n/**\n * @internal\n * @hidden\n */\nexport const LocaleContext = createContext<LocaleContextValue | undefined>(\n  'sanity/_singletons/context/locale',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {MediaLibraryIds} from '../../core/form/studio/assetSourceMediaLibrary/shared/MediaLibraryProvider'\n\n/** @internal */\nexport const MediaLibraryIdsContext = createContext<MediaLibraryIds | null>(\n  'sanity/_singletons/context/media-library',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {MentionUserContextValue} from '../../core/tasks/context/mentionUser/types'\n\n/**\n * @internal\n */\nexport const MentionUserContext = createContext<MentionUserContextValue | null>(\n  'sanity/_singletons/context/mention-user',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {NavbarContextValue} from '../../core/studio/StudioLayout'\n\n/** @internal */\nexport const NavbarContext = createContext<NavbarContextValue>(\n  'sanity/_singletons/context/navbar',\n  {\n    onSearchFullscreenOpenChange: () => '',\n    onSearchOpenChange: () => '',\n    searchFullscreenOpen: false,\n    searchFullscreenPortalEl: null,\n    searchOpen: false,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\nimport type {SemVer} from 'semver'\n\n/**\n * @hidden\n * @internal\n */\nexport type PackageVersionInfoContextValue = {\n  /**\n   * Request a new update check\n   */\n  checkForUpdates: () => void\n\n  /**\n   * Status of version check (i.e. are we currently checking for updates)\n   */\n  versionCheckStatus: {lastCheckedAt: Date | null; checking: boolean}\n\n  /**\n   * Whether this Studio is configured to be auto-updating\n   */\n  isAutoUpdating: boolean\n\n  /**\n   * If an importmap for the sanity module exists in the DOM, includes details\n   * will be undefined if no importmap is found\n   */\n  importMapInfo?: {valid: false; error: Error} | {valid: true; minVersion: SemVer; appId?: string}\n\n  /**\n   * What is the version tagged as latest (periodically checked)\n   */\n  latestTaggedVersion?: SemVer\n\n  /**\n   * What version is the Studio currently running\n   */\n  currentVersion: SemVer\n\n  /**\n   * What is the current auto-updating version (as periodically resolved via module server and configured via manage)\n   */\n  autoUpdatingVersion?: SemVer\n}\n/**\n *\n * @hidden\n * @internal\n */\nexport const PackageVersionInfoContext = createContext<PackageVersionInfoContextValue>(\n  'sanity/_singletons/context/package-version-info',\n  {\n    isAutoUpdating: false,\n    checkForUpdates: () => {},\n    get currentVersion(): never {\n      throw new Error('PackageVersionInfoContext not provided')\n    },\n    versionCheckStatus: {lastCheckedAt: null, checking: false},\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PaneContextValue} from '../../structure/components/pane/types'\n\n/**\n * @internal\n */\nexport const PaneContext = createContext<PaneContextValue | null>(\n  'sanity/_singletons/context/pane',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PaneLayoutContextValue} from '../../structure/components/pane/types'\n\n/**\n * @internal\n */\nexport const PaneLayoutContext = createContext<PaneLayoutContextValue | null>(\n  'sanity/_singletons/context/pane-layout',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PaneRouterContextValue} from '../../structure/components/paneRouter/types'\n\nfunction missingContext<T = unknown>(): T {\n  throw new Error('Pane is missing router context')\n}\n\n/**\n *\n * @hidden\n * @beta\n */\nexport const PaneRouterContext = createContext<PaneRouterContextValue>(\n  'sanity/_singletons/context/pane-router',\n  {\n    index: 0,\n    groupIndex: 0,\n    siblingIndex: 0,\n    payload: undefined,\n    params: {},\n    hasGroupSiblings: false,\n    groupLength: 0,\n    routerPanesState: [],\n    BackLink: () => missingContext(),\n    ChildLink: () => missingContext(),\n    ReferenceChildLink: () => missingContext(),\n    handleEditReference: () => missingContext(),\n    ParameterizedLink: () => missingContext(),\n    replaceCurrent: () => missingContext(),\n    closeCurrentAndAfter: () => missingContext(),\n    closeCurrent: () => missingContext(),\n    duplicateCurrent: () => missingContext(),\n    setView: () => missingContext(),\n    setParams: () => missingContext(),\n    setPayload: () => missingContext(),\n    navigateIntent: () => missingContext(),\n    createPathWithParams: () => missingContext(),\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PerspectiveContextValue} from '../../core/perspective/types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport const PerspectiveContext = createContext<PerspectiveContextValue | null>(\n  'sanity/_singletons/context/perspective-context',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PortableTextMarker} from '../../core/form/types/_transitional'\n\n/**\n * @internal\n */\nexport const PortableTextMarkersContext = createContext<PortableTextMarker[]>(\n  'sanity/_singletons/context/portable-text-markers',\n  [],\n)\n","import {BehaviorSubject} from 'rxjs'\nimport {createContext} from 'sanity/_createContext'\n\n/** @internal */\nexport type PortableTextEditorElement = HTMLDivElement | HTMLSpanElement\n\n/**\n * @internal\n */\nexport const PortableTextMemberItemElementRefsContext = createContext<\n  BehaviorSubject<Record<string, PortableTextEditorElement | null | undefined>>\n>('sanity/_singletons/context/portable-text-member-item-element-refs', new BehaviorSubject({}))\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PortableTextMemberItem} from '../../core/form/inputs/PortableText/PortableTextInput'\n\n/**\n * @internal\n */\nexport const PortableTextMemberItemsContext = createContext<PortableTextMemberItem[]>(\n  'sanity/_singletons/context/portable-text-member-items',\n  [],\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {FormNodePresence} from '../../core/presence/types'\n\n/**\n * @internal\n */\nexport const PresenceContext = createContext<FormNodePresence[]>(\n  'sanity/_singletons/context/presence',\n  [],\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {\n  PresenceTrackerContextStoreType,\n  PresenceTrackerGetSnapshotType,\n} from '../../core/presence/overlay/PresenceTrackerContexts'\n\n/** @internal */\nexport const PresenceTrackerContextStore = createContext<PresenceTrackerContextStoreType>(\n  'sanity/_singletons/context/presence-tracker-store',\n  null,\n)\n\n/** @internal */\nexport const PresenceTrackerContextGetSnapshot = createContext<PresenceTrackerGetSnapshotType>(\n  'sanity/_singletons/context/presence-tracker-get-snapshot',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PresentationContextValue} from '../../presentation/types'\n\n/**\n * @internal\n */\nexport const PresentationContext = createContext<PresentationContextValue | null>(\n  'sanity/_singletons/context/presentation',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PresentationDisplayedDocumentContextValue} from '../../presentation/loader/types'\n\n/**\n * @internal\n */\nexport const PresentationDisplayedDocumentContext =\n  createContext<PresentationDisplayedDocumentContextValue | null>(\n    'sanity/_singletons/context/presentation/displayed-document',\n    null,\n  )\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PresentationDocumentContextValue} from '../../presentation/document/types'\n\n/**\n * @internal\n */\nexport const PresentationDocumentContext = createContext<PresentationDocumentContextValue | null>(\n  'sanity/_singletons/context/presentation/document',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PresentationNavigateContextValue} from '../../presentation/types'\n\n/**\n * @internal\n */\nexport const PresentationNavigateContext = createContext<PresentationNavigateContextValue | null>(\n  'sanity/_singletons/context/presentation/navigate',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PresentationPanelsContextValue} from '../../presentation/panels/types'\n\n/**\n * @internal\n */\nexport const PresentationPanelsContext = createContext<PresentationPanelsContextValue | null>(\n  'sanity/_singletons/context/presentation/panels',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PresentationParamsContextValue} from '../../presentation/types'\n\n/**\n * @internal\n */\nexport const PresentationParamsContext = createContext<PresentationParamsContextValue | null>(\n  'sanity/_singletons/context/presentation/params',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PresentationSharedStateContextValue} from '../../presentation/overlays/types'\n\n/**\n * @internal\n */\nexport const PresentationSharedStateContext =\n  createContext<PresentationSharedStateContextValue | null>(\n    'sanity/_singletons/context/presentation/shared-state',\n    null,\n  )\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PreviewCardContextValue} from '../../core/components/previewCard/PreviewCard'\n\n/**\n * @internal\n */\nexport const PreviewCardContext = createContext<PreviewCardContextValue>(\n  'sanity/_singletons/context/preview-card',\n  {\n    selected: false,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {RawPerspectiveContextValue} from '../../core/perspective/types'\n\n/**\n * @internal\n * Context for raw, unmapped perspective values.\n * This is used internally by DocumentPerspectiveProvider to access\n * the original perspective values before cardinality one mapping.\n */\nexport const RawPerspectiveContext = createContext<RawPerspectiveContextValue | null>(\n  'sanity/_singletons/context/RawPerspectiveContext',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {ReferenceInputOptions} from '../../core/form/studio/contexts/ReferenceInputOptions'\n\n/**\n * @internal\n */\nexport const ReferenceInputOptionsContext = createContext<ReferenceInputOptions>(\n  'sanity/_singletons/context/reference-input-options',\n  {},\n)\n","import type {MutableRefObject} from 'react'\nimport {createContext} from 'sanity/_createContext'\n\n/**\n * @internal\n */\nexport interface ReferenceItemRef {\n  menuRef: MutableRefObject<HTMLDivElement | null>\n  menuButtonRef: MutableRefObject<HTMLButtonElement | null>\n  containerRef: MutableRefObject<HTMLDivElement | null>\n}\n\n/**\n * This is a way to store ref of the menu as well as the container of the ReferenceItem\n * so it can be used down the tree for clickOutside handling\n * @internal\n */\nexport const ReferenceItemRefContext = createContext<ReferenceItemRef | null>(\n  'sanity/_singletons/context/reference-item-ref',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {ReleasesMetadataContextValue} from '../../core/releases/contexts/ReleasesMetadataProvider'\n\n/**\n * @internal\n * @hidden\n */\nexport const ReleasesMetadataContext = createContext<ReleasesMetadataContextValue | null>(\n  'sanity/_singletons/context/releases-metadata',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {TableContextValue} from '../../core/releases/tool/components/Table/TableProvider'\n\n/**\n * @internal\n */\nexport const TableContext = createContext<TableContextValue | null>(\n  'sanity/_singletons/context/releases-table',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {ReleasesUpsellContextValue} from '../../core/releases/contexts/upsell/types'\n\n/**\n * @beta\n * @hidden\n */\nexport const ReleasesUpsellContext = createContext<ReleasesUpsellContextValue | null>(\n  'sanity/_singletons/context/releases-upsell',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {ResourceCache} from '../../core/store/_legacy/ResourceCacheProvider'\n\n/**\n * @internal\n */\nexport const ResourceCacheContext = createContext<ResourceCache | null>(\n  'sanity/_singletons/context/resource-cache',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {ConnectorContextValue} from '../../core/changeIndicators/ConnectorContext'\n\n/** @internal */\nexport const ReviewChangesContext = createContext<ConnectorContextValue>(\n  'sanity/_singletons/context/review-changes',\n  {\n    onOpenReviewChanges: () => undefined,\n    onSetFocus: () => undefined,\n    isReviewChangesOpen: false,\n    isInteractive: true,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {RouterContextValue} from '../../router/types'\n\n/**\n * @internal\n */\nexport const RouterContext = createContext<RouterContextValue | null>(\n  'sanity/_singletons/context/router',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {RouterHistory} from '../../core/studio/router'\n\n/**\n * Internal use only. Userland should leverage the public `useRouter` APIs.\n * @internal\n */\nexport const RouterHistoryContext = createContext<RouterHistory | null>(\n  'sanity/_singletons/context/router-history',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {SanityCreateConfigContextValue} from '../../core'\n\n/**\n * @internal\n */\nexport const SanityCreateConfigContext = createContext<SanityCreateConfigContextValue>(\n  'sanity/_singletons/context/start-in-create-enabled',\n  {\n    startInCreateEnabled: false,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {HasUsedScheduledPublishing} from '../../core/scheduledPublishing/tool/contexts/useHasUsedScheduledPublishing'\n\n/**\n * @internal\n */\nexport type ScheduledPublishingEnabledContextValue =\n  | {\n      enabled: false\n      mode: null\n      hasUsedScheduledPublishing: HasUsedScheduledPublishing\n    }\n  | {\n      enabled: true\n      mode: 'default' | 'upsell'\n      hasUsedScheduledPublishing: HasUsedScheduledPublishing\n    }\n\nconst DEFAULT: ScheduledPublishingEnabledContextValue = {\n  enabled: false,\n  mode: null,\n  hasUsedScheduledPublishing: {\n    used: false,\n    loading: false,\n  },\n}\n\n/**\n * @internal\n */\nexport const ScheduledPublishingEnabledContext =\n  createContext<ScheduledPublishingEnabledContextValue>(\n    'sanity/_singletons/context/scheduled-publishing-enabled',\n    DEFAULT,\n  )\n","import {createContext} from 'sanity/_createContext'\n\nimport type {UpsellDialogViewedInfo} from '../../core/studio/upsell'\nimport type {UpsellData} from '../../core/studio/upsell/types'\n\n/**\n * @internal\n */\nexport interface SchedulePublishUpsellContextValue {\n  upsellDialogOpen: boolean\n  handleOpenDialog: (source: UpsellDialogViewedInfo['source']) => void\n  upsellData: UpsellData | null\n  telemetryLogs: {\n    dialogSecondaryClicked: () => void\n    dialogPrimaryClicked: () => void\n    panelViewed: (source: UpsellDialogViewedInfo['source']) => void\n    panelDismissed: () => void\n    panelPrimaryClicked: () => void\n    panelSecondaryClicked: () => void\n  }\n}\n\n/**\n * @internal\n */\nexport const SchedulePublishUpsellContext = createContext<SchedulePublishUpsellContextValue>(\n  'sanity/_singletons/context/schedule-publish-upsell',\n  {\n    upsellData: null,\n    handleOpenDialog: () => null,\n    upsellDialogOpen: false,\n    telemetryLogs: {\n      dialogSecondaryClicked: () => null,\n      dialogPrimaryClicked: () => null,\n      panelViewed: () => null,\n      panelDismissed: () => null,\n      panelPrimaryClicked: () => null,\n      panelSecondaryClicked: () => null,\n    },\n  },\n)\n","import type {PubSub} from 'nano-pubsub'\nimport {createContext} from 'sanity/_createContext'\n\n/**\n * @internal\n */\nexport const ScrollContext = createContext<null | PubSub<Event>>(\n  'sanity/_singletons/context/scroll',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {SearchContextValue} from '../../core/studio/components/navbar/search/contexts/search/SearchContext'\n\n/**\n * @internal\n */\nexport const SearchContext = createContext<SearchContextValue | undefined>(\n  'sanity/_singletons/context/search',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\n/**\n * @internal\n */\nexport const SortableItemIdContext = createContext<string | null>(\n  'sanity/_singletons/context/sortable-item-id',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {Source} from '../../core/config/types'\n\n/**\n * @internal\n */\nexport const SourceContext = createContext<Source | null>('sanity/_singletons/context/source', null)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {StructureToolContextValue} from '../../structure/types'\n\n/**\n * @internal\n */\nexport const StructureToolContext = createContext<StructureToolContextValue | null>(\n  'sanity/_singletons/context/structure-tool',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {StudioAnnouncementsContextValue} from '../../core/studio/studioAnnouncements/types'\n\n/**\n * @internal\n */\nexport const StudioAnnouncementContext = createContext<StudioAnnouncementsContextValue | undefined>(\n  'sanity/_singletons/context/studioAnnouncements',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {TasksContextValue} from '../../core/tasks/context/tasks/types'\n\n/**\n * @internal\n */\nexport const TasksContext = createContext<TasksContextValue | null>(\n  'sanity/_singletons/context/tasks',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {TasksEnabledContextValue} from '../../core/tasks/context/enabled/types'\n\n// NOTE: We initialize this context with a default value (`enabled: false`)\n// rather than `null` to handle cases where the tasks feature's availability\n// isn't explicitly provided by a surrounding provider component. Typically,\n// Tasks are included by default in all new Studio configurations. Therefore,\n// in the absence of a specific provider (TasksEnabledProvider), we assume that\n// the feature is disabled.\n/**\n * @internal\n */\nexport const TasksEnabledContext = createContext<TasksEnabledContextValue>(\n  'sanity/_singletons/context/tasks-enabled',\n  {\n    enabled: false,\n    mode: null,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {TasksNavigationContextValue} from '../../core/tasks/context/navigation/types'\n\n/**\n * @internal\n */\nexport const TasksNavigationContext = createContext<TasksNavigationContextValue | null>(\n  'sanity/_singletons/context/tasks-navigation',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {TasksUpsellContextValue} from '../../core/tasks/context/upsell/types'\n\n/**\n * @beta\n * @hidden\n */\nexport const TasksUpsellContext = createContext<TasksUpsellContextValue | null>(\n  'sanity/_singletons/context/tasks-upsell',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {TreeEditingEnabledContextValue} from '../../core/form/studio/tree-editing/context/enabled/useTreeEditingEnabled'\n\n/**\n * @internal\n */\nexport const TreeEditingEnabledContext = createContext<TreeEditingEnabledContextValue>(\n  'sanity/_singletons/context/tree-editing-enabled',\n  {\n    enabled: false,\n    legacyEditing: false,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {UserColorManager} from '../../core/user-color/types'\n\n/**\n * @internal\n */\nexport const UserColorManagerContext = createContext<UserColorManager | null>(\n  'sanity/_singletons/context/user-color-manager',\n  null,\n)\n","import type {ValidationMarker} from '@sanity/types'\nimport {createContext} from 'sanity/_createContext'\n\n/**\n * @internal\n */\nexport const ValidationContext = createContext<ValidationMarker[]>(\n  'sanity/_singletons/context/validation',\n  [],\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {VirtualizerScrollInstance} from '../../core/form/inputs/arrays/ArrayOfObjectsInput/List/useVirtualizerScrollInstance'\n\n/**\n * This is used to store the reference to the scroll element for virtualizer\n * @internal\n */\nexport const VirtualizerScrollInstanceContext = createContext<VirtualizerScrollInstance | null>(\n  'sanity/_singletons/context/virtualizer-scroll-instance',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {Workspace} from '../../core/config/types'\n\n/**\n * @internal\n */\nexport const WorkspaceContext = createContext<Workspace | null>(\n  'sanity/_singletons/context/workspace',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {WorkspacesContextValue} from '../../core/studio/workspaces/WorkspacesContext'\n\n/** @internal */\nexport const WorkspacesContext = createContext<WorkspacesContextValue | null>(\n  'sanity/_singletons/context/workspaces',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {ZIndexContextValue} from '../../core/components/zOffsets/types'\n\n/**\n * @internal\n */\nexport const zIndexContextDefaults: ZIndexContextValue = {\n  navbar: 200,\n  navbarPopover: 500000,\n  navbarDialog: 500001,\n  // pane\n  pane: 100,\n  paneHeader: [110, 15000],\n  paneFooter: [120, 20000],\n  paneResizer: [130, 25000],\n  paneDialog: [140, 5000],\n  //\n  popover: 200,\n  modal: 200,\n  movingItem: 10000,\n  drawershade: 1000000,\n  drawer: 1000001,\n  fullscreen: 1200000,\n  toast: [100, 11000],\n  // NOT IN USE\n  portal: 200,\n  dropdown: 200,\n  navbarFixed: 1010,\n  fullscreenEdit: 1050,\n  popoverBackground: 1060,\n  tooltip: 200,\n  modalBackground: 2000,\n  spinner: 3000,\n}\n\n/**\n * TODO: Rename to `ZOffsetsContext`\n *\n * @internal\n */\nexport const ZIndexContext = createContext<ZIndexContextValue>(\n  'sanity/_singletons/context/z-index',\n  zIndexContextDefaults,\n)\n"],"names":["ActiveWorkspaceMatcherContext","createContext","AddonDatasetContext","AppIdCacheContext","CalendarContext","undefined","ChangeIndicatorTrackerContextStore","ChangeIndicatorTrackerContextGetSnapshot","ColorSchemeSetValueContext","ColorSchemeValueContext","CommentInputContext","CommentsAuthoringPathContext","CommentsContext","CommentsEnabledContext","enabled","mode","CommentsIntentContext","CommentsOnboardingContext","CommentsSelectedPathContext","CommentsUpsellContext","CopyPasteContext","DiffContext","path","DocumentActionPropsContext","DocumentChangeContext","DocumentFieldActionsContext","DocumentIdContext","DocumentLimitUpsellContext","DocumentPaneContext","DocumentSheetListContext","EventsContext","FieldActionsContext","actions","focused","hovered","__internal_slot","__internal_comments","onMouseEnter","onMouseLeave","FormBuilderContext","FormCallbacksContext","FormFieldPresenceContext","FormValueContext","FreeTrialContext","GetFormValueContext","HoveredFieldContext","store","subscribe","getSnapshot","IsLastPaneContext","LocaleContext","MediaLibraryIdsContext","MentionUserContext","NavbarContext","onSearchFullscreenOpenChange","onSearchOpenChange","searchFullscreenOpen","searchFullscreenPortalEl","searchOpen","PackageVersionInfoContext","isAutoUpdating","checkForUpdates","currentVersion","Error","versionCheckStatus","lastCheckedAt","checking","PaneContext","PaneLayoutContext","missingContext","PaneRouterContext","index","groupIndex","siblingIndex","payload","params","hasGroupSiblings","groupLength","routerPanesState","BackLink","ChildLink","ReferenceChildLink","handleEditReference","ParameterizedLink","replaceCurrent","closeCurrentAndAfter","closeCurrent","duplicateCurrent","setView","setParams","setPayload","navigateIntent","createPathWithParams","PerspectiveContext","PortableTextMarkersContext","PortableTextMemberItemElementRefsContext","BehaviorSubject","PortableTextMemberItemsContext","PresenceContext","PresenceTrackerContextStore","PresenceTrackerContextGetSnapshot","PresentationContext","PresentationDisplayedDocumentContext","PresentationDocumentContext","PresentationNavigateContext","PresentationPanelsContext","PresentationParamsContext","PresentationSharedStateContext","PreviewCardContext","selected","RawPerspectiveContext","ReferenceInputOptionsContext","ReferenceItemRefContext","ReleasesMetadataContext","TableContext","ReleasesUpsellContext","ResourceCacheContext","ReviewChangesContext","onOpenReviewChanges","onSetFocus","isReviewChangesOpen","isInteractive","RouterContext","RouterHistoryContext","SanityCreateConfigContext","startInCreateEnabled","DEFAULT","hasUsedScheduledPublishing","used","loading","ScheduledPublishingEnabledContext","SchedulePublishUpsellContext","upsellData","handleOpenDialog","upsellDialogOpen","telemetryLogs","dialogSecondaryClicked","dialogPrimaryClicked","panelViewed","panelDismissed","panelPrimaryClicked","panelSecondaryClicked","ScrollContext","SearchContext","SortableItemIdContext","SourceContext","StructureToolContext","StudioAnnouncementContext","TasksContext","TasksEnabledContext","TasksNavigationContext","TasksUpsellContext","TreeEditingEnabledContext","legacyEditing","UserColorManagerContext","ValidationContext","VirtualizerScrollInstanceContext","WorkspaceContext","WorkspacesContext","zIndexContextDefaults","navbar","navbarPopover","navbarDialog","pane","paneHeader","paneFooter","paneResizer","paneDialog","popover","modal","movingItem","drawershade","drawer","fullscreen","toast","portal","dropdown","navbarFixed","fullscreenEdit","popoverBackground","tooltip","modalBackground","spinner","ZIndexContext"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"file":"router.mjs","sources":["file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/useRouter.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/useLink.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/useIntentLink.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/IntentLink.tsx","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/Link.tsx","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/_parseRoute.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/utils/arrayify.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/_findMatchingRoutes.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/encodeURIComponentExcept.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/utils/debug.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/_resolvePathFromState.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/utils/parseScopedParams.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/_resolveStateFromPath.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/utils/base64url.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/utils/jsonParamsEncoding.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/utils/paramsEncoding.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/route.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/stickyParams.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/types.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/RouterProvider.tsx","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/RouteScope.tsx","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/useStateLink.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/StateLink.tsx","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/useRouterState.ts","file:///Users/isseemii/app/letterseed/node_modules/sanity/src/router/withRouter.tsx"],"sourcesContent":["import {useContext} from 'react'\nimport {RouterContext} from 'sanity/_singletons'\n\nimport {type RouterContextValue} from './types'\n\n/**\n * Returns the router context value.\n * @public\n *\n * @returns The router context value.\n *  {@link RouterContextValue}\n * @throws An error if the router context value is missing.\n *\n * @example\n * ```tsx\n * const router = useRouter()\n * ```\n */\nexport function useRouter(): RouterContextValue {\n  const router = useContext(RouterContext)\n\n  if (!router) {\n    throw new Error('Router: missing context value')\n  }\n\n  return router\n}\n","import {useCallback} from 'react'\n\nimport {useRouter} from './useRouter'\n\nfunction isLeftClickEvent(event: React.MouseEvent) {\n  return event.button === 0\n}\n\nfunction isModifiedEvent(event: React.MouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n}\n\n/**\n * @public\n */\nexport interface UseLinkOptions {\n  /**\n   * The URL that the link should navigate to.\n   */\n  href?: string\n\n  /**\n   * The event handler function that should be called when the link is clicked.\n   */\n  onClick?: React.MouseEventHandler<HTMLElement>\n\n  /**\n   * Whether the link should replace the current URL in the browser history.\n   */\n  replace?: boolean\n\n  /**\n   * The target window or frame that the linked document will open in.\n   */\n  target?: string\n}\n\n/**\n * Returns an object with an `onClick` function that can be used as a click handler for a link.\n *\n * @public\n *\n * @param options - An object containing the properties for the link.\n *  See {@link UseLinkOptions}\n *\n * @returns An object with an `onClick` function.\n *\n * @example\n * ```tsx\n * const linkProps = useLink({\n *  href: 'https://www.sanity.io',\n *  target: '_blank'\n * })\n *\n * <a {...linkProps}>Link</a>\n * ```\n */\nexport function useLink(options: UseLinkOptions): {onClick: React.MouseEventHandler<HTMLElement>} {\n  const {onClick: onClickProp, href, target, replace = false} = options\n  const {navigateUrl} = useRouter()\n\n  const onClick = useCallback(\n    (event: React.MouseEvent<HTMLElement>): void => {\n      if (event.isDefaultPrevented()) {\n        return\n      }\n\n      if (!href) return\n\n      if (onClickProp) {\n        onClickProp(event)\n      }\n\n      if (isModifiedEvent(event) || !isLeftClickEvent(event)) {\n        return\n      }\n\n      // If target prop is set (e.g. to \"_blank\") let browser handle link.\n      if (target) {\n        return\n      }\n\n      event.preventDefault()\n\n      navigateUrl({path: href, replace})\n    },\n    [href, navigateUrl, onClickProp, replace, target],\n  )\n\n  return {onClick: onClick}\n}\n","import {useMemo} from 'react'\n\nimport {type IntentParameters, type SearchParam} from './types'\nimport {useLink} from './useLink'\nimport {useRouter} from './useRouter'\n\n/**\n * @public\n */\nexport interface UseIntentLinkOptions {\n  /**\n   * The name of the intent to trigger.\n   */\n  intent: string\n\n  /**\n   * An optional click event handler.\n   */\n  onClick?: React.MouseEventHandler<HTMLElement>\n\n  /**\n   * Optional parameters to pass to the intent. See {@link IntentParameters}\n   */\n  params?: IntentParameters\n\n  /**\n   * Whether to replace the current URL in the browser history.\n   */\n  replace?: boolean\n\n  /**\n   * The target window or frame to open the link in.\n   */\n  target?: string\n  searchParams?: SearchParam[]\n}\n\n/**\n *\n * Returns props for an anchor element that will trigger an intent when clicked.\n *\n * @example\n * ```tsx\n * const {onClick, href} = useIntentLink({\n *   intent: 'edit',\n *   params: {id: 'foo'}\n * })\n *\n * <a href={href} onClick={onClick}>Link to \"foo\" editor</a>\n * ```\n *\n * @public\n *\n * @param options - Options to use for the link\n *  {@link UseIntentLinkOptions}\n *\n * @returns - An object with `onClick` and `href` props to use for the link\n */\nexport function useIntentLink(options: UseIntentLinkOptions): {\n  onClick: React.MouseEventHandler<HTMLElement>\n  href: string\n} {\n  const {intent, onClick: onClickProp, params, replace, target, searchParams} = options\n  const {resolveIntentLink} = useRouter()\n  const href = useMemo(\n    () => resolveIntentLink(intent, params, searchParams),\n    [intent, params, searchParams, resolveIntentLink],\n  )\n  const {onClick} = useLink({href, onClick: onClickProp, replace, target})\n\n  return {onClick, href}\n}\n","import {type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {type IntentParameters, type SearchParam} from './types'\nimport {useIntentLink} from './useIntentLink'\n\n/**\n * Props for the {@link IntentLink} component.\n *\n * @public\n */\nexport interface IntentLinkProps {\n  /**\n   * The name of the intent.\n   */\n  intent: string\n\n  /**\n   * The parameters to include in the intent.\n   * {@link IntentParameters}\n   */\n  params?: IntentParameters\n\n  /**\n   * Whether to replace the current URL in the browser history instead of adding a new entry.\n   */\n  replace?: boolean\n\n  /**\n   * search params to include in the intent.\n   */\n  searchParams?: SearchParam[]\n}\n\n/**\n * @public\n *\n * @param props - Props to pass to `IntentLink` component.\n *  See {@link IntentLinkProps}\n *\n * @example\n * ```tsx\n * function MyComponent() {\n *  return <IntentLink intent=\"edit\" params={{id: 'abc123'}}>Edit</IntentLink>\n * }\n * ```\n */\nexport const IntentLink = forwardRef(function IntentLink(\n  props: IntentLinkProps & HTMLProps<HTMLAnchorElement>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {intent, params, target, searchParams, ...restProps} = props\n  const {onClick, href} = useIntentLink({\n    intent,\n    params,\n    target,\n    onClick: props.onClick,\n    searchParams,\n  })\n\n  return <a {...restProps} href={href} onClick={onClick} ref={ref} target={target} />\n})\n","import {type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {useLink} from './useLink'\n\n/**\n * Props for the {@link Link} component.\n *\n * @public\n */\nexport interface LinkProps {\n  /**\n   * Whether to replace the current URL in the browser history instead of adding a new entry.\n   */\n  replace?: boolean\n}\n\n/**\n * A component that creates an HTML anchor element.\n *\n * @public\n *\n * @param props - Props to pass to the `Link` component.\n *  See {@link LinkProps}\n *\n * @example\n * ```tsx\n * function MyComponent() {\n *   return (\n *    <Link href=\"https://www.sanity.io\" target=\"_blank\" replace>\n *      Go to Sanity\n *    </Link>\n *   )\n * }\n * ```\n */\nexport const Link = forwardRef(function Link(\n  props: LinkProps & HTMLProps<HTMLAnchorElement>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {onClick: onClickProp, href, target, replace, ...restProps} = props\n  const {onClick} = useLink({onClick: onClickProp, href, target, replace})\n\n  return <a {...restProps} onClick={onClick} href={href} target={target} ref={ref} />\n})\n","import {type Route, type RouteSegment} from './types'\n\nconst VALID_PARAM_SEGMENT = /^[a-zA-Z0-9_-]+$/\n\nfunction createSegment(segment: string): RouteSegment | null {\n  if (!segment) {\n    return null\n  }\n\n  if (segment.startsWith(':')) {\n    const paramName = segment.slice(1)\n\n    if (!VALID_PARAM_SEGMENT.test(paramName)) {\n      const addendum = segment.includes('*')\n        ? ' Splats are not supported. Consider using child routes instead'\n        : ''\n      console.error(\n        new Error(`Warning: Param segments \"${segment}\" includes invalid characters.${addendum}`),\n      )\n    }\n\n    return {type: 'param', name: paramName}\n  }\n\n  return {type: 'dir', name: segment}\n}\n\n/** @internal */\nexport function _parseRoute(route: string): Route {\n  const [pathname] = route.split('?')\n\n  const segments = pathname.split('/').map(createSegment).filter(Boolean) as RouteSegment[]\n\n  return {\n    raw: route,\n    segments: segments,\n  }\n}\n","export function arrayify<T>(val: Array<T> | T): Array<T> {\n  if (Array.isArray(val)) {\n    return val\n  }\n\n  return val ? [val] : []\n}\n","import {difference, intersection, isPlainObject, pick} from 'lodash'\n\nimport {\n  type InternalSearchParam,\n  type MatchError,\n  type MatchOk,\n  type MatchResult,\n  type RouterNode,\n  type RouterState,\n} from './types'\nimport {arrayify} from './utils/arrayify'\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return isPlainObject(value)\n}\n\nfunction createMatchError(\n  node: RouterNode,\n  missingKeys: string[],\n  unmappableStateKeys: string[],\n): MatchError {\n  return {type: 'error', node, missingKeys, unmappableStateKeys}\n}\n\nfunction createMatchOk(\n  node: RouterNode,\n  matchedState: Record<string, string>,\n  searchParams: InternalSearchParam[],\n  child?: MatchOk | undefined,\n): MatchOk {\n  return {type: 'ok', node, matchedState, searchParams, child}\n}\n\n/** @internal */\nexport function _findMatchingRoutes(node: RouterNode, _state?: RouterState): MatchResult {\n  if (!_state) {\n    return createMatchOk(node, {}, [])\n  }\n\n  const scopedState = node.scope ? (_state[node.scope] as RouterState) : _state\n\n  const {_searchParams: searchParams = [], ...state} = scopedState || {}\n\n  const requiredParams = node.route.segments\n    .filter((seg) => seg.type === 'param')\n    .map((seg) => seg.name)\n\n  const stateKeys = isRecord(state) ? Object.keys(state) : []\n\n  // These are params found in both the state and the route definition\n  const consumedParams = intersection(stateKeys, requiredParams)\n\n  // these are params found in the route definition but not in the state, can't map them to a route\n  const missingParams = difference(requiredParams, consumedParams)\n\n  // these are params found in the state but not in the route definition\n  const remainingParams = difference(stateKeys, consumedParams)\n\n  if (missingParams.length > 0) {\n    return createMatchError(node, missingParams, [])\n  }\n\n  const scopedParams = searchParams.map(([key, value]): InternalSearchParam => [[key], value])\n\n  const consumedState = pick(state, consumedParams) as Record<string, string>\n\n  if (remainingParams.length === 0) {\n    return createMatchOk(node, consumedState, scopedParams)\n  }\n\n  const children = arrayify(\n    (typeof node.children === 'function'\n      ? node.children(isRecord(state) ? state : {})\n      : node.children) || [],\n  )\n\n  if (remainingParams.length > 0 && children.length === 0) {\n    // our state includes extra keys that's not consumed by child routes\n    return createMatchError(node, [], remainingParams)\n  }\n\n  const remainingState = pick(state, remainingParams)\n\n  const childResult = children.map((childNode) => _findMatchingRoutes(childNode, remainingState))\n\n  // Look for a matching route\n  const found = childResult.find((res): res is MatchOk => res.type === 'ok')\n  return found\n    ? createMatchOk(node, consumedState, scopedParams, found)\n    : createMatchError(node, [], remainingParams)\n}\n","/**\n * Like encodeURIComponent, but supports a custom set of unescaped characters.\n * @param uriComponent - A value representing an unencoded URI component.\n * @param unescaped - a string containing characters to not escape\n */\nexport function encodeURIComponentExcept(\n  uriComponent: string | number | boolean,\n  unescaped: string,\n): string {\n  const chars = [...String(uriComponent)]\n  let res = ''\n  for (let i = 0; i < chars.length; i++) {\n    const char = chars[i]\n    if (unescaped.includes(char)) {\n      res += char\n    } else {\n      res += encodeURIComponent(char)\n    }\n  }\n  return res\n}\n","import Debug from 'debug'\n\nexport const debug = Debug('state-router')\n","import {_findMatchingRoutes} from './_findMatchingRoutes'\nimport {encodeURIComponentExcept} from './encodeURIComponentExcept'\nimport {type InternalSearchParam, type MatchOk, type RouterNode, type RouterState} from './types'\nimport {debug} from './utils/debug'\n\n/** @internal */\nexport function _resolvePathFromState(node: RouterNode, _state: RouterState): string {\n  debug('Resolving path from state %o', _state)\n\n  const match = _findMatchingRoutes(node, _state)\n  if (match.type === 'error') {\n    const unmappable = match.unmappableStateKeys\n    if (unmappable.length > 0) {\n      throw new Error(\n        `Unable to find matching route for state. Could not map the following state key${\n          unmappable.length == 1 ? '' : 's'\n        } to a valid url: ${unmappable.map(quote).join(', ')}`,\n      )\n    }\n    const missingKeys = match.missingKeys\n    throw new Error(\n      `Unable to find matching route for state. State object is missing the following key${\n        missingKeys.length == 1 ? '' : 's'\n      } defined in route: ${missingKeys.map(quote).join(', ')}`,\n    )\n  }\n\n  const {path, searchParams} = pathFromMatchResult(match)\n\n  const search = searchParams.length > 0 ? encodeParams(searchParams) : ''\n\n  return `/${path.join('/')}${search ? `?${search}` : ''}`\n}\n\nfunction bracketify(value: string): string {\n  return `[${value}]`\n}\n\nfunction encodeParams(params: InternalSearchParam[]): string {\n  return params\n    .flatMap(([key, value]) => {\n      if (value === undefined) {\n        return []\n      }\n      return [encodeSearchParamKey(serializeScopedPath(key)), encodeSearchParamValue(value)].join(\n        '=',\n      )\n    })\n    .join('&')\n}\n\nfunction serializeScopedPath(scopedPath: string[]): string {\n  const [head, ...tail] = scopedPath\n\n  return tail.length > 0 ? [head, ...tail.map(bracketify)].join('') : head\n}\n\nfunction encodeSearchParamValue(value: string): string {\n  return encodeURIComponentExcept(value, '/')\n}\n\nfunction encodeSearchParamKey(value: string): string {\n  return encodeURIComponentExcept(value, '[]')\n}\n\nfunction pathFromMatchResult(match: MatchOk): {\n  path: string[]\n  searchParams: InternalSearchParam[]\n} {\n  const matchedState = match.matchedState\n\n  const base = match.node.route.segments.map((segment) => {\n    if (segment.type === 'dir') {\n      return segment.name\n    }\n\n    const transform = match.node.transform && match.node.transform[segment.name]\n\n    return transform\n      ? transform.toPath(matchedState[segment.name] as any)\n      : matchedState[segment.name]\n  })\n\n  const childMatch = match.child ? pathFromMatchResult(match.child) : undefined\n\n  const searchParams = childMatch?.searchParams\n    ? [...match.searchParams, ...childMatch.searchParams]\n    : match.searchParams\n\n  return {\n    searchParams: addNodeScope(match.node, searchParams),\n    path: [...(base || []), ...(childMatch?.path || [])],\n  }\n}\n\nfunction addNodeScope(\n  node: RouterNode,\n  searchParams: InternalSearchParam[],\n): InternalSearchParam[] {\n  const scope = node.scope\n  return scope && !node.__unsafe_disableScopedSearchParams\n    ? searchParams.map(([namespaces, value]) => [[scope, ...namespaces], value])\n    : searchParams\n}\n\nfunction quote(value: string): string {\n  return `\"${value}\"`\n}\n","import {type InternalSearchParam} from '../types'\n\nexport function parseScopedParams(params: [key: string, value: string][]): InternalSearchParam[] {\n  return params.map(([key, value]) => [parse(key), value])\n}\n\nconst OPEN = 1\nconst CLOSED = 0\n\nfunction parse(str: string) {\n  const result = []\n  let i = 0\n  let state = CLOSED\n  while (i < str.length) {\n    const nextBracketIdx = str.indexOf('[', i)\n    if (nextBracketIdx === -1) {\n      result.push(str.slice(i, str.length))\n      break\n    }\n    if (state === OPEN) {\n      throw new Error('Nested brackets not supported')\n    }\n    state = OPEN\n    if (nextBracketIdx > i) {\n      result.push(str.slice(i, nextBracketIdx))\n      i = nextBracketIdx\n    }\n\n    const nextClosing = str.indexOf(']', nextBracketIdx)\n    if (nextClosing === -1) {\n      if (state === OPEN) {\n        throw new Error('Unclosed bracket')\n      }\n      break\n    }\n    state = CLOSED\n    result.push(str.slice(i + 1, nextClosing))\n    i = nextClosing + 1\n  }\n  return result\n}\n","import {\n  type InternalSearchParam,\n  type RouterNode,\n  type RouterState,\n  type SearchParam,\n} from './types'\nimport {arrayify} from './utils/arrayify'\nimport {debug} from './utils/debug'\nimport {parseScopedParams} from './utils/parseScopedParams'\n\nfunction matchPath(\n  node: RouterNode,\n  path: string,\n  searchParams: InternalSearchParam[],\n): RouterState | null {\n  const parts = path.split('/').filter(Boolean)\n  const segmentsLength = node.route.segments.length\n\n  if (parts.length < segmentsLength) {\n    return null\n  }\n\n  const state: RouterState = {}\n  const isMatching = node.route.segments.every((segment, i) => {\n    if (segment.type === 'dir') {\n      return segment.name === parts[i]\n    }\n\n    const transform = node.transform && node.transform[segment.name]\n\n    state[segment.name] = transform ? transform.toState(parts[i]) : parts[i]\n\n    return true\n  })\n\n  if (!isMatching) {\n    return null\n  }\n\n  const rest = parts.slice(segmentsLength)\n\n  let childState: RouterState | null = null\n\n  const children =\n    typeof node.children === 'function' ? arrayify(node.children(state)) : node.children\n\n  const unscopedParams = removeScope(node.scope, searchParams)\n\n  children.some((childNode) => {\n    if (childNode) {\n      const childParams = childNode.scope\n        ? unscopedParams.filter(([namespaces]) => childNode.scope === namespaces[0])\n        : unscopedParams\n\n      childState = matchPath(childNode, rest.join('/'), childParams)\n      return childState\n    }\n    return undefined\n  })\n\n  if (rest.length > 0 && !childState) {\n    return null\n  }\n\n  const selfParams = unscopedParams.flatMap(([namespace, value]): SearchParam[] => {\n    return namespace.length === 1 ? [[namespace[0], value]] : []\n  })\n\n  const mergedState: RouterState = {\n    ...state,\n    ...(childState === null ? {} : childState),\n    ...(selfParams.length > 0 ? {_searchParams: selfParams} : {}),\n  }\n\n  return node.scope ? {[node.scope]: mergedState} : mergedState\n}\n\n/**\n * @internal\n */\nexport function _resolveStateFromPath(node: RouterNode, path: string): Record<string, any> | null {\n  debug('resolving state from path %s', path)\n\n  const [pathname, search] = path.split('?')\n  const urlSearchParams = Array.from(new URLSearchParams(search).entries())\n\n  const pathMatch = matchPath(node, pathname, parseScopedParams(urlSearchParams))\n\n  debug('resolved: %o', pathMatch || null)\n\n  return pathMatch || null\n}\n\nfunction removeScope(\n  scope: string | undefined,\n  searchParams: InternalSearchParam[],\n): InternalSearchParam[] {\n  return scope\n    ? searchParams.map(([namespaces, value]) => [\n        namespaces[0] === scope ? namespaces.slice(1) : namespaces,\n        value,\n      ])\n    : searchParams\n}\n","/**\n * `atob()` and `btoa()` do not support Unicode characters outside of the Latin1 range,\n * but we obviously want to support the full range of Unicode characters in our router.\n *\n * Additionally, we would prefer not to use characters like `+` and `=` in URLs, as they\n * have specific meanings there and may be misinterpreted. Thus, this uses base64url instead\n * of the more common base64.\n */\n\n/**\n * Encodes a string as base64url\n *\n * @param str - String to encode\n * @returns Encoded string\n * @internal\n */\nexport function encodeBase64Url(str: string): string {\n  return encodeBase64(str).replace(/\\//g, '_').replace(/\\+/g, '-').replace(/[=]+$/, '')\n}\n\n/**\n * Decodes a base64url-encoded string\n *\n * @param str - String to decode\n * @returns Decoded string\n * @internal\n */\nexport function decodeBase64Url(str: string): string {\n  return decodeBase64(str.replace(/-/g, '+').replace(/_/g, '/'))\n}\n\nfunction percentToByte(p: string) {\n  return String.fromCharCode(parseInt(p.slice(1), 16))\n}\n\nfunction encodeBase64(str: string): string {\n  return btoa(encodeURIComponent(str).replace(/%[0-9A-F]{2}/g, percentToByte))\n}\n\nfunction byteToPercent(b: string) {\n  return `%${`00${b.charCodeAt(0).toString(16)}`.slice(-2)}`\n}\n\nfunction decodeBase64(str: string): string {\n  return decodeURIComponent(Array.from(atob(str), byteToPercent).join(''))\n}\n","import {decodeBase64Url, encodeBase64Url} from './base64url'\n\n/**\n * Decode a path segment containing JSON parameters\n *\n * @param pathSegment - The path segment to decode\n * @returns The decoded parameters\n * @internal\n * @hidden\n */\nexport function decodeJsonParams(pathSegment = ''): any {\n  const segment = decodeURIComponent(pathSegment)\n\n  if (!segment) {\n    return {}\n  }\n\n  // Because of high-unicode characters (eg outside of the latin1 range), we prefer base64url\n  // since it also removes characters we'd rather not put in our URLs (eg '=' and '/')\n  try {\n    return JSON.parse(decodeBase64Url(segment))\n  } catch (err) {\n    // Fall-through: previously we used plain base64 encoding instead of base64url\n  }\n\n  try {\n    return JSON.parse(atob(segment))\n  } catch (err) {\n    // Fall-through: before _that_, we used plain URI encoding\n  }\n\n  try {\n    return JSON.parse(segment)\n  } catch (err) {\n    console.warn('Failed to parse JSON parameters')\n  }\n\n  return {}\n}\n\n/**\n * Encodes a set of parameters as a path segment, using base64url\n *\n * @param params - Paramters to encode\n * @returns The encoded parameters as a path segment\n * @internal\n * @hidden\n */\nexport function encodeJsonParams(params?: any): string {\n  return params ? encodeBase64Url(JSON.stringify(params)) : ''\n}\n","export function decodeParams(pathSegment: string): Record<string, string> {\n  return pathSegment.split(';').reduce<Record<string, string>>((params, pair) => {\n    const [key, value] = pair.split('=')\n\n    params[decodeURIComponent(key)] = decodeURIComponent(value)\n\n    return params\n  }, {})\n}\n\nexport function encodeParams(params: Record<string, string | undefined | null>): string {\n  return Object.entries(params)\n    .filter(([, value]) => value !== undefined && value !== null)\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value as string)}`)\n    .join(';')\n}\n","import {_parseRoute} from './_parseRoute'\nimport {_resolvePathFromState} from './_resolvePathFromState'\nimport {_resolveStateFromPath} from './_resolveStateFromPath'\nimport {type RouteChildren, type Router, type RouteTransform} from './types'\nimport {decodeJsonParams, encodeJsonParams} from './utils/jsonParamsEncoding'\nimport {decodeParams, encodeParams} from './utils/paramsEncoding'\n\n/**\n * @public\n */\nexport interface RouteNodeOptions {\n  /**\n   * The path of the route node.\n   */\n  path?: string\n  /**\n   * The children of the route node. See {@link RouteChildren}\n   */\n  children?: RouteChildren\n  /**\n   * The transforms to apply to the route node. See {@link RouteTransform}\n   */\n  transform?: {\n    [key: string]: RouteTransform<any>\n  }\n  /**\n   * The scope of the route node.\n   */\n  scope?: string\n\n  /**\n   * Optionally disable scoping of search params\n   * Scoped search params will be represented as scope[param]=value in the url\n   * Disabling this will still scope search params based on any parent scope unless the parent scope also has disabled search params scoping\n   * Caution: enabling this can cause conflicts with multiple plugins defining search params with the same name\n   */\n  __unsafe_disableScopedSearchParams?: boolean\n}\n\n/**\n * Interface for the {@link route} object.\n *\n * @public\n */\nexport interface RouteObject {\n  /**\n   * Creates a new router.\n   * Returns {@link Router}\n   * See {@link RouteNodeOptions} and {@link RouteChildren}\n   */\n  create: (\n    routeOrOpts: RouteNodeOptions | string,\n    childrenOrOpts?: RouteNodeOptions | RouteChildren | null,\n    children?: Router | RouteChildren,\n  ) => Router\n\n  /**\n   * Creates a new router for handling intents.\n   * Returns {@link Router}\n   */\n  intents: (base: string) => Router\n\n  /**\n   * Creates a new router scope.\n   * Returns {@link Router}\n   */\n  scope(\n    scopeName: string,\n    routeOrOpts: RouteNodeOptions | string,\n    childrenOrOpts?: RouteNodeOptions | RouteChildren | null,\n    children?: Router | RouteChildren,\n  ): Router\n}\n\n/**\n * An object containing functions for creating routers and router scopes.\n * See {@link RouteObject}\n *\n * @public\n *\n * @example\n * ```ts\n * const router = route.create({\n *   path: \"/foo\",\n *   children: [\n *     route.create({\n *       path: \"/bar\",\n *       children: [\n *         route.create({\n *           path: \"/:baz\",\n *           transform: {\n *             baz: {\n *               toState: (id) => ({ id }),\n *               toPath: (state) => state.id,\n *             },\n *           },\n *         }),\n *       ],\n *     }),\n *   ],\n * });\n * ```\n */\nexport const route: RouteObject = {\n  create: (routeOrOpts, childrenOrOpts, children) =>\n    _createNode(normalizeArgs(routeOrOpts, childrenOrOpts, children)),\n  intents: (base: string) => {\n    const basePath = normalize(base).join('/')\n\n    return route.create(`${basePath}/:intent`, [\n      route.create(\n        ':params',\n        {\n          transform: {\n            params: {\n              toState: decodeParams,\n              toPath: encodeParams,\n            },\n          },\n        },\n        [\n          route.create(':payload', {\n            transform: {\n              payload: {\n                toState: decodeJsonParams,\n                toPath: encodeJsonParams,\n              },\n            },\n          }),\n        ],\n      ),\n    ])\n  },\n  scope(\n    scopeName: string,\n    routeOrOpts: RouteNodeOptions | string,\n    childrenOrOpts?: RouteNodeOptions | RouteChildren | null,\n    children?: Router | RouteChildren,\n  ) {\n    const options = normalizeArgs(routeOrOpts, childrenOrOpts, children)\n\n    return _createNode({\n      ...options,\n      scope: scopeName,\n    })\n  },\n}\n\nfunction normalizeChildren(children: any): RouteChildren {\n  if (Array.isArray(children) || typeof children === 'function') {\n    return children\n  }\n  return children ? [children] : []\n}\n\nfunction isRoute(val?: RouteNodeOptions | Router | RouteChildren) {\n  return val && '_isRoute' in val\n}\n\nfunction normalizeArgs(...args: any[]): RouteNodeOptions\nfunction normalizeArgs(\n  path: string | RouteNodeOptions,\n  childrenOrOpts?: RouteNodeOptions | Router | RouteChildren,\n  children?: Router | RouteChildren,\n): RouteNodeOptions {\n  if (typeof path === 'object') {\n    return path\n  }\n\n  if (\n    Array.isArray(childrenOrOpts) ||\n    typeof childrenOrOpts === 'function' ||\n    isRoute(childrenOrOpts)\n  ) {\n    return {path, children: normalizeChildren(childrenOrOpts)}\n  }\n\n  if (children) {\n    return {path, ...childrenOrOpts, children: normalizeChildren(children)}\n  }\n\n  return {path, ...childrenOrOpts}\n}\n\nfunction normalize(...paths: string[]) {\n  return paths.reduce<string[]>((acc, path) => acc.concat(path.split('/')), []).filter(Boolean)\n}\n\nconst EMPTY_STATE = {}\n\nfunction isRoot(pathname: string): boolean {\n  // it is the root if every segment is an empty string\n  return pathname.split('/').every((segment) => !segment)\n}\n\n/**\n * @internal\n * @param options - Route node options\n */\nexport function _createNode(options: RouteNodeOptions): Router {\n  // eslint-disable-next-line camelcase\n  const {path, scope, transform, children, __unsafe_disableScopedSearchParams} = options\n\n  if (!path) {\n    throw new TypeError('Missing path')\n  }\n\n  const parsedRoute = _parseRoute(path)\n\n  return {\n    _isRoute: true, // todo: make a Router class instead\n    scope,\n    // eslint-disable-next-line camelcase\n    __unsafe_disableScopedSearchParams,\n    route: parsedRoute,\n    children: children || [],\n    transform,\n    encode(state) {\n      return _resolvePathFromState(this, state)\n    },\n    decode(_path) {\n      return _resolveStateFromPath(this, _path)\n    },\n    isRoot: isRoot,\n    isNotFound(pathname: string): boolean {\n      return this.decode(pathname) === null\n    },\n    getBasePath(): string {\n      return this.encode(EMPTY_STATE)\n    },\n    getRedirectBase(pathname: string): string | null {\n      if (isRoot(pathname)) {\n        const basePath = this.getBasePath()\n        // Check if basepath is something different than given\n        if (pathname !== basePath) {\n          return basePath\n        }\n      }\n      return null\n    },\n  }\n}\n","/**\n * @internal\n */\nexport const STICKY_PARAMS: string[] = ['perspective', 'excludedPerspectives']\n","/**\n * @public\n */\nexport interface RouteSegment {\n  /**\n   * The name of the segment.\n   */\n  name: string\n  /**\n   * The type of the segment.\n   * Can be either \"dir\" or \"param\".\n   */\n  type: 'dir' | 'param'\n}\n\n/**\n * @public\n */\nexport interface RouteTransform<T> {\n  /**\n   * Converts a path string to a state object.\n   */\n  toState: (value: string) => T\n\n  /**\n   * Converts a state object to a path string.\n   */\n  toPath: (value: T) => string\n}\n\n/**\n * @public\n */\nexport interface Route {\n  /**\n   * The raw string representation of the route.\n   */\n  raw: string\n  /**\n   * An array of route segments that make up the route.\n   * See {@link RouteSegment}\n   */\n  segments: RouteSegment[]\n  /**\n   * An optional object containing route transforms.\n   * See {@link RouteTransform} and {@link RouterState}\n   */\n  transform?: {\n    [key: string]: RouteTransform<RouterState>\n  }\n}\n\n/**\n * @public\n */\nexport type RouteChildren =\n  | RouterNode[]\n  | ((state: RouterState) => Router | RouterNode | RouterNode[] | undefined | false)\n\n/**\n * @public\n */\nexport interface RouterNode {\n  /**\n   * The route information for this node. See {@link Route}\n   */\n  route: Route\n  /**\n   * An optional scope for this node.\n   */\n  scope?: string\n\n  /**\n   * Optionally disable scoping of search params\n   * Scoped search params will be represented as scope[param]=value in the url\n   * Disabling this will still scope search params based on any parent scope unless the parent scope also has disabled search params scoping\n   * Caution: enabling this can cause conflicts with multiple plugins defining search params with the same name\n   */\n  __unsafe_disableScopedSearchParams?: boolean\n\n  /**\n   * An optional object containing transforms to apply to this node.\n   * See {@link RouteTransform} and {@link RouterState}\n   */\n  transform?: {\n    [key: string]: RouteTransform<RouterState>\n  }\n  /**\n   * The child nodes of this node. See {@link RouteChildren}\n   */\n  children: RouteChildren\n}\n\n/**\n * @public\n */\nexport interface Router extends RouterNode {\n  /**\n   * Indicates whether this router is a route.\n   * @internal\n   */\n  _isRoute: boolean\n  /**\n   * Encodes the specified router state into a path string.\n   * See {@link RouterState}\n   *\n   */\n  encode: (state: RouterState) => string\n\n  /**\n   * Decodes the specified path string into a router state.\n   * See {@link RouterState}\n   */\n  decode: (path: string) => RouterState | null\n\n  /**\n   * Determines whether the specified path is not found.\n   */\n  isNotFound: (path: string) => boolean\n\n  /**\n   * Gets the base path of this router.\n   */\n  getBasePath: () => string\n\n  /**\n   * Gets the redirect base of this router.\n   */\n  getRedirectBase: (pathname: string) => string | null\n\n  /**\n   * Determines whether the specified path is the root path.\n   */\n  isRoot: (path: string) => boolean\n}\n\n/** @internal */\nexport type InternalSearchParam = [scopedPath: string[], value: string]\n\n/** @internal */\nexport interface MatchOk {\n  type: 'ok'\n  node: RouterNode\n  matchedState: Record<string, string>\n  searchParams: InternalSearchParam[]\n  child: MatchOk | undefined\n}\n\n/** @internal */\nexport interface MatchError {\n  type: 'error'\n  node: RouterNode\n  /**\n   * Parameters found in the route string but not provided as a key in the state object\n   */\n  missingKeys: string[]\n  /**\n   * These are keys found in the state object but not in the route definition (and can't be mapped to a child route)\n   */\n  unmappableStateKeys: string[]\n}\n/** @internal */\nexport type MatchResult = MatchError | MatchOk\n\n/**\n * @public\n */\nexport interface NavigateBaseOptions {\n  replace?: boolean\n}\n\n/**\n * @public\n */\nexport interface NavigateOptions extends NavigateBaseOptions {\n  stickyParams?: Record<string, string | undefined | null>\n}\n\n/**\n * @public\n */\nexport interface NavigateOptionsWithState extends NavigateOptions {\n  state?: RouterState | null\n}\n\n/**\n * @public\n */\nexport interface RouterContextValue {\n  /**\n   * Resolves the path from the given router state. See {@link RouterState}\n   *\n   * When state is null, it will resolve the path from the current state\n   * and navigate to the root path.\n   */\n  resolvePathFromState: (state: RouterState | null) => string\n\n  /**\n   * Resolves the intent link for the given intent name and parameters.\n   * See {@link IntentParameters}\n   */\n  resolveIntentLink: (\n    intentName: string,\n    params?: IntentParameters,\n    searchParams?: SearchParam[],\n  ) => string\n\n  /**\n   * Navigates to the given URL.\n   * The function requires an object that has a path and an optional replace property.\n   */\n  navigateUrl: (opts: {path: string; replace?: boolean}) => void\n\n  /**\n   * @deprecated Use `navigate({stickyParams: params, ...options})` instead\n   */\n  navigateStickyParams: (\n    params: NavigateOptions['stickyParams'],\n    options?: NavigateBaseOptions,\n  ) => void\n\n  /**\n   * Updates the router state and navigates to a new path.\n   * Allows specifying new state values and optionally merging sticky parameters.\n   *\n   * See {@link RouterState} and {@link NavigateOptions}\n   *\n   * @public\n   *\n   * @example Navigate with sticky params only, staying on the current path\n   * ```tsx\n   * router.navigate({stickyParams: {baz: 'qux'}})\n   * ```\n   * @remarks `null` sticky parameter value will remove the sticky parameter from the url\n   *\n   * @example Navigate with state and sticky params\n   * ```tsx\n   * router.navigate({stickyParams: {baz: 'qux'}, state: {foo: 'bar'}})\n   * ```\n   *\n   * @example Navigate to root path\n   * ```tsx\n   * router.navigate({stickyParams: {baz: 'qux'}, state: null})\n   * ```\n   */\n  navigate: {\n    // legacy, state-first version - for when you want to navigate to a new state\n    (nextState: RouterState, options?: NavigateOptions): void\n    // Options version - for staying where you are (omit state) or going to root (state: null)\n    (options: NavigateOptions & {state?: RouterState | null}): void\n  }\n\n  /**\n   * Navigates to the given intent.\n   * See {@link RouterState} and {@link NavigateBaseOptions}\n   */\n  navigateIntent: (\n    intentName: string,\n    params?: IntentParameters,\n    options?: NavigateBaseOptions,\n  ) => void\n\n  /**\n   * The current router state. See {@link RouterState}\n   */\n  state: RouterState\n\n  /**\n   * The current router state. See {@link RouterState}\n   */\n  stickyParams: Record<string, string | undefined | null>\n}\n\n/**\n * Base intent parameters\n *\n * @public\n * @todo dedupe with core/structure\n */\nexport interface BaseIntentParams {\n  /**\n   * Document schema type name to create/edit.\n   * Required for `create` intents, optional for `edit` (but encouraged, safer and faster)\n   */\n  type?: string\n\n  /**\n   * ID of the document to create/edit.\n   * Required for `edit` intents, optional for `create`.\n   */\n  id?: string\n\n  /* Name (ID) of initial value template to use for `create` intent. Optional.  */\n  template?: string\n\n  /**\n   * Experimental field path\n   *\n   * @beta\n   * @experimental\n   * @hidden\n   */\n  path?: string\n\n  /**\n   * Optional \"mode\" to use for edit intent.\n   * Known modes are `structure` and `presentation`.\n   */\n  mode?: string\n\n  /**\n   * Arbitrary/custom parameters are generally discouraged - try to keep them to a minimum,\n   * or use `payload` (arbitrary JSON-serializable object) instead.\n   */\n  [key: string]: string | undefined\n}\n\n/**\n * Intent parameters (json)\n *\n * @public\n */\nexport type IntentJsonParams = {[key: string]: any}\n\n/**\n * @public\n * @todo dedupe with intent types in core\n */\nexport type IntentParameters = BaseIntentParams | [BaseIntentParams, IntentJsonParams]\n\n/**\n * @public\n */\nexport type SearchParam = [key: string, value: string]\n\n/**\n * @public\n */\nexport type RouterState = Record<string, unknown> & {_searchParams?: SearchParam[]}\n\nexport const isNavigateOptions = (\n  maybeNavigateOptions: unknown,\n): maybeNavigateOptions is NavigateOptions & {state?: RouterState | null} => {\n  if (\n    typeof maybeNavigateOptions !== 'object' ||\n    maybeNavigateOptions === null ||\n    Array.isArray(maybeNavigateOptions)\n  ) {\n    return false\n  }\n\n  const hasNavigationProps =\n    'replace' in maybeNavigateOptions ||\n    'stickyParams' in maybeNavigateOptions ||\n    'state' in maybeNavigateOptions\n\n  if (!hasNavigationProps) {\n    return false\n  }\n\n  // if state exists then it should be of RouterState type\n  if ('state' in maybeNavigateOptions) {\n    const {state} = maybeNavigateOptions as {state: unknown}\n    // allow null or undefined or RouterState (including empty object)\n    return state === null || state === undefined || typeof state === 'object'\n  }\n\n  return true\n}\n\n/**\n * Type representing either a new router state or navigation options with an optional state.\n * @internal\n */\nexport type NextStateOrOptions = RouterState | (NavigateOptions & {state?: RouterState | null})\n","import {fromPairs, partition, toPairs} from 'lodash'\nimport {type ReactNode, useCallback, useMemo} from 'react'\nimport {RouterContext} from 'sanity/_singletons'\n\nimport {STICKY_PARAMS} from './stickyParams'\nimport {\n  type IntentParameters,\n  isNavigateOptions,\n  type NavigateBaseOptions,\n  type NavigateOptions,\n  type NextStateOrOptions,\n  type Router,\n  type RouterContextValue,\n  type RouterState,\n  type SearchParam,\n} from './types'\n\n/**\n * The props for the {@link RouterProvider} component.\n *\n * @public\n */\nexport interface RouterProviderProps {\n  /**\n   * A function that is called when the user navigates to a new path.\n   * Takes an object containing the path to navigate to and an optional `replace` flag.\n   */\n  onNavigate: (opts: {path: string; replace?: boolean}) => void\n  /**\n   * The router object that is used to handle navigation. See {@link Router}\n   */\n  router: Router\n  /**\n   * The current state of the router. See {@link RouterState}\n   */\n  state: RouterState\n  /**\n   * The child elements to render.\n   */\n  children: ReactNode\n}\n\n/**\n * @example\n * ```tsx\n * import {\n *   NavigateOptions,\n *   route,\n *   RouterProvider,\n *   RouterState\n * } from 'sanity'\n * import {useCallback, useMemo} from 'react'\n *\n * function Root() {\n *   const [router] = useState(() => route.create('/'))\n *\n *   const [state, setState] = useState<RouterState>({})\n *\n *   const handleNavigate = useCallback((\n *     path: string,\n *     options?: NavigateOptions\n *   ) => {\n *     console.log('navigate', path, options)\n *\n *     setState(router.decode(path))\n *   }, [router])\n *\n *   return (\n *     <RouterProvider\n *       onNavigate={handleNavigate}\n *       router={router}\n *       state={state}\n *     >\n *       <div>This is a routed application</div>\n *     </RouterProvider>\n *   )\n * }\n * ```\n *\n * @param props - The component props.\n *  {@link RouterProviderProps}\n *\n * @public\n */\nexport function RouterProvider(props: RouterProviderProps): React.JSX.Element {\n  const {onNavigate, router: routerProp, state} = props\n\n  const resolveIntentLink = useCallback(\n    (intentName: string, parameters?: IntentParameters, _searchParams?: SearchParam[]): string => {\n      const [params, payload] = Array.isArray(parameters) ? parameters : [parameters]\n      return routerProp.encode({\n        intent: intentName,\n        params,\n        payload,\n        _searchParams: toPairs({\n          ...fromPairs((state._searchParams ?? []).filter(([key]) => STICKY_PARAMS.includes(key))),\n          ...fromPairs(_searchParams ?? []),\n        }),\n      })\n    },\n    [routerProp, state._searchParams],\n  )\n\n  const resolvePathFromState = useCallback(\n    (nextState: RouterState | null): string => {\n      const currentStateParams = state._searchParams || []\n      const nextStateParams = nextState?._searchParams || []\n      const nextParams = STICKY_PARAMS.reduce((acc, param) => {\n        return replaceStickyParam(\n          acc,\n          param,\n          findParam(nextStateParams, param) ?? findParam(currentStateParams, param),\n        )\n      }, nextStateParams || [])\n\n      return routerProp.encode({\n        ...nextState,\n        _searchParams: nextParams,\n      })\n    },\n    [routerProp, state],\n  )\n\n  const navigate: RouterContextValue['navigate'] = useCallback(\n    (nextStateOrOptions: NextStateOrOptions, maybeOptions?: NavigateOptions) => {\n      // Determine options and state based on input pattern\n      const isOptionsOnlyPattern = isNavigateOptions(nextStateOrOptions) && !maybeOptions\n      const options = isOptionsOnlyPattern ? nextStateOrOptions : maybeOptions || {}\n\n      const baseState = isNavigateOptions(nextStateOrOptions)\n        ? (getStateFromOptions(nextStateOrOptions, state) ?? state)\n        : nextStateOrOptions\n\n      const currentParams = state._searchParams || []\n      const nextStickyParams =\n        options.stickyParams ??\n        Object.fromEntries(currentParams.filter(([key]) => STICKY_PARAMS.includes(key)))\n\n      validateStickyParams(nextStickyParams)\n\n      const nextParams = baseState._searchParams || []\n      const mergedParams = mergeStickyParams(nextParams, nextStickyParams)\n\n      onNavigate({\n        path: resolvePathFromState({...baseState, _searchParams: mergedParams}),\n        replace: options.replace,\n      })\n    },\n    [onNavigate, resolvePathFromState, state],\n  )\n\n  const handleNavigateStickyParams = useCallback(\n    (params: NavigateOptions['stickyParams'], options: NavigateBaseOptions = {}) =>\n      navigate({stickyParams: params, ...options, state: undefined}),\n    [navigate],\n  )\n\n  const navigateIntent = useCallback(\n    (intentName: string, params?: IntentParameters, options: NavigateBaseOptions = {}) => {\n      onNavigate({path: resolveIntentLink(intentName, params), replace: options.replace})\n    },\n    [onNavigate, resolveIntentLink],\n  )\n\n  const [routerState, stickyParams] = useMemo(() => {\n    if (!state._searchParams) {\n      return [state, null]\n    }\n    const {_searchParams, ...rest} = state\n    const [sticky, restParams] = partition(_searchParams, ([key]) => STICKY_PARAMS.includes(key))\n    if (sticky.length === 0) {\n      return [state, null]\n    }\n    return [{...rest, _searchParams: restParams}, sticky]\n  }, [state])\n\n  const stickyParamsByName = useMemo(() => Object.fromEntries(stickyParams || []), [stickyParams])\n\n  const router: RouterContextValue = useMemo(\n    () => ({\n      navigate,\n      navigateIntent,\n      navigateStickyParams: handleNavigateStickyParams,\n      navigateUrl: onNavigate,\n      resolveIntentLink,\n      resolvePathFromState,\n      state: routerState,\n      stickyParams: stickyParamsByName,\n    }),\n    [\n      handleNavigateStickyParams,\n      navigate,\n      navigateIntent,\n      onNavigate,\n      resolveIntentLink,\n      resolvePathFromState,\n      routerState,\n      stickyParamsByName,\n    ],\n  )\n\n  return <RouterContext.Provider value={router}>{props.children}</RouterContext.Provider>\n}\n\nfunction replaceStickyParam(\n  current: SearchParam[],\n  param: string,\n  value: string | undefined,\n): SearchParam[] {\n  const filtered = current.filter(([key]) => key !== param)\n  return value === undefined || value == '' ? filtered : [...filtered, [param, value]]\n}\n\nfunction mergeStickyParams(\n  currentParams: SearchParam[],\n  newParams?: Record<string, string | undefined | null>,\n): SearchParam[] {\n  if (!newParams) return currentParams\n\n  // Remove old sticky params before merging new ones\n  const filteredParams = currentParams.filter(([key]) => !Object.hasOwn(newParams, key))\n\n  // Type guard function to filter out undefined values\n  const isValidSearchParam = (\n    entry: [string, string | undefined | null],\n  ): entry is [string, string] => entry[1] !== undefined\n\n  const convertNullSearchParam = (entry: [string, string | null]): [string, string] => [\n    entry[0],\n    entry[1] === null ? '' : entry[1],\n  ]\n\n  // Convert newParams into the correct SearchParam format\n  const newEntries = Object.entries(newParams)\n    .filter(isValidSearchParam)\n    .map(convertNullSearchParam)\n\n  return [...filteredParams, ...newEntries]\n}\n\nfunction findParam(searchParams: SearchParam[], key: string): string | undefined {\n  const entry = searchParams.find(([k]) => k === key)\n  return entry ? entry[1] : undefined\n}\n\nfunction getStateFromOptions(\n  nextStateOrOptions: NextStateOrOptions,\n  state: RouterState,\n): RouterState | null {\n  const isOptionsOnly = isNavigateOptions(nextStateOrOptions)\n\n  if (isOptionsOnly) {\n    if (nextStateOrOptions.state === null) {\n      return {}\n    }\n    return nextStateOrOptions.state ?? state\n  }\n  return null\n}\n\nfunction validateStickyParams(nextStickyParams: Record<string, string | undefined | null>) {\n  const hasInvalidParam = Object.keys(nextStickyParams).some(\n    (param) => !STICKY_PARAMS.includes(param),\n  )\n  if (hasInvalidParam) throw new Error('One or more parameters are not sticky')\n}\n","/* eslint-disable camelcase */\nimport {type ReactNode, useCallback, useEffect, useMemo, useRef} from 'react'\nimport {RouterContext} from 'sanity/_singletons'\n\nimport {\n  isNavigateOptions,\n  type NavigateOptions,\n  type NextStateOrOptions,\n  type RouterContextValue,\n  type RouterState,\n} from './types'\nimport {useRouter} from './useRouter'\n\nfunction addScope(\n  routerState: Record<string, any>,\n  scope: string,\n  scopedState: Record<string, any>,\n) {\n  return (\n    scopedState && {\n      ...routerState,\n      [scope]: scopedState,\n    }\n  )\n}\n\n/**\n * Props for the {@link RouteScope} component.\n *\n * @public\n */\nexport interface RouteScopeProps {\n  /**\n   * The scope for the nested routes.\n   */\n  scope: string\n\n  /**\n   * Optionally disable scoping of search params\n   * Scoped search params will be represented as scope[param]=value in the url\n   * Disabling this will still scope search params based on any parent scope unless the parent scope also has disabled search params scoping\n   * Caution: enabling this can cause conflicts with multiple plugins defining search params with the same name\n   */\n  __unsafe_disableScopedSearchParams?: boolean\n  /**\n   * The content to display inside the route scope.\n   */\n  children: ReactNode\n}\n\n/**\n * A component that wraps a scoped router context, so that calls to\n * `useRouter()`, `useRouterState()`, and usage of `<StateLink />`\n * will be prefixed with the scope segment.\n *\n * @public\n *\n * @param props - Props to pass `RouteScope` component.\n *  See {@link RouteScopeProps}\n *\n * @example\n * ```tsx\n * function MyComponent() {\n *  return (\n *    <RouteScope scope=\"foo\">\n *      <StateLink state={{bar: 'baz'}}>Link</StateLink>\n *    </RouteScope>\n *  )\n * }\n * ```\n */\nexport const RouteScope = function RouteScope(props: RouteScopeProps): React.JSX.Element {\n  const {children, scope, __unsafe_disableScopedSearchParams} = props\n  const parentRouter = useRouter()\n  const {resolvePathFromState: parent_resolvePathFromState, navigate: parent_navigate} =\n    parentRouter\n\n  const parentStateRef = useRef(parentRouter.state)\n  useEffect(() => {\n    parentStateRef.current = parentRouter.state\n  }, [parentRouter.state])\n\n  const resolveNextParentState = useCallback(\n    (_nextState: RouterState | null) => {\n      if (_nextState === null) return null\n\n      const {_searchParams, ...nextState} = _nextState || {}\n      const nextParentState = addScope(parentStateRef.current, scope, nextState)\n      if (__unsafe_disableScopedSearchParams) {\n        // Move search params to parent scope\n        nextParentState._searchParams = _searchParams\n      } else {\n        nextParentState[scope]._searchParams = _searchParams\n      }\n      return nextParentState\n    },\n    [scope, __unsafe_disableScopedSearchParams],\n  )\n\n  const resolvePathFromState = useCallback(\n    (nextState: RouterState | null) =>\n      parent_resolvePathFromState(resolveNextParentState(nextState)),\n    [parent_resolvePathFromState, resolveNextParentState],\n  )\n\n  const navigate: RouterContextValue['navigate'] = useCallback(\n    (nextStateOrOptions: NextStateOrOptions, maybeOptions?: NavigateOptions) => {\n      // Check if it's the options-only pattern\n      if (isNavigateOptions(nextStateOrOptions) && !maybeOptions) {\n        const options = nextStateOrOptions\n        const {state} = options\n\n        //keep the current state but apply other options\n        if (state) {\n          const nextState = resolveNextParentState(state)\n          const resolvedState = nextState === null ? {} : nextState\n\n          return parent_navigate(resolvedState, options)\n        }\n\n        //keep the current state\n        return parent_navigate(options)\n      }\n\n      const nextState = isNavigateOptions(nextStateOrOptions)\n        ? resolveNextParentState(null)\n        : resolveNextParentState(nextStateOrOptions)\n\n      return parent_navigate(nextState === null ? {} : nextState, maybeOptions || {})\n    },\n    [parent_navigate, resolveNextParentState],\n  )\n\n  const childRouter: RouterContextValue = useMemo(() => {\n    const parentState = parentRouter.state\n    const childState =\n      typeof parentState[scope] === 'object' ? ({...parentState[scope]} as RouterState) : {}\n    if (__unsafe_disableScopedSearchParams) {\n      childState._searchParams = parentState._searchParams\n    }\n    return {\n      ...parentRouter,\n      navigate,\n      resolvePathFromState,\n      state: childState,\n    }\n  }, [scope, parentRouter, navigate, resolvePathFromState, __unsafe_disableScopedSearchParams])\n\n  return <RouterContext.Provider value={childRouter}>{children}</RouterContext.Provider>\n}\nRouteScope.displayName = 'RouteScope'\n","import {type MouseEventHandler, useMemo} from 'react'\n\nimport {useLink} from './useLink'\nimport {useRouter} from './useRouter'\n\nconst EMPTY_STATE = {}\n\n/**\n * @public\n */\nexport interface UseStateLinkOptions {\n  /**\n   * The click event handler for the link.\n   */\n  onClick?: MouseEventHandler<HTMLElement>\n  /**\n   * Whether to replace the current history entry instead of adding a new one.\n   */\n  replace?: boolean\n  /**\n   * The state object to update when the link is clicked.\n   */\n  state?: Record<string, unknown>\n  /**\n   * The target window or frame to open the linked document in.\n   */\n  target?: string\n  /**\n   * Whether to navigate to the index page of the linked document.\n   */\n  toIndex?: boolean\n}\n\n/**\n * @public\n *\n * @param options - Options to use for the link\n *  {@link UseStateLinkOptions}\n *\n * @returns - An object with `onClick` and `href` props to use for the link\n *\n * @example\n * ```tsx\n * const {onClick, href} = useStateLink({state: {foo: 'bar'}})\n * ```\n */\nexport function useStateLink(options: UseStateLinkOptions): {\n  onClick: MouseEventHandler<HTMLElement>\n  href: string\n} {\n  const {onClick: onClickProp, replace, state, target, toIndex = false} = options\n\n  if (state && toIndex) {\n    throw new Error('Passing both `state` and `toIndex={true}` as props to StateLink is invalid')\n  }\n\n  if (!state && !toIndex) {\n    console.error(\n      new Error(\n        'No state passed to StateLink. If you want to link to an empty state, its better to use the the `toIndex` property',\n      ),\n    )\n  }\n\n  const {resolvePathFromState} = useRouter()\n\n  const href = useMemo(\n    () => resolvePathFromState(toIndex ? EMPTY_STATE : state || EMPTY_STATE),\n    [resolvePathFromState, state, toIndex],\n  )\n\n  const {onClick} = useLink({href, onClick: onClickProp, replace, target})\n\n  return {onClick, href}\n}\n","import {type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {useStateLink} from './useStateLink'\n\n/**\n * Props for the {@link StateLink} component.\n *\n * @public\n */\nexport interface StateLinkProps {\n  /**\n   * Whether to replace the current history entry instead of adding a new one.\n   */\n  replace?: boolean\n  /**\n   * The state to associate with the link.\n   */\n  state?: Record<string, unknown>\n  /**\n   * Whether to navigate to the index page of the app.\n   */\n  toIndex?: boolean\n}\n\n/**\n * A component that creates a link that updates the URL state.\n *\n * @remarks\n * This component uses the {@link useStateLink} hook\n * to create a link that updates the URL state.\n *\n * @param props - Props to pass to the `StateLink` component.\n *  See {@link StateLinkProps}.\n *\n * @public\n *\n * @example\n * ```tsx\n * function MyComponent() {\n *  return <StateLink state={{foo: 'bar'}}>Link</StateLink>\n * }\n * ```\n */\nexport const StateLink = forwardRef(function StateLink(\n  props: StateLinkProps & Omit<HTMLProps<HTMLAnchorElement>, 'href'>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {onClick: onClickProp, replace, state, target, toIndex = false, ...restProps} = props\n  const {onClick, href} = useStateLink({\n    onClick: onClickProp,\n    replace,\n    state,\n    target,\n    toIndex,\n  })\n\n  return <a {...restProps} href={href} onClick={onClick} ref={ref} />\n})\n","import {identity} from 'lodash'\nimport {useMemo} from 'react'\n\nimport {type RouterState} from './types'\nimport {useRouter} from './useRouter'\n\n/**\n * @public\n *\n * @param selector - A selector function that receives the router state and returns a value. See {@link RouterState}\n *\n * @returns The value returned by the selector function or RouterState. See {@link RouterState}\n *\n * @example\n * ```tsx\n * const {activeTool} = useRouterState(state => state.tool)\n * ```\n */\nexport function useRouterState<R = RouterState>(selector: (routerState: RouterState) => R): R\n\n/**\n * @public\n *\n * @returns The router state. See {@link RouterState}\n *\n * @example\n * ```tsx\n * const routerState = useRouterState()\n * ```\n */\nexport function useRouterState(): RouterState\n\n/**\n * @public\n */\nexport function useRouterState(\n  selector: (routerState: RouterState) => unknown = identity,\n): unknown {\n  const {state} = useRouter()\n  return useMemo(() => selector(state), [selector, state])\n}\n","import {type ComponentType, type FunctionComponent} from 'react'\n\nimport {type RouterContextValue} from './types'\nimport {useRouter} from './useRouter'\n\n/**\n * A higher-order component that injects the `router` object from the `useRouter` hook\n * into the props of the wrapped component.\n *\n * @internal\n * @deprecated - Use the `useRouter` hook instead.\n *\n * @param Component - The component to wrap.\n *\n * @returns The wrapped component.\n *\n * @example\n * ```tsx\n * function MyComponent(props) {\n *  return <div>{props.router.state.myParam}</div>\n * }\n *\n * export default withRouter(MyComponent)\n * ```\n */\nexport function withRouter<Props extends {router: RouterContextValue}>(\n  Component: ComponentType<Props>,\n): FunctionComponent<Omit<Props, 'router'>> {\n  function WithRouter(props: Omit<Props, 'router'>) {\n    const router = useRouter()\n\n    return <Component {...(props as Props)} router={router} />\n  }\n\n  WithRouter.displayName = `withRouter(${Component.displayName || Component.name})`\n\n  return WithRouter\n}\n\n/**\n * @internal\n * @deprecated - Use the `useRouter` hook instead.\n */\nexport interface WithRouterProps {\n  /**\n   * The `router` object from the `useRouter` hook.\n   *  {@link RouterContextValue}\n   */\n  router: RouterContextValue\n  /**\n   * A function that renders the wrapped component with the `router` object as a parameter.\n   */\n  children: (router: RouterContextValue) => React.JSX.Element\n}\n\n/**\n * A higher-order component that injects the router object into its child component.\n *\n * @internal\n * @deprecated - Use the `useRouter` hook instead.\n *\n * @returns The rendered component.\n *\n * @example\n * ```tsx\n * function MyComponent(props: {router: Router}) {\n *   const {location} = props.router\n *   const {pathname} = location\n *   return <p>The current path is: {pathname}</p>\n * }\n *\n * function App() {\n *   return (\n *     <Router>\n *       <WithRouter>\n *         {router => <MyComponent router={router} />}\n *       </WithRouter>\n *     </Router>\n *   )\n * }\n * ```\n */\nexport const WithRouter = withRouter((props: WithRouterProps) => props.children(props.router))\n"],"names":["useRouter","router","useContext","RouterContext","Error","isLeftClickEvent","event","button","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","useLink","options","$","_c","onClick","onClickProp","href","target","replace","t0","undefined","navigateUrl","t1","isDefaultPrevented","preventDefault","path","t2","useIntentLink","intent","params","searchParams","resolveIntentLink","IntentLink","forwardRef","props","ref","restProps","Link","VALID_PARAM_SEGMENT","createSegment","segment","startsWith","paramName","slice","test","addendum","includes","console","error","type","name","_parseRoute","route","pathname","split","segments","map","filter","Boolean","raw","arrayify","val","Array","isArray","isRecord","value","isPlainObject","createMatchError","node","missingKeys","unmappableStateKeys","createMatchOk","matchedState","child","_findMatchingRoutes","_state","scopedState","scope","_searchParams","state","requiredParams","seg","stateKeys","Object","keys","consumedParams","intersection","missingParams","difference","remainingParams","length","scopedParams","key","consumedState","pick","children","remainingState","found","childNode","find","res","encodeURIComponentExcept","uriComponent","unescaped","chars","String","i","char","encodeURIComponent","debug","Debug","_resolvePathFromState","match","unmappable","quote","join","pathFromMatchResult","search","encodeParams","bracketify","flatMap","encodeSearchParamKey","serializeScopedPath","encodeSearchParamValue","scopedPath","head","tail","base","transform","toPath","childMatch","addNodeScope","__unsafe_disableScopedSearchParams","namespaces","parseScopedParams","parse","OPEN","CLOSED","str","result","nextBracketIdx","indexOf","push","nextClosing","matchPath","parts","segmentsLength","every","toState","rest","childState","unscopedParams","removeScope","some","childParams","selfParams","namespace","mergedState","_resolveStateFromPath","urlSearchParams","from","URLSearchParams","entries","pathMatch","encodeBase64Url","encodeBase64","decodeBase64Url","decodeBase64","percentToByte","p","fromCharCode","parseInt","btoa","byteToPercent","b","charCodeAt","toString","decodeURIComponent","atob","decodeJsonParams","pathSegment","JSON","warn","encodeJsonParams","stringify","decodeParams","reduce","pair","create","routeOrOpts","childrenOrOpts","_createNode","normalizeArgs","intents","basePath","normalize","payload","scopeName","normalizeChildren","isRoute","paths","acc","concat","EMPTY_STATE","isRoot","TypeError","parsedRoute","_isRoute","encode","decode","_path","isNotFound","getBasePath","getRedirectBase","STICKY_PARAMS","isNavigateOptions","maybeNavigateOptions","RouterProvider","onNavigate","routerProp","useCallback","intentName","parameters","toPairs","fromPairs","resolvePathFromState","nextState","currentStateParams","nextStateParams","nextParams","param","replaceStickyParam","findParam","navigate","nextStateOrOptions","maybeOptions","baseState","getStateFromOptions","currentParams","nextStickyParams","stickyParams","fromEntries","validateStickyParams","mergedParams","mergeStickyParams","handleNavigateStickyParams","navigateIntent","routerState","useMemo","sticky","restParams","partition","stickyParamsByName","navigateStickyParams","current","filtered","newParams","filteredParams","hasOwn","isValidSearchParam","entry","convertNullSearchParam","newEntries","k","addScope","RouteScope","parentRouter","parent_resolvePathFromState","parent_navigate","parentStateRef","useRef","useEffect","resolveNextParentState","_nextState","nextParentState","childRouter","parentState","displayName","useStateLink","toIndex","t3","t4","StateLink","useRouterState","selector","identity","withRouter","Component","WithRouter"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"debugId":null}}]
}