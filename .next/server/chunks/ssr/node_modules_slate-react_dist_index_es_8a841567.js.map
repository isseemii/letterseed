{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"index.es.js","sources":["file:///Users/isseemii/app/letterseed/node_modules/slate-react/dist/index.es.js/__/__/__/__/__/__/.yarn/berry/cache/%40babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/%40babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","file:///Users/isseemii/app/letterseed/node_modules/slate-react/dist/index.es.js/__/__/__/__/__/__/.yarn/berry/cache/%40babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/%40babel/runtime/helpers/esm/objectWithoutProperties.js","file:///Users/isseemii/app/letterseed/node_modules/slate-react/dist/index.es.js/__/__/__/__/__/__/.yarn/berry/cache/%40babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/%40babel/runtime/helpers/esm/typeof.js","file:///Users/isseemii/app/letterseed/node_modules/slate-react/dist/index.es.js/__/__/__/__/__/__/.yarn/berry/cache/%40babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/%40babel/runtime/helpers/esm/toPrimitive.js","file:///Users/isseemii/app/letterseed/node_modules/slate-react/dist/index.es.js/__/__/__/__/__/__/.yarn/berry/cache/%40babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/%40babel/runtime/helpers/esm/toPropertyKey.js","file:///Users/isseemii/app/letterseed/node_modules/slate-react/dist/index.es.js/__/__/__/__/__/__/.yarn/berry/cache/%40babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/%40babel/runtime/helpers/esm/defineProperty.js","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/hooks/use-slate-static.tsx","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/plugin/react-editor.ts","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/hooks/android-input-manager/android-input-manager.ts","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/hooks/use-is-mounted.tsx","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/hooks/use-isomorphic-layout-effect.ts","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/hooks/use-mutation-observer.ts","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/hooks/android-input-manager/use-android-input-manager.ts","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/components/string.tsx","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/components/leaf.tsx","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/hooks/use-generic-selector.tsx","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/hooks/use-decorations.ts","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/components/text.tsx","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/components/element.tsx","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/chunking/chunk-tree-helper.ts","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/chunking/children-helper.ts","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/chunking/reconcile-children.ts","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/chunking/get-chunk-tree-for-node.ts","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/components/chunk-tree.tsx","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/hooks/use-element.ts","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/hooks/use-children.tsx","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/hooks/use-read-only.ts","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/hooks/use-slate-selector.tsx","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/hooks/use-slate.tsx","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/hooks/use-track-user-input.ts","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/components/restore-dom/restore-dom-manager.ts","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/components/restore-dom/restore-dom.tsx","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/hooks/use-composing.ts","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/components/editable.tsx","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/hooks/use-focused.ts","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/utils/environment.ts","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/components/slate.tsx","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/hooks/use-editor.tsx","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/hooks/use-selected.ts","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/hooks/use-slate-selection.tsx","file:///Users/isseemii/app/letterseed/node_modules/slate-react/src/plugin/with-react.ts"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import { createContext, useContext } from 'react'\nimport { Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object.\n */\n\nexport const EditorContext = createContext<ReactEditor | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlateStatic = (): Editor => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useSlateStatic\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n","import { Ancestor } from 'slate'\nimport { DOMEditor, type DOMEditorInterface } from 'slate-dom'\n\n/**\n * A React and DOM-specific version of the `Editor` interface.\n */\n\nexport interface ReactEditor extends DOMEditor {\n  /**\n   * Determines the chunk size used by the children chunking optimization. If\n   * null is returned (which is the default), the chunking optimization is\n   * disabled.\n   */\n  getChunkSize: (node: Ancestor) => number | null\n}\n\nexport interface ReactEditorInterface extends DOMEditorInterface {}\n\n// eslint-disable-next-line no-redeclare\nexport const ReactEditor: ReactEditorInterface = DOMEditor\n","import { DebouncedFunc } from 'lodash'\nimport { Editor, Node, Path, Point, Range, Text, Transforms } from 'slate'\nimport { ReactEditor } from '../../plugin/react-editor'\nimport {\n  applyStringDiff,\n  mergeStringDiffs,\n  normalizePoint,\n  normalizeRange,\n  normalizeStringDiff,\n  StringDiff,\n  targetRange,\n  TextDiff,\n  verifyDiffState,\n} from 'slate-dom'\nimport { isDOMSelection, isTrackedMutation } from 'slate-dom'\nimport {\n  EDITOR_TO_FORCE_RENDER,\n  EDITOR_TO_PENDING_ACTION,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_PENDING_SELECTION,\n  EDITOR_TO_PLACEHOLDER_ELEMENT,\n  EDITOR_TO_USER_MARKS,\n  IS_COMPOSING,\n  IS_NODE_MAP_DIRTY,\n} from 'slate-dom'\n\nexport type Action = { at?: Point | Range; run: () => void }\n\n// https://github.com/facebook/draft-js/blob/main/src/component/handlers/composition/DraftEditorCompositionHandler.js#L41\n// When using keyboard English association function, conpositionEnd triggered too fast, resulting in after `insertText` still maintain association state.\nconst RESOLVE_DELAY = 25\n\n// Time with no user interaction before the current user action is considered as done.\nconst FLUSH_DELAY = 200\n\n// Replace with `const debug = console.log` to debug\nconst debug = (..._: unknown[]) => {}\n\n// Type guard to check if a value is a DataTransfer\nconst isDataTransfer = (value: any): value is DataTransfer =>\n  value?.constructor.name === 'DataTransfer'\n\nexport type CreateAndroidInputManagerOptions = {\n  editor: ReactEditor\n\n  scheduleOnDOMSelectionChange: DebouncedFunc<() => void>\n  onDOMSelectionChange: DebouncedFunc<() => void>\n}\n\nexport type AndroidInputManager = {\n  flush: () => void\n  scheduleFlush: () => void\n\n  hasPendingDiffs: () => boolean\n  hasPendingAction: () => boolean\n  hasPendingChanges: () => boolean\n  isFlushing: () => boolean | 'action'\n\n  handleUserSelect: (range: Range | null) => void\n  handleCompositionEnd: (event: React.CompositionEvent<HTMLDivElement>) => void\n  handleCompositionStart: (\n    event: React.CompositionEvent<HTMLDivElement>\n  ) => void\n  handleDOMBeforeInput: (event: InputEvent) => void\n  handleKeyDown: (event: React.KeyboardEvent<HTMLDivElement>) => void\n\n  handleDomMutations: (mutations: MutationRecord[]) => void\n  handleInput: () => void\n}\n\nexport function createAndroidInputManager({\n  editor,\n  scheduleOnDOMSelectionChange,\n  onDOMSelectionChange,\n}: CreateAndroidInputManagerOptions): AndroidInputManager {\n  let flushing: 'action' | boolean = false\n  let compositionEndTimeoutId: ReturnType<typeof setTimeout> | null = null\n  let flushTimeoutId: ReturnType<typeof setTimeout> | null = null\n  let actionTimeoutId: ReturnType<typeof setTimeout> | null = null\n\n  let idCounter = 0\n  let insertPositionHint: StringDiff | null | false = false\n\n  const applyPendingSelection = () => {\n    const pendingSelection = EDITOR_TO_PENDING_SELECTION.get(editor)\n    EDITOR_TO_PENDING_SELECTION.delete(editor)\n\n    if (pendingSelection) {\n      const { selection } = editor\n      const normalized = normalizeRange(editor, pendingSelection)\n\n      debug('apply pending selection', pendingSelection, normalized)\n\n      if (normalized && (!selection || !Range.equals(normalized, selection))) {\n        Transforms.select(editor, normalized)\n      }\n    }\n  }\n\n  const performAction = () => {\n    const action = EDITOR_TO_PENDING_ACTION.get(editor)\n    EDITOR_TO_PENDING_ACTION.delete(editor)\n    if (!action) {\n      return\n    }\n\n    if (action.at) {\n      const target = Point.isPoint(action.at)\n        ? normalizePoint(editor, action.at)\n        : normalizeRange(editor, action.at)\n\n      if (!target) {\n        return\n      }\n\n      const targetRange = Editor.range(editor, target)\n      if (!editor.selection || !Range.equals(editor.selection, targetRange)) {\n        Transforms.select(editor, target)\n      }\n    }\n\n    action.run()\n  }\n\n  const flush = () => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    if (actionTimeoutId) {\n      clearTimeout(actionTimeoutId)\n      actionTimeoutId = null\n    }\n\n    if (!hasPendingDiffs() && !hasPendingAction()) {\n      applyPendingSelection()\n      return\n    }\n\n    if (!flushing) {\n      flushing = true\n      setTimeout(() => (flushing = false))\n    }\n\n    if (hasPendingAction()) {\n      flushing = 'action'\n    }\n\n    const selectionRef =\n      editor.selection &&\n      Editor.rangeRef(editor, editor.selection, { affinity: 'forward' })\n    EDITOR_TO_USER_MARKS.set(editor, editor.marks)\n\n    debug(\n      'flush',\n      EDITOR_TO_PENDING_ACTION.get(editor),\n      EDITOR_TO_PENDING_DIFFS.get(editor)\n    )\n\n    let scheduleSelectionChange = hasPendingDiffs()\n\n    let diff: TextDiff | undefined\n    while ((diff = EDITOR_TO_PENDING_DIFFS.get(editor)?.[0])) {\n      const pendingMarks = EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)\n\n      if (pendingMarks !== undefined) {\n        EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n        editor.marks = pendingMarks\n      }\n\n      if (pendingMarks && insertPositionHint === false) {\n        insertPositionHint = null\n        debug('insert after mark placeholder')\n      }\n\n      const range = targetRange(diff)\n      if (!editor.selection || !Range.equals(editor.selection, range)) {\n        Transforms.select(editor, range)\n      }\n\n      if (diff.diff.text) {\n        Editor.insertText(editor, diff.diff.text)\n      } else {\n        Editor.deleteFragment(editor)\n      }\n\n      // Remove diff only after we have applied it to account for it when transforming\n      // pending ranges.\n      EDITOR_TO_PENDING_DIFFS.set(\n        editor,\n        EDITOR_TO_PENDING_DIFFS.get(editor)?.filter(\n          ({ id }) => id !== diff!.id\n        )!\n      )\n\n      if (!verifyDiffState(editor, diff)) {\n        debug('invalid diff state')\n        scheduleSelectionChange = false\n        EDITOR_TO_PENDING_ACTION.delete(editor)\n        EDITOR_TO_USER_MARKS.delete(editor)\n        flushing = 'action'\n\n        // Ensure we don't restore the pending user (dom) selection\n        // since the document and dom state do not match.\n        EDITOR_TO_PENDING_SELECTION.delete(editor)\n        scheduleOnDOMSelectionChange.cancel()\n        onDOMSelectionChange.cancel()\n        selectionRef?.unref()\n      }\n    }\n\n    const selection = selectionRef?.unref()\n    if (\n      selection &&\n      !EDITOR_TO_PENDING_SELECTION.get(editor) &&\n      (!editor.selection || !Range.equals(selection, editor.selection))\n    ) {\n      Transforms.select(editor, selection)\n    }\n\n    if (hasPendingAction()) {\n      performAction()\n      return\n    }\n\n    // COMPAT: The selectionChange event is fired after the action is performed,\n    // so we have to manually schedule it to ensure we don't 'throw away' the selection\n    // while rendering if we have pending changes.\n    if (scheduleSelectionChange) {\n      debug('scheduleOnDOMSelectionChange pending changes')\n      scheduleOnDOMSelectionChange()\n    }\n\n    scheduleOnDOMSelectionChange.flush()\n    onDOMSelectionChange.flush()\n\n    applyPendingSelection()\n\n    const userMarks = EDITOR_TO_USER_MARKS.get(editor)\n    EDITOR_TO_USER_MARKS.delete(editor)\n    if (userMarks !== undefined) {\n      editor.marks = userMarks\n      editor.onChange()\n    }\n  }\n\n  const handleCompositionEnd = (\n    _event: React.CompositionEvent<HTMLDivElement>\n  ) => {\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId)\n    }\n\n    compositionEndTimeoutId = setTimeout(() => {\n      IS_COMPOSING.set(editor, false)\n      flush()\n    }, RESOLVE_DELAY)\n  }\n\n  const handleCompositionStart = (\n    _event: React.CompositionEvent<HTMLDivElement>\n  ) => {\n    debug('composition start')\n\n    IS_COMPOSING.set(editor, true)\n\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId)\n      compositionEndTimeoutId = null\n    }\n  }\n\n  const updatePlaceholderVisibility = (forceHide = false) => {\n    const placeholderElement = EDITOR_TO_PLACEHOLDER_ELEMENT.get(editor)\n    if (!placeholderElement) {\n      return\n    }\n\n    if (hasPendingDiffs() || forceHide) {\n      placeholderElement.style.display = 'none'\n      return\n    }\n\n    placeholderElement.style.removeProperty('display')\n  }\n\n  const storeDiff = (path: Path, diff: StringDiff) => {\n    debug('storeDiff', path, diff)\n\n    const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor) ?? []\n    EDITOR_TO_PENDING_DIFFS.set(editor, pendingDiffs)\n\n    const target = Node.leaf(editor, path)\n    const idx = pendingDiffs.findIndex(change => Path.equals(change.path, path))\n    if (idx < 0) {\n      const normalized = normalizeStringDiff(target.text, diff)\n      if (normalized) {\n        pendingDiffs.push({ path, diff, id: idCounter++ })\n      }\n\n      updatePlaceholderVisibility()\n      return\n    }\n\n    const merged = mergeStringDiffs(target.text, pendingDiffs[idx].diff, diff)\n    if (!merged) {\n      pendingDiffs.splice(idx, 1)\n      updatePlaceholderVisibility()\n      return\n    }\n\n    pendingDiffs[idx] = {\n      ...pendingDiffs[idx],\n      diff: merged,\n    }\n  }\n\n  const scheduleAction = (\n    run: () => void,\n    { at }: { at?: Point | Range } = {}\n  ): void => {\n    insertPositionHint = false\n    debug('scheduleAction', { at, run })\n\n    EDITOR_TO_PENDING_SELECTION.delete(editor)\n    scheduleOnDOMSelectionChange.cancel()\n    onDOMSelectionChange.cancel()\n\n    if (hasPendingAction()) {\n      flush()\n    }\n\n    EDITOR_TO_PENDING_ACTION.set(editor, { at, run })\n\n    // COMPAT: When deleting before a non-contenteditable element chrome only fires a beforeinput,\n    // (no input) and doesn't perform any dom mutations. Without a flush timeout we would never flush\n    // in this case and thus never actually perform the action.\n    actionTimeoutId = setTimeout(flush)\n  }\n\n  const handleDOMBeforeInput = (event: InputEvent): void => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    if (IS_NODE_MAP_DIRTY.get(editor)) {\n      return\n    }\n\n    const { inputType: type } = event\n    let targetRange: Range | null = null\n    const data: DataTransfer | string | undefined =\n      (event as any).dataTransfer || event.data || undefined\n\n    if (\n      insertPositionHint !== false &&\n      type !== 'insertText' &&\n      type !== 'insertCompositionText'\n    ) {\n      insertPositionHint = false\n    }\n\n    let [nativeTargetRange] = (event as any).getTargetRanges()\n    if (nativeTargetRange) {\n      targetRange = ReactEditor.toSlateRange(editor, nativeTargetRange, {\n        exactMatch: false,\n        suppressThrow: true,\n      })\n    }\n\n    // COMPAT: SelectionChange event is fired after the action is performed, so we\n    // have to manually get the selection here to ensure it's up-to-date.\n    const window = ReactEditor.getWindow(editor)\n    const domSelection = window.getSelection()\n    if (!targetRange && domSelection) {\n      nativeTargetRange = domSelection\n      targetRange = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: false,\n        suppressThrow: true,\n      })\n    }\n\n    targetRange = targetRange ?? editor.selection\n    if (!targetRange) {\n      return\n    }\n\n    // By default, the input manager tries to store text diffs so that we can\n    // defer flushing them at a later point in time. We don't want to flush\n    // for every input event as this can be expensive. However, there are some\n    // scenarios where we cannot safely store the text diff and must instead\n    // schedule an action to let Slate normalize the editor state.\n    let canStoreDiff = true\n\n    if (type.startsWith('delete')) {\n      const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n      let [start, end] = Range.edges(targetRange)\n      let [leaf, path] = Editor.leaf(editor, start.path)\n\n      if (Range.isExpanded(targetRange)) {\n        if (leaf.text.length === start.offset && end.offset === 0) {\n          const next = Editor.next(editor, {\n            at: start.path,\n            match: Text.isText,\n          })\n          if (next && Path.equals(next[1], end.path)) {\n            // when deleting a linebreak, targetRange will span across the break (ie start in the node before and end in the node after)\n            // if the node before is empty, this will look like a hanging range and get unhung later--which will take the break we want to remove out of the range\n            // so to avoid this we collapse the target range to default to single character deletion\n            if (direction === 'backward') {\n              targetRange = { anchor: end, focus: end }\n              start = end\n              ;[leaf, path] = next\n            } else {\n              targetRange = { anchor: start, focus: start }\n              end = start\n            }\n          }\n        }\n      }\n\n      const diff = {\n        text: '',\n        start: start.offset,\n        end: end.offset,\n      }\n      const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor)\n      const relevantPendingDiffs = pendingDiffs?.find(change =>\n        Path.equals(change.path, path)\n      )\n      const diffs = relevantPendingDiffs\n        ? [relevantPendingDiffs.diff, diff]\n        : [diff]\n      const text = applyStringDiff(leaf.text, ...diffs)\n\n      if (text.length === 0) {\n        // Text leaf will be removed, so we need to schedule an\n        // action to remove it so that Slate can normalize instead\n        // of storing as a diff\n        canStoreDiff = false\n      }\n\n      if (Range.isExpanded(targetRange)) {\n        if (\n          canStoreDiff &&\n          Path.equals(targetRange.anchor.path, targetRange.focus.path)\n        ) {\n          const point = { path: targetRange.anchor.path, offset: start.offset }\n          const range = Editor.range(editor, point, point)\n          handleUserSelect(range)\n\n          return storeDiff(targetRange.anchor.path, {\n            text: '',\n            end: end.offset,\n            start: start.offset,\n          })\n        }\n\n        return scheduleAction(\n          () => Editor.deleteFragment(editor, { direction }),\n          { at: targetRange }\n        )\n      }\n    }\n\n    switch (type) {\n      case 'deleteByComposition':\n      case 'deleteByCut':\n      case 'deleteByDrag': {\n        return scheduleAction(() => Editor.deleteFragment(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteContent':\n      case 'deleteContentForward': {\n        const { anchor } = targetRange\n        if (canStoreDiff && Range.isCollapsed(targetRange)) {\n          const targetNode = Node.leaf(editor, anchor.path)\n\n          if (anchor.offset < targetNode.text.length) {\n            return storeDiff(anchor.path, {\n              text: '',\n              start: anchor.offset,\n              end: anchor.offset + 1,\n            })\n          }\n        }\n\n        return scheduleAction(() => Editor.deleteForward(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteContentBackward': {\n        const { anchor } = targetRange\n\n        // If we have a mismatch between the native and slate selection being collapsed\n        // we are most likely deleting a zero-width placeholder and thus should perform it\n        // as an action to ensure correct behavior (mostly happens with mark placeholders)\n        const nativeCollapsed = isDOMSelection(nativeTargetRange)\n          ? nativeTargetRange.isCollapsed\n          : !!nativeTargetRange?.collapsed\n\n        if (\n          canStoreDiff &&\n          nativeCollapsed &&\n          Range.isCollapsed(targetRange) &&\n          anchor.offset > 0\n        ) {\n          return storeDiff(anchor.path, {\n            text: '',\n            start: anchor.offset - 1,\n            end: anchor.offset,\n          })\n        }\n\n        return scheduleAction(() => Editor.deleteBackward(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteEntireSoftLine': {\n        return scheduleAction(\n          () => {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n          },\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteHardLineBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'block' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteSoftLineBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'line' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteHardLineForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'block' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteSoftLineForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'line' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteWordBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'word' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteWordForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'word' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'insertLineBreak': {\n        return scheduleAction(() => Editor.insertSoftBreak(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'insertParagraph': {\n        return scheduleAction(() => Editor.insertBreak(editor), {\n          at: targetRange,\n        })\n      }\n      case 'insertCompositionText':\n      case 'deleteCompositionText':\n      case 'insertFromComposition':\n      case 'insertFromDrop':\n      case 'insertFromPaste':\n      case 'insertFromYank':\n      case 'insertReplacementText':\n      case 'insertText': {\n        if (isDataTransfer(data)) {\n          return scheduleAction(() => ReactEditor.insertData(editor, data), {\n            at: targetRange,\n          })\n        }\n\n        let text = data ?? ''\n\n        // COMPAT: If we are writing inside a placeholder, the ime inserts the text inside\n        // the placeholder itself and thus includes the zero-width space inside edit events.\n        if (EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)) {\n          text = text.replace('\\uFEFF', '')\n        }\n\n        // Pastes from the Android clipboard will generate `insertText` events.\n        // If the copied text contains any newlines, Android will append an\n        // extra newline to the end of the copied text.\n        if (type === 'insertText' && /.*\\n.*\\n$/.test(text)) {\n          text = text.slice(0, -1)\n        }\n\n        // If the text includes a newline, split it at newlines and paste each component\n        // string, with soft breaks in between each.\n        if (text.includes('\\n')) {\n          return scheduleAction(\n            () => {\n              const parts = text.split('\\n')\n              parts.forEach((line, i) => {\n                if (line) {\n                  Editor.insertText(editor, line)\n                }\n                if (i !== parts.length - 1) {\n                  Editor.insertSoftBreak(editor)\n                }\n              })\n            },\n            {\n              at: targetRange,\n            }\n          )\n        }\n\n        if (Path.equals(targetRange.anchor.path, targetRange.focus.path)) {\n          const [start, end] = Range.edges(targetRange)\n\n          const diff = {\n            start: start.offset,\n            end: end.offset,\n            text,\n          }\n\n          // COMPAT: Swiftkey has a weird bug where the target range of the 2nd word\n          // inserted after a mark placeholder is inserted with an anchor offset off by 1.\n          // So writing 'some text' will result in 'some ttext'. Luckily all 'normal' insert\n          // text events are fired with the correct target ranges, only the final 'insertComposition'\n          // isn't, so we can adjust the target range start offset if we are confident this is the\n          // swiftkey insert causing the issue.\n          if (text && insertPositionHint && type === 'insertCompositionText') {\n            const hintPosition =\n              insertPositionHint.start + insertPositionHint.text.search(/\\S|$/)\n            const diffPosition = diff.start + diff.text.search(/\\S|$/)\n\n            if (\n              diffPosition === hintPosition + 1 &&\n              diff.end ===\n                insertPositionHint.start + insertPositionHint.text.length\n            ) {\n              debug('adjusting swiftKey insert position using hint')\n              diff.start -= 1\n              insertPositionHint = null\n              scheduleFlush()\n            } else {\n              insertPositionHint = false\n            }\n          } else if (type === 'insertText') {\n            if (insertPositionHint === null) {\n              insertPositionHint = diff\n            } else if (\n              insertPositionHint &&\n              Range.isCollapsed(targetRange) &&\n              insertPositionHint.end + insertPositionHint.text.length ===\n                start.offset\n            ) {\n              insertPositionHint = {\n                ...insertPositionHint,\n                text: insertPositionHint.text + text,\n              }\n            } else {\n              insertPositionHint = false\n            }\n          } else {\n            insertPositionHint = false\n          }\n\n          if (canStoreDiff) {\n            const currentSelection = editor.selection\n            storeDiff(start.path, diff)\n\n            if (currentSelection) {\n              const newPoint = {\n                path: start.path,\n                offset: start.offset + text.length,\n              }\n\n              scheduleAction(\n                () => {\n                  Transforms.select(editor, {\n                    anchor: newPoint,\n                    focus: newPoint,\n                  })\n                },\n                { at: newPoint }\n              )\n            }\n            return\n          }\n        }\n\n        return scheduleAction(() => Editor.insertText(editor, text), {\n          at: targetRange,\n        })\n      }\n    }\n  }\n\n  const hasPendingAction = () => {\n    return !!EDITOR_TO_PENDING_ACTION.get(editor)\n  }\n\n  const hasPendingDiffs = () => {\n    return !!EDITOR_TO_PENDING_DIFFS.get(editor)?.length\n  }\n\n  const hasPendingChanges = () => {\n    return hasPendingAction() || hasPendingDiffs()\n  }\n\n  const isFlushing = () => {\n    return flushing\n  }\n\n  const handleUserSelect = (range: Range | null) => {\n    EDITOR_TO_PENDING_SELECTION.set(editor, range)\n\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    const { selection } = editor\n    if (!range) {\n      return\n    }\n\n    const pathChanged =\n      !selection || !Path.equals(selection.anchor.path, range.anchor.path)\n    const parentPathChanged =\n      !selection ||\n      !Path.equals(\n        selection.anchor.path.slice(0, -1),\n        range.anchor.path.slice(0, -1)\n      )\n\n    if ((pathChanged && insertPositionHint) || parentPathChanged) {\n      insertPositionHint = false\n    }\n\n    if (pathChanged || hasPendingDiffs()) {\n      flushTimeoutId = setTimeout(flush, FLUSH_DELAY)\n    }\n  }\n\n  const handleInput = () => {\n    if (hasPendingAction() || !hasPendingDiffs()) {\n      debug('flush input')\n      flush()\n    }\n  }\n\n  const handleKeyDown = (_: React.KeyboardEvent) => {\n    // COMPAT: Swiftkey closes the keyboard when typing inside a empty node\n    // directly next to a non-contenteditable element (= the placeholder).\n    // The only event fired soon enough for us to allow hiding the placeholder\n    // without swiftkey picking it up is the keydown event, so we have to hide it\n    // here. See https://github.com/ianstormtaylor/slate/pull/4988#issuecomment-1201050535\n    if (!hasPendingDiffs()) {\n      updatePlaceholderVisibility(true)\n      setTimeout(updatePlaceholderVisibility)\n    }\n  }\n\n  const scheduleFlush = () => {\n    if (!hasPendingAction()) {\n      actionTimeoutId = setTimeout(flush)\n    }\n  }\n\n  const handleDomMutations = (mutations: MutationRecord[]) => {\n    if (hasPendingDiffs() || hasPendingAction()) {\n      return\n    }\n\n    if (\n      mutations.some(mutation => isTrackedMutation(editor, mutation, mutations))\n    ) {\n      // Cause a re-render to restore the dom state if we encounter tracked mutations without\n      // a corresponding pending action.\n      EDITOR_TO_FORCE_RENDER.get(editor)?.()\n    }\n  }\n\n  return {\n    flush,\n    scheduleFlush,\n\n    hasPendingDiffs,\n    hasPendingAction,\n    hasPendingChanges,\n\n    isFlushing,\n\n    handleUserSelect,\n    handleCompositionEnd,\n    handleCompositionStart,\n    handleDOMBeforeInput,\n    handleKeyDown,\n\n    handleDomMutations,\n    handleInput,\n  }\n}\n","import { useEffect, useRef } from 'react'\n\nexport function useIsMounted() {\n  const isMountedRef = useRef(false)\n\n  useEffect(() => {\n    isMountedRef.current = true\n    return () => {\n      isMountedRef.current = false\n    }\n  }, [])\n\n  return isMountedRef.current\n}\n","import { useLayoutEffect, useEffect } from 'react'\nimport { CAN_USE_DOM } from 'slate-dom'\n\n/**\n * Prevent warning on SSR by falling back to useEffect when DOM isn't available\n */\n\nexport const useIsomorphicLayoutEffect = CAN_USE_DOM\n  ? useLayoutEffect\n  : useEffect\n","import { RefObject, useEffect, useState } from 'react'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\n\nexport function useMutationObserver(\n  node: RefObject<HTMLElement>,\n  callback: MutationCallback,\n  options: MutationObserverInit\n) {\n  const [mutationObserver] = useState(() => new MutationObserver(callback))\n\n  useIsomorphicLayoutEffect(() => {\n    // Discard mutations caused during render phase. This works due to react calling\n    // useLayoutEffect synchronously after the render phase before the next tick.\n    mutationObserver.takeRecords()\n  })\n\n  useEffect(() => {\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    mutationObserver.observe(node.current, options)\n    return () => mutationObserver.disconnect()\n  }, [mutationObserver, node, options])\n}\n","import { RefObject, useState } from 'react'\nimport { useSlateStatic } from '../use-slate-static'\nimport { IS_ANDROID } from 'slate-dom'\nimport { EDITOR_TO_SCHEDULE_FLUSH } from 'slate-dom'\nimport {\n  createAndroidInputManager,\n  CreateAndroidInputManagerOptions,\n} from './android-input-manager'\nimport { useIsMounted } from '../use-is-mounted'\nimport { useMutationObserver } from '../use-mutation-observer'\n\ntype UseAndroidInputManagerOptions = {\n  node: RefObject<HTMLElement>\n} & Omit<\n  CreateAndroidInputManagerOptions,\n  'editor' | 'onUserInput' | 'receivedUserInput'\n>\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n}\n\nexport const useAndroidInputManager = !IS_ANDROID\n  ? () => null\n  : ({ node, ...options }: UseAndroidInputManagerOptions) => {\n      if (!IS_ANDROID) {\n        return null\n      }\n\n      const editor = useSlateStatic()\n      const isMounted = useIsMounted()\n\n      const [inputManager] = useState(() =>\n        createAndroidInputManager({\n          editor,\n          ...options,\n        })\n      )\n\n      useMutationObserver(\n        node,\n        inputManager.handleDomMutations,\n        MUTATION_OBSERVER_CONFIG\n      )\n\n      EDITOR_TO_SCHEDULE_FLUSH.set(editor, inputManager.scheduleFlush)\n      if (isMounted) {\n        inputManager.flush()\n      }\n\n      return inputManager\n    }\n","import React, { forwardRef, memo, useRef, useState } from 'react'\nimport { Editor, Text, Path, Element, Node } from 'slate'\n\nimport { ReactEditor, useSlateStatic } from '..'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { IS_ANDROID } from 'slate-dom'\nimport { MARK_PLACEHOLDER_SYMBOL } from 'slate-dom'\n\n/**\n * Leaf content strings.\n */\n\nconst String = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  text: Text\n}) => {\n  const { isLast, leaf, parent, text } = props\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, text)\n  const parentPath = Path.parent(path)\n  const isMarkPlaceholder = Boolean(leaf[MARK_PLACEHOLDER_SYMBOL])\n\n  // COMPAT: Render text inside void nodes with a zero-width space.\n  // So the node can contain selection but the text is not visible.\n  if (editor.isVoid(parent)) {\n    return <ZeroWidthString length={Node.string(parent).length} />\n  }\n\n  // COMPAT: If this is the last text node in an empty block, render a zero-\n  // width space that will convert into a line break when copying and pasting\n  // to support expected plain text.\n  if (\n    leaf.text === '' &&\n    parent.children[parent.children.length - 1] === text &&\n    !editor.isInline(parent) &&\n    Editor.string(editor, parentPath) === ''\n  ) {\n    return <ZeroWidthString isLineBreak isMarkPlaceholder={isMarkPlaceholder} />\n  }\n\n  // COMPAT: If the text is empty, it's because it's on the edge of an inline\n  // node, so we render a zero-width space so that the selection can be\n  // inserted next to it still.\n  if (leaf.text === '') {\n    return <ZeroWidthString isMarkPlaceholder={isMarkPlaceholder} />\n  }\n\n  // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n  // so we need to add an extra trailing new lines to prevent that.\n  if (isLast && leaf.text.slice(-1) === '\\n') {\n    return <TextString isTrailing text={leaf.text} />\n  }\n\n  return <TextString text={leaf.text} />\n}\n\n/**\n * Leaf strings with text in them.\n */\nconst TextString = (props: { text: string; isTrailing?: boolean }) => {\n  const { text, isTrailing = false } = props\n  const ref = useRef<HTMLSpanElement>(null)\n  const getTextContent = () => {\n    return `${text ?? ''}${isTrailing ? '\\n' : ''}`\n  }\n  const [initialText] = useState(getTextContent)\n\n  // This is the actual text rendering boundary where we interface with the DOM\n  // The text is not rendered as part of the virtual DOM, as since we handle basic character insertions natively,\n  // updating the DOM is not a one way dataflow anymore. What we need here is not reconciliation and diffing\n  // with previous version of the virtual DOM, but rather diffing with the actual DOM element, and replace the DOM <span> content\n  // exactly if and only if its current content does not match our current virtual DOM.\n  // Otherwise the DOM TextNode would always be replaced by React as the user types, which interferes with native text features,\n  // eg makes native spellcheck opt out from checking the text node.\n\n  // useLayoutEffect: updating our span before browser paint\n  useIsomorphicLayoutEffect(() => {\n    // null coalescing text to make sure we're not outputing \"null\" as a string in the extreme case it is nullish at runtime\n    const textWithTrailing = getTextContent()\n\n    if (ref.current && ref.current.textContent !== textWithTrailing) {\n      ref.current.textContent = textWithTrailing\n    }\n\n    // intentionally not specifying dependencies, so that this effect runs on every render\n    // as this effectively replaces \"specifying the text in the virtual DOM under the <span> below\" on each render\n  })\n\n  // We intentionally render a memoized <span> that only receives the initial text content when the component is mounted.\n  // We defer to the layout effect above to update the `textContent` of the span element when needed.\n  return <MemoizedText ref={ref}>{initialText}</MemoizedText>\n}\n\nconst MemoizedText = memo(\n  forwardRef<HTMLSpanElement, { children: string }>((props, ref) => {\n    return (\n      <span data-slate-string ref={ref}>\n        {props.children}\n      </span>\n    )\n  })\n)\n\n/**\n * Leaf strings without text, render as zero-width strings.\n */\n\nexport const ZeroWidthString = (props: {\n  length?: number\n  isLineBreak?: boolean\n  isMarkPlaceholder?: boolean\n}) => {\n  const { length = 0, isLineBreak = false, isMarkPlaceholder = false } = props\n\n  const attributes: {\n    'data-slate-zero-width': string\n    'data-slate-length': number\n    'data-slate-mark-placeholder'?: boolean\n  } = {\n    'data-slate-zero-width': isLineBreak ? 'n' : 'z',\n    'data-slate-length': length,\n  }\n\n  if (isMarkPlaceholder) {\n    attributes['data-slate-mark-placeholder'] = true\n  }\n\n  // FIXME: Inserting the \\uFEFF on iOS breaks capitalization at the start of an\n  // empty editor (https://github.com/ianstormtaylor/slate/issues/5199).\n  //\n  // However, not inserting the \\uFEFF on iOS causes the editor to crash when\n  // inserting any text using an IME at the start of a block. This appears to\n  // be because accepting an IME suggestion when at the start of a block (no\n  // preceding \\uFEFF) removes one or more DOM elements that `toSlateRange`\n  // depends on. (https://github.com/ianstormtaylor/slate/issues/5703)\n  return (\n    <span {...attributes}>\n      {!IS_ANDROID || !isLineBreak ? '\\uFEFF' : null}\n      {isLineBreak ? <br /> : null}\n    </span>\n  )\n}\n\nexport default String\n","import React, {\n  useRef,\n  useCallback,\n  MutableRefObject,\n  useState,\n  useEffect,\n} from 'react'\nimport { JSX } from 'react'\nimport { Element, LeafPosition, Text } from 'slate'\nimport { ResizeObserver as ResizeObserverPolyfill } from '@juggle/resize-observer'\nimport String from './string'\nimport { PLACEHOLDER_SYMBOL, EDITOR_TO_PLACEHOLDER_ELEMENT } from 'slate-dom'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport { useSlateStatic } from '../hooks/use-slate-static'\nimport { IS_WEBKIT, IS_ANDROID } from 'slate-dom'\n\n// Delay the placeholder on Android to prevent the keyboard from closing.\n// (https://github.com/ianstormtaylor/slate/pull/5368)\nconst PLACEHOLDER_DELAY = IS_ANDROID ? 300 : 0\n\nfunction disconnectPlaceholderResizeObserver(\n  placeholderResizeObserver: MutableRefObject<ResizeObserver | null>,\n  releaseObserver: boolean\n) {\n  if (placeholderResizeObserver.current) {\n    placeholderResizeObserver.current.disconnect()\n    if (releaseObserver) {\n      placeholderResizeObserver.current = null\n    }\n  }\n}\n\ntype TimerId = ReturnType<typeof setTimeout> | null\n\nfunction clearTimeoutRef(timeoutRef: MutableRefObject<TimerId>) {\n  if (timeoutRef.current) {\n    clearTimeout(timeoutRef.current)\n    timeoutRef.current = null\n  }\n}\n\nconst defaultRenderLeaf = (props: RenderLeafProps) => <DefaultLeaf {...props} />\n\n/**\n * Individual leaves in a text node with unique formatting.\n */\nconst Leaf = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: Text\n  leafPosition?: LeafPosition\n}) => {\n  const {\n    leaf,\n    isLast,\n    text,\n    parent,\n    renderPlaceholder,\n    renderLeaf = defaultRenderLeaf,\n    leafPosition,\n  } = props\n\n  const editor = useSlateStatic()\n  const placeholderResizeObserver = useRef<ResizeObserver | null>(null)\n  const placeholderRef = useRef<HTMLElement | null>(null)\n  const [showPlaceholder, setShowPlaceholder] = useState(false)\n  const showPlaceholderTimeoutRef = useRef<TimerId>(null)\n\n  const callbackPlaceholderRef = useCallback(\n    (placeholderEl: HTMLElement | null) => {\n      disconnectPlaceholderResizeObserver(\n        placeholderResizeObserver,\n        placeholderEl == null\n      )\n\n      if (placeholderEl == null) {\n        EDITOR_TO_PLACEHOLDER_ELEMENT.delete(editor)\n        leaf.onPlaceholderResize?.(null)\n      } else {\n        EDITOR_TO_PLACEHOLDER_ELEMENT.set(editor, placeholderEl)\n\n        if (!placeholderResizeObserver.current) {\n          // Create a new observer and observe the placeholder element.\n          const ResizeObserver = window.ResizeObserver || ResizeObserverPolyfill\n          placeholderResizeObserver.current = new ResizeObserver(() => {\n            leaf.onPlaceholderResize?.(placeholderEl)\n          })\n        }\n        placeholderResizeObserver.current.observe(placeholderEl)\n        placeholderRef.current = placeholderEl\n      }\n    },\n    [placeholderRef, leaf, editor]\n  )\n\n  let children = (\n    <String isLast={isLast} leaf={leaf} parent={parent} text={text} />\n  )\n\n  const leafIsPlaceholder = Boolean(leaf[PLACEHOLDER_SYMBOL])\n  useEffect(() => {\n    if (leafIsPlaceholder) {\n      if (!showPlaceholderTimeoutRef.current) {\n        // Delay the placeholder, so it will not render in a selection\n        showPlaceholderTimeoutRef.current = setTimeout(() => {\n          setShowPlaceholder(true)\n          showPlaceholderTimeoutRef.current = null\n        }, PLACEHOLDER_DELAY)\n      }\n    } else {\n      clearTimeoutRef(showPlaceholderTimeoutRef)\n      setShowPlaceholder(false)\n    }\n    return () => clearTimeoutRef(showPlaceholderTimeoutRef)\n  }, [leafIsPlaceholder, setShowPlaceholder])\n\n  if (leafIsPlaceholder && showPlaceholder) {\n    const placeholderProps: RenderPlaceholderProps = {\n      children: leaf.placeholder,\n      attributes: {\n        'data-slate-placeholder': true,\n        style: {\n          position: 'absolute',\n          top: 0,\n          pointerEvents: 'none',\n          width: '100%',\n          maxWidth: '100%',\n          display: 'block',\n          opacity: '0.333',\n          userSelect: 'none',\n          textDecoration: 'none',\n          // Fixes https://github.com/udecode/plate/issues/2315\n          WebkitUserModify: IS_WEBKIT ? 'inherit' : undefined,\n        },\n        contentEditable: false,\n        ref: callbackPlaceholderRef,\n      },\n    }\n\n    children = (\n      <React.Fragment>\n        {children}\n        {renderPlaceholder(placeholderProps)}\n      </React.Fragment>\n    )\n  }\n\n  // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n  const attributes: {\n    'data-slate-leaf': true\n  } = {\n    'data-slate-leaf': true,\n  }\n\n  return renderLeaf({\n    attributes,\n    children,\n    leaf,\n    text,\n    leafPosition,\n  })\n}\n\nconst MemoizedLeaf = React.memo(Leaf, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    Text.equals(next.leaf, prev.leaf) &&\n    next.leaf[PLACEHOLDER_SYMBOL] === prev.leaf[PLACEHOLDER_SYMBOL]\n  )\n})\n\nexport const DefaultLeaf = (props: RenderLeafProps) => {\n  const { attributes, children } = props\n  return <span {...attributes}>{children}</span>\n}\n\nexport default MemoizedLeaf\n","import { useCallback, useReducer, useRef } from 'react'\n\n/**\n * Create a selector that updates when an `update` function is called, and\n * which only causes the component to render when the result of `selector`\n * differs from the previous result according to `equalityFn`.\n *\n * If `selector` is memoized using `useCallback`, then it will only be called\n * when it changes or when `update` is called. Otherwise, `selector` will be\n * called every time the component renders.\n *\n * @example\n * const [state, update] = useGenericSelector(selector, equalityFn)\n *\n * useIsomorphicLayoutEffect(() => {\n *   return addEventListener(update)\n * }, [addEventListener, update])\n *\n * return state\n */\n\nexport function useGenericSelector<T>(\n  selector: () => T,\n  equalityFn: (a: T | null, b: T) => boolean\n): [state: T, update: () => void] {\n  const [, forceRender] = useReducer(s => s + 1, 0)\n\n  const latestSubscriptionCallbackError = useRef<Error | undefined>()\n  const latestSelector = useRef<() => T>(() => null as any)\n  const latestSelectedState = useRef<T | null>(null)\n  let selectedState: T\n\n  try {\n    if (\n      selector !== latestSelector.current ||\n      latestSubscriptionCallbackError.current\n    ) {\n      const selectorResult = selector()\n\n      if (equalityFn(latestSelectedState.current, selectorResult)) {\n        selectedState = latestSelectedState.current as T\n      } else {\n        selectedState = selectorResult\n      }\n    } else {\n      selectedState = latestSelectedState.current as T\n    }\n  } catch (err) {\n    if (latestSubscriptionCallbackError.current && isError(err)) {\n      err.message += `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`\n    }\n\n    throw err\n  }\n\n  latestSelector.current = selector\n  latestSelectedState.current = selectedState\n  latestSubscriptionCallbackError.current = undefined\n\n  const update = useCallback(() => {\n    try {\n      const newSelectedState = latestSelector.current()\n\n      if (equalityFn(latestSelectedState.current, newSelectedState)) {\n        return\n      }\n\n      latestSelectedState.current = newSelectedState\n    } catch (err) {\n      // we ignore all errors here, since when the component\n      // is re-rendered, the selectors are called again, and\n      // will throw again, if neither props nor store state\n      // changed\n      if (err instanceof Error) {\n        latestSubscriptionCallbackError.current = err\n      } else {\n        latestSubscriptionCallbackError.current = new Error(String(err))\n      }\n    }\n\n    forceRender()\n\n    // don't rerender on equalityFn change since we want to be able to define it inline\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return [selectedState, update]\n}\n\nfunction isError(error: any): error is Error {\n  return error instanceof Error\n}\n","import { createContext, useCallback, useContext, useMemo, useRef } from 'react'\nimport { DecoratedRange, Descendant, NodeEntry, Text } from 'slate'\nimport { isTextDecorationsEqual, isElementDecorationsEqual } from 'slate-dom'\nimport { useSlateStatic } from './use-slate-static'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { useGenericSelector } from './use-generic-selector'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\n\ntype Callback = () => void\n\n/**\n * A React context for sharing the `decorate` prop of the editable and\n * subscribing to changes on this prop.\n */\n\nexport const DecorateContext = createContext<{\n  decorate: (entry: NodeEntry) => DecoratedRange[]\n  addEventListener: (callback: Callback) => () => void\n}>({} as any)\n\nexport const useDecorations = (\n  node: Descendant,\n  parentDecorations: DecoratedRange[]\n): DecoratedRange[] => {\n  const editor = useSlateStatic()\n  const { decorate, addEventListener } = useContext(DecorateContext)\n\n  // Not memoized since we want nodes to be decorated on each render\n  const selector = () => {\n    const path = ReactEditor.findPath(editor, node)\n    return decorate([node, path])\n  }\n\n  const equalityFn = Text.isText(node)\n    ? isTextDecorationsEqual\n    : isElementDecorationsEqual\n\n  const [decorations, update] = useGenericSelector(selector, equalityFn)\n\n  useIsomorphicLayoutEffect(() => {\n    const unsubscribe = addEventListener(update)\n    update()\n    return unsubscribe\n  }, [addEventListener, update])\n\n  return useMemo(\n    () => [...decorations, ...parentDecorations],\n    [decorations, parentDecorations]\n  )\n}\n\nexport const useDecorateContext = (\n  decorateProp: (entry: NodeEntry) => DecoratedRange[]\n) => {\n  const eventListeners = useRef(new Set<Callback>())\n\n  const latestDecorate = useRef(decorateProp)\n\n  useIsomorphicLayoutEffect(() => {\n    latestDecorate.current = decorateProp\n    eventListeners.current.forEach(listener => listener())\n  }, [decorateProp])\n\n  const decorate = useCallback(\n    (entry: NodeEntry) => latestDecorate.current(entry),\n    []\n  )\n\n  const addEventListener = useCallback((callback: Callback) => {\n    eventListeners.current.add(callback)\n\n    return () => {\n      eventListeners.current.delete(callback)\n    }\n  }, [])\n\n  return useMemo(\n    () => ({ decorate, addEventListener }),\n    [decorate, addEventListener]\n  )\n}\n","import React, { useCallback, useRef } from 'react'\nimport { Element, Text as SlateText, DecoratedRange } from 'slate'\nimport { ReactEditor, useSlateStatic } from '..'\nimport { isTextDecorationsEqual } from 'slate-dom'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_ELEMENT,\n} from 'slate-dom'\nimport {\n  RenderLeafProps,\n  RenderPlaceholderProps,\n  RenderTextProps,\n} from './editable'\nimport Leaf from './leaf'\nimport { useDecorations } from '../hooks/use-decorations'\n\nconst defaultRenderText = (props: RenderTextProps) => <DefaultText {...props} />\n\n/**\n * Text.\n */\n\nconst Text = (props: {\n  decorations: DecoratedRange[]\n  isLast: boolean\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  renderText?: (props: RenderTextProps) => JSX.Element\n  text: SlateText\n}) => {\n  const {\n    decorations: parentDecorations,\n    isLast,\n    parent,\n    renderPlaceholder,\n    renderLeaf,\n    renderText = defaultRenderText,\n    text,\n  } = props\n\n  const editor = useSlateStatic()\n  const ref = useRef<HTMLSpanElement | null>(null)\n  const decorations = useDecorations(text, parentDecorations)\n  const decoratedLeaves = SlateText.decorations(text, decorations)\n  const key = ReactEditor.findKey(editor, text)\n  const children = []\n\n  for (let i = 0; i < decoratedLeaves.length; i++) {\n    const { leaf, position } = decoratedLeaves[i]\n\n    children.push(\n      <Leaf\n        isLast={isLast && i === decoratedLeaves.length - 1}\n        key={`${key.id}-${i}`}\n        renderPlaceholder={renderPlaceholder}\n        leaf={leaf}\n        leafPosition={position}\n        text={text}\n        parent={parent}\n        renderLeaf={renderLeaf}\n      />\n    )\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  const callbackRef = useCallback(\n    (span: HTMLSpanElement | null) => {\n      const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n      if (span) {\n        KEY_TO_ELEMENT?.set(key, span)\n        NODE_TO_ELEMENT.set(text, span)\n        ELEMENT_TO_NODE.set(span, text)\n      } else {\n        KEY_TO_ELEMENT?.delete(key)\n        NODE_TO_ELEMENT.delete(text)\n        if (ref.current) {\n          ELEMENT_TO_NODE.delete(ref.current)\n        }\n      }\n      ref.current = span\n    },\n    [ref, editor, key, text]\n  )\n\n  const attributes: {\n    'data-slate-node': 'text'\n    ref: any\n  } = {\n    'data-slate-node': 'text',\n    ref: callbackRef,\n  }\n\n  return renderText({\n    text,\n    children,\n    attributes,\n  })\n}\n\nconst MemoizedText = React.memo(Text, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderText === prev.renderText &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    isTextDecorationsEqual(next.decorations, prev.decorations)\n  )\n})\n\nexport const DefaultText = (props: RenderTextProps) => {\n  const { attributes, children } = props\n  return <span {...attributes}>{children}</span>\n}\n\nexport default MemoizedText\n","import getDirection from 'direction'\nimport React, { useCallback } from 'react'\nimport { JSX } from 'react'\nimport { Editor, Element as SlateElement, Node, DecoratedRange } from 'slate'\nimport { ReactEditor, useReadOnly, useSlateStatic } from '..'\nimport useChildren from '../hooks/use-children'\nimport { isElementDecorationsEqual } from 'slate-dom'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_ELEMENT,\n  NODE_TO_INDEX,\n  NODE_TO_PARENT,\n} from 'slate-dom'\nimport {\n  RenderChunkProps,\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n  RenderTextProps,\n} from './editable'\n\nimport Text from './text'\nimport { useDecorations } from '../hooks/use-decorations'\n\nconst defaultRenderElement = (props: RenderElementProps) => (\n  <DefaultElement {...props} />\n)\n\n/**\n * Element.\n */\n\nconst Element = (props: {\n  decorations: DecoratedRange[]\n  element: SlateElement\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderChunk?: (props: RenderChunkProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderText?: (props: RenderTextProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n}) => {\n  const {\n    decorations: parentDecorations,\n    element,\n    renderElement = defaultRenderElement,\n    renderChunk,\n    renderPlaceholder,\n    renderLeaf,\n    renderText,\n  } = props\n  const editor = useSlateStatic()\n  const readOnly = useReadOnly()\n  const isInline = editor.isInline(element)\n  const decorations = useDecorations(element, parentDecorations)\n  const key = ReactEditor.findKey(editor, element)\n  const ref = useCallback(\n    (ref: HTMLElement | null) => {\n      // Update element-related weak maps with the DOM element ref.\n      const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n      if (ref) {\n        KEY_TO_ELEMENT?.set(key, ref)\n        NODE_TO_ELEMENT.set(element, ref)\n        ELEMENT_TO_NODE.set(ref, element)\n      } else {\n        KEY_TO_ELEMENT?.delete(key)\n        NODE_TO_ELEMENT.delete(element)\n      }\n    },\n    [editor, key, element]\n  )\n  let children: React.ReactNode = useChildren({\n    decorations,\n    node: element,\n    renderElement,\n    renderChunk,\n    renderPlaceholder,\n    renderLeaf,\n    renderText,\n  })\n\n  // Attributes that the developer must mix into the element in their\n  // custom node renderer component.\n  const attributes: {\n    'data-slate-node': 'element'\n    'data-slate-void'?: true\n    'data-slate-inline'?: true\n    contentEditable?: false\n    dir?: 'rtl'\n    ref: any\n  } = {\n    'data-slate-node': 'element',\n    ref,\n  }\n\n  if (isInline) {\n    attributes['data-slate-inline'] = true\n  }\n\n  // If it's a block node with inline children, add the proper `dir` attribute\n  // for text direction.\n  if (!isInline && Editor.hasInlines(editor, element)) {\n    const text = Node.string(element)\n    const dir = getDirection(text)\n\n    if (dir === 'rtl') {\n      attributes.dir = dir\n    }\n  }\n\n  // If it's a void node, wrap the children in extra void-specific elements.\n  if (Editor.isVoid(editor, element)) {\n    attributes['data-slate-void'] = true\n\n    if (!readOnly && isInline) {\n      attributes.contentEditable = false\n    }\n\n    const Tag = isInline ? 'span' : 'div'\n    const [[text]] = Node.texts(element)\n\n    children = (\n      <Tag\n        data-slate-spacer\n        style={{\n          height: '0',\n          color: 'transparent',\n          outline: 'none',\n          position: 'absolute',\n        }}\n      >\n        <Text\n          renderPlaceholder={renderPlaceholder}\n          decorations={[]}\n          isLast={false}\n          parent={element}\n          text={text}\n        />\n      </Tag>\n    )\n\n    NODE_TO_INDEX.set(text, 0)\n    NODE_TO_PARENT.set(text, element)\n  }\n\n  return renderElement({ attributes, children, element })\n}\n\nconst MemoizedElement = React.memo(Element, (prev, next) => {\n  return (\n    prev.element === next.element &&\n    prev.renderElement === next.renderElement &&\n    prev.renderChunk === next.renderChunk &&\n    prev.renderText === next.renderText &&\n    prev.renderLeaf === next.renderLeaf &&\n    prev.renderPlaceholder === next.renderPlaceholder &&\n    isElementDecorationsEqual(prev.decorations, next.decorations)\n  )\n})\n\n/**\n * The default element renderer.\n */\n\nexport const DefaultElement = (props: RenderElementProps) => {\n  const { attributes, children, element } = props\n  const editor = useSlateStatic()\n  const Tag = editor.isInline(element) ? 'span' : 'div'\n  return (\n    <Tag {...attributes} style={{ position: 'relative' }}>\n      {children}\n    </Tag>\n  )\n}\n\nexport default MemoizedElement\n","import { Path } from 'slate'\nimport { Key } from 'slate-dom'\nimport {\n  Chunk,\n  ChunkTree,\n  ChunkLeaf,\n  ChunkDescendant,\n  ChunkAncestor,\n} from './types'\n\ntype SavedPointer =\n  | 'start'\n  | {\n      chunk: ChunkAncestor\n      node: ChunkDescendant\n    }\n\nexport interface ChunkTreeHelperOptions {\n  chunkSize: number\n  debug?: boolean\n}\n\n/**\n * Traverse and modify a chunk tree\n */\nexport class ChunkTreeHelper {\n  /**\n   * The root of the chunk tree\n   */\n  private root: ChunkTree\n\n  /**\n   * The ideal size of a chunk\n   */\n  private chunkSize: number\n\n  /**\n   * Whether debug mode is enabled\n   *\n   * If enabled, the pointer state will be checked for internal consistency\n   * after each mutating operation.\n   */\n  private debug: boolean\n\n  /**\n   * Whether the traversal has reached the end of the chunk tree\n   *\n   * When this is true, the pointerChunk and pointerIndex point to the last\n   * top-level node in the chunk tree, although pointerNode returns null.\n   */\n  private reachedEnd: boolean\n\n  /**\n   * The chunk containing the current node\n   */\n  private pointerChunk: ChunkAncestor\n\n  /**\n   * The index of the current node within pointerChunk\n   *\n   * Can be -1 to indicate that the pointer is before the start of the tree.\n   */\n  private pointerIndex: number\n\n  /**\n   * Similar to a Slate path; tracks the path of pointerChunk relative to the\n   * root.\n   *\n   * Used to move the pointer from the current chunk to the parent chunk more\n   * efficiently.\n   */\n  private pointerIndexStack: number[]\n\n  /**\n   * Indexing the current chunk's children has a slight time cost, which adds up\n   * when traversing very large trees, so the current node is cached.\n   *\n   * A value of undefined means that the current node is not cached. This\n   * property must be set to undefined whenever the pointer is moved, unless\n   * the pointer is guaranteed to point to the same node that it did previously.\n   */\n  private cachedPointerNode: ChunkDescendant | null | undefined\n\n  constructor(\n    chunkTree: ChunkTree,\n    { chunkSize, debug }: ChunkTreeHelperOptions\n  ) {\n    this.root = chunkTree\n    this.chunkSize = chunkSize\n    // istanbul ignore next\n    this.debug = debug ?? false\n    this.pointerChunk = chunkTree\n    this.pointerIndex = -1\n    this.pointerIndexStack = []\n    this.reachedEnd = false\n    this.validateState()\n  }\n\n  /**\n   * Move the pointer to the next leaf in the chunk tree\n   */\n  public readLeaf(): ChunkLeaf | null {\n    // istanbul ignore next\n    if (this.reachedEnd) return null\n\n    // Get the next sibling or aunt node\n    while (true) {\n      if (this.pointerIndex + 1 < this.pointerSiblings.length) {\n        this.pointerIndex++\n        this.cachedPointerNode = undefined\n        break\n      } else if (this.pointerChunk.type === 'root') {\n        this.reachedEnd = true\n        return null\n      } else {\n        this.exitChunk()\n      }\n    }\n\n    this.validateState()\n\n    // If the next sibling or aunt is a chunk, descend into it\n    this.enterChunkUntilLeaf(false)\n\n    return this.pointerNode as ChunkLeaf\n  }\n\n  /**\n   * Move the pointer to the previous leaf in the chunk tree\n   */\n  public returnToPreviousLeaf() {\n    // If we were at the end of the tree, descend into the end of the last\n    // chunk in the tree\n    if (this.reachedEnd) {\n      this.reachedEnd = false\n      this.enterChunkUntilLeaf(true)\n      return\n    }\n\n    // Get the previous sibling or aunt node\n    while (true) {\n      if (this.pointerIndex >= 1) {\n        this.pointerIndex--\n        this.cachedPointerNode = undefined\n        break\n      } else if (this.pointerChunk.type === 'root') {\n        this.pointerIndex = -1\n        return\n      } else {\n        this.exitChunk()\n      }\n    }\n\n    this.validateState()\n\n    // If the previous sibling or aunt is a chunk, descend into it\n    this.enterChunkUntilLeaf(true)\n  }\n\n  /**\n   * Insert leaves before the current leaf, leaving the pointer unchanged\n   */\n  public insertBefore(leaves: ChunkLeaf[]) {\n    this.returnToPreviousLeaf()\n    this.insertAfter(leaves)\n    this.readLeaf()\n  }\n\n  /**\n   * Insert leaves after the current leaf, leaving the pointer on the last\n   * inserted leaf\n   *\n   * The insertion algorithm first checks for any chunk we're currently at the\n   * end of that can receive additional leaves. Next, it tries to insert leaves\n   * at the starts of any subsequent chunks.\n   *\n   * Any remaining leaves are passed to rawInsertAfter to be chunked and\n   * inserted at the highest possible level.\n   */\n  public insertAfter(leaves: ChunkLeaf[]) {\n    // istanbul ignore next\n    if (leaves.length === 0) return\n\n    let beforeDepth = 0\n    let afterDepth = 0\n\n    // While at the end of a chunk, insert any leaves that will fit, and then\n    // exit the chunk\n    while (\n      this.pointerChunk.type === 'chunk' &&\n      this.pointerIndex === this.pointerSiblings.length - 1\n    ) {\n      const remainingCapacity = this.chunkSize - this.pointerSiblings.length\n      const toInsertCount = Math.min(remainingCapacity, leaves.length)\n\n      if (toInsertCount > 0) {\n        const leavesToInsert = leaves.splice(0, toInsertCount)\n        this.rawInsertAfter(leavesToInsert, beforeDepth)\n      }\n\n      this.exitChunk()\n      beforeDepth++\n    }\n\n    if (leaves.length === 0) return\n\n    // Save the pointer so that we can come back here after inserting leaves\n    // into the starts of subsequent blocks\n    const rawInsertPointer = this.savePointer()\n\n    // If leaves are inserted into the start of a subsequent block, then we\n    // eventually need to restore the pointer to the last such inserted leaf\n    let finalPointer: SavedPointer | null = null\n\n    // Move the pointer into the chunk containing the next leaf, if it exists\n    if (this.readLeaf()) {\n      // While at the start of a chunk, insert any leaves that will fit, and\n      // then exit the chunk\n      while (this.pointerChunk.type === 'chunk' && this.pointerIndex === 0) {\n        const remainingCapacity = this.chunkSize - this.pointerSiblings.length\n        const toInsertCount = Math.min(remainingCapacity, leaves.length)\n\n        if (toInsertCount > 0) {\n          const leavesToInsert = leaves.splice(-toInsertCount, toInsertCount)\n\n          // Insert the leaves at the start of the chunk\n          this.pointerIndex = -1\n          this.cachedPointerNode = undefined\n          this.rawInsertAfter(leavesToInsert, afterDepth)\n\n          // If this is the first batch of insertions at the start of a\n          // subsequent chunk, set the final pointer to the last inserted leaf\n          if (!finalPointer) {\n            finalPointer = this.savePointer()\n          }\n        }\n\n        this.exitChunk()\n        afterDepth++\n      }\n    }\n\n    this.restorePointer(rawInsertPointer)\n\n    // If there are leaves left to insert, insert them between the end of the\n    // previous chunk and the start of the first subsequent chunk, or wherever\n    // the pointer ended up after the first batch of insertions\n    const minDepth = Math.max(beforeDepth, afterDepth)\n    this.rawInsertAfter(leaves, minDepth)\n\n    if (finalPointer) {\n      this.restorePointer(finalPointer)\n    }\n\n    this.validateState()\n  }\n\n  /**\n   * Remove the current node and decrement the pointer, deleting any ancestor\n   * chunk that becomes empty as a result\n   */\n  public remove() {\n    this.pointerSiblings.splice(this.pointerIndex--, 1)\n    this.cachedPointerNode = undefined\n\n    if (\n      this.pointerSiblings.length === 0 &&\n      this.pointerChunk.type === 'chunk'\n    ) {\n      this.exitChunk()\n      this.remove()\n    } else {\n      this.invalidateChunk()\n    }\n\n    this.validateState()\n  }\n\n  /**\n   * Add the current chunk and all ancestor chunks to the list of modified\n   * chunks\n   */\n  public invalidateChunk() {\n    for (let c = this.pointerChunk; c.type === 'chunk'; c = c.parent) {\n      this.root.modifiedChunks.add(c)\n    }\n  }\n\n  /**\n   * Whether the pointer is at the start of the tree\n   */\n  private get atStart() {\n    return this.pointerChunk.type === 'root' && this.pointerIndex === -1\n  }\n\n  /**\n   * The siblings of the current node\n   */\n  private get pointerSiblings(): ChunkDescendant[] {\n    return this.pointerChunk.children\n  }\n\n  /**\n   * Get the current node (uncached)\n   *\n   * If the pointer is at the start or end of the document, returns null.\n   *\n   * Usually, the current node is a chunk leaf, although it can be a chunk\n   * while insertions are in progress.\n   */\n  private getPointerNode(): ChunkDescendant | null {\n    if (this.reachedEnd || this.pointerIndex === -1) {\n      return null\n    }\n\n    return this.pointerSiblings[this.pointerIndex]\n  }\n\n  /**\n   * Cached getter for the current node\n   */\n  private get pointerNode(): ChunkDescendant | null {\n    if (this.cachedPointerNode !== undefined) return this.cachedPointerNode\n    const pointerNode = this.getPointerNode()\n    this.cachedPointerNode = pointerNode\n    return pointerNode\n  }\n\n  /**\n   * Get the path of a chunk relative to the root, returning null if the chunk\n   * is not connected to the root\n   */\n  private getChunkPath(chunk: ChunkAncestor): number[] | null {\n    const path: number[] = []\n\n    for (let c = chunk; c.type === 'chunk'; c = c.parent) {\n      const index = c.parent.children.indexOf(c)\n\n      // istanbul ignore next\n      if (index === -1) {\n        return null\n      }\n\n      path.unshift(index)\n    }\n\n    return path\n  }\n\n  /**\n   * Save the current pointer to be restored later\n   */\n  private savePointer(): SavedPointer {\n    if (this.atStart) return 'start'\n\n    // istanbul ignore next\n    if (!this.pointerNode) {\n      throw new Error('Cannot save pointer when pointerNode is null')\n    }\n\n    return {\n      chunk: this.pointerChunk,\n      node: this.pointerNode,\n    }\n  }\n\n  /**\n   * Restore the pointer to a previous state\n   */\n  private restorePointer(savedPointer: SavedPointer) {\n    if (savedPointer === 'start') {\n      this.pointerChunk = this.root\n      this.pointerIndex = -1\n      this.pointerIndexStack = []\n      this.reachedEnd = false\n      this.cachedPointerNode = undefined\n      return\n    }\n\n    // Since nodes may have been inserted or removed prior to the saved\n    // pointer since it was saved, the index and index stack must be\n    // recomputed. This is slow, but this is fine since restoring a pointer is\n    // not a frequent operation.\n\n    const { chunk, node } = savedPointer\n    const index = chunk.children.indexOf(node)\n\n    // istanbul ignore next\n    if (index === -1) {\n      throw new Error(\n        'Cannot restore point because saved node is no longer in saved chunk'\n      )\n    }\n\n    const indexStack = this.getChunkPath(chunk)\n\n    // istanbul ignore next\n    if (!indexStack) {\n      throw new Error(\n        'Cannot restore point because saved chunk is no longer connected to root'\n      )\n    }\n\n    this.pointerChunk = chunk\n    this.pointerIndex = index\n    this.pointerIndexStack = indexStack\n    this.reachedEnd = false\n    this.cachedPointerNode = node\n    this.validateState()\n  }\n\n  /**\n   * Assuming the current node is a chunk, move the pointer into that chunk\n   *\n   * @param end If true, place the pointer on the last node of the chunk.\n   * Otherwise, place the pointer on the first node.\n   */\n  private enterChunk(end: boolean) {\n    // istanbul ignore next\n    if (this.pointerNode?.type !== 'chunk') {\n      throw new Error('Cannot enter non-chunk')\n    }\n\n    this.pointerIndexStack.push(this.pointerIndex)\n    this.pointerChunk = this.pointerNode\n    this.pointerIndex = end ? this.pointerSiblings.length - 1 : 0\n    this.cachedPointerNode = undefined\n    this.validateState()\n\n    // istanbul ignore next\n    if (this.pointerChunk.children.length === 0) {\n      throw new Error('Cannot enter empty chunk')\n    }\n  }\n\n  /**\n   * Assuming the current node is a chunk, move the pointer into that chunk\n   * repeatedly until the current node is a leaf\n   *\n   * @param end If true, place the pointer on the last node of the chunk.\n   * Otherwise, place the pointer on the first node.\n   */\n  private enterChunkUntilLeaf(end: boolean) {\n    while (this.pointerNode?.type === 'chunk') {\n      this.enterChunk(end)\n    }\n  }\n\n  /**\n   * Move the pointer to the parent chunk\n   */\n  private exitChunk() {\n    // istanbul ignore next\n    if (this.pointerChunk.type === 'root') {\n      throw new Error('Cannot exit root')\n    }\n\n    const previousPointerChunk = this.pointerChunk\n    this.pointerChunk = previousPointerChunk.parent\n    this.pointerIndex = this.pointerIndexStack.pop()!\n    this.cachedPointerNode = undefined\n    this.validateState()\n  }\n\n  /**\n   * Insert leaves immediately after the current node, leaving the pointer on\n   * the last inserted leaf\n   *\n   * Leaves are chunked according to the number of nodes already in the parent\n   * plus the number of nodes being inserted, or the minimum depth if larger\n   */\n  private rawInsertAfter(leaves: ChunkLeaf[], minDepth: number) {\n    if (leaves.length === 0) return\n\n    const groupIntoChunks = (\n      leaves: ChunkLeaf[],\n      parent: ChunkAncestor,\n      perChunk: number\n    ): ChunkDescendant[] => {\n      if (perChunk === 1) return leaves\n      const chunks: Chunk[] = []\n\n      for (let i = 0; i < this.chunkSize; i++) {\n        const chunkNodes = leaves.slice(i * perChunk, (i + 1) * perChunk)\n        if (chunkNodes.length === 0) break\n\n        const chunk: Chunk = {\n          type: 'chunk',\n          key: new Key(),\n          parent,\n          children: [],\n        }\n\n        chunk.children = groupIntoChunks(\n          chunkNodes,\n          chunk,\n          perChunk / this.chunkSize\n        )\n        chunks.push(chunk)\n      }\n\n      return chunks\n    }\n\n    // Determine the chunking depth based on the number of existing nodes in\n    // the chunk and the number of nodes being inserted\n    const newTotal = this.pointerSiblings.length + leaves.length\n    let depthForTotal = 0\n\n    for (let i = this.chunkSize; i < newTotal; i *= this.chunkSize) {\n      depthForTotal++\n    }\n\n    // A depth of 0 means no chunking\n    const depth = Math.max(depthForTotal, minDepth)\n    const perTopLevelChunk = Math.pow(this.chunkSize, depth)\n\n    const chunks = groupIntoChunks(leaves, this.pointerChunk, perTopLevelChunk)\n    this.pointerSiblings.splice(this.pointerIndex + 1, 0, ...chunks)\n    this.pointerIndex += chunks.length\n    this.cachedPointerNode = undefined\n    this.invalidateChunk()\n    this.validateState()\n  }\n\n  /**\n   * If debug mode is enabled, ensure that the state is internally consistent\n   */\n  // istanbul ignore next\n  private validateState() {\n    if (!this.debug) return\n\n    const validateDescendant = (node: ChunkDescendant) => {\n      if (node.type === 'chunk') {\n        const { parent, children } = node\n\n        if (!parent.children.includes(node)) {\n          throw new Error(\n            `Debug: Chunk ${node.key.id} has an incorrect parent property`\n          )\n        }\n\n        children.forEach(validateDescendant)\n      }\n    }\n\n    this.root.children.forEach(validateDescendant)\n\n    if (\n      this.cachedPointerNode !== undefined &&\n      this.cachedPointerNode !== this.getPointerNode()\n    ) {\n      throw new Error(\n        'Debug: The cached pointer is incorrect and has not been invalidated'\n      )\n    }\n\n    const actualIndexStack = this.getChunkPath(this.pointerChunk)\n\n    if (!actualIndexStack) {\n      throw new Error('Debug: The pointer chunk is not connected to the root')\n    }\n\n    if (!Path.equals(this.pointerIndexStack, actualIndexStack)) {\n      throw new Error(\n        `Debug: The cached index stack [${this.pointerIndexStack.join(\n          ', '\n        )}] does not match the path of the pointer chunk [${actualIndexStack.join(\n          ', '\n        )}]`\n      )\n    }\n  }\n}\n","import { Editor, Descendant } from 'slate'\nimport { Key } from 'slate-dom'\nimport { ChunkLeaf } from './types'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * Traverse an array of children, providing helpers useful for reconciling the\n * children array with a chunk tree\n */\nexport class ChildrenHelper {\n  private editor: Editor\n  private children: Descendant[]\n\n  /**\n   * Sparse array of Slate node keys, each index corresponding to an index in\n   * the children array\n   *\n   * Fetching the key for a Slate node is expensive, so we cache them here.\n   */\n  private cachedKeys: Array<Key | undefined>\n\n  /**\n   * The index of the next node to be read in the children array\n   */\n  public pointerIndex: number\n\n  constructor(editor: Editor, children: Descendant[]) {\n    this.editor = editor\n    this.children = children\n    this.cachedKeys = new Array(children.length)\n    this.pointerIndex = 0\n  }\n\n  /**\n   * Read a given number of nodes, advancing the pointer by that amount\n   */\n  public read(n: number): Descendant[] {\n    // PERF: If only one child was requested (the most common case), use array\n    // indexing instead of slice\n    if (n === 1) {\n      return [this.children[this.pointerIndex++]]\n    }\n\n    const slicedChildren = this.remaining(n)\n    this.pointerIndex += n\n\n    return slicedChildren\n  }\n\n  /**\n   * Get the remaining children without advancing the pointer\n   *\n   * @param [maxChildren] Limit the number of children returned.\n   */\n  public remaining(maxChildren?: number): Descendant[] {\n    if (maxChildren === undefined) {\n      return this.children.slice(this.pointerIndex)\n    }\n\n    return this.children.slice(\n      this.pointerIndex,\n      this.pointerIndex + maxChildren\n    )\n  }\n\n  /**\n   * Whether all children have been read\n   */\n  public get reachedEnd() {\n    return this.pointerIndex >= this.children.length\n  }\n\n  /**\n   * Determine whether a node with a given key appears in the unread part of the\n   * children array, and return its index relative to the current pointer if so\n   *\n   * Searching for the node object itself using indexOf is most efficient, but\n   * will fail to locate nodes that have been modified. In this case, nodes\n   * should be identified by their keys instead.\n   *\n   * Searching an array of keys using indexOf is very inefficient since fetching\n   * the keys for all children in advance is very slow. Insead, if the node\n   * search fails to return a value, fetch the keys of each remaining child one\n   * by one and compare it to the known key.\n   */\n  public lookAhead(node: Descendant, key: Key) {\n    const elementResult = this.children.indexOf(node, this.pointerIndex)\n    if (elementResult > -1) return elementResult - this.pointerIndex\n\n    for (let i = this.pointerIndex; i < this.children.length; i++) {\n      const candidateNode = this.children[i]\n      const candidateKey = this.findKey(candidateNode, i)\n      if (candidateKey === key) return i - this.pointerIndex\n    }\n\n    return -1\n  }\n\n  /**\n   * Convert an array of Slate nodes to an array of chunk leaves, each\n   * containing the node and its key\n   */\n  public toChunkLeaves(nodes: Descendant[], startIndex: number): ChunkLeaf[] {\n    return nodes.map((node, i) => ({\n      type: 'leaf',\n      node,\n      key: this.findKey(node, startIndex + i),\n      index: startIndex + i,\n    }))\n  }\n\n  /**\n   * Get the key for a Slate node, cached using the node's index\n   */\n  private findKey(node: Descendant, index: number): Key {\n    const cachedKey = this.cachedKeys[index]\n    if (cachedKey) return cachedKey\n    const key = ReactEditor.findKey(this.editor, node)\n    this.cachedKeys[index] = key\n    return key\n  }\n}\n","import { Editor, Descendant } from 'slate'\nimport { ChunkTree, ChunkLeaf } from './types'\nimport { ChunkTreeHelper, ChunkTreeHelperOptions } from './chunk-tree-helper'\nimport { ChildrenHelper } from './children-helper'\n\nexport interface ReconcileOptions extends ChunkTreeHelperOptions {\n  chunkTree: ChunkTree\n  children: Descendant[]\n  chunkSize: number\n  rerenderChildren?: number[]\n  onInsert?: (node: Descendant, index: number) => void\n  onUpdate?: (node: Descendant, index: number) => void\n  onIndexChange?: (node: Descendant, index: number) => void\n  debug?: boolean\n}\n\n/**\n * Update the chunk tree to match the children array, inserting, removing and\n * updating differing nodes\n */\nexport const reconcileChildren = (\n  editor: Editor,\n  {\n    chunkTree,\n    children,\n    chunkSize,\n    rerenderChildren = [],\n    onInsert,\n    onUpdate,\n    onIndexChange,\n    debug,\n  }: ReconcileOptions\n) => {\n  chunkTree.modifiedChunks.clear()\n\n  const chunkTreeHelper = new ChunkTreeHelper(chunkTree, { chunkSize, debug })\n  const childrenHelper = new ChildrenHelper(editor, children)\n\n  let treeLeaf: ChunkLeaf | null\n\n  // Read leaves from the tree one by one, each one representing a single Slate\n  // node. Each leaf from the tree is compared to the current node in the\n  // children array to determine whether nodes have been inserted, removed or\n  // updated.\n  while ((treeLeaf = chunkTreeHelper.readLeaf())) {\n    // Check where the tree node appears in the children array. In the most\n    // common case (where no insertions or removals have occurred), this will be\n    // 0. If the node has been removed, this will be -1. If new nodes have been\n    // inserted before the node, or if the node has been moved to a later\n    // position in the same children array, this will be a positive number.\n    const lookAhead = childrenHelper.lookAhead(treeLeaf.node, treeLeaf.key)\n\n    // If the node was moved, we want to remove it and insert it later, rather\n    // then re-inserting all intermediate nodes before it.\n    const wasMoved = lookAhead > 0 && chunkTree.movedNodeKeys.has(treeLeaf.key)\n\n    // If the tree leaf was moved or removed, remove it\n    if (lookAhead === -1 || wasMoved) {\n      chunkTreeHelper.remove()\n      continue\n    }\n\n    // Get the matching Slate node and any nodes that may have been inserted\n    // prior to it. Insert these into the chunk tree.\n    const insertedChildrenStartIndex = childrenHelper.pointerIndex\n    const insertedChildren = childrenHelper.read(lookAhead + 1)\n    const matchingChild = insertedChildren.pop()!\n\n    if (insertedChildren.length) {\n      const leavesToInsert = childrenHelper.toChunkLeaves(\n        insertedChildren,\n        insertedChildrenStartIndex\n      )\n\n      chunkTreeHelper.insertBefore(leavesToInsert)\n\n      insertedChildren.forEach((node, relativeIndex) => {\n        onInsert?.(node, insertedChildrenStartIndex + relativeIndex)\n      })\n    }\n\n    const matchingChildIndex = childrenHelper.pointerIndex - 1\n\n    // Make sure the chunk tree contains the most recent version of the Slate\n    // node\n    if (treeLeaf.node !== matchingChild) {\n      treeLeaf.node = matchingChild\n      chunkTreeHelper.invalidateChunk()\n      onUpdate?.(matchingChild, matchingChildIndex)\n    }\n\n    // Update the index if it has changed\n    if (treeLeaf.index !== matchingChildIndex) {\n      treeLeaf.index = matchingChildIndex\n      onIndexChange?.(matchingChild, matchingChildIndex)\n    }\n\n    // Manually invalidate chunks containing specific children that we want to\n    // re-render\n    if (rerenderChildren.includes(matchingChildIndex)) {\n      chunkTreeHelper.invalidateChunk()\n    }\n  }\n\n  // If there are still Slate nodes remaining from the children array that were\n  // not matched to nodes in the tree, insert them at the end of the tree\n  if (!childrenHelper.reachedEnd) {\n    const remainingChildren = childrenHelper.remaining()\n\n    const leavesToInsert = childrenHelper.toChunkLeaves(\n      remainingChildren,\n      childrenHelper.pointerIndex\n    )\n\n    // Move the pointer back to the final leaf in the tree, or the start of the\n    // tree if the tree is currently empty\n    chunkTreeHelper.returnToPreviousLeaf()\n\n    chunkTreeHelper.insertAfter(leavesToInsert)\n\n    remainingChildren.forEach((node, relativeIndex) => {\n      onInsert?.(node, childrenHelper.pointerIndex + relativeIndex)\n    })\n  }\n\n  chunkTree.movedNodeKeys.clear()\n}\n","import { Ancestor, Editor } from 'slate'\nimport { Key } from 'slate-dom'\nimport { ChunkTree } from './types'\nimport { ReconcileOptions, reconcileChildren } from './reconcile-children'\nimport { ReactEditor } from '../plugin/react-editor'\n\nexport const KEY_TO_CHUNK_TREE = new WeakMap<Key, ChunkTree>()\n\n/**\n * Get or create the chunk tree for a Slate node\n *\n * If the reconcile option is provided, the chunk tree will be updated to\n * match the current children of the node. The children are chunked\n * automatically using the given chunk size.\n */\nexport const getChunkTreeForNode = (\n  editor: Editor,\n  node: Ancestor,\n  // istanbul ignore next\n  options: {\n    reconcile?: Omit<ReconcileOptions, 'chunkTree' | 'children'> | false\n  } = {}\n) => {\n  const key = ReactEditor.findKey(editor, node)\n  let chunkTree = KEY_TO_CHUNK_TREE.get(key)\n\n  if (!chunkTree) {\n    chunkTree = {\n      type: 'root',\n      movedNodeKeys: new Set(),\n      modifiedChunks: new Set(),\n      children: [],\n    }\n\n    KEY_TO_CHUNK_TREE.set(key, chunkTree)\n  }\n\n  if (options.reconcile) {\n    reconcileChildren(editor, {\n      chunkTree,\n      children: node.children,\n      ...options.reconcile,\n    })\n  }\n\n  return chunkTree\n}\n","import React, { Fragment } from 'react'\nimport { Element } from 'slate'\nimport { Key } from 'slate-dom'\nimport { RenderChunkProps } from './editable'\nimport {\n  Chunk as TChunk,\n  ChunkAncestor as TChunkAncestor,\n  ChunkTree as TChunkTree,\n} from '../chunking'\n\nconst defaultRenderChunk = ({ children }: RenderChunkProps) => children\n\nconst ChunkAncestor = <C extends TChunkAncestor>(props: {\n  root: TChunkTree\n  ancestor: C\n  renderElement: (node: Element, index: number, key: Key) => JSX.Element\n  renderChunk?: (props: RenderChunkProps) => JSX.Element\n}) => {\n  const {\n    root,\n    ancestor,\n    renderElement,\n    renderChunk = defaultRenderChunk,\n  } = props\n\n  return ancestor.children.map(chunkNode => {\n    if (chunkNode.type === 'chunk') {\n      const key = chunkNode.key.id\n\n      const renderedChunk = renderChunk({\n        highest: ancestor === root,\n        lowest: chunkNode.children.some(c => c.type === 'leaf'),\n        attributes: { 'data-slate-chunk': true },\n        children: (\n          <MemoizedChunk\n            root={root}\n            ancestor={chunkNode}\n            renderElement={renderElement}\n            renderChunk={renderChunk}\n          />\n        ),\n      })\n\n      return <Fragment key={key}>{renderedChunk}</Fragment>\n    }\n\n    // Only blocks containing no inlines are chunked\n    const element = chunkNode.node as Element\n\n    return renderElement(element, chunkNode.index, chunkNode.key)\n  })\n}\n\nconst ChunkTree = ChunkAncestor<TChunkTree>\n\nconst MemoizedChunk = React.memo(\n  ChunkAncestor<TChunk>,\n  (prev, next) =>\n    prev.root === next.root &&\n    prev.renderElement === next.renderElement &&\n    prev.renderChunk === next.renderChunk &&\n    !next.root.modifiedChunks.has(next.ancestor)\n)\n\nexport default ChunkTree\n","import { createContext, useContext } from 'react'\nimport { Element } from 'slate'\n\nexport const ElementContext = createContext<Element | null>(null)\n\n/**\n * Get the current element.\n */\n\nexport const useElement = (): Element => {\n  const context = useContext(ElementContext)\n\n  if (!context) {\n    throw new Error(\n      'The `useElement` hook must be used inside `renderElement`.'\n    )\n  }\n\n  return context\n}\n\n/**\n * Get the current element, or return null if not inside `renderElement`.\n */\nexport const useElementIf = () => useContext(ElementContext)\n","import React, { useCallback, useRef } from 'react'\nimport { Ancestor, Editor, Element, DecoratedRange, Text } from 'slate'\nimport { Key, isElementDecorationsEqual } from 'slate-dom'\nimport {\n  RenderChunkProps,\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n  RenderTextProps,\n} from '../components/editable'\n\nimport ElementComponent from '../components/element'\nimport TextComponent from '../components/text'\nimport { ReactEditor } from '../plugin/react-editor'\nimport {\n  IS_NODE_MAP_DIRTY,\n  NODE_TO_INDEX,\n  NODE_TO_PARENT,\n  splitDecorationsByChild,\n} from 'slate-dom'\nimport { useSlateStatic } from './use-slate-static'\nimport { getChunkTreeForNode } from '../chunking'\nimport ChunkTree from '../components/chunk-tree'\nimport { ElementContext } from './use-element'\n\n/**\n * Children.\n */\n\nconst useChildren = (props: {\n  decorations: DecoratedRange[]\n  node: Ancestor\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderChunk?: (props: RenderChunkProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderText?: (props: RenderTextProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n}) => {\n  const {\n    decorations,\n    node,\n    renderElement,\n    renderChunk,\n    renderPlaceholder,\n    renderText,\n    renderLeaf,\n  } = props\n  const editor = useSlateStatic()\n  IS_NODE_MAP_DIRTY.set(editor as ReactEditor, false)\n\n  const isEditor = Editor.isEditor(node)\n  const isBlock = !isEditor && Element.isElement(node) && !editor.isInline(node)\n  const isLeafBlock = isBlock && Editor.hasInlines(editor, node)\n  const chunkSize = isLeafBlock ? null : editor.getChunkSize(node)\n  const chunking = !!chunkSize\n\n  const { decorationsByChild, childrenToRedecorate } = useDecorationsByChild(\n    editor,\n    node,\n    decorations\n  )\n\n  // Update the index and parent of each child.\n  // PERF: If chunking is enabled, this is done while traversing the chunk tree\n  // instead to eliminate unnecessary weak map operations.\n  if (!chunking) {\n    node.children.forEach((n, i) => {\n      NODE_TO_INDEX.set(n, i)\n      NODE_TO_PARENT.set(n, node)\n    })\n  }\n\n  const renderElementComponent = useCallback(\n    (n: Element, i: number, cachedKey?: Key) => {\n      const key = cachedKey ?? ReactEditor.findKey(editor, n)\n\n      return (\n        <ElementContext.Provider key={`provider-${key.id}`} value={n}>\n          <ElementComponent\n            decorations={decorationsByChild[i]}\n            element={n}\n            key={key.id}\n            renderElement={renderElement}\n            renderChunk={renderChunk}\n            renderPlaceholder={renderPlaceholder}\n            renderLeaf={renderLeaf}\n            renderText={renderText}\n          />\n        </ElementContext.Provider>\n      )\n    },\n    [\n      editor,\n      decorationsByChild,\n      renderElement,\n      renderChunk,\n      renderPlaceholder,\n      renderLeaf,\n      renderText,\n    ]\n  )\n\n  const renderTextComponent = (n: Text, i: number) => {\n    const key = ReactEditor.findKey(editor, n)\n\n    return (\n      <TextComponent\n        decorations={decorationsByChild[i]}\n        key={key.id}\n        isLast={i === node.children.length - 1}\n        parent={node}\n        renderPlaceholder={renderPlaceholder}\n        renderLeaf={renderLeaf}\n        renderText={renderText}\n        text={n}\n      />\n    )\n  }\n\n  if (!chunking) {\n    return node.children.map((n, i) =>\n      Text.isText(n) ? renderTextComponent(n, i) : renderElementComponent(n, i)\n    )\n  }\n\n  const chunkTree = getChunkTreeForNode(editor, node, {\n    reconcile: {\n      chunkSize,\n      rerenderChildren: childrenToRedecorate,\n      onInsert: (n, i) => {\n        NODE_TO_INDEX.set(n, i)\n        NODE_TO_PARENT.set(n, node)\n      },\n      onUpdate: (n, i) => {\n        NODE_TO_INDEX.set(n, i)\n        NODE_TO_PARENT.set(n, node)\n      },\n      onIndexChange: (n, i) => {\n        NODE_TO_INDEX.set(n, i)\n      },\n    },\n  })\n\n  return (\n    <ChunkTree\n      root={chunkTree}\n      ancestor={chunkTree}\n      renderElement={renderElementComponent}\n      renderChunk={renderChunk}\n    />\n  )\n}\n\nconst useDecorationsByChild = (\n  editor: Editor,\n  node: Ancestor,\n  decorations: DecoratedRange[]\n) => {\n  const decorationsByChild = splitDecorationsByChild(editor, node, decorations)\n\n  // The value we return is a mutable array of `DecoratedRange[]` arrays. This\n  // lets us avoid passing an immutable array of decorations for each child into\n  // `ChunkTree` using props. Each `DecoratedRange[]` is only updated if the\n  // decorations at that index have changed, which speeds up the equality check\n  // for the `decorations` prop in the memoized `Element` and `Text` components.\n  const mutableDecorationsByChild = useRef(decorationsByChild).current\n\n  // Track the list of child indices whose decorations have changed, so that we\n  // can tell the chunk tree to re-render these children.\n  const childrenToRedecorate: number[] = []\n\n  // Resize the mutable array to match the latest result\n  mutableDecorationsByChild.length = decorationsByChild.length\n\n  for (let i = 0; i < decorationsByChild.length; i++) {\n    const decorations = decorationsByChild[i]\n\n    const previousDecorations: DecoratedRange[] | null =\n      mutableDecorationsByChild[i] ?? null\n\n    if (!isElementDecorationsEqual(previousDecorations, decorations)) {\n      mutableDecorationsByChild[i] = decorations\n      childrenToRedecorate.push(i)\n    }\n  }\n\n  return { decorationsByChild: mutableDecorationsByChild, childrenToRedecorate }\n}\n\nexport default useChildren\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `readOnly` state of the editor.\n */\n\nexport const ReadOnlyContext = createContext(false)\n\n/**\n * Get the current `readOnly` state of the editor.\n */\n\nexport const useReadOnly = (): boolean => {\n  return useContext(ReadOnlyContext)\n}\n","import { createContext, useCallback, useContext, useMemo, useRef } from 'react'\nimport { Editor } from 'slate'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\nimport { useSlateStatic } from './use-slate-static'\nimport { useGenericSelector } from './use-generic-selector'\n\ntype Callback = () => void\n\nexport interface SlateSelectorOptions {\n  /**\n   * If true, defer calling the selector function until after `Editable` has\n   * finished rendering. This ensures that `ReactEditor.findPath` won't return\n   * an outdated path if called inside the selector.\n   */\n  deferred?: boolean\n}\n\n/**\n * A React context for sharing the editor selector context in a way to control\n * re-renders.\n */\n\nexport const SlateSelectorContext = createContext<{\n  addEventListener: (\n    callback: Callback,\n    options?: SlateSelectorOptions\n  ) => () => void\n  flushDeferred: () => void\n}>({} as any)\n\nconst refEquality = (a: any, b: any) => a === b\n\n/**\n * Use redux style selectors to prevent re-rendering on every keystroke.\n *\n * Bear in mind re-rendering can only prevented if the returned value is a value\n * type or for reference types (e.g. objects and arrays) add a custom equality\n * function.\n *\n * If `selector` is memoized using `useCallback`, then it will only be called\n * when it or the editor state changes. Otherwise, `selector` will be called\n * every time the component renders.\n *\n * @example\n * const isSelectionActive = useSlateSelector(editor => Boolean(editor.selection))\n */\n\nexport function useSlateSelector<T>(\n  selector: (editor: Editor) => T,\n  equalityFn: (a: T | null, b: T) => boolean = refEquality,\n  { deferred }: SlateSelectorOptions = {}\n): T {\n  const context = useContext(SlateSelectorContext)\n  if (!context) {\n    throw new Error(\n      `The \\`useSlateSelector\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n  const { addEventListener } = context\n\n  const editor = useSlateStatic()\n  const genericSelector = useCallback(\n    () => selector(editor),\n    [editor, selector]\n  )\n  const [selectedState, update] = useGenericSelector(\n    genericSelector,\n    equalityFn\n  )\n\n  useIsomorphicLayoutEffect(() => {\n    const unsubscribe = addEventListener(update, { deferred })\n    update()\n    return unsubscribe\n  }, [addEventListener, update, deferred])\n\n  return selectedState\n}\n\n/**\n * Create selector context with editor updating on every editor change\n */\nexport function useSelectorContext() {\n  const eventListeners = useRef(new Set<Callback>())\n  const deferredEventListeners = useRef(new Set<Callback>())\n\n  const onChange = useCallback(() => {\n    eventListeners.current.forEach(listener => listener())\n  }, [])\n\n  const flushDeferred = useCallback(() => {\n    deferredEventListeners.current.forEach(listener => listener())\n    deferredEventListeners.current.clear()\n  }, [])\n\n  const addEventListener = useCallback(\n    (\n      callbackProp: Callback,\n      { deferred = false }: SlateSelectorOptions = {}\n    ) => {\n      const callback = deferred\n        ? () => deferredEventListeners.current.add(callbackProp)\n        : callbackProp\n\n      eventListeners.current.add(callback)\n\n      return () => {\n        eventListeners.current.delete(callback)\n      }\n    },\n    []\n  )\n\n  const selectorContext = useMemo(\n    () => ({\n      addEventListener,\n      flushDeferred,\n    }),\n    [addEventListener, flushDeferred]\n  )\n\n  return { selectorContext, onChange }\n}\n\nexport function useFlushDeferredSelectorsOnRender() {\n  const { flushDeferred } = useContext(SlateSelectorContext)\n  useIsomorphicLayoutEffect(flushDeferred)\n}\n","import { MutableRefObject, useContext, useMemo, useReducer } from 'react'\nimport { Editor } from 'slate'\nimport { SlateSelectorContext } from './use-slate-selector'\nimport { useSlateStatic } from './use-slate-static'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\n\n/**\n * Get the current editor object and re-render whenever it changes.\n */\n\nexport const useSlate = (): Editor => {\n  const { addEventListener } = useContext(SlateSelectorContext)\n  const [, forceRender] = useReducer(s => s + 1, 0)\n\n  if (!addEventListener) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  useIsomorphicLayoutEffect(\n    () => addEventListener(forceRender),\n    [addEventListener]\n  )\n\n  return useSlateStatic()\n}\n\nconst EDITOR_TO_V = new WeakMap<Editor, MutableRefObject<number>>()\n\nconst getEditorVersionRef = (editor: Editor): MutableRefObject<number> => {\n  let v = EDITOR_TO_V.get(editor)\n\n  if (v) {\n    return v\n  }\n\n  v = { current: 0 }\n  EDITOR_TO_V.set(editor, v)\n\n  // Register the `onChange` handler exactly once per editor\n  const { onChange } = editor\n\n  editor.onChange = options => {\n    v!.current++\n    onChange(options)\n  }\n\n  return v\n}\n\n/**\n * Get the current editor object and its version, which increments on every\n * change.\n *\n * @deprecated The `v` counter is no longer used except for this hook, and may\n * be removed in a future version.\n */\n\nexport const useSlateWithV = (): { editor: Editor; v: number } => {\n  const editor = useSlate()\n  const vRef = useMemo(() => getEditorVersionRef(editor), [editor])\n  return { editor, v: vRef.current }\n}\n","import { useCallback, useEffect, useRef } from 'react'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { useSlateStatic } from './use-slate-static'\n\nexport function useTrackUserInput() {\n  const editor = useSlateStatic()\n\n  const receivedUserInput = useRef<boolean>(false)\n  const animationFrameIdRef = useRef<number>(0)\n\n  const onUserInput = useCallback(() => {\n    if (receivedUserInput.current) {\n      return\n    }\n\n    receivedUserInput.current = true\n\n    const window = ReactEditor.getWindow(editor)\n    window.cancelAnimationFrame(animationFrameIdRef.current)\n\n    animationFrameIdRef.current = window.requestAnimationFrame(() => {\n      receivedUserInput.current = false\n    })\n  }, [editor])\n\n  useEffect(() => () => cancelAnimationFrame(animationFrameIdRef.current), [])\n\n  return {\n    receivedUserInput,\n    onUserInput,\n  }\n}\n","import { RefObject } from 'react'\nimport { ReactEditor } from '../../plugin/react-editor'\nimport { isTrackedMutation } from 'slate-dom'\n\nexport type RestoreDOMManager = {\n  registerMutations: (mutations: MutationRecord[]) => void\n  restoreDOM: () => void\n  clear: () => void\n}\n\nexport const createRestoreDomManager = (\n  editor: ReactEditor,\n  receivedUserInput: RefObject<boolean>\n): RestoreDOMManager => {\n  let bufferedMutations: MutationRecord[] = []\n\n  const clear = () => {\n    bufferedMutations = []\n  }\n\n  const registerMutations = (mutations: MutationRecord[]) => {\n    if (!receivedUserInput.current) {\n      return\n    }\n\n    const trackedMutations = mutations.filter(mutation =>\n      isTrackedMutation(editor, mutation, mutations)\n    )\n\n    bufferedMutations.push(...trackedMutations)\n  }\n\n  function restoreDOM() {\n    if (bufferedMutations.length > 0) {\n      bufferedMutations.reverse().forEach(mutation => {\n        if (mutation.type === 'characterData') {\n          // We don't want to restore the DOM for characterData mutations\n          // because this interrupts the composition.\n          return\n        }\n\n        mutation.removedNodes.forEach(node => {\n          mutation.target.insertBefore(node, mutation.nextSibling)\n        })\n\n        mutation.addedNodes.forEach(node => {\n          mutation.target.removeChild(node)\n        })\n      })\n\n      // Clear buffered mutations to ensure we don't undo them twice\n      clear()\n    }\n  }\n\n  return {\n    registerMutations,\n    restoreDOM,\n    clear,\n  }\n}\n","import React, {\n  Component,\n  ComponentType,\n  ContextType,\n  ReactNode,\n  RefObject,\n} from 'react'\nimport { EditorContext } from '../../hooks/use-slate-static'\nimport { IS_ANDROID } from 'slate-dom'\nimport {\n  createRestoreDomManager,\n  RestoreDOMManager,\n} from './restore-dom-manager'\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n}\n\ntype RestoreDOMProps = {\n  children?: ReactNode\n  receivedUserInput: RefObject<boolean>\n  node: RefObject<HTMLDivElement>\n}\n\n// We have to use a class component here since we rely on `getSnapshotBeforeUpdate` which has no FC equivalent\n// to run code synchronously immediately before react commits the component update to the DOM.\nclass RestoreDOMComponent extends Component<RestoreDOMProps> {\n  static contextType = EditorContext\n  context: ContextType<typeof EditorContext> = null\n\n  private manager: RestoreDOMManager | null = null\n  private mutationObserver: MutationObserver | null = null\n\n  observe() {\n    const { node } = this.props\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    this.mutationObserver?.observe(node.current, MUTATION_OBSERVER_CONFIG)\n  }\n\n  componentDidMount() {\n    const { receivedUserInput } = this.props\n    const editor = this.context!\n\n    this.manager = createRestoreDomManager(editor, receivedUserInput)\n    this.mutationObserver = new MutationObserver(this.manager.registerMutations)\n\n    this.observe()\n  }\n\n  getSnapshotBeforeUpdate() {\n    const pendingMutations = this.mutationObserver?.takeRecords()\n    if (pendingMutations?.length) {\n      this.manager?.registerMutations(pendingMutations)\n    }\n\n    this.mutationObserver?.disconnect()\n    this.manager?.restoreDOM()\n\n    return null\n  }\n\n  componentDidUpdate() {\n    this.manager?.clear()\n    this.observe()\n  }\n\n  componentWillUnmount() {\n    this.mutationObserver?.disconnect()\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport const RestoreDOM: ComponentType<RestoreDOMProps> = IS_ANDROID\n  ? RestoreDOMComponent\n  : ({ children }) => <>{children}</>\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `composing` state of the editor.\n */\n\nexport const ComposingContext = createContext(false)\n\n/**\n * Get the current `composing` state of the editor.\n */\n\nexport const useComposing = (): boolean => {\n  return useContext(ComposingContext)\n}\n","import getDirection from 'direction'\nimport debounce from 'lodash/debounce'\nimport throttle from 'lodash/throttle'\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  forwardRef,\n  ForwardedRef,\n} from 'react'\nimport { JSX } from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {\n  Editor,\n  Element,\n  Node,\n  NodeEntry,\n  Path,\n  Range,\n  Text,\n  Transforms,\n  DecoratedRange,\n  LeafPosition,\n} from 'slate'\nimport { useAndroidInputManager } from '../hooks/android-input-manager/use-android-input-manager'\nimport useChildren from '../hooks/use-children'\nimport { DecorateContext, useDecorateContext } from '../hooks/use-decorations'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { ReadOnlyContext } from '../hooks/use-read-only'\nimport { useSlate } from '../hooks/use-slate'\nimport { useTrackUserInput } from '../hooks/use-track-user-input'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { TRIPLE_CLICK } from 'slate-dom'\nimport {\n  DOMElement,\n  DOMRange,\n  DOMText,\n  getActiveElement,\n  getDefaultView,\n  getSelection,\n  isDOMElement,\n  isDOMNode,\n  isPlainTextOnlyPaste,\n} from 'slate-dom'\nimport {\n  CAN_USE_DOM,\n  HAS_BEFORE_INPUT_SUPPORT,\n  IS_ANDROID,\n  IS_CHROME,\n  IS_FIREFOX,\n  IS_FIREFOX_LEGACY,\n  IS_IOS,\n  IS_WEBKIT,\n  IS_UC_MOBILE,\n  IS_WECHATBROWSER,\n} from 'slate-dom'\nimport { Hotkeys } from 'slate-dom'\nimport {\n  IS_NODE_MAP_DIRTY,\n  EDITOR_TO_ELEMENT,\n  EDITOR_TO_FORCE_RENDER,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_USER_MARKS,\n  EDITOR_TO_USER_SELECTION,\n  EDITOR_TO_WINDOW,\n  ELEMENT_TO_NODE,\n  IS_COMPOSING,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  MARK_PLACEHOLDER_SYMBOL,\n  NODE_TO_ELEMENT,\n  PLACEHOLDER_SYMBOL,\n} from 'slate-dom'\nimport { RestoreDOM } from './restore-dom/restore-dom'\nimport { AndroidInputManager } from '../hooks/android-input-manager/android-input-manager'\nimport { ComposingContext } from '../hooks/use-composing'\nimport { useFlushDeferredSelectorsOnRender } from '../hooks/use-slate-selector'\n\ntype DeferredOperation = () => void\n\nconst Children = (props: Parameters<typeof useChildren>[0]) => (\n  <React.Fragment>{useChildren(props)}</React.Fragment>\n)\n\n/**\n * `RenderElementProps` are passed to the `renderElement` handler.\n */\n\nexport interface RenderElementProps {\n  children: any\n  element: Element\n  attributes: {\n    'data-slate-node': 'element'\n    'data-slate-inline'?: true\n    'data-slate-void'?: true\n    dir?: 'rtl'\n    ref: any\n  }\n}\n\n/**\n * `RenderChunkProps` are passed to the `renderChunk` handler\n */\nexport interface RenderChunkProps {\n  highest: boolean\n  lowest: boolean\n  children: any\n  attributes: {\n    'data-slate-chunk': true\n  }\n}\n\n/**\n * `RenderLeafProps` are passed to the `renderLeaf` handler.\n */\n\nexport interface RenderLeafProps {\n  children: any\n  /**\n   * The leaf node with any applied decorations.\n   * If no decorations are applied, it will be identical to the `text` property.\n   */\n  leaf: Text\n  text: Text\n  attributes: {\n    'data-slate-leaf': true\n  }\n  /**\n   * The position of the leaf within the Text node, only present when the text node is split by decorations.\n   */\n  leafPosition?: LeafPosition\n}\n\n/**\n * `RenderTextProps` are passed to the `renderText` handler.\n */\nexport interface RenderTextProps {\n  text: Text\n  children: any\n  attributes: {\n    'data-slate-node': 'text'\n    ref: any\n  }\n}\n\n/**\n * `EditableProps` are passed to the `<Editable>` component.\n */\n\nexport type EditableProps = {\n  decorate?: (entry: NodeEntry) => DecoratedRange[]\n  onDOMBeforeInput?: (event: InputEvent) => void\n  placeholder?: string\n  readOnly?: boolean\n  role?: string\n  style?: React.CSSProperties\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderChunk?: (props: RenderChunkProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  renderText?: (props: RenderTextProps) => JSX.Element\n  renderPlaceholder?: (props: RenderPlaceholderProps) => JSX.Element\n  scrollSelectionIntoView?: (editor: ReactEditor, domRange: DOMRange) => void\n  as?: React.ElementType\n  disableDefaultStyles?: boolean\n} & React.TextareaHTMLAttributes<HTMLDivElement>\n\n/**\n * Editable.\n */\n\nexport const Editable = forwardRef(\n  (props: EditableProps, forwardedRef: ForwardedRef<HTMLDivElement>) => {\n    const defaultRenderPlaceholder = useCallback(\n      (props: RenderPlaceholderProps) => <DefaultPlaceholder {...props} />,\n      []\n    )\n    const {\n      autoFocus,\n      decorate = defaultDecorate,\n      onDOMBeforeInput: propsOnDOMBeforeInput,\n      placeholder,\n      readOnly = false,\n      renderElement,\n      renderChunk,\n      renderLeaf,\n      renderText,\n      renderPlaceholder = defaultRenderPlaceholder,\n      scrollSelectionIntoView = defaultScrollSelectionIntoView,\n      style: userStyle = {},\n      as: Component = 'div',\n      disableDefaultStyles = false,\n      ...attributes\n    } = props\n    const editor = useSlate()\n    // Rerender editor when composition status changed\n    const [isComposing, setIsComposing] = useState(false)\n    const ref = useRef<HTMLDivElement | null>(null)\n    const deferredOperations = useRef<DeferredOperation[]>([])\n    const [placeholderHeight, setPlaceholderHeight] = useState<\n      number | undefined\n    >()\n    const processing = useRef(false)\n\n    const { onUserInput, receivedUserInput } = useTrackUserInput()\n\n    const [, forceRender] = useReducer(s => s + 1, 0)\n    EDITOR_TO_FORCE_RENDER.set(editor, forceRender)\n\n    // Update internal state on each render.\n    IS_READ_ONLY.set(editor, readOnly)\n\n    // Keep track of some state for the event handler logic.\n    const state = useMemo(\n      () => ({\n        isDraggingInternally: false,\n        isUpdatingSelection: false,\n        latestElement: null as DOMElement | null,\n        hasMarkPlaceholder: false,\n      }),\n      []\n    )\n\n    // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n    // needs to be manually focused.\n    //\n    // If this stops working in Firefox, make sure nothing is causing this\n    // component to re-render during the initial mount. If the DOM selection is\n    // set by `useIsomorphicLayoutEffect` before `onDOMSelectionChange` updates\n    // `editor.selection`, the DOM selection can be removed accidentally.\n    useEffect(() => {\n      if (ref.current && autoFocus) {\n        ref.current.focus()\n      }\n    }, [autoFocus])\n\n    /**\n     * The AndroidInputManager object has a cyclical dependency on onDOMSelectionChange\n     *\n     * It is defined as a reference to simplify hook dependencies and clarify that\n     * it needs to be initialized.\n     */\n    const androidInputManagerRef = useRef<\n      AndroidInputManager | null | undefined\n    >()\n\n    // Listen on the native `selectionchange` event to be able to update any time\n    // the selection changes. This is required because React's `onSelect` is leaky\n    // and non-standard so it doesn't fire until after a selection has been\n    // released. This causes issues in situations where another change happens\n    // while a selection is being dragged.\n    const onDOMSelectionChange = useMemo(\n      () =>\n        throttle(() => {\n          if (IS_NODE_MAP_DIRTY.get(editor)) {\n            onDOMSelectionChange()\n            return\n          }\n\n          const el = ReactEditor.toDOMNode(editor, editor)\n          const root = el.getRootNode()\n\n          if (!processing.current && IS_WEBKIT && root instanceof ShadowRoot) {\n            processing.current = true\n\n            const active = getActiveElement()\n\n            if (active) {\n              document.execCommand('indent')\n            } else {\n              Transforms.deselect(editor)\n            }\n\n            processing.current = false\n            return\n          }\n\n          const androidInputManager = androidInputManagerRef.current\n          if (\n            (IS_ANDROID || !ReactEditor.isComposing(editor)) &&\n            (!state.isUpdatingSelection || androidInputManager?.isFlushing()) &&\n            !state.isDraggingInternally\n          ) {\n            const root = ReactEditor.findDocumentOrShadowRoot(editor)\n            const { activeElement } = root\n            const el = ReactEditor.toDOMNode(editor, editor)\n            const domSelection = getSelection(root)\n\n            if (activeElement === el) {\n              state.latestElement = activeElement\n              IS_FOCUSED.set(editor, true)\n            } else {\n              IS_FOCUSED.delete(editor)\n            }\n\n            if (!domSelection) {\n              return Transforms.deselect(editor)\n            }\n\n            const { anchorNode, focusNode } = domSelection\n\n            const anchorNodeSelectable =\n              ReactEditor.hasEditableTarget(editor, anchorNode) ||\n              ReactEditor.isTargetInsideNonReadonlyVoid(editor, anchorNode)\n\n            const focusNodeInEditor = ReactEditor.hasTarget(editor, focusNode)\n\n            if (anchorNodeSelectable && focusNodeInEditor) {\n              const range = ReactEditor.toSlateRange(editor, domSelection, {\n                exactMatch: false,\n                suppressThrow: true,\n              })\n\n              if (range) {\n                if (\n                  !ReactEditor.isComposing(editor) &&\n                  !androidInputManager?.hasPendingChanges() &&\n                  !androidInputManager?.isFlushing()\n                ) {\n                  Transforms.select(editor, range)\n                } else {\n                  androidInputManager?.handleUserSelect(range)\n                }\n              }\n            }\n\n            // Deselect the editor if the dom selection is not selectable in readonly mode\n            if (readOnly && (!anchorNodeSelectable || !focusNodeInEditor)) {\n              Transforms.deselect(editor)\n            }\n          }\n        }, 100),\n      [editor, readOnly, state]\n    )\n\n    const scheduleOnDOMSelectionChange = useMemo(\n      () => debounce(onDOMSelectionChange, 0),\n      [onDOMSelectionChange]\n    )\n\n    androidInputManagerRef.current = useAndroidInputManager({\n      node: ref,\n      onDOMSelectionChange,\n      scheduleOnDOMSelectionChange,\n    })\n\n    useIsomorphicLayoutEffect(() => {\n      // Update element-related weak maps with the DOM element ref.\n      let window\n      if (ref.current && (window = getDefaultView(ref.current))) {\n        EDITOR_TO_WINDOW.set(editor, window)\n        EDITOR_TO_ELEMENT.set(editor, ref.current)\n        NODE_TO_ELEMENT.set(editor, ref.current)\n        ELEMENT_TO_NODE.set(ref.current, editor)\n      } else {\n        NODE_TO_ELEMENT.delete(editor)\n      }\n\n      // Make sure the DOM selection state is in sync.\n      const { selection } = editor\n      const root = ReactEditor.findDocumentOrShadowRoot(editor)\n      const domSelection = getSelection(root)\n\n      if (\n        !domSelection ||\n        !ReactEditor.isFocused(editor) ||\n        androidInputManagerRef.current?.hasPendingAction()\n      ) {\n        return\n      }\n\n      const setDomSelection = (forceChange?: boolean) => {\n        const hasDomSelection = domSelection.type !== 'None'\n\n        // If the DOM selection is properly unset, we're done.\n        if (!selection && !hasDomSelection) {\n          return\n        }\n\n        // Get anchorNode and focusNode\n        const focusNode = domSelection.focusNode\n        let anchorNode\n\n        // COMPAT: In firefox the normal selection way does not work\n        // (https://github.com/ianstormtaylor/slate/pull/5486#issue-1820720223)\n        if (IS_FIREFOX && domSelection.rangeCount > 1) {\n          const firstRange = domSelection.getRangeAt(0)\n          const lastRange = domSelection.getRangeAt(domSelection.rangeCount - 1)\n\n          // Right to left\n          if (firstRange.startContainer === focusNode) {\n            anchorNode = lastRange.endContainer\n          } else {\n            // Left to right\n            anchorNode = firstRange.startContainer\n          }\n        } else {\n          anchorNode = domSelection.anchorNode\n        }\n\n        // verify that the dom selection is in the editor\n        const editorElement = EDITOR_TO_ELEMENT.get(editor)!\n        let hasDomSelectionInEditor = false\n        if (\n          editorElement.contains(anchorNode) &&\n          editorElement.contains(focusNode)\n        ) {\n          hasDomSelectionInEditor = true\n        }\n\n        // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n        if (\n          hasDomSelection &&\n          hasDomSelectionInEditor &&\n          selection &&\n          !forceChange\n        ) {\n          const slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n            exactMatch: true,\n\n            // domSelection is not necessarily a valid Slate range\n            // (e.g. when clicking on contentEditable:false element)\n            suppressThrow: true,\n          })\n\n          if (slateRange && Range.equals(slateRange, selection)) {\n            if (!state.hasMarkPlaceholder) {\n              return\n            }\n\n            // Ensure selection is inside the mark placeholder\n            if (\n              anchorNode?.parentElement?.hasAttribute(\n                'data-slate-mark-placeholder'\n              )\n            ) {\n              return\n            }\n          }\n        }\n\n        // when <Editable/> is being controlled through external value\n        // then its children might just change - DOM responds to it on its own\n        // but Slate's value is not being updated through any operation\n        // and thus it doesn't transform selection on its own\n        if (selection && !ReactEditor.hasRange(editor, selection)) {\n          editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n            exactMatch: false,\n            suppressThrow: true,\n          })\n          return\n        }\n\n        // Otherwise the DOM selection is out of sync, so update it.\n        state.isUpdatingSelection = true\n\n        let newDomRange: DOMRange | null = null\n\n        try {\n          newDomRange = selection && ReactEditor.toDOMRange(editor, selection)\n        } catch (e) {\n          // Ignore, dom and state might be out of sync\n        }\n\n        if (newDomRange) {\n          if (ReactEditor.isComposing(editor) && !IS_ANDROID) {\n            domSelection.collapseToEnd()\n          } else if (Range.isBackward(selection!)) {\n            domSelection.setBaseAndExtent(\n              newDomRange.endContainer,\n              newDomRange.endOffset,\n              newDomRange.startContainer,\n              newDomRange.startOffset\n            )\n          } else {\n            domSelection.setBaseAndExtent(\n              newDomRange.startContainer,\n              newDomRange.startOffset,\n              newDomRange.endContainer,\n              newDomRange.endOffset\n            )\n          }\n          scrollSelectionIntoView(editor, newDomRange)\n        } else {\n          domSelection.removeAllRanges()\n        }\n\n        return newDomRange\n      }\n\n      // In firefox if there is more then 1 range and we call setDomSelection we remove the ability to select more cells in a table\n      if (domSelection.rangeCount <= 1) {\n        setDomSelection()\n      }\n\n      const ensureSelection =\n        androidInputManagerRef.current?.isFlushing() === 'action'\n\n      if (!IS_ANDROID || !ensureSelection) {\n        setTimeout(() => {\n          state.isUpdatingSelection = false\n        })\n        return\n      }\n\n      let timeoutId: ReturnType<typeof setTimeout> | null = null\n      const animationFrameId = requestAnimationFrame(() => {\n        if (ensureSelection) {\n          const ensureDomSelection = (forceChange?: boolean) => {\n            try {\n              const el = ReactEditor.toDOMNode(editor, editor)\n              el.focus()\n\n              setDomSelection(forceChange)\n            } catch (e) {\n              // Ignore, dom and state might be out of sync\n            }\n          }\n\n          // Compat: Android IMEs try to force their selection by manually re-applying it even after we set it.\n          // This essentially would make setting the slate selection during an update meaningless, so we force it\n          // again here. We can't only do it in the setTimeout after the animation frame since that would cause a\n          // visible flicker.\n          ensureDomSelection()\n\n          timeoutId = setTimeout(() => {\n            // COMPAT: While setting the selection in an animation frame visually correctly sets the selection,\n            // it doesn't update GBoards spellchecker state. We have to manually trigger a selection change after\n            // the animation frame to ensure it displays the correct state.\n            ensureDomSelection(true)\n            state.isUpdatingSelection = false\n          })\n        }\n      })\n\n      return () => {\n        cancelAnimationFrame(animationFrameId)\n        if (timeoutId) {\n          clearTimeout(timeoutId)\n        }\n      }\n    })\n\n    // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n    // is required because React's `beforeinput` is fake and never really attaches\n    // to the real event sadly. (2019/11/01)\n    // https://github.com/facebook/react/issues/11211\n    const onDOMBeforeInput = useCallback(\n      (event: InputEvent) => {\n        handleNativeHistoryEvents(editor, event)\n        const el = ReactEditor.toDOMNode(editor, editor)\n        const root = el.getRootNode()\n\n        if (processing?.current && IS_WEBKIT && root instanceof ShadowRoot) {\n          const ranges = event.getTargetRanges()\n          const range = ranges[0]\n\n          const newRange = new window.Range()\n\n          newRange.setStart(range.startContainer, range.startOffset)\n          newRange.setEnd(range.endContainer, range.endOffset)\n\n          // Translate the DOM Range into a Slate Range\n          const slateRange = ReactEditor.toSlateRange(editor, newRange, {\n            exactMatch: false,\n            suppressThrow: false,\n          })\n\n          Transforms.select(editor, slateRange)\n\n          event.preventDefault()\n          event.stopImmediatePropagation()\n          return\n        }\n        onUserInput()\n\n        if (\n          !readOnly &&\n          ReactEditor.hasEditableTarget(editor, event.target) &&\n          !isDOMEventHandled(event, propsOnDOMBeforeInput)\n        ) {\n          // COMPAT: BeforeInput events aren't cancelable on android, so we have to handle them differently using the android input manager.\n          if (androidInputManagerRef.current) {\n            return androidInputManagerRef.current.handleDOMBeforeInput(event)\n          }\n\n          // Some IMEs/Chrome extensions like e.g. Grammarly set the selection immediately before\n          // triggering a `beforeinput` expecting the change to be applied to the immediately before\n          // set selection.\n          scheduleOnDOMSelectionChange.flush()\n          onDOMSelectionChange.flush()\n\n          const { selection } = editor\n          const { inputType: type } = event\n          const data = (event as any).dataTransfer || event.data || undefined\n\n          const isCompositionChange =\n            type === 'insertCompositionText' || type === 'deleteCompositionText'\n\n          // COMPAT: use composition change events as a hint to where we should insert\n          // composition text if we aren't composing to work around https://github.com/ianstormtaylor/slate/issues/5038\n          if (isCompositionChange && ReactEditor.isComposing(editor)) {\n            return\n          }\n\n          let native = false\n          if (\n            type === 'insertText' &&\n            selection &&\n            Range.isCollapsed(selection) &&\n            // Only use native character insertion for single characters a-z or space for now.\n            // Long-press events (hold a + press 4 = ä) to choose a special character otherwise\n            // causes duplicate inserts.\n            event.data &&\n            event.data.length === 1 &&\n            /[a-z ]/i.test(event.data) &&\n            // Chrome has issues correctly editing the start of nodes: https://bugs.chromium.org/p/chromium/issues/detail?id=1249405\n            // When there is an inline element, e.g. a link, and you select\n            // right after it (the start of the next node).\n            selection.anchor.offset !== 0\n          ) {\n            native = true\n\n            // Skip native if there are marks, as\n            // `insertText` will insert a node, not just text.\n            if (editor.marks) {\n              native = false\n            }\n\n            // If the NODE_MAP is dirty, we can't trust the selection anchor (eg ReactEditor.toDOMPoint)\n            if (!IS_NODE_MAP_DIRTY.get(editor)) {\n              // Chrome also has issues correctly editing the end of anchor elements: https://bugs.chromium.org/p/chromium/issues/detail?id=1259100\n              // Therefore we don't allow native events to insert text at the end of anchor nodes.\n              const { anchor } = selection\n\n              const [node, offset] = ReactEditor.toDOMPoint(editor, anchor)\n              const anchorNode = node.parentElement?.closest('a')\n\n              const window = ReactEditor.getWindow(editor)\n\n              if (\n                native &&\n                anchorNode &&\n                ReactEditor.hasDOMNode(editor, anchorNode)\n              ) {\n                // Find the last text node inside the anchor.\n                const lastText = window?.document\n                  .createTreeWalker(anchorNode, NodeFilter.SHOW_TEXT)\n                  .lastChild() as DOMText | null\n\n                if (\n                  lastText === node &&\n                  lastText.textContent?.length === offset\n                ) {\n                  native = false\n                }\n              }\n\n              // Chrome has issues with the presence of tab characters inside elements with whiteSpace = 'pre'\n              // causing abnormal insert behavior: https://bugs.chromium.org/p/chromium/issues/detail?id=1219139\n              if (\n                native &&\n                node.parentElement &&\n                window?.getComputedStyle(node.parentElement)?.whiteSpace ===\n                  'pre'\n              ) {\n                const block = Editor.above(editor, {\n                  at: anchor.path,\n                  match: n => Element.isElement(n) && Editor.isBlock(editor, n),\n                })\n\n                if (block && Node.string(block[0]).includes('\\t')) {\n                  native = false\n                }\n              }\n            }\n          }\n          // COMPAT: For the deleting forward/backward input types we don't want\n          // to change the selection because it is the range that will be deleted,\n          // and those commands determine that for themselves.\n          // If the NODE_MAP is dirty, we can't trust the selection anchor (eg ReactEditor.toDOMPoint via ReactEditor.toSlateRange)\n          if (\n            (!type.startsWith('delete') || type.startsWith('deleteBy')) &&\n            !IS_NODE_MAP_DIRTY.get(editor)\n          ) {\n            const [targetRange] = (event as any).getTargetRanges()\n\n            if (targetRange) {\n              const range = ReactEditor.toSlateRange(editor, targetRange, {\n                exactMatch: false,\n                suppressThrow: false,\n              })\n\n              if (!selection || !Range.equals(selection, range)) {\n                native = false\n\n                const selectionRef =\n                  !isCompositionChange &&\n                  editor.selection &&\n                  Editor.rangeRef(editor, editor.selection)\n\n                Transforms.select(editor, range)\n\n                if (selectionRef) {\n                  EDITOR_TO_USER_SELECTION.set(editor, selectionRef)\n                }\n              }\n            }\n          }\n\n          // Composition change types occur while a user is composing text and can't be\n          // cancelled. Let them through and wait for the composition to end.\n          if (isCompositionChange) {\n            return\n          }\n\n          if (!native) {\n            event.preventDefault()\n          }\n\n          // COMPAT: If the selection is expanded, even if the command seems like\n          // a delete forward/backward command it should delete the selection.\n          if (\n            selection &&\n            Range.isExpanded(selection) &&\n            type.startsWith('delete')\n          ) {\n            const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n            Editor.deleteFragment(editor, { direction })\n            return\n          }\n\n          switch (type) {\n            case 'deleteByComposition':\n            case 'deleteByCut':\n            case 'deleteByDrag': {\n              Editor.deleteFragment(editor)\n              break\n            }\n\n            case 'deleteContent':\n            case 'deleteContentForward': {\n              Editor.deleteForward(editor)\n              break\n            }\n\n            case 'deleteContentBackward': {\n              Editor.deleteBackward(editor)\n              break\n            }\n\n            case 'deleteEntireSoftLine': {\n              Editor.deleteBackward(editor, { unit: 'line' })\n              Editor.deleteForward(editor, { unit: 'line' })\n              break\n            }\n\n            case 'deleteHardLineBackward': {\n              Editor.deleteBackward(editor, { unit: 'block' })\n              break\n            }\n\n            case 'deleteSoftLineBackward': {\n              Editor.deleteBackward(editor, { unit: 'line' })\n              break\n            }\n\n            case 'deleteHardLineForward': {\n              Editor.deleteForward(editor, { unit: 'block' })\n              break\n            }\n\n            case 'deleteSoftLineForward': {\n              Editor.deleteForward(editor, { unit: 'line' })\n              break\n            }\n\n            case 'deleteWordBackward': {\n              Editor.deleteBackward(editor, { unit: 'word' })\n              break\n            }\n\n            case 'deleteWordForward': {\n              Editor.deleteForward(editor, { unit: 'word' })\n              break\n            }\n\n            case 'insertLineBreak':\n              Editor.insertSoftBreak(editor)\n              break\n\n            case 'insertParagraph': {\n              Editor.insertBreak(editor)\n              break\n            }\n\n            case 'insertFromComposition':\n            case 'insertFromDrop':\n            case 'insertFromPaste':\n            case 'insertFromYank':\n            case 'insertReplacementText':\n            case 'insertText': {\n              if (type === 'insertFromComposition') {\n                // COMPAT: in Safari, `compositionend` is dispatched after the\n                // `beforeinput` for \"insertFromComposition\". But if we wait for it\n                // then we will abort because we're still composing and the selection\n                // won't be updated properly.\n                // https://www.w3.org/TR/input-events-2/\n                if (ReactEditor.isComposing(editor)) {\n                  setIsComposing(false)\n                  IS_COMPOSING.set(editor, false)\n                }\n              }\n\n              // use a weak comparison instead of 'instanceof' to allow\n              // programmatic access of paste events coming from external windows\n              // like cypress where cy.window does not work realibly\n              if (data?.constructor.name === 'DataTransfer') {\n                ReactEditor.insertData(editor, data)\n              } else if (typeof data === 'string') {\n                // Only insertText operations use the native functionality, for now.\n                // Potentially expand to single character deletes, as well.\n                if (native) {\n                  deferredOperations.current.push(() =>\n                    Editor.insertText(editor, data)\n                  )\n                } else {\n                  Editor.insertText(editor, data)\n                }\n              }\n\n              break\n            }\n          }\n\n          // Restore the actual user section if nothing manually set it.\n          const toRestore = EDITOR_TO_USER_SELECTION.get(editor)?.unref()\n          EDITOR_TO_USER_SELECTION.delete(editor)\n\n          if (\n            toRestore &&\n            (!editor.selection || !Range.equals(editor.selection, toRestore))\n          ) {\n            Transforms.select(editor, toRestore)\n          }\n        }\n      },\n      [\n        editor,\n        onDOMSelectionChange,\n        onUserInput,\n        propsOnDOMBeforeInput,\n        readOnly,\n        scheduleOnDOMSelectionChange,\n      ]\n    )\n\n    const callbackRef = useCallback(\n      (node: HTMLDivElement | null) => {\n        if (node == null) {\n          onDOMSelectionChange.cancel()\n          scheduleOnDOMSelectionChange.cancel()\n\n          EDITOR_TO_ELEMENT.delete(editor)\n          NODE_TO_ELEMENT.delete(editor)\n\n          if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n            // @ts-ignore The `beforeinput` event isn't recognized.\n            ref.current.removeEventListener('beforeinput', onDOMBeforeInput)\n          }\n        } else {\n          // Attach a native DOM event handler for `beforeinput` events, because React's\n          // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n          // real `beforeinput` events sadly... (2019/11/04)\n          // https://github.com/facebook/react/issues/11211\n          if (HAS_BEFORE_INPUT_SUPPORT) {\n            // @ts-ignore The `beforeinput` event isn't recognized.\n            node.addEventListener('beforeinput', onDOMBeforeInput)\n          }\n        }\n\n        ref.current = node\n        if (typeof forwardedRef === 'function') {\n          forwardedRef(node)\n        } else if (forwardedRef) {\n          forwardedRef.current = node\n        }\n      },\n      [\n        onDOMSelectionChange,\n        scheduleOnDOMSelectionChange,\n        editor,\n        onDOMBeforeInput,\n        forwardedRef,\n      ]\n    )\n\n    useIsomorphicLayoutEffect(() => {\n      const window = ReactEditor.getWindow(editor)\n\n      // COMPAT: In Chrome, `selectionchange` events can fire when <input> and\n      // <textarea> elements are appended to the DOM, causing\n      // `editor.selection` to be overwritten in some circumstances.\n      // (2025/01/16) https://issues.chromium.org/issues/389368412\n      const onSelectionChange = ({ target }: Event) => {\n        const targetElement = target instanceof HTMLElement ? target : null\n        const targetTagName = targetElement?.tagName\n        if (targetTagName === 'INPUT' || targetTagName === 'TEXTAREA') {\n          return\n        }\n        scheduleOnDOMSelectionChange()\n      }\n\n      // Attach a native DOM event handler for `selectionchange`, because React's\n      // built-in `onSelect` handler doesn't fire for all selection changes. It's\n      // a leaky polyfill that only fires on keypresses or clicks. Instead, we\n      // want to fire for any change to the selection inside the editor.\n      // (2019/11/04) https://github.com/facebook/react/issues/5785\n      window.document.addEventListener('selectionchange', onSelectionChange)\n\n      // Listen for dragend and drop globally. In Firefox, if a drop handler\n      // initiates an operation that causes the originally dragged element to\n      // unmount, that element will not emit a dragend event. (2024/06/21)\n      const stoppedDragging = () => {\n        state.isDraggingInternally = false\n      }\n      window.document.addEventListener('dragend', stoppedDragging)\n      window.document.addEventListener('drop', stoppedDragging)\n\n      return () => {\n        window.document.removeEventListener(\n          'selectionchange',\n          onSelectionChange\n        )\n        window.document.removeEventListener('dragend', stoppedDragging)\n        window.document.removeEventListener('drop', stoppedDragging)\n      }\n    }, [scheduleOnDOMSelectionChange, state])\n\n    const decorations = decorate([editor, []])\n    const decorateContext = useDecorateContext(decorate)\n\n    const showPlaceholder =\n      placeholder &&\n      editor.children.length === 1 &&\n      Array.from(Node.texts(editor)).length === 1 &&\n      Node.string(editor) === '' &&\n      !isComposing\n\n    const placeHolderResizeHandler = useCallback(\n      (placeholderEl: HTMLElement | null) => {\n        if (placeholderEl && showPlaceholder) {\n          setPlaceholderHeight(placeholderEl.getBoundingClientRect()?.height)\n        } else {\n          setPlaceholderHeight(undefined)\n        }\n      },\n      [showPlaceholder]\n    )\n\n    if (showPlaceholder) {\n      const start = Editor.start(editor, [])\n      decorations.push({\n        [PLACEHOLDER_SYMBOL]: true,\n        placeholder,\n        onPlaceholderResize: placeHolderResizeHandler,\n        anchor: start,\n        focus: start,\n      })\n    }\n\n    const { marks } = editor\n    state.hasMarkPlaceholder = false\n\n    if (editor.selection && Range.isCollapsed(editor.selection) && marks) {\n      const { anchor } = editor.selection\n      const leaf = Node.leaf(editor, anchor.path)\n      const { text, ...rest } = leaf\n\n      // While marks isn't a 'complete' text, we can still use loose Text.equals\n      // here which only compares marks anyway.\n      if (!Text.equals(leaf, marks as Text, { loose: true })) {\n        state.hasMarkPlaceholder = true\n\n        const unset = Object.fromEntries(\n          Object.keys(rest).map(mark => [mark, null])\n        )\n\n        decorations.push({\n          [MARK_PLACEHOLDER_SYMBOL]: true,\n          ...unset,\n          ...marks,\n\n          anchor,\n          focus: anchor,\n        })\n      }\n    }\n\n    // Update EDITOR_TO_MARK_PLACEHOLDER_MARKS in setTimeout useEffect to ensure we don't set it\n    // before we receive the composition end event.\n    useEffect(() => {\n      setTimeout(() => {\n        const { selection } = editor\n        if (selection) {\n          const { anchor } = selection\n          const text = Node.leaf(editor, anchor.path)\n\n          // While marks isn't a 'complete' text, we can still use loose Text.equals\n          // here which only compares marks anyway.\n          if (marks && !Text.equals(text, marks as Text, { loose: true })) {\n            EDITOR_TO_PENDING_INSERTION_MARKS.set(editor, marks)\n            return\n          }\n        }\n\n        EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n      })\n    })\n\n    useFlushDeferredSelectorsOnRender()\n\n    return (\n      <ReadOnlyContext.Provider value={readOnly}>\n        <ComposingContext.Provider value={isComposing}>\n          <DecorateContext.Provider value={decorateContext}>\n            <RestoreDOM node={ref} receivedUserInput={receivedUserInput}>\n              <Component\n                role={readOnly ? undefined : 'textbox'}\n                aria-multiline={readOnly ? undefined : true}\n                {...attributes}\n                // COMPAT: Certain browsers don't support the `beforeinput` event, so we'd\n                // have to use hacks to make these replacement-based features work.\n                // For SSR situations HAS_BEFORE_INPUT_SUPPORT is false and results in prop\n                // mismatch warning app moves to browser. Pass-through consumer props when\n                // not CAN_USE_DOM (SSR) and default to falsy value\n                spellCheck={\n                  HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                    ? attributes.spellCheck\n                    : false\n                }\n                autoCorrect={\n                  HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                    ? attributes.autoCorrect\n                    : 'false'\n                }\n                autoCapitalize={\n                  HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                    ? attributes.autoCapitalize\n                    : 'false'\n                }\n                data-slate-editor\n                data-slate-node=\"value\"\n                // explicitly set this\n                contentEditable={!readOnly}\n                // in some cases, a decoration needs access to the range / selection to decorate a text node,\n                // then you will select the whole text node when you select part the of text\n                // this magic zIndex=\"-1\" will fix it\n                zindex={-1}\n                suppressContentEditableWarning\n                ref={callbackRef}\n                style={{\n                  ...(disableDefaultStyles\n                    ? {}\n                    : {\n                        // Allow positioning relative to the editable element.\n                        position: 'relative',\n                        // Preserve adjacent whitespace and new lines.\n                        whiteSpace: 'pre-wrap',\n                        // Allow words to break if they are too long.\n                        wordWrap: 'break-word',\n                        // Make the minimum height that of the placeholder.\n                        ...(placeholderHeight\n                          ? { minHeight: placeholderHeight }\n                          : {}),\n                      }),\n                  // Allow for passed-in styles to override anything.\n                  ...userStyle,\n                }}\n                onBeforeInput={useCallback(\n                  (event: React.FormEvent<HTMLDivElement>) => {\n                    // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                    // fall back to React's leaky polyfill instead just for it. It\n                    // only works for the `insertText` input type.\n                    if (\n                      !HAS_BEFORE_INPUT_SUPPORT &&\n                      !readOnly &&\n                      !isEventHandled(event, attributes.onBeforeInput) &&\n                      ReactEditor.hasSelectableTarget(editor, event.target)\n                    ) {\n                      event.preventDefault()\n                      if (!ReactEditor.isComposing(editor)) {\n                        const text = (event as any).data as string\n                        Editor.insertText(editor, text)\n                      }\n                    }\n                  },\n                  [attributes.onBeforeInput, editor, readOnly]\n                )}\n                onInput={useCallback(\n                  (event: React.FormEvent<HTMLDivElement>) => {\n                    if (isEventHandled(event, attributes.onInput)) {\n                      return\n                    }\n\n                    if (androidInputManagerRef.current) {\n                      androidInputManagerRef.current.handleInput()\n                      return\n                    }\n\n                    // Flush native operations, as native events will have propogated\n                    // and we can correctly compare DOM text values in components\n                    // to stop rendering, so that browser functions like autocorrect\n                    // and spellcheck work as expected.\n                    for (const op of deferredOperations.current) {\n                      op()\n                    }\n                    deferredOperations.current = []\n\n                    // COMPAT: Since `beforeinput` doesn't fully `preventDefault`,\n                    // there's a chance that content might be placed in the browser's undo stack.\n                    // This means undo can be triggered even when the div is not focused,\n                    // and it only triggers the input event for the node. (2024/10/09)\n                    if (!ReactEditor.isFocused(editor)) {\n                      handleNativeHistoryEvents(\n                        editor,\n                        event.nativeEvent as InputEvent\n                      )\n                    }\n                  },\n                  [attributes.onInput, editor]\n                )}\n                onBlur={useCallback(\n                  (event: React.FocusEvent<HTMLDivElement>) => {\n                    if (\n                      readOnly ||\n                      state.isUpdatingSelection ||\n                      !ReactEditor.hasSelectableTarget(editor, event.target) ||\n                      isEventHandled(event, attributes.onBlur)\n                    ) {\n                      return\n                    }\n\n                    // COMPAT: If the current `activeElement` is still the previous\n                    // one, this is due to the window being blurred when the tab\n                    // itself becomes unfocused, so we want to abort early to allow to\n                    // editor to stay focused when the tab becomes focused again.\n                    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                    if (state.latestElement === root.activeElement) {\n                      return\n                    }\n\n                    const { relatedTarget } = event\n                    const el = ReactEditor.toDOMNode(editor, editor)\n\n                    // COMPAT: The event should be ignored if the focus is returning\n                    // to the editor from an embedded editable element (eg. an <input>\n                    // element inside a void node).\n                    if (relatedTarget === el) {\n                      return\n                    }\n\n                    // COMPAT: The event should be ignored if the focus is moving from\n                    // the editor to inside a void node's spacer element.\n                    if (\n                      isDOMElement(relatedTarget) &&\n                      relatedTarget.hasAttribute('data-slate-spacer')\n                    ) {\n                      return\n                    }\n\n                    // COMPAT: The event should be ignored if the focus is moving to a\n                    // non- editable section of an element that isn't a void node (eg.\n                    // a list item of the check list example).\n                    if (\n                      relatedTarget != null &&\n                      isDOMNode(relatedTarget) &&\n                      ReactEditor.hasDOMNode(editor, relatedTarget)\n                    ) {\n                      const node = ReactEditor.toSlateNode(\n                        editor,\n                        relatedTarget\n                      )\n\n                      if (Element.isElement(node) && !editor.isVoid(node)) {\n                        return\n                      }\n                    }\n\n                    // COMPAT: Safari doesn't always remove the selection even if the content-\n                    // editable element no longer has focus. Refer to:\n                    // https://stackoverflow.com/questions/12353247/force-contenteditable-div-to-stop-accepting-input-after-it-loses-focus-under-web\n                    if (IS_WEBKIT) {\n                      const domSelection = getSelection(root)\n                      domSelection?.removeAllRanges()\n                    }\n\n                    IS_FOCUSED.delete(editor)\n                  },\n                  [\n                    readOnly,\n                    state.isUpdatingSelection,\n                    state.latestElement,\n                    editor,\n                    attributes.onBlur,\n                  ]\n                )}\n                onClick={useCallback(\n                  (event: React.MouseEvent<HTMLDivElement>) => {\n                    if (\n                      ReactEditor.hasTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onClick) &&\n                      isDOMNode(event.target)\n                    ) {\n                      const node = ReactEditor.toSlateNode(editor, event.target)\n                      const path = ReactEditor.findPath(editor, node)\n\n                      // At this time, the Slate document may be arbitrarily different,\n                      // because onClick handlers can change the document before we get here.\n                      // Therefore we must check that this path actually exists,\n                      // and that it still refers to the same node.\n                      if (\n                        !Editor.hasPath(editor, path) ||\n                        Node.get(editor, path) !== node\n                      ) {\n                        return\n                      }\n\n                      if (event.detail === TRIPLE_CLICK && path.length >= 1) {\n                        let blockPath = path\n                        if (\n                          !(\n                            Element.isElement(node) &&\n                            Editor.isBlock(editor, node)\n                          )\n                        ) {\n                          const block = Editor.above(editor, {\n                            match: n =>\n                              Element.isElement(n) && Editor.isBlock(editor, n),\n                            at: path,\n                          })\n\n                          blockPath = block?.[1] ?? path.slice(0, 1)\n                        }\n\n                        const range = Editor.range(editor, blockPath)\n                        Transforms.select(editor, range)\n                        return\n                      }\n\n                      if (readOnly) {\n                        return\n                      }\n\n                      const start = Editor.start(editor, path)\n                      const end = Editor.end(editor, path)\n                      const startVoid = Editor.void(editor, { at: start })\n                      const endVoid = Editor.void(editor, { at: end })\n\n                      if (\n                        startVoid &&\n                        endVoid &&\n                        Path.equals(startVoid[1], endVoid[1])\n                      ) {\n                        const range = Editor.range(editor, start)\n                        Transforms.select(editor, range)\n                      }\n                    }\n                  },\n                  [editor, attributes.onClick, readOnly]\n                )}\n                onCompositionEnd={useCallback(\n                  (event: React.CompositionEvent<HTMLDivElement>) => {\n                    if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n                      if (ReactEditor.isComposing(editor)) {\n                        Promise.resolve().then(() => {\n                          setIsComposing(false)\n                          IS_COMPOSING.set(editor, false)\n                        })\n                      }\n\n                      androidInputManagerRef.current?.handleCompositionEnd(\n                        event\n                      )\n\n                      if (\n                        isEventHandled(event, attributes.onCompositionEnd) ||\n                        IS_ANDROID\n                      ) {\n                        return\n                      }\n\n                      // COMPAT: In Chrome, `beforeinput` events for compositions\n                      // aren't correct and never fire the \"insertFromComposition\"\n                      // type that we need. So instead, insert whenever a composition\n                      // ends since it will already have been committed to the DOM.\n                      if (\n                        !IS_WEBKIT &&\n                        !IS_FIREFOX_LEGACY &&\n                        !IS_IOS &&\n                        !IS_WECHATBROWSER &&\n                        !IS_UC_MOBILE &&\n                        event.data\n                      ) {\n                        const placeholderMarks =\n                          EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)\n                        EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n\n                        // Ensure we insert text with the marks the user was actually seeing\n                        if (placeholderMarks !== undefined) {\n                          EDITOR_TO_USER_MARKS.set(editor, editor.marks)\n                          editor.marks = placeholderMarks\n                        }\n\n                        Editor.insertText(editor, event.data)\n\n                        const userMarks = EDITOR_TO_USER_MARKS.get(editor)\n                        EDITOR_TO_USER_MARKS.delete(editor)\n                        if (userMarks !== undefined) {\n                          editor.marks = userMarks\n                        }\n                      }\n                    }\n                  },\n                  [attributes.onCompositionEnd, editor]\n                )}\n                onCompositionUpdate={useCallback(\n                  (event: React.CompositionEvent<HTMLDivElement>) => {\n                    if (\n                      ReactEditor.hasSelectableTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onCompositionUpdate)\n                    ) {\n                      if (!ReactEditor.isComposing(editor)) {\n                        setIsComposing(true)\n                        IS_COMPOSING.set(editor, true)\n                      }\n                    }\n                  },\n                  [attributes.onCompositionUpdate, editor]\n                )}\n                onCompositionStart={useCallback(\n                  (event: React.CompositionEvent<HTMLDivElement>) => {\n                    if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n                      androidInputManagerRef.current?.handleCompositionStart(\n                        event\n                      )\n\n                      if (\n                        isEventHandled(event, attributes.onCompositionStart) ||\n                        IS_ANDROID\n                      ) {\n                        return\n                      }\n\n                      setIsComposing(true)\n\n                      const { selection } = editor\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor)\n                        return\n                      }\n                    }\n                  },\n                  [attributes.onCompositionStart, editor]\n                )}\n                onCopy={useCallback(\n                  (event: React.ClipboardEvent<HTMLDivElement>) => {\n                    if (\n                      ReactEditor.hasSelectableTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onCopy) &&\n                      !isDOMEventTargetInput(event)\n                    ) {\n                      event.preventDefault()\n                      ReactEditor.setFragmentData(\n                        editor,\n                        event.clipboardData,\n                        'copy'\n                      )\n                    }\n                  },\n                  [attributes.onCopy, editor]\n                )}\n                onCut={useCallback(\n                  (event: React.ClipboardEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      ReactEditor.hasSelectableTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onCut) &&\n                      !isDOMEventTargetInput(event)\n                    ) {\n                      event.preventDefault()\n                      ReactEditor.setFragmentData(\n                        editor,\n                        event.clipboardData,\n                        'cut'\n                      )\n                      const { selection } = editor\n\n                      if (selection) {\n                        if (Range.isExpanded(selection)) {\n                          Editor.deleteFragment(editor)\n                        } else {\n                          const node = Node.parent(\n                            editor,\n                            selection.anchor.path\n                          )\n                          if (Editor.isVoid(editor, node)) {\n                            Transforms.delete(editor)\n                          }\n                        }\n                      }\n                    }\n                  },\n                  [readOnly, editor, attributes.onCut]\n                )}\n                onDragOver={useCallback(\n                  (event: React.DragEvent<HTMLDivElement>) => {\n                    if (\n                      ReactEditor.hasTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onDragOver)\n                    ) {\n                      // Only when the target is void, call `preventDefault` to signal\n                      // that drops are allowed. Editable content is droppable by\n                      // default, and calling `preventDefault` hides the cursor.\n                      const node = ReactEditor.toSlateNode(editor, event.target)\n\n                      if (\n                        Element.isElement(node) &&\n                        Editor.isVoid(editor, node)\n                      ) {\n                        event.preventDefault()\n                      }\n                    }\n                  },\n                  [attributes.onDragOver, editor]\n                )}\n                onDragStart={useCallback(\n                  (event: React.DragEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      ReactEditor.hasTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onDragStart)\n                    ) {\n                      const node = ReactEditor.toSlateNode(editor, event.target)\n                      const path = ReactEditor.findPath(editor, node)\n                      const voidMatch =\n                        (Element.isElement(node) &&\n                          Editor.isVoid(editor, node)) ||\n                        Editor.void(editor, { at: path, voids: true })\n\n                      // If starting a drag on a void node, make sure it is selected\n                      // so that it shows up in the selection's fragment.\n                      if (voidMatch) {\n                        const range = Editor.range(editor, path)\n                        Transforms.select(editor, range)\n                      }\n\n                      state.isDraggingInternally = true\n\n                      ReactEditor.setFragmentData(\n                        editor,\n                        event.dataTransfer,\n                        'drag'\n                      )\n                    }\n                  },\n                  [readOnly, editor, attributes.onDragStart, state]\n                )}\n                onDrop={useCallback(\n                  (event: React.DragEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      ReactEditor.hasTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onDrop)\n                    ) {\n                      event.preventDefault()\n\n                      // Keep a reference to the dragged range before updating selection\n                      const draggedRange = editor.selection\n\n                      // Find the range where the drop happened\n                      const range = ReactEditor.findEventRange(editor, event)\n                      const data = event.dataTransfer\n\n                      Transforms.select(editor, range)\n\n                      if (state.isDraggingInternally) {\n                        if (\n                          draggedRange &&\n                          !Range.equals(draggedRange, range) &&\n                          !Editor.void(editor, { at: range, voids: true })\n                        ) {\n                          Transforms.delete(editor, {\n                            at: draggedRange,\n                          })\n                        }\n                      }\n\n                      ReactEditor.insertData(editor, data)\n\n                      // When dragging from another source into the editor, it's possible\n                      // that the current editor does not have focus.\n                      if (!ReactEditor.isFocused(editor)) {\n                        ReactEditor.focus(editor)\n                      }\n                    }\n                  },\n                  [readOnly, editor, attributes.onDrop, state]\n                )}\n                onDragEnd={useCallback(\n                  (event: React.DragEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      state.isDraggingInternally &&\n                      attributes.onDragEnd &&\n                      ReactEditor.hasTarget(editor, event.target)\n                    ) {\n                      attributes.onDragEnd(event)\n                    }\n                  },\n                  [readOnly, state, attributes, editor]\n                )}\n                onFocus={useCallback(\n                  (event: React.FocusEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      !state.isUpdatingSelection &&\n                      ReactEditor.hasEditableTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onFocus)\n                    ) {\n                      const el = ReactEditor.toDOMNode(editor, editor)\n                      const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                      state.latestElement = root.activeElement\n\n                      // COMPAT: If the editor has nested editable elements, the focus\n                      // can go to them. In Firefox, this must be prevented because it\n                      // results in issues with keyboard navigation. (2017/03/30)\n                      if (IS_FIREFOX && event.target !== el) {\n                        el.focus()\n                        return\n                      }\n\n                      IS_FOCUSED.set(editor, true)\n                    }\n                  },\n                  [readOnly, state, editor, attributes.onFocus]\n                )}\n                onKeyDown={useCallback(\n                  (event: React.KeyboardEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      ReactEditor.hasEditableTarget(editor, event.target)\n                    ) {\n                      androidInputManagerRef.current?.handleKeyDown(event)\n\n                      const { nativeEvent } = event\n\n                      // COMPAT: The composition end event isn't fired reliably in all browsers,\n                      // so we sometimes might end up stuck in a composition state even though we\n                      // aren't composing any more.\n                      if (\n                        ReactEditor.isComposing(editor) &&\n                        nativeEvent.isComposing === false\n                      ) {\n                        IS_COMPOSING.set(editor, false)\n                        setIsComposing(false)\n                      }\n\n                      if (\n                        isEventHandled(event, attributes.onKeyDown) ||\n                        ReactEditor.isComposing(editor)\n                      ) {\n                        return\n                      }\n\n                      const { selection } = editor\n                      const element =\n                        editor.children[\n                          selection !== null ? selection.focus.path[0] : 0\n                        ]\n                      const isRTL = getDirection(Node.string(element)) === 'rtl'\n\n                      // COMPAT: Since we prevent the default behavior on\n                      // `beforeinput` events, the browser doesn't think there's ever\n                      // any history stack to undo or redo, so we have to manage these\n                      // hotkeys ourselves. (2019/11/06)\n                      if (Hotkeys.isRedo(nativeEvent)) {\n                        event.preventDefault()\n                        const maybeHistoryEditor: any = editor\n\n                        if (typeof maybeHistoryEditor.redo === 'function') {\n                          maybeHistoryEditor.redo()\n                        }\n\n                        return\n                      }\n\n                      if (Hotkeys.isUndo(nativeEvent)) {\n                        event.preventDefault()\n                        const maybeHistoryEditor: any = editor\n\n                        if (typeof maybeHistoryEditor.undo === 'function') {\n                          maybeHistoryEditor.undo()\n                        }\n\n                        return\n                      }\n\n                      // COMPAT: Certain browsers don't handle the selection updates\n                      // properly. In Chrome, the selection isn't properly extended.\n                      // And in Firefox, the selection isn't properly collapsed.\n                      // (2017/10/17)\n                      if (Hotkeys.isMoveLineBackward(nativeEvent)) {\n                        event.preventDefault()\n                        Transforms.move(editor, { unit: 'line', reverse: true })\n                        return\n                      }\n\n                      if (Hotkeys.isMoveLineForward(nativeEvent)) {\n                        event.preventDefault()\n                        Transforms.move(editor, { unit: 'line' })\n                        return\n                      }\n\n                      if (Hotkeys.isExtendLineBackward(nativeEvent)) {\n                        event.preventDefault()\n                        Transforms.move(editor, {\n                          unit: 'line',\n                          edge: 'focus',\n                          reverse: true,\n                        })\n                        return\n                      }\n\n                      if (Hotkeys.isExtendLineForward(nativeEvent)) {\n                        event.preventDefault()\n                        Transforms.move(editor, { unit: 'line', edge: 'focus' })\n                        return\n                      }\n\n                      // COMPAT: If a void node is selected, or a zero-width text node\n                      // adjacent to an inline is selected, we need to handle these\n                      // hotkeys manually because browsers won't be able to skip over\n                      // the void node with the zero-width space not being an empty\n                      // string.\n                      if (Hotkeys.isMoveBackward(nativeEvent)) {\n                        event.preventDefault()\n\n                        if (selection && Range.isCollapsed(selection)) {\n                          Transforms.move(editor, { reverse: !isRTL })\n                        } else {\n                          Transforms.collapse(editor, {\n                            edge: isRTL ? 'end' : 'start',\n                          })\n                        }\n\n                        return\n                      }\n\n                      if (Hotkeys.isMoveForward(nativeEvent)) {\n                        event.preventDefault()\n\n                        if (selection && Range.isCollapsed(selection)) {\n                          Transforms.move(editor, { reverse: isRTL })\n                        } else {\n                          Transforms.collapse(editor, {\n                            edge: isRTL ? 'start' : 'end',\n                          })\n                        }\n\n                        return\n                      }\n\n                      if (Hotkeys.isMoveWordBackward(nativeEvent)) {\n                        event.preventDefault()\n\n                        if (selection && Range.isExpanded(selection)) {\n                          Transforms.collapse(editor, { edge: 'focus' })\n                        }\n\n                        Transforms.move(editor, {\n                          unit: 'word',\n                          reverse: !isRTL,\n                        })\n                        return\n                      }\n\n                      if (Hotkeys.isMoveWordForward(nativeEvent)) {\n                        event.preventDefault()\n\n                        if (selection && Range.isExpanded(selection)) {\n                          Transforms.collapse(editor, { edge: 'focus' })\n                        }\n\n                        Transforms.move(editor, {\n                          unit: 'word',\n                          reverse: isRTL,\n                        })\n                        return\n                      }\n\n                      // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                      // fall back to guessing at the input intention for hotkeys.\n                      // COMPAT: In iOS, some of these hotkeys are handled in the\n                      if (!HAS_BEFORE_INPUT_SUPPORT) {\n                        // We don't have a core behavior for these, but they change the\n                        // DOM if we don't prevent them, so we have to.\n                        if (\n                          Hotkeys.isBold(nativeEvent) ||\n                          Hotkeys.isItalic(nativeEvent) ||\n                          Hotkeys.isTransposeCharacter(nativeEvent)\n                        ) {\n                          event.preventDefault()\n                          return\n                        }\n\n                        if (Hotkeys.isSoftBreak(nativeEvent)) {\n                          event.preventDefault()\n                          Editor.insertSoftBreak(editor)\n                          return\n                        }\n\n                        if (Hotkeys.isSplitBlock(nativeEvent)) {\n                          event.preventDefault()\n                          Editor.insertBreak(editor)\n                          return\n                        }\n\n                        if (Hotkeys.isDeleteBackward(nativeEvent)) {\n                          event.preventDefault()\n\n                          if (selection && Range.isExpanded(selection)) {\n                            Editor.deleteFragment(editor, {\n                              direction: 'backward',\n                            })\n                          } else {\n                            Editor.deleteBackward(editor)\n                          }\n\n                          return\n                        }\n\n                        if (Hotkeys.isDeleteForward(nativeEvent)) {\n                          event.preventDefault()\n\n                          if (selection && Range.isExpanded(selection)) {\n                            Editor.deleteFragment(editor, {\n                              direction: 'forward',\n                            })\n                          } else {\n                            Editor.deleteForward(editor)\n                          }\n\n                          return\n                        }\n\n                        if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\n                          event.preventDefault()\n\n                          if (selection && Range.isExpanded(selection)) {\n                            Editor.deleteFragment(editor, {\n                              direction: 'backward',\n                            })\n                          } else {\n                            Editor.deleteBackward(editor, { unit: 'line' })\n                          }\n\n                          return\n                        }\n\n                        if (Hotkeys.isDeleteLineForward(nativeEvent)) {\n                          event.preventDefault()\n\n                          if (selection && Range.isExpanded(selection)) {\n                            Editor.deleteFragment(editor, {\n                              direction: 'forward',\n                            })\n                          } else {\n                            Editor.deleteForward(editor, { unit: 'line' })\n                          }\n\n                          return\n                        }\n\n                        if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\n                          event.preventDefault()\n\n                          if (selection && Range.isExpanded(selection)) {\n                            Editor.deleteFragment(editor, {\n                              direction: 'backward',\n                            })\n                          } else {\n                            Editor.deleteBackward(editor, { unit: 'word' })\n                          }\n\n                          return\n                        }\n\n                        if (Hotkeys.isDeleteWordForward(nativeEvent)) {\n                          event.preventDefault()\n\n                          if (selection && Range.isExpanded(selection)) {\n                            Editor.deleteFragment(editor, {\n                              direction: 'forward',\n                            })\n                          } else {\n                            Editor.deleteForward(editor, { unit: 'word' })\n                          }\n\n                          return\n                        }\n                      } else {\n                        if (IS_CHROME || IS_WEBKIT) {\n                          // COMPAT: Chrome and Safari support `beforeinput` event but do not fire\n                          // an event when deleting backwards in a selected void inline node\n                          if (\n                            selection &&\n                            (Hotkeys.isDeleteBackward(nativeEvent) ||\n                              Hotkeys.isDeleteForward(nativeEvent)) &&\n                            Range.isCollapsed(selection)\n                          ) {\n                            const currentNode = Node.parent(\n                              editor,\n                              selection.anchor.path\n                            )\n\n                            if (\n                              Element.isElement(currentNode) &&\n                              Editor.isVoid(editor, currentNode) &&\n                              (Editor.isInline(editor, currentNode) ||\n                                Editor.isBlock(editor, currentNode))\n                            ) {\n                              event.preventDefault()\n                              Editor.deleteBackward(editor, { unit: 'block' })\n\n                              return\n                            }\n                          }\n                        }\n                      }\n                    }\n                  },\n                  [readOnly, editor, attributes.onKeyDown]\n                )}\n                onPaste={useCallback(\n                  (event: React.ClipboardEvent<HTMLDivElement>) => {\n                    if (\n                      !readOnly &&\n                      ReactEditor.hasEditableTarget(editor, event.target) &&\n                      !isEventHandled(event, attributes.onPaste)\n                    ) {\n                      // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                      // fall back to React's `onPaste` here instead.\n                      // COMPAT: Firefox, Chrome and Safari don't emit `beforeinput` events\n                      // when \"paste without formatting\" is used, so fallback. (2020/02/20)\n                      // COMPAT: Safari InputEvents generated by pasting won't include\n                      // application/x-slate-fragment items, so use the\n                      // ClipboardEvent here. (2023/03/15)\n                      if (\n                        !HAS_BEFORE_INPUT_SUPPORT ||\n                        isPlainTextOnlyPaste(event.nativeEvent) ||\n                        IS_WEBKIT\n                      ) {\n                        event.preventDefault()\n                        ReactEditor.insertData(editor, event.clipboardData)\n                      }\n                    }\n                  },\n                  [readOnly, editor, attributes.onPaste]\n                )}\n              >\n                <Children\n                  decorations={decorations}\n                  node={editor}\n                  renderElement={renderElement}\n                  renderChunk={renderChunk}\n                  renderPlaceholder={renderPlaceholder}\n                  renderLeaf={renderLeaf}\n                  renderText={renderText}\n                />\n              </Component>\n            </RestoreDOM>\n          </DecorateContext.Provider>\n        </ComposingContext.Provider>\n      </ReadOnlyContext.Provider>\n    )\n  }\n)\n\n/**\n * The props that get passed to renderPlaceholder\n */\nexport type RenderPlaceholderProps = {\n  children: any\n  attributes: {\n    'data-slate-placeholder': boolean\n    dir?: 'rtl'\n    contentEditable: boolean\n    ref: React.RefCallback<any>\n    style: React.CSSProperties\n  }\n}\n\n/**\n * The default placeholder element\n */\n\nexport const DefaultPlaceholder = ({\n  attributes,\n  children,\n}: RenderPlaceholderProps) => (\n  // COMPAT: Artificially add a line-break to the end on the placeholder element\n  // to prevent Android IMEs to pick up its content in autocorrect and to auto-capitalize the first letter\n  <span {...attributes}>\n    {children}\n    {IS_ANDROID && <br />}\n  </span>\n)\n\n/**\n * A default memoized decorate function.\n */\n\nexport const defaultDecorate: (entry: NodeEntry) => DecoratedRange[] = () => []\n\n/**\n * A default implement to scroll dom range into view.\n */\n\nexport const defaultScrollSelectionIntoView = (\n  editor: ReactEditor,\n  domRange: DOMRange\n) => {\n  // This was affecting the selection of multiple blocks and dragging behavior,\n  // so enabled only if the selection has been collapsed.\n  if (\n    domRange.getBoundingClientRect &&\n    (!editor.selection ||\n      (editor.selection && Range.isCollapsed(editor.selection)))\n  ) {\n    const leafEl = domRange.startContainer.parentElement!\n\n    // COMPAT: In Chrome, domRange.getBoundingClientRect() can return zero dimensions for valid ranges (e.g. line breaks).\n    // When this happens, do not scroll like most editors do.\n    const domRect = domRange.getBoundingClientRect()\n    const isZeroDimensionRect =\n      domRect.width === 0 &&\n      domRect.height === 0 &&\n      domRect.x === 0 &&\n      domRect.y === 0\n\n    if (isZeroDimensionRect) {\n      const leafRect = leafEl.getBoundingClientRect()\n      const leafHasDimensions = leafRect.width > 0 || leafRect.height > 0\n\n      if (leafHasDimensions) {\n        return\n      }\n    }\n\n    // Default behavior: use domRange's getBoundingClientRect\n    leafEl.getBoundingClientRect = domRange.getBoundingClientRect.bind(domRange)\n    scrollIntoView(leafEl, {\n      scrollMode: 'if-needed',\n    })\n\n    // @ts-expect-error an unorthodox delete D:\n    delete leafEl.getBoundingClientRect\n  }\n}\n\n/**\n * Check if an event is overrided by a handler.\n */\n\nexport const isEventHandled = <\n  EventType extends React.SyntheticEvent<unknown, unknown>,\n>(\n  event: EventType,\n  handler?: (event: EventType) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.isDefaultPrevented() || event.isPropagationStopped()\n}\n\n/**\n * Check if the event's target is an input element\n */\nexport const isDOMEventTargetInput = <\n  EventType extends React.SyntheticEvent<unknown, unknown>,\n>(\n  event: EventType\n) => {\n  return (\n    isDOMNode(event.target) &&\n    (event.target instanceof HTMLInputElement ||\n      event.target instanceof HTMLTextAreaElement)\n  )\n}\n\n/**\n * Check if a DOM event is overrided by a handler.\n */\n\nexport const isDOMEventHandled = <E extends Event>(\n  event: E,\n  handler?: (event: E) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.defaultPrevented\n}\n\nconst handleNativeHistoryEvents = (editor: Editor, event: InputEvent) => {\n  const maybeHistoryEditor: any = editor\n  if (\n    event.inputType === 'historyUndo' &&\n    typeof maybeHistoryEditor.undo === 'function'\n  ) {\n    maybeHistoryEditor.undo()\n    return\n  }\n  if (\n    event.inputType === 'historyRedo' &&\n    typeof maybeHistoryEditor.redo === 'function'\n  ) {\n    maybeHistoryEditor.redo()\n    return\n  }\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `focused` state of the editor.\n */\n\nexport const FocusedContext = createContext(false)\n\n/**\n * Get the current `focused` state of the editor.\n */\n\nexport const useFocused = (): boolean => {\n  return useContext(FocusedContext)\n}\n","import React from 'react'\n\nexport const REACT_MAJOR_VERSION = parseInt(React.version.split('.')[0], 10)\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Descendant, Editor, Node, Operation, Scrubber, Selection } from 'slate'\nimport { EDITOR_TO_ON_CHANGE } from 'slate-dom'\nimport { FocusedContext } from '../hooks/use-focused'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport {\n  useSelectorContext,\n  SlateSelectorContext,\n} from '../hooks/use-slate-selector'\nimport { EditorContext } from '../hooks/use-slate-static'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { REACT_MAJOR_VERSION } from '../utils/environment'\n\n/**\n * A wrapper around the provider to handle `onChange` events, because the editor\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\n */\n\nexport const Slate = (props: {\n  editor: ReactEditor\n  initialValue: Descendant[]\n  children: React.ReactNode\n  onChange?: (value: Descendant[]) => void\n  onSelectionChange?: (selection: Selection) => void\n  onValueChange?: (value: Descendant[]) => void\n}) => {\n  const {\n    editor,\n    children,\n    onChange,\n    onSelectionChange,\n    onValueChange,\n    initialValue,\n    ...rest\n  } = props\n\n  // Run once on first mount, but before `useEffect` or render\n  React.useState(() => {\n    if (!Node.isNodeList(initialValue)) {\n      throw new Error(\n        `[Slate] initialValue is invalid! Expected a list of elements but got: ${Scrubber.stringify(\n          initialValue\n        )}`\n      )\n    }\n\n    if (!Editor.isEditor(editor)) {\n      throw new Error(\n        `[Slate] editor is invalid! You passed: ${Scrubber.stringify(editor)}`\n      )\n    }\n\n    editor.children = initialValue\n    Object.assign(editor, rest)\n  })\n\n  const { selectorContext, onChange: handleSelectorChange } =\n    useSelectorContext()\n\n  const onContextChange = useCallback(\n    (options?: { operation?: Operation }) => {\n      if (onChange) {\n        onChange(editor.children)\n      }\n\n      switch (options?.operation?.type) {\n        case 'set_selection':\n          onSelectionChange?.(editor.selection)\n          break\n        default:\n          onValueChange?.(editor.children)\n      }\n\n      handleSelectorChange()\n    },\n    [editor, handleSelectorChange, onChange, onSelectionChange, onValueChange]\n  )\n\n  useEffect(() => {\n    EDITOR_TO_ON_CHANGE.set(editor, onContextChange)\n\n    return () => {\n      EDITOR_TO_ON_CHANGE.set(editor, () => {})\n    }\n  }, [editor, onContextChange])\n\n  const [isFocused, setIsFocused] = useState(ReactEditor.isFocused(editor))\n\n  useEffect(() => {\n    setIsFocused(ReactEditor.isFocused(editor))\n  }, [editor])\n\n  useIsomorphicLayoutEffect(() => {\n    const fn = () => setIsFocused(ReactEditor.isFocused(editor))\n    if (REACT_MAJOR_VERSION >= 17) {\n      // In React >= 17 onFocus and onBlur listen to the focusin and focusout events during the bubbling phase.\n      // Therefore in order for <Editable />'s handlers to run first, which is necessary for ReactEditor.isFocused(editor)\n      // to return the correct value, we have to listen to the focusin and focusout events without useCapture here.\n      document.addEventListener('focusin', fn)\n      document.addEventListener('focusout', fn)\n      return () => {\n        document.removeEventListener('focusin', fn)\n        document.removeEventListener('focusout', fn)\n      }\n    } else {\n      document.addEventListener('focus', fn, true)\n      document.addEventListener('blur', fn, true)\n      return () => {\n        document.removeEventListener('focus', fn, true)\n        document.removeEventListener('blur', fn, true)\n      }\n    }\n  }, [])\n\n  return (\n    <SlateSelectorContext.Provider value={selectorContext}>\n      <EditorContext.Provider value={editor}>\n        <FocusedContext.Provider value={isFocused}>\n          {children}\n        </FocusedContext.Provider>\n      </EditorContext.Provider>\n    </SlateSelectorContext.Provider>\n  )\n}\n","import { useContext } from 'react'\n\nimport { EditorContext } from './use-slate-static'\n\n/**\n * Get the current editor object from the React context.\n * @deprecated Use useSlateStatic instead.\n */\n\nexport const useEditor = () => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useEditor\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n","import { useCallback } from 'react'\nimport { Editor, Range } from 'slate'\nimport { useElementIf } from './use-element'\nimport { useSlateSelector } from './use-slate-selector'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * Get the current `selected` state of an element.\n */\n\nexport const useSelected = (): boolean => {\n  const element = useElementIf()\n\n  // Breaking the rules of hooks is fine here since `!element` will remain true\n  // or false for the entire lifetime of the component this hook is called from.\n  // TODO: Decide if we want to throw an error instead when calling\n  // `useSelected` outside of an element (potentially a breaking change).\n  if (!element) return false\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const selector = useCallback(\n    (editor: Editor) => {\n      if (!editor.selection) return false\n      const path = ReactEditor.findPath(editor, element)\n      const range = Editor.range(editor, path)\n      return !!Range.intersection(range, editor.selection)\n    },\n    [element]\n  )\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useSlateSelector(selector, undefined, {\n    // Defer the selector until after `Editable` has rendered so that the path\n    // will be accurate.\n    deferred: true,\n  })\n}\n","import { BaseSelection, Range } from 'slate'\n\nimport { useSlateSelector } from './use-slate-selector'\n\n/**\n * Get the current slate selection.\n * Only triggers a rerender when the selection actually changes\n */\nexport const useSlateSelection = () => {\n  return useSlateSelector(editor => editor.selection, isSelectionEqual)\n}\n\nconst isSelectionEqual = (a: BaseSelection, b: BaseSelection) => {\n  if (!a && !b) return true\n  if (!a || !b) return false\n  return Range.equals(a, b)\n}\n","import ReactDOM from 'react-dom'\nimport { BaseEditor, Node } from 'slate'\nimport { withDOM, IS_ANDROID, EDITOR_TO_PENDING_SELECTION } from 'slate-dom'\nimport { ReactEditor } from './react-editor'\nimport { REACT_MAJOR_VERSION } from '../utils/environment'\nimport { getChunkTreeForNode } from '../chunking'\n\n/**\n * `withReact` adds React and DOM specific behaviors to the editor.\n *\n * If you are using TypeScript, you must extend Slate's CustomTypes to use\n * this plugin.\n *\n * See https://docs.slatejs.org/concepts/11-typescript to learn how.\n */\nexport const withReact = <T extends BaseEditor>(\n  editor: T,\n  clipboardFormatKey = 'x-slate-fragment'\n): T & ReactEditor => {\n  let e = editor as T & ReactEditor\n\n  e = withDOM(e, clipboardFormatKey)\n\n  const { onChange, apply, insertText } = e\n\n  e.getChunkSize = () => null\n\n  if (IS_ANDROID) {\n    e.insertText = (text, options) => {\n      // COMPAT: Android devices, specifically Samsung devices, experience cursor jumping.\n      // This issue occurs when the ⁠insertText function is called immediately after typing.\n      // The problem arises because typing schedules a selection change.\n      // However, this selection change is only executed after the ⁠insertText function.\n      // As a result, the already obsolete selection is applied, leading to incorrect\n      // final cursor position.\n      EDITOR_TO_PENDING_SELECTION.delete(e)\n\n      return insertText(text, options)\n    }\n  }\n\n  e.onChange = options => {\n    // COMPAT: React < 18 doesn't batch `setState` hook calls, which means\n    // that the children and selection can get out of sync for one render\n    // pass. So we have to use this unstable API to ensure it batches them.\n    // (2019/12/03)\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\n    const maybeBatchUpdates =\n      REACT_MAJOR_VERSION < 18\n        ? ReactDOM.unstable_batchedUpdates\n        : (callback: () => void) => callback()\n\n    maybeBatchUpdates(() => {\n      onChange(options)\n    })\n  }\n\n  // On move_node, if the chunking optimization is enabled for the parent of the\n  // node being moved, add the moved node to the movedNodeKeys set of the\n  // parent's chunk tree.\n  e.apply = operation => {\n    if (operation.type === 'move_node') {\n      const parent = Node.parent(e, operation.path)\n      const chunking = !!e.getChunkSize(parent)\n\n      if (chunking) {\n        const node = Node.get(e, operation.path)\n        const chunkTree = getChunkTreeForNode(e, parent)\n        const key = ReactEditor.findKey(e, node)\n        chunkTree.movedNodeKeys.add(key)\n      }\n    }\n\n    apply(operation)\n  }\n\n  return e\n}\n"],"names":["objectWithoutPropertiesLoose","toPrimitive","toPropertyKey","EditorContext","createContext","useSlateStatic","editor","useContext","Error","ReactEditor","DOMEditor","RESOLVE_DELAY","FLUSH_DELAY","debug","isDataTransfer","value","constructor","name","createAndroidInputManager","_ref","scheduleOnDOMSelectionChange","onDOMSelectionChange","flushing","compositionEndTimeoutId","flushTimeoutId","actionTimeoutId","idCounter","insertPositionHint","applyPendingSelection","pendingSelection","EDITOR_TO_PENDING_SELECTION","get","delete","selection","normalized","normalizeRange","Range","equals","Transforms","select","performAction","action","EDITOR_TO_PENDING_ACTION","at","target","Point","isPoint","normalizePoint","targetRange","Editor","range","run","flush","clearTimeout","hasPendingDiffs","hasPendingAction","setTimeout","selectionRef","rangeRef","affinity","EDITOR_TO_USER_MARKS","set","marks","EDITOR_TO_PENDING_DIFFS","scheduleSelectionChange","diff","_EDITOR_TO_PENDING_DI","_EDITOR_TO_PENDING_DI2","pendingMarks","EDITOR_TO_PENDING_INSERTION_MARKS","undefined","text","insertText","deleteFragment","filter","_ref2","id","verifyDiffState","cancel","unref","userMarks","onChange","handleCompositionEnd","_event","IS_COMPOSING","handleCompositionStart","updatePlaceholderVisibility","forceHide","arguments","length","placeholderElement","EDITOR_TO_PLACEHOLDER_ELEMENT","style","display","removeProperty","storeDiff","path","_EDITOR_TO_PENDING_DI3","pendingDiffs","Node","leaf","idx","findIndex","change","Path","normalizeStringDiff","push","merged","mergeStringDiffs","splice","_objectSpread","scheduleAction","handleDOMBeforeInput","event","_targetRange2","IS_NODE_MAP_DIRTY","inputType","type","data","dataTransfer","nativeTargetRange","getTargetRanges","toSlateRange","exactMatch","suppressThrow","window","getWindow","domSelection","getSelection","canStoreDiff","startsWith","direction","endsWith","start","end","edges","isExpanded","offset","next","match","Text","isText","anchor","focus","relevantPendingDiffs","find","diffs","applyStringDiff","point","handleUserSelect","isCollapsed","targetNode","deleteForward","_nativeTargetRange","nativeCollapsed","isDOMSelection","collapsed","deleteBackward","unit","insertSoftBreak","insertBreak","insertData","replace","test","slice","includes","parts","split","forEach","line","i","hintPosition","search","diffPosition","scheduleFlush","currentSelection","newPoint","_EDITOR_TO_PENDING_DI4","hasPendingChanges","isFlushing","pathChanged","parentPathChanged","handleInput","handleKeyDown","_","handleDomMutations","mutations","some","mutation","isTrackedMutation","_EDITOR_TO_FORCE_REND","EDITOR_TO_FORCE_RENDER","useIsMounted","isMountedRef","useRef","useEffect","current","useIsomorphicLayoutEffect","CAN_USE_DOM","useLayoutEffect","useMutationObserver","node","callback","options","mutationObserver","useState","MutationObserver","takeRecords","observe","disconnect","MUTATION_OBSERVER_CONFIG","subtree","childList","characterData","useAndroidInputManager","IS_ANDROID","_objectWithoutProperties","_excluded","isMounted","inputManager","EDITOR_TO_SCHEDULE_FLUSH","String","props","isLast","parent","findPath","parentPath","isMarkPlaceholder","Boolean","MARK_PLACEHOLDER_SYMBOL","isVoid","React","createElement","ZeroWidthString","string","children","isInline","isLineBreak","TextString","isTrailing","ref","getTextContent","concat","initialText","textWithTrailing","textContent","MemoizedText","memo","forwardRef","attributes","PLACEHOLDER_DELAY","disconnectPlaceholderResizeObserver","placeholderResizeObserver","releaseObserver","clearTimeoutRef","timeoutRef","defaultRenderLeaf","DefaultLeaf","Leaf","renderPlaceholder","renderLeaf","leafPosition","placeholderRef","showPlaceholder","setShowPlaceholder","showPlaceholderTimeoutRef","callbackPlaceholderRef","useCallback","placeholderEl","_leaf$onPlaceholderRe","onPlaceholderResize","call","ResizeObserver","ResizeObserverPolyfill","_leaf$onPlaceholderRe2","leafIsPlaceholder","PLACEHOLDER_SYMBOL","placeholderProps","placeholder","position","top","pointerEvents","width","maxWidth","opacity","userSelect","textDecoration","WebkitUserModify","IS_WEBKIT","contentEditable","Fragment","MemoizedLeaf","prev","useGenericSelector","selector","equalityFn","forceRender","useReducer","s","latestSubscriptionCallbackError","latestSelector","latestSelectedState","selectedState","selectorResult","err","isError","message","stack","update","newSelectedState","error","DecorateContext","useDecorations","parentDecorations","decorate","addEventListener","isTextDecorationsEqual","isElementDecorationsEqual","decorations","unsubscribe","useMemo","useDecorateContext","decorateProp","eventListeners","Set","latestDecorate","listener","entry","add","defaultRenderText","DefaultText","renderText","decoratedLeaves","SlateText","key","findKey","callbackRef","span","KEY_TO_ELEMENT","EDITOR_TO_KEY_TO_ELEMENT","NODE_TO_ELEMENT","ELEMENT_TO_NODE","defaultRenderElement","DefaultElement","Element","element","renderElement","renderChunk","readOnly","useReadOnly","useChildren","hasInlines","dir","getDirection","Tag","texts","height","color","outline","NODE_TO_INDEX","NODE_TO_PARENT","MemoizedElement","ChunkTreeHelper","chunkTree","chunkSize","_defineProperty","root","pointerChunk","pointerIndex","pointerIndexStack","reachedEnd","validateState","readLeaf","pointerSiblings","cachedPointerNode","exitChunk","enterChunkUntilLeaf","pointerNode","returnToPreviousLeaf","insertBefore","leaves","insertAfter","beforeDepth","afterDepth","remainingCapacity","toInsertCount","Math","min","leavesToInsert","rawInsertAfter","rawInsertPointer","savePointer","finalPointer","restorePointer","minDepth","max","remove","invalidateChunk","c","modifiedChunks","atStart","getPointerNode","getChunkPath","chunk","index","indexOf","unshift","savedPointer","indexStack","enterChunk","_this$pointerNode","_this$pointerNode2","previousPointerChunk","pop","groupIntoChunks","perChunk","chunks","chunkNodes","Key","newTotal","depthForTotal","depth","perTopLevelChunk","pow","validateDescendant","actualIndexStack","join","ChildrenHelper","cachedKeys","Array","read","n","slicedChildren","remaining","maxChildren","lookAhead","elementResult","candidateNode","candidateKey","toChunkLeaves","nodes","startIndex","map","cachedKey","reconcileChildren","rerenderChildren","onInsert","onUpdate","onIndexChange","clear","chunkTreeHelper","childrenHelper","treeLeaf","_loop","wasMoved","movedNodeKeys","has","insertedChildrenStartIndex","insertedChildren","matchingChild","relativeIndex","matchingChildIndex","remainingChildren","KEY_TO_CHUNK_TREE","WeakMap","getChunkTreeForNode","reconcile","defaultRenderChunk","ChunkAncestor","ancestor","chunkNode","renderedChunk","highest","lowest","MemoizedChunk","ChunkTree","ElementContext","useElement","context","useElementIf","isEditor","isBlock","isElement","isLeafBlock","getChunkSize","chunking","decorationsByChild","childrenToRedecorate","useDecorationsByChild","renderElementComponent","Provider","ElementComponent","renderTextComponent","TextComponent","splitDecorationsByChild","mutableDecorationsByChild","_mutableDecorationsBy","previousDecorations","ReadOnlyContext","SlateSelectorContext","refEquality","a","b","useSlateSelector","deferred","genericSelector","useSelectorContext","deferredEventListeners","flushDeferred","callbackProp","selectorContext","useFlushDeferredSelectorsOnRender","useSlate","EDITOR_TO_V","getEditorVersionRef","v","useSlateWithV","vRef","useTrackUserInput","receivedUserInput","animationFrameIdRef","onUserInput","cancelAnimationFrame","requestAnimationFrame","createRestoreDomManager","bufferedMutations","registerMutations","trackedMutations","restoreDOM","reverse","removedNodes","nextSibling","addedNodes","removeChild","characterDataOldValue","RestoreDOMComponent","Component","_this$mutationObserve","componentDidMount","manager","getSnapshotBeforeUpdate","_this$mutationObserve2","_this$mutationObserve3","_this$manager2","pendingMutations","_this$manager","componentDidUpdate","_this$manager3","componentWillUnmount","_this$mutationObserve4","render","RestoreDOM","ComposingContext","useComposing","Children","Editable","forwardedRef","defaultRenderPlaceholder","DefaultPlaceholder","autoFocus","defaultDecorate","onDOMBeforeInput","propsOnDOMBeforeInput","scrollSelectionIntoView","defaultScrollSelectionIntoView","userStyle","as","disableDefaultStyles","isComposing","setIsComposing","deferredOperations","placeholderHeight","setPlaceholderHeight","processing","IS_READ_ONLY","state","isDraggingInternally","isUpdatingSelection","latestElement","hasMarkPlaceholder","androidInputManagerRef","throttle","el","toDOMNode","getRootNode","ShadowRoot","active","getActiveElement","document","execCommand","deselect","androidInputManager","findDocumentOrShadowRoot","activeElement","IS_FOCUSED","anchorNode","focusNode","anchorNodeSelectable","hasEditableTarget","isTargetInsideNonReadonlyVoid","focusNodeInEditor","hasTarget","debounce","_androidInputManagerR","_androidInputManagerR2","getDefaultView","EDITOR_TO_WINDOW","EDITOR_TO_ELEMENT","isFocused","setDomSelection","forceChange","hasDomSelection","IS_FIREFOX","rangeCount","firstRange","getRangeAt","lastRange","startContainer","endContainer","editorElement","hasDomSelectionInEditor","contains","slateRange","_anchorNode","parentElement","hasAttribute","hasRange","newDomRange","toDOMRange","e","collapseToEnd","isBackward","setBaseAndExtent","endOffset","startOffset","removeAllRanges","ensureSelection","timeoutId","animationFrameId","ensureDomSelection","handleNativeHistoryEvents","ranges","newRange","setStart","setEnd","preventDefault","stopImmediatePropagation","isDOMEventHandled","_EDITOR_TO_USER_SELEC","isCompositionChange","native","_node$parentElement","_window$getComputedSt","toDOMPoint","closest","hasDOMNode","_lastText$textContent","lastText","createTreeWalker","NodeFilter","SHOW_TEXT","lastChild","getComputedStyle","whiteSpace","block","above","EDITOR_TO_USER_SELECTION","toRestore","HAS_BEFORE_INPUT_SUPPORT","removeEventListener","onSelectionChange","targetElement","HTMLElement","targetTagName","tagName","stoppedDragging","decorateContext","from","placeHolderResizeHandler","_placeholderEl$getBou","getBoundingClientRect","rest","_excluded2","loose","unset","Object","fromEntries","keys","mark","role","spellCheck","autoCorrect","autoCapitalize","zindex","suppressContentEditableWarning","wordWrap","minHeight","onBeforeInput","isEventHandled","hasSelectableTarget","onInput","op","nativeEvent","onBlur","relatedTarget","isDOMElement","isDOMNode","toSlateNode","onClick","hasPath","detail","TRIPLE_CLICK","blockPath","_block$","startVoid","void","endVoid","onCompositionEnd","_androidInputManagerR3","Promise","resolve","then","IS_FIREFOX_LEGACY","IS_IOS","IS_WECHATBROWSER","IS_UC_MOBILE","placeholderMarks","onCompositionUpdate","onCompositionStart","_androidInputManagerR4","onCopy","isDOMEventTargetInput","setFragmentData","clipboardData","onCut","onDragOver","onDragStart","voidMatch","voids","onDrop","draggedRange","findEventRange","onDragEnd","onFocus","onKeyDown","_androidInputManagerR5","isRTL","Hotkeys","isRedo","maybeHistoryEditor","redo","isUndo","undo","isMoveLineBackward","move","isMoveLineForward","isExtendLineBackward","edge","isExtendLineForward","isMoveBackward","collapse","isMoveForward","isMoveWordBackward","isMoveWordForward","isBold","isItalic","isTransposeCharacter","isSoftBreak","isSplitBlock","isDeleteBackward","isDeleteForward","isDeleteLineBackward","isDeleteLineForward","isDeleteWordBackward","isDeleteWordForward","IS_CHROME","currentNode","onPaste","isPlainTextOnlyPaste","domRange","leafEl","domRect","isZeroDimensionRect","x","y","leafRect","leafHasDimensions","bind","scrollIntoView","scrollMode","handler","shouldTreatEventAsHandled","isDefaultPrevented","isPropagationStopped","HTMLInputElement","HTMLTextAreaElement","defaultPrevented","FocusedContext","useFocused","REACT_MAJOR_VERSION","parseInt","version","Slate","onValueChange","initialValue","isNodeList","Scrubber","stringify","assign","handleSelectorChange","onContextChange","_options$operation","operation","EDITOR_TO_ON_CHANGE","setIsFocused","fn","useEditor","useSelected","intersection","useSlateSelection","isSelectionEqual","withReact","clipboardFormatKey","withDOM","apply","maybeBatchUpdates","ReactDOM","unstable_batchedUpdates"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"debugId":null}}]
}