{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"file":"defaultOptionsValidator.js","sources":["file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/defaultOptionsProcessor.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/defaultOptionsValidator.ts"],"sourcesContent":["import type {MiddlewareHooks, RequestOptions} from 'get-it'\n\nconst isReactNative = typeof navigator === 'undefined' ? false : navigator.product === 'ReactNative'\n\nconst defaultOptions = {timeout: isReactNative ? 60000 : 120000} satisfies Partial<RequestOptions>\n\n/** @public */\nexport const processOptions = function processOptions(opts) {\n  const options = {\n    ...defaultOptions,\n    ...(typeof opts === 'string' ? {url: opts} : opts),\n  } satisfies RequestOptions\n\n  // Normalize timeouts\n  options.timeout = normalizeTimeout(options.timeout)\n\n  // Shallow-merge (override) existing query params\n  if (options.query) {\n    const {url, searchParams} = splitUrl(options.url)\n\n    for (const [key, value] of Object.entries(options.query)) {\n      if (value !== undefined) {\n        if (Array.isArray(value)) {\n          for (const v of value) {\n            searchParams.append(key, v as string)\n          }\n        } else {\n          searchParams.append(key, value as string)\n        }\n      }\n\n      // Merge back params into url\n      const search = searchParams.toString()\n      if (search) {\n        options.url = `${url}?${search}`\n      }\n    }\n  }\n\n  // Implicit POST if we have not specified a method but have a body\n  options.method =\n    options.body && !options.method ? 'POST' : (options.method || 'GET').toUpperCase()\n\n  return options\n} satisfies MiddlewareHooks['processOptions']\n\n/**\n * Given a string URL, extracts the query string and URL from each other, and returns them.\n * Note that we cannot use the `URL` constructor because of old React Native versions which are\n * majorly broken and returns incorrect results:\n *\n * (`new URL('http://foo/?a=b').toString()` == 'http://foo/?a=b/')\n */\nfunction splitUrl(url: string): {url: string; searchParams: URLSearchParams} {\n  const qIndex = url.indexOf('?')\n  if (qIndex === -1) {\n    return {url, searchParams: new URLSearchParams()}\n  }\n\n  const base = url.slice(0, qIndex)\n  const qs = url.slice(qIndex + 1)\n\n  // React Native's URL and URLSearchParams are broken, so passing a string to URLSearchParams\n  // does not work, leading to an empty query string. For other environments, this should be enough\n  if (!isReactNative) {\n    return {url: base, searchParams: new URLSearchParams(qs)}\n  }\n\n  // Sanity-check; we do not know of any environment where this is the case,\n  // but if it is, we should not proceed without giving a descriptive error\n  if (typeof decodeURIComponent !== 'function') {\n    throw new Error(\n      'Broken `URLSearchParams` implementation, and `decodeURIComponent` is not defined',\n    )\n  }\n\n  const params = new URLSearchParams()\n  for (const pair of qs.split('&')) {\n    const [key, value] = pair.split('=')\n    if (key) {\n      params.append(decodeQueryParam(key), decodeQueryParam(value || ''))\n    }\n  }\n\n  return {url: base, searchParams: params}\n}\n\nfunction decodeQueryParam(value: string): string {\n  return decodeURIComponent(value.replace(/\\+/g, ' '))\n}\n\nfunction normalizeTimeout(time: RequestOptions['timeout']) {\n  if (time === false || time === 0) {\n    return false\n  }\n\n  if (time.connect || time.socket) {\n    return time\n  }\n\n  const delay = Number(time)\n  if (isNaN(delay)) {\n    return normalizeTimeout(defaultOptions.timeout)\n  }\n\n  return {connect: delay, socket: delay}\n}\n","import type {MiddlewareHooks} from 'get-it'\n\nconst validUrl = /^https?:\\/\\//i\n\n/** @public */\nexport const validateOptions = function validateOptions(options) {\n  if (!validUrl.test(options.url)) {\n    throw new Error(`\"${options.url}\" is not a valid URL`)\n  }\n} satisfies MiddlewareHooks['validateOptions']\n"],"names":["isReactNative","navigator","product","defaultOptions","timeout","processOptions","opts","options","url","normalizeTimeout","query","searchParams","qIndex","indexOf","URLSearchParams","base","slice","qs","decodeURIComponent","Error","params","pair","split","key","value","append","decodeQueryParam","splitUrl","Object","entries","Array","isArray","v","search","toString","method","body","toUpperCase","replace","time","connect","socket","delay","Number","isNaN","validUrl","validateOptions","test"],"mappings":";;;;AAEA,MAAMA,IAAAA,CAAAA,CAAAA,OAAuBC,YAAc,GAAA,KAA4C,kBAAtBA,UAAUC,OAAAA,EAErEC,IAAiB;IAACC,SAASJ,IAAgB,MAAQ;AAAA,GAG5CK,IAAiB,SAAwBC,CAAAA;IACpD,MAAMC,IAAU;QAAA,GACXJ,CAAAA;QAAAA,GACiB,YAAA,OAATG,IAAoB;YAACE,KAAKF;QAAAA,IAAQA,CAAAA;IAAAA;IAO/C,IAHAC,EAAQH,OAAAA,GAAUK,EAAiBF,EAAQH,OAAAA,GAGvCG,EAAQG,KAAAA,EAAO;QACjB,MAAA,EAAMF,KAACA,CAAAA,EAAAG,cAAKA,CAAAA,EAAAA,GAmChB,SAAkBH,CAAAA;YAChB,MAAMI,IAASJ,EAAIK,OAAAA,CAAQ;YAC3B,IAAA,CAAe,MAAXD,GACF,OAAO;gBAACJ,KAAAA;gBAAKG,cAAc,IAAIG;YAAAA;YAGjC,MAAMC,IAAOP,EAAIQ,KAAAA,CAAM,GAAGJ,IACpBK,IAAKT,EAAIQ,KAAAA,CAAMJ,IAAS;YAI9B,IAAA,CAAKZ,GACH,OAAO;gBAACQ,KAAKO;gBAAMJ,cAAc,IAAIG,gBAAgBG;YAAAA;YAKvD,IAAkC,cAAA,OAAvBC,oBACT,MAAM,IAAIC,MACR;YAIJ,MAAMC,IAAS,IAAIN;YACnB,KAAA,MAAWO,KAAQJ,EAAGK,KAAAA,CAAM,KAAM;gBAChC,MAAA,CAAOC,GAAKC,EAAAA,GAASH,EAAKC,KAAAA,CAAM;gBAC5BC,KACFH,EAAOK,MAAAA,CAAOC,EAAiBH,IAAMG,EAAiBF,KAAS;YAAG;YAItE,OAAO;gBAAChB,KAAKO;gBAAMJ,cAAcS;YAAAA;QACnC,CAnEgCO,CAASpB,EAAQC,GAAAA;QAE7C,KAAA,MAAA,CAAYe,GAAKC,EAAAA,IAAUI,OAAOC,OAAAA,CAAQtB,EAAQG,KAAAA,EAAQ;YACxD,IAAA,KAAc,MAAVc,GACF,IAAIM,MAAMC,OAAAA,CAAQP,IAChB,KAAA,MAAWQ,KAAKR,EACdb,EAAac,MAAAA,CAAOF,GAAKS;iBAG3BrB,EAAac,MAAAA,CAAOF,GAAKC;YAK7B,MAAMS,IAAStB,EAAauB,QAAAA;YACxBD,KAAAA,CACF1B,EAAQC,GAAAA,GAAM,GAAGA,EAAAA,CAAAA,EAAOyB,GAAAA;QAAM;IAElC;IAIF,OAAA1B,EAAQ4B,MAAAA,GACN5B,EAAQ6B,IAAAA,IAAAA,CAAS7B,EAAQ4B,MAAAA,GAAS,SAAA,CAAU5B,EAAQ4B,MAAAA,IAAU,KAAA,EAAOE,WAAAA,IAEhE9B;AACT;AA2CA,SAASmB,EAAiBF,CAAAA;IACxB,OAAON,mBAAmBM,EAAMc,OAAAA,CAAQ,OAAO;AACjD;AAEA,SAAS7B,EAAiB8B,CAAAA;IACxB,IAAA,CAAa,MAATA,KAA2B,MAATA,GACpB,OAAA,CAAO;IAGT,IAAIA,EAAKC,OAAAA,IAAWD,EAAKE,MAAAA,EACvB,OAAOF;IAGT,MAAMG,IAAQC,OAAOJ;IACrB,OAAIK,MAAMF,KACDjC,EAAiBN,EAAeC,OAAAA,IAGlC;QAACoC,SAASE;QAAOD,QAAQC;IAAAA;AAClC;ACxGA,MAAMG,IAAW,iBAGJC,IAAkB,SAAyBvC,CAAAA;IACtD,IAAA,CAAKsC,EAASE,IAAAA,CAAKxC,EAAQC,GAAAA,GACzB,MAAM,IAAIW,MAAM,CAAA,CAAA,EAAIZ,EAAQC,GAAAA,CAAAA,oBAAAA,CAAAA;AAEhC;;CAAA,mDAAA","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"file":"createRequester.js","sources":["file:///Users/isseemii/app/letterseed/node_modules/get-it/src/util/middlewareReducer.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/createRequester.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/util/pubsub.ts"],"sourcesContent":["import type {ApplyMiddleware, MiddlewareReducer} from 'get-it'\n\nexport const middlewareReducer = (middleware: MiddlewareReducer) =>\n  function applyMiddleware(hook, defaultValue, ...args) {\n    const bailEarly = hook === 'onError'\n\n    let value = defaultValue\n    for (let i = 0; i < middleware[hook].length; i++) {\n      const handler = middleware[hook][i]\n      // @ts-expect-error -- find a better way to deal with argument tuples\n      value = handler(value, ...args)\n\n      if (bailEarly && !value) {\n        break\n      }\n    }\n\n    return value\n  } as ApplyMiddleware\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {processOptions} from './middleware/defaultOptionsProcessor'\nimport {validateOptions} from './middleware/defaultOptionsValidator'\nimport type {\n  HttpContext,\n  HttpRequest,\n  HttpRequestOngoing,\n  Middleware,\n  MiddlewareChannels,\n  MiddlewareHooks,\n  MiddlewareReducer,\n  MiddlewareResponse,\n  Middlewares,\n  Requester,\n  RequestOptions,\n} from './types'\nimport {middlewareReducer} from './util/middlewareReducer'\nimport {createPubSub} from './util/pubsub'\n\nconst channelNames = [\n  'request',\n  'response',\n  'progress',\n  'error',\n  'abort',\n] satisfies (keyof MiddlewareChannels)[]\nconst middlehooks = [\n  'processOptions',\n  'validateOptions',\n  'interceptRequest',\n  'finalizeOptions',\n  'onRequest',\n  'onResponse',\n  'onError',\n  'onReturn',\n  'onHeaders',\n] satisfies (keyof MiddlewareHooks)[]\n\n/** @public */\nexport function createRequester(initMiddleware: Middlewares, httpRequest: HttpRequest): Requester {\n  const loadedMiddleware: Middlewares = []\n  const middleware: MiddlewareReducer = middlehooks.reduce(\n    (ware, name) => {\n      ware[name] = ware[name] || []\n      return ware\n    },\n    {\n      processOptions: [processOptions],\n      validateOptions: [validateOptions],\n    } as any,\n  )\n\n  function request(opts: RequestOptions | string) {\n    const onResponse = (reqErr: Error | null, res: MiddlewareResponse, ctx: HttpContext) => {\n      let error = reqErr\n      let response: MiddlewareResponse | null = res\n\n      // We're processing non-errors first, in case a middleware converts the\n      // response into an error (for instance, status >= 400 == HttpError)\n      if (!error) {\n        try {\n          response = applyMiddleware('onResponse', res, ctx)\n        } catch (err: any) {\n          response = null\n          error = err\n        }\n      }\n\n      // Apply error middleware - if middleware return the same (or a different) error,\n      // publish as an error event. If we *don't* return an error, assume it has been handled\n      error = error && applyMiddleware('onError', error, ctx)\n\n      // Figure out if we should publish on error/response channels\n      if (error) {\n        channels.error.publish(error)\n      } else if (response) {\n        channels.response.publish(response)\n      }\n    }\n\n    const channels: MiddlewareChannels = channelNames.reduce((target, name) => {\n      target[name] = createPubSub() as MiddlewareChannels[typeof name]\n      return target\n    }, {} as any)\n\n    // Prepare a middleware reducer that can be reused throughout the lifecycle\n    const applyMiddleware = middlewareReducer(middleware)\n\n    // Parse the passed options\n    const options = applyMiddleware('processOptions', opts as RequestOptions)\n\n    // Validate the options\n    applyMiddleware('validateOptions', options)\n\n    // Build a context object we can pass to child handlers\n    const context = {options, channels, applyMiddleware}\n\n    // We need to hold a reference to the current, ongoing request,\n    // in order to allow cancellation. In the case of the retry middleware,\n    // a new request might be triggered\n    let ongoingRequest: HttpRequestOngoing | undefined\n    const unsubscribe = channels.request.subscribe((ctx) => {\n      // Let request adapters (node/browser) perform the actual request\n      ongoingRequest = httpRequest(ctx, (err, res) => onResponse(err, res!, ctx))\n    })\n\n    // If we abort the request, prevent further requests from happening,\n    // and be sure to cancel any ongoing request (obviously)\n    channels.abort.subscribe(() => {\n      unsubscribe()\n      if (ongoingRequest) {\n        ongoingRequest.abort()\n      }\n    })\n\n    // See if any middleware wants to modify the return value - for instance\n    // the promise or observable middlewares\n    const returnValue = applyMiddleware('onReturn', channels, context)\n\n    // If return value has been modified by a middleware, we expect the middleware\n    // to publish on the 'request' channel. If it hasn't been modified, we want to\n    // trigger it right away\n    if (returnValue === channels) {\n      channels.request.publish(context)\n    }\n\n    return returnValue\n  }\n\n  request.use = function use(newMiddleware: Middleware) {\n    if (!newMiddleware) {\n      throw new Error('Tried to add middleware that resolved to falsey value')\n    }\n\n    if (typeof newMiddleware === 'function') {\n      throw new Error(\n        'Tried to add middleware that was a function. It probably expects you to pass options to it.',\n      )\n    }\n\n    if (newMiddleware.onReturn && middleware.onReturn.length > 0) {\n      throw new Error(\n        'Tried to add new middleware with `onReturn` handler, but another handler has already been registered for this event',\n      )\n    }\n\n    middlehooks.forEach((key) => {\n      if (newMiddleware[key]) {\n        middleware[key].push(newMiddleware[key] as any)\n      }\n    })\n\n    loadedMiddleware.push(newMiddleware)\n    return request\n  }\n\n  request.clone = () => createRequester(loadedMiddleware, httpRequest)\n\n  initMiddleware.forEach(request.use)\n\n  return request\n}\n","// Code borrowed from https://github.com/bjoerge/nano-pubsub\n\nimport type {PubSub, Subscriber} from 'get-it'\n\nexport function createPubSub<Message = void>(): PubSub<Message> {\n  const subscribers: {[id: string]: Subscriber<Message>} = Object.create(null)\n  let nextId = 0\n  function subscribe(subscriber: Subscriber<Message>) {\n    const id = nextId++\n    subscribers[id] = subscriber\n    return function unsubscribe() {\n      delete subscribers[id]\n    }\n  }\n\n  function publish(event: Message) {\n    for (const id in subscribers) {\n      subscribers[id](event)\n    }\n  }\n\n  return {\n    publish,\n    subscribe,\n  }\n}\n"],"names":["validateOptions","processOptions","channelNames","middlehooks","createRequester","initMiddleware","httpRequest","loadedMiddleware","middleware","reduce","ware","name","request","opts","channels","target","subscribers","Object","create","nextId","publish","event","id","subscribe","subscriber","createPubSub","applyMiddleware","hook","defaultValue","args","bailEarly","value","i","length","handler","middlewareReducer","options","context","ongoingRequest","unsubscribe","ctx","err","res","reqErr","error","response","onResponse","abort","returnValue","use","newMiddleware","Error","onReturn","forEach","key","push","clone"],"mappings":"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","ignoreList":[0,1,2],"debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"file":"_commonjsHelpers.js","sources":["file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/defaultOptionsProcessor.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/defaultOptionsValidator.ts"],"sourcesContent":["import type {MiddlewareHooks, RequestOptions} from 'get-it'\n\nconst isReactNative = typeof navigator === 'undefined' ? false : navigator.product === 'ReactNative'\n\nconst defaultOptions = {timeout: isReactNative ? 60000 : 120000} satisfies Partial<RequestOptions>\n\n/** @public */\nexport const processOptions = function processOptions(opts) {\n  const options = {\n    ...defaultOptions,\n    ...(typeof opts === 'string' ? {url: opts} : opts),\n  } satisfies RequestOptions\n\n  // Normalize timeouts\n  options.timeout = normalizeTimeout(options.timeout)\n\n  // Shallow-merge (override) existing query params\n  if (options.query) {\n    const {url, searchParams} = splitUrl(options.url)\n\n    for (const [key, value] of Object.entries(options.query)) {\n      if (value !== undefined) {\n        if (Array.isArray(value)) {\n          for (const v of value) {\n            searchParams.append(key, v as string)\n          }\n        } else {\n          searchParams.append(key, value as string)\n        }\n      }\n\n      // Merge back params into url\n      const search = searchParams.toString()\n      if (search) {\n        options.url = `${url}?${search}`\n      }\n    }\n  }\n\n  // Implicit POST if we have not specified a method but have a body\n  options.method =\n    options.body && !options.method ? 'POST' : (options.method || 'GET').toUpperCase()\n\n  return options\n} satisfies MiddlewareHooks['processOptions']\n\n/**\n * Given a string URL, extracts the query string and URL from each other, and returns them.\n * Note that we cannot use the `URL` constructor because of old React Native versions which are\n * majorly broken and returns incorrect results:\n *\n * (`new URL('http://foo/?a=b').toString()` == 'http://foo/?a=b/')\n */\nfunction splitUrl(url: string): {url: string; searchParams: URLSearchParams} {\n  const qIndex = url.indexOf('?')\n  if (qIndex === -1) {\n    return {url, searchParams: new URLSearchParams()}\n  }\n\n  const base = url.slice(0, qIndex)\n  const qs = url.slice(qIndex + 1)\n\n  // React Native's URL and URLSearchParams are broken, so passing a string to URLSearchParams\n  // does not work, leading to an empty query string. For other environments, this should be enough\n  if (!isReactNative) {\n    return {url: base, searchParams: new URLSearchParams(qs)}\n  }\n\n  // Sanity-check; we do not know of any environment where this is the case,\n  // but if it is, we should not proceed without giving a descriptive error\n  if (typeof decodeURIComponent !== 'function') {\n    throw new Error(\n      'Broken `URLSearchParams` implementation, and `decodeURIComponent` is not defined',\n    )\n  }\n\n  const params = new URLSearchParams()\n  for (const pair of qs.split('&')) {\n    const [key, value] = pair.split('=')\n    if (key) {\n      params.append(decodeQueryParam(key), decodeQueryParam(value || ''))\n    }\n  }\n\n  return {url: base, searchParams: params}\n}\n\nfunction decodeQueryParam(value: string): string {\n  return decodeURIComponent(value.replace(/\\+/g, ' '))\n}\n\nfunction normalizeTimeout(time: RequestOptions['timeout']) {\n  if (time === false || time === 0) {\n    return false\n  }\n\n  if (time.connect || time.socket) {\n    return time\n  }\n\n  const delay = Number(time)\n  if (isNaN(delay)) {\n    return normalizeTimeout(defaultOptions.timeout)\n  }\n\n  return {connect: delay, socket: delay}\n}\n","import type {MiddlewareHooks} from 'get-it'\n\nconst validUrl = /^https?:\\/\\//i\n\n/** @public */\nexport const validateOptions = function validateOptions(options) {\n  if (!validUrl.test(options.url)) {\n    throw new Error(`\"${options.url}\" is not a valid URL`)\n  }\n} satisfies MiddlewareHooks['validateOptions']\n"],"names":["isReactNative","navigator","product","defaultOptions","timeout","processOptions","opts","options","url","normalizeTimeout","query","searchParams","qIndex","indexOf","URLSearchParams","base","slice","qs","decodeURIComponent","Error","params","pair","split","key","value","append","decodeQueryParam","splitUrl","Object","entries","Array","isArray","v","search","toString","method","body","toUpperCase","replace","time","connect","socket","delay","Number","isNaN","validUrl","validateOptions","test","getDefaultExportFromCjs","x"],"mappings":"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","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"file":"index.react-server.js","sources":["file:///Users/isseemii/app/letterseed/node_modules/get-it/src/request/browser/fetchXhr.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/node_modules/parse-headers/parse-headers.js","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/request/browser-request.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/index.browser.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/index.react-server.ts"],"sourcesContent":["/**\n * Mimicks the XMLHttpRequest API with only the parts needed for get-it's XHR adapter\n */\nexport class FetchXhr\n  implements Pick<XMLHttpRequest, 'open' | 'abort' | 'getAllResponseHeaders' | 'setRequestHeader'>\n{\n  /**\n   * Public interface, interop with real XMLHttpRequest\n   */\n  onabort: (() => void) | undefined\n  onerror: ((error?: any) => void) | undefined\n  onreadystatechange: (() => void) | undefined\n  ontimeout: XMLHttpRequest['ontimeout'] | undefined\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState\n   */\n  readyState: 0 | 1 | 2 | 3 | 4 = 0\n  response: XMLHttpRequest['response']\n  responseText: XMLHttpRequest['responseText'] = ''\n  responseType: XMLHttpRequest['responseType'] = ''\n  status: XMLHttpRequest['status'] | undefined\n  statusText: XMLHttpRequest['statusText'] | undefined\n  withCredentials: XMLHttpRequest['withCredentials'] | undefined\n\n  /**\n   * Private implementation details\n   */\n  #method!: string\n  #url!: string\n  #resHeaders!: string\n  #headers: Record<string, string> = {}\n  #controller?: AbortController\n  #init: RequestInit = {}\n  #useAbortSignal?: boolean\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- _async is only declared for typings compatibility\n  open(method: string, url: string, _async?: boolean) {\n    this.#method = method\n    this.#url = url\n    this.#resHeaders = ''\n    this.readyState = 1 // Open\n    this.onreadystatechange?.()\n    this.#controller = undefined\n  }\n  abort() {\n    if (this.#controller) {\n      this.#controller.abort()\n    }\n  }\n  getAllResponseHeaders() {\n    return this.#resHeaders\n  }\n  setRequestHeader(name: string, value: string) {\n    this.#headers[name] = value\n  }\n  // Allow setting extra fetch init options, needed for runtimes such as Vercel Edge to set `cache` and other options in React Server Components\n  setInit(init: RequestInit, useAbortSignal = true) {\n    this.#init = init\n    this.#useAbortSignal = useAbortSignal\n  }\n  send(body: BodyInit) {\n    const textBody = this.responseType !== 'arraybuffer'\n    const options: RequestInit = {\n      ...this.#init,\n      method: this.#method,\n      headers: this.#headers,\n      body,\n    }\n    if (typeof AbortController === 'function' && this.#useAbortSignal) {\n      this.#controller = new AbortController()\n      // The instanceof check ensures environments like Edge Runtime, Node 18 with built-in fetch\n      // and more don't throw if `signal` doesn't implement`EventTarget`\n      // Native browser AbortSignal implements EventTarget, so we can use it\n      if (typeof EventTarget !== 'undefined' && this.#controller.signal instanceof EventTarget) {\n        options.signal = this.#controller.signal\n      }\n    }\n\n    // Some environments (like CloudFlare workers) don't support credentials in\n    // RequestInitDict, and there doesn't seem to be any easy way to check for it,\n    // so for now let's just make do with a document check :/\n    if (typeof document !== 'undefined') {\n      options.credentials = this.withCredentials ? 'include' : 'omit'\n    }\n\n    fetch(this.#url, options)\n      .then((res): Promise<string | ArrayBuffer> => {\n        res.headers.forEach((value: any, key: any) => {\n          this.#resHeaders += `${key}: ${value}\\r\\n`\n        })\n        this.status = res.status\n        this.statusText = res.statusText\n        this.readyState = 3 // Loading\n        this.onreadystatechange?.()\n        return textBody ? res.text() : res.arrayBuffer()\n      })\n      .then((resBody) => {\n        if (typeof resBody === 'string') {\n          this.responseText = resBody\n        } else {\n          this.response = resBody\n        }\n        this.readyState = 4 // Done\n        this.onreadystatechange?.()\n      })\n      .catch((err: Error) => {\n        if (err.name === 'AbortError') {\n          this.onabort?.()\n          return\n        }\n\n        this.onerror?.(err)\n      })\n  }\n}\n","var trim = function(string) {\n  return string.replace(/^\\s+|\\s+$/g, '');\n}\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = Object.create(null);\n\n  var headersArr = trim(headers).split('\\n')\n\n  for (var i = 0; i < headersArr.length; i++) {\n    var row = headersArr[i]\n    var index = row.indexOf(':')\n    , key = trim(row.slice(0, index)).toLowerCase()\n    , value = trim(row.slice(index + 1))\n\n    if (typeof(result[key]) === 'undefined') {\n      result[key] = value\n    } else if (isArray(result[key])) {\n      result[key].push(value)\n    } else {\n      result[key] = [ result[key], value ]\n    }\n  }\n\n  return result\n}\n","import type {HttpRequest, MiddlewareResponse, RequestOptions} from 'get-it'\nimport parseHeaders from 'parse-headers'\nimport type {RequestAdapter} from '../types'\n\nimport {FetchXhr} from './browser/fetchXhr'\n\n/**\n * Use fetch if it's available, non-browser environments such as Deno, Edge Runtime and more provide fetch as a global but doesn't provide xhr\n * @public\n */\nexport const adapter = (\n  typeof XMLHttpRequest === 'function' ? ('xhr' as const) : ('fetch' as const)\n) satisfies RequestAdapter\n\n// Fallback to fetch-based XHR polyfill for non-browser environments like Workers\nconst XmlHttpRequest = adapter === 'xhr' ? XMLHttpRequest : FetchXhr\n\nexport const httpRequester: HttpRequest = (context, callback) => {\n  const opts = context.options\n  const options = context.applyMiddleware('finalizeOptions', opts) as RequestOptions\n  const timers: any = {}\n\n  // Allow middleware to inject a response, for instance in the case of caching or mocking\n  const injectedResponse = context.applyMiddleware('interceptRequest', undefined, {\n    adapter,\n    context,\n  })\n\n  // If middleware injected a response, treat it as we normally would and return it\n  // Do note that the injected response has to be reduced to a cross-environment friendly response\n  if (injectedResponse) {\n    const cbTimer = setTimeout(callback, 0, null, injectedResponse)\n    const cancel = () => clearTimeout(cbTimer)\n    return {abort: cancel}\n  }\n\n  // We'll want to null out the request on success/failure\n  let xhr = new XmlHttpRequest()\n\n  if (xhr instanceof FetchXhr && typeof options.fetch === 'object') {\n    xhr.setInit(options.fetch, options.useAbortSignal ?? true)\n  }\n\n  const headers = options.headers\n  const delays = options.timeout\n\n  // Request state\n  let aborted = false\n  let loaded = false\n  let timedOut = false\n\n  // Apply event handlers\n  xhr.onerror = (event: ProgressEvent) => {\n    // If fetch is used then rethrow the original error\n    if (xhr instanceof FetchXhr) {\n      onError(\n        event instanceof Error\n          ? event\n          : new Error(`Request error while attempting to reach is ${options.url}`, {cause: event}),\n      )\n    } else {\n      onError(\n        new Error(\n          `Request error while attempting to reach is ${options.url}${\n            event.lengthComputable ? `(${event.loaded} of ${event.total} bytes transferred)` : ''\n          }`,\n        ),\n      )\n    }\n  }\n  xhr.ontimeout = (event: ProgressEvent) => {\n    onError(\n      new Error(\n        `Request timeout while attempting to reach ${options.url}${\n          event.lengthComputable ? `(${event.loaded} of ${event.total} bytes transferred)` : ''\n        }`,\n      ),\n    )\n  }\n  xhr.onabort = () => {\n    stopTimers(true)\n    aborted = true\n  }\n\n  xhr.onreadystatechange = function () {\n    // Prevent request from timing out\n    resetTimers()\n\n    if (aborted || !xhr || xhr.readyState !== 4) {\n      return\n    }\n\n    // Will be handled by onError\n    if (xhr.status === 0) {\n      return\n    }\n\n    onLoad()\n  }\n\n  // @todo two last options to open() is username/password\n  xhr.open(\n    options.method!,\n    options.url,\n    true, // Always async\n  )\n\n  // Some options need to be applied after open\n  xhr.withCredentials = !!options.withCredentials\n\n  // Set headers\n  if (headers && xhr.setRequestHeader) {\n    for (const key in headers) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key])\n      }\n    }\n  }\n\n  if (options.rawBody) {\n    xhr.responseType = 'arraybuffer'\n  }\n\n  // Let middleware know we're about to do a request\n  context.applyMiddleware('onRequest', {options, adapter, request: xhr, context})\n\n  xhr.send(options.body || null)\n\n  // Figure out which timeouts to use (if any)\n  if (delays) {\n    timers.connect = setTimeout(() => timeoutRequest('ETIMEDOUT'), delays.connect)\n  }\n\n  return {abort}\n\n  function abort() {\n    aborted = true\n\n    if (xhr) {\n      xhr.abort()\n    }\n  }\n\n  function timeoutRequest(code: any) {\n    timedOut = true\n    xhr.abort()\n    const error: any = new Error(\n      code === 'ESOCKETTIMEDOUT'\n        ? `Socket timed out on request to ${options.url}`\n        : `Connection timed out on request to ${options.url}`,\n    )\n    error.code = code\n    context.channels.error.publish(error)\n  }\n\n  function resetTimers() {\n    if (!delays) {\n      return\n    }\n\n    stopTimers()\n    timers.socket = setTimeout(() => timeoutRequest('ESOCKETTIMEDOUT'), delays.socket)\n  }\n\n  function stopTimers(force?: boolean) {\n    // Only clear the connect timeout if we've got a connection\n    if (force || aborted || (xhr && xhr.readyState >= 2 && timers.connect)) {\n      clearTimeout(timers.connect)\n    }\n\n    if (timers.socket) {\n      clearTimeout(timers.socket)\n    }\n  }\n\n  function onError(error: Error) {\n    if (loaded) {\n      return\n    }\n\n    // Clean up\n    stopTimers(true)\n    loaded = true\n    ;(xhr as any) = null\n\n    // Annoyingly, details are extremely scarce and hidden from us.\n    // We only really know that it is a network error\n    const err = (error ||\n      new Error(`Network error while attempting to reach ${options.url}`)) as Error & {\n      isNetworkError: boolean\n      request?: typeof options\n    }\n    err.isNetworkError = true\n    err.request = options\n    callback(err)\n  }\n\n  function reduceResponse(): MiddlewareResponse {\n    return {\n      body:\n        xhr.response ||\n        (xhr.responseType === '' || xhr.responseType === 'text' ? xhr.responseText : ''),\n      url: options.url,\n      method: options.method!,\n      headers: parseHeaders(xhr.getAllResponseHeaders()),\n      statusCode: xhr.status!,\n      statusMessage: xhr.statusText!,\n    }\n  }\n\n  function onLoad() {\n    if (aborted || loaded || timedOut) {\n      return\n    }\n\n    if (xhr.status === 0) {\n      onError(new Error('Unknown XHR error'))\n      return\n    }\n\n    // Prevent being called twice\n    stopTimers()\n    loaded = true\n    callback(null, reduceResponse())\n  }\n}\n","import {createRequester} from './createRequester'\nimport {httpRequester} from './request/browser-request'\nimport type {ExportEnv, HttpRequest, Middlewares, Requester} from './types'\n\nexport type * from './types'\n\n/** @public */\nexport const getIt = (\n  initMiddleware: Middlewares = [],\n  httpRequest: HttpRequest = httpRequester,\n): Requester => createRequester(initMiddleware, httpRequest)\n\n/** @public */\nexport const environment = 'browser' satisfies ExportEnv\n\n/** @public */\nexport {adapter} from './request/browser-request'\n","import type {ExportEnv} from './types'\n\nexport * from './index.browser'\n\n/** @public */\nexport const environment = 'react-server' satisfies ExportEnv\n"],"names":["parseHeaders","trim","string","replace","isArray","arg","Object","prototype","toString","call","headers","result","create","headersArr","split","i","length","row","index","indexOf","key","slice","toLowerCase","value","push","FetchXhr","onabort","onerror","onreadystatechange","ontimeout","readyState","response","responseText","responseType","status","statusText","withCredentials","method","url","resHeaders","controller","init","useAbortSignal","open","_async","this","abort","getAllResponseHeaders","setRequestHeader","name","setInit","send","body","textBody","options","AbortController","EventTarget","signal","document","credentials","fetch","then","res","forEach","text","arrayBuffer","resBody","catch","err","adapter","XMLHttpRequest","XmlHttpRequest","httpRequester","context","callback","opts","applyMiddleware","timers","injectedResponse","cbTimer","setTimeout","clearTimeout","xhr","delays","timeout","aborted","loaded","timedOut","event","onError","Error","cause","lengthComputable","total","stopTimers","socket","timeoutRequest","statusCode","statusMessage","onLoad","hasOwnProperty","rawBody","request","connect","code","error","channels","publish","force","isNetworkError","getIt","initMiddleware","httpRequest","createRequester","environment"],"mappings":";;;;;;;;;UAGOA,IAAAA,aAAAA,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,IAAAA,EAAAA;IAAAA,IAAAA,GAAAA,OAAAA;IAAAA,IAAAA;ICHP,IAAIC,IAAO,SAASC,CAAAA;QAClB,OAAOA,EAAOC,OAAAA,CAAQ,cAAc;IACtC,GACIC,IAAU,SAASC,CAAAA;QACjB,OAA+C,qBAAxCC,OAAOC,SAAAA,CAAUC,QAAAA,CAASC,IAAAA,CAAKJ;IAC5C;IAEAL,OAAAA,IAAiB,SAAUU,CAAAA;QACzB,IAAA,CAAKA,GACH,OAAO,CAAA;QAMT,IAAA,IAJIC,IAAAA,aAAAA,GAAAA,OAAgBC,MAAAA,CAAO,OAEvBC,IAAaZ,EAAKS,GAASI,KAAAA,CAAM,OAE5BC,IAAI,GAAGA,IAAIF,EAAWG,MAAAA,EAAQD,IAAK;YAC1C,IAAIE,IAAMJ,CAAAA,CAAWE,EAAAA,EACjBG,IAAQD,EAAIE,OAAAA,CAAQ,MACtBC,IAAMnB,EAAKgB,EAAII,KAAAA,CAAM,GAAGH,IAAQI,WAAAA,IAChCC,IAAQtB,EAAKgB,EAAII,KAAAA,CAAMH,IAAQ;YAAA,OAEtBP,CAAAA,CAAOS,EAAAA,GAAU,MAC1BT,CAAAA,CAAOS,EAAAA,GAAOG,IACLnB,EAAQO,CAAAA,CAAOS,EAAAA,IACxBT,CAAAA,CAAOS,EAAAA,CAAKI,IAAAA,CAAKD,KAEjBZ,CAAAA,CAAOS,EAAAA,GAAO;gBAAET,CAAAA,CAAOS,EAAAA;gBAAMG;;QAEnC;QAEE,OAAOZ;IACT;AAAA;AD5BO,MAAMc;IAMXC;IACAC,QACAC;;IACAC;IAIAC,aAAgC;IAChCC;IACAC,eAA+C;IAC/CC,eAA+C;IAC/CC;IACAC;IACAC;KAKAC,CAAAA;KACAC,CAAAA;KACAC,CAAAA;IACA7B,EAAAA,GAAmC,CAAA;KACnC8B,CAAAA;KACAC,CAAAA,GAAqB,CAAA;KACrBC,CAAAA;IAEA,IAAAC,CAAKN,CAAAA,EAAgBC,CAAAA,EAAaM,CAAAA,EAAAA;QAChCC,IAAAA,CAAAA,CAAAA,CAAKR,GAAUA,GACfQ,IAAAA,CAAAA,CAAAA,CAAKP,GAAOA,GACZO,IAAAA,CAAAA,CAAAA,CAAKN,GAAc,IACnBM,IAAAA,CAAKf,UAAAA,GAAa,GAClBe,IAAAA,CAAKjB,kBAAAA,MACLiB,IAAAA,CAAAA,CAAAA,CAAKL,GAAAA,KAAc;IAAA;IAErB,KAAAM,GAAAA;QACMD,IAAAA,CAAAA,CAAAA,CAAKL,IACPK,IAAAA,CAAAA,CAAAA,CAAKL,CAAYM,KAAAA;IAAM;IAG3B,qBAAAC,GAAAA;QACE,OAAOF,IAAAA,CAAAA,CAAKN,AAALM;IAAK;IAEd,gBAAAG,CAAiBC,CAAAA,EAAc1B,CAAAA,EAAAA;QAC7BsB,IAAAA,CAAAA,CAAAA,CAAKnC,CAASuC,EAAAA,GAAQ1B;IAAA;IAGxB,OAAA2B,CAAQT,CAAAA,EAAmBC,IAAAA,CAAiB,CAAA,EAAA;QAC1CG,IAAAA,CAAAA,CAAAA,CAAKJ,GAAQA,GACbI,IAAAA,CAAAA,CAAAA,CAAKH,GAAkBA;IAAA;IAEzB,IAAAS,CAAKC,CAAAA,EAAAA;QACH,MAAMC,IAAiC,kBAAtBR,IAAAA,CAAKZ,YAAAA,EAChBqB,IAAuB;YAAA,GACxBT,IAAAA,CAAAA,CAAAA,CAAKJ;YACRJ,QAAQQ,IAAAA,CAAAA,CAAAA,CAAKR;YACb3B,SAASmC,IAAAA,CAAAA,CAAAA,CAAKnC;YACd0C,MAAAA;QAAAA;QAE6B,cAAA,OAApBG,mBAAkCV,IAAAA,CAAAA,CAAAA,CAAKH,IAAAA,CAChDG,IAAAA,CAAAA,CAAAA,CAAKL,GAAc,IAAIe,iBAAAA,OAIZC,cAAgB,OAAeX,IAAAA,CAAAA,CAAAA,CAAKL,CAAYiB,MAAAA,YAAkBD,eAAAA,CAC3EF,EAAQG,MAAAA,GAASZ,IAAAA,CAAAA,CAAAA,CAAKL,CAAYiB,MAAAA,CAAAA,GAAAA,OAO3BC,WAAa,OAAA,CACtBJ,EAAQK,WAAAA,GAAcd,IAAAA,CAAKT,eAAAA,GAAkB,YAAY,MAAA,GAG3DwB,MAAMf,IAAAA,CAAAA,CAAAA,CAAKP,EAAMgB,GACdO,IAAAA,EAAMC,IAAAA,CACLA,EAAIpD,OAAAA,CAAQqD,OAAAA,CAAQ,CAACxC,GAAYH;gBAC/ByB,IAAAA,CAAAA,CAAAA,CAAKN,IAAe,GAAGnB,EAAAA,EAAAA,EAAQG,EAAAA,IAAAA,CAAAA;YAAAA,IAEjCsB,IAAAA,CAAKX,MAAAA,GAAS4B,EAAI5B,MAAAA,EAClBW,IAAAA,CAAKV,UAAAA,GAAa2B,EAAI3B,UAAAA,EACtBU,IAAAA,CAAKf,UAAAA,GAAa,GAClBe,IAAAA,CAAKjB,kBAAAA,MACEyB,IAAWS,EAAIE,IAAAA,KAASF,EAAIG,WAAAA,EAAAA,GAEpCJ,IAAAA,EAAMK;YACkB,YAAA,OAAZA,IACTrB,IAAAA,CAAKb,YAAAA,GAAekC,IAEpBrB,IAAAA,CAAKd,QAAAA,GAAWmC,GAElBrB,IAAAA,CAAKf,UAAAA,GAAa,GAClBe,IAAAA,CAAKjB,kBAAAA;QAAAA,GAENuC,KAAAA,EAAOC;YACW,iBAAbA,EAAInB,IAAAA,GAKRJ,IAAAA,CAAKlB,OAAAA,GAAUyC,KAJbvB,IAAAA,CAAKnB,OAAAA;QAAAA;IAKR;AAAA;AErGA,MAAM2C,IACe,cAAA,OAAnBC,iBAAiC,QAAmB,SAIvDC,IAA6B,UAAZF,IAAoBC,iBAAiB7C,GAE/C+C,IAA6B,CAACC,GAASC;IAClD,MAAMC,IAAOF,EAAQnB,OAAAA,EACfA,IAAUmB,EAAQG,eAAAA,CAAgB,mBAAmBD,IACrDE,IAAc,CAAA,GAGdC,IAAmBL,EAAQG,eAAAA,CAAgB,oBAAA,KAAoB,GAAW;QAC9EP,SAAAA;QACAI,SAAAA;IAAAA;IAKF,IAAIK,GAAkB;QACpB,MAAMC,IAAUC,WAAWN,GAAU,GAAG,MAAMI;QAE9C,OAAO;YAAChC,OADO,IAAMmC,aAAaF;QAAAA;IACb;IAIvB,IAAIG,IAAM,IAAIX;IAEVW,aAAezD,KAAqC,YAAA,OAAlB6B,EAAQM,KAAAA,IAC5CsB,EAAIhC,OAAAA,CAAQI,EAAQM,KAAAA,EAAON,EAAQZ,cAAAA,IAAAA,CAAkB;IAGvD,MAAMhC,IAAU4C,EAAQ5C,OAAAA,EAClByE,IAAS7B,EAAQ8B,OAAAA;IAGvB,IAAIC,IAAAA,CAAU,GACVC,IAAAA,CAAS,GACTC,IAAAA,CAAW;IA8Df,IA3DAL,EAAIvD,OAAAA,IAAW6D;QAGXC,EADEP,aAAezD,IAEf+D,aAAiBE,QACbF,IACA,IAAIE,MAAM,CAAA,2CAAA,EAA8CpC,EAAQhB,GAAAA,EAAAA,EAAO;YAACqD,OAAOH;QAAAA,KAInF,IAAIE,MACF,CAAA,2CAAA,EAA8CpC,EAAQhB,GAAAA,GACpDkD,EAAMI,gBAAAA,GAAmB,CAAA,CAAA,EAAIJ,EAAMF,MAAAA,CAAAA,IAAAA,EAAaE,EAAMK,KAAAA,CAAAA,mBAAAA,CAAAA,GAA6B,IAAA;IAAA,GAM7FX,EAAIrD,SAAAA,IAAa2D;QACfC,EACE,IAAIC,MACF,CAAA,0CAAA,EAA6CpC,EAAQhB,GAAAA,GACnDkD,EAAMI,gBAAAA,GAAmB,CAAA,CAAA,EAAIJ,EAAMF,MAAAA,CAAAA,IAAAA,EAAaE,EAAMK,KAAAA,CAAAA,mBAAAA,CAAAA,GAA6B,IAAA;IAAA,GAK3FX,EAAIxD,OAAAA,GAAU;QACZoE,EAAAA,CAAW,IACXT,IAAAA,CAAU;IAAA,GAGZH,EAAItD,kBAAAA,GAAqB;QAyElBuD,KAAAA,CAILW,KACAjB,EAAOkB,MAAAA,GAASf,WAAW,IAAMgB,EAAe,oBAAoBb,EAAOY,MAAAA,CAAAA,GAAAA,CA1EvEV,KAAYH,KAA0B,MAAnBA,EAAIpD,UAAAA,IAKR,MAAfoD,EAAIhD,MAAAA,IAsHV;YACE,IAAA,CAAA,CAAImD,KAAWC,KAAUC,CAAAA,GAIzB;gBAAA,IAAmB,MAAfL,EAAIhD,MAAAA,EAEN,OAAA,KADAuD,EAAQ,IAAIC,MAAM;gBAKpBI,KACAR,IAAAA,CAAS,GACTZ,EAAS,MAzBF;oBACLtB,MACE8B,EAAInD,QAAAA,IAAAA,CACkB,OAArBmD,EAAIjD,YAAAA,IAA4C,WAArBiD,EAAIjD,YAAAA,GAA0BiD,EAAIlD,YAAAA,GAAe,EAAA;oBAC/EM,KAAKgB,EAAQhB,GAAAA;oBACbD,QAAQiB,EAAQjB,MAAAA;oBAChB3B,SAASV,EAAakF,EAAInC,qBAAAA;oBAC1BkD,YAAYf,EAAIhD,MAAAA;oBAChBgE,eAAehB,EAAI/C,UAAAA;gBAAAA;YAiBU;QAAA,CA/H/BgE;IAAO,GAITjB,EAAIvC,IAAAA,CACFW,EAAQjB,MAAAA,EACRiB,EAAQhB,GAAAA,EAAAA,CACR,IAIF4C,EAAI9C,eAAAA,GAAAA,CAAAA,CAAoBkB,EAAQlB,eAAAA,EAG5B1B,KAAWwE,EAAIlC,gBAAAA,EACjB,IAAA,MAAW5B,KAAOV,EAEZA,EAAQ0F,cAAAA,CAAehF,MACzB8D,EAAIlC,gBAAAA,CAAiB5B,GAAKV,CAAAA,CAAQU,EAAAA;IAKxC,OAAIkC,EAAQ+C,OAAAA,IAAAA,CACVnB,EAAIjD,YAAAA,GAAe,aAAA,GAIrBwC,EAAQG,eAAAA,CAAgB,aAAa;QAACtB,SAAAA;QAASe,SAAAA;QAASiC,SAASpB;QAAKT,SAAAA;IAAAA,IAEtES,EAAI/B,IAAAA,CAAKG,EAAQF,IAAAA,IAAQ,OAGrB+B,KAAAA,CACFN,EAAO0B,OAAAA,GAAUvB,WAAW,IAAMgB,EAAe,cAAcb,EAAOoB,OAAAA,CAAAA,GAGjE;QAACzD,OAER;YACEuC,IAAAA,CAAU,GAENH,KACFA,EAAIpC,KAAAA;QAAM;IAAA;;IAId,SAASkD,EAAeQ,CAAAA;QACtBjB,IAAAA,CAAW,GACXL,EAAIpC,KAAAA;QACJ,MAAM2D,IAAa,IAAIf,MACZ,sBAATc,IACI,CAAA,+BAAA,EAAkClD,EAAQhB,GAAAA,EAAAA,GAC1C,CAAA,mCAAA,EAAsCgB,EAAQhB,GAAAA,EAAAA;QAEpDmE,EAAMD,IAAAA,GAAOA,GACb/B,EAAQiC,QAAAA,CAASD,KAAAA,CAAME,OAAAA,CAAQF;IAAK;IAYtC,SAASX,EAAWc,CAAAA;QAAAA,CAEdA,KAASvB,KAAYH,KAAOA,EAAIpD,UAAAA,IAAc,KAAK+C,EAAO0B,OAAAA,KAC5DtB,aAAaJ,EAAO0B,OAAAA,GAGlB1B,EAAOkB,MAAAA,IACTd,aAAaJ,EAAOkB,MAAAA;IAAM;IAI9B,SAASN,EAAQgB,CAAAA;QACf,IAAInB,GACF;QAIFQ,EAAAA,CAAW,IACXR,IAAAA,CAAS,GACPJ,IAAc;QAIhB,MAAMd,IAAOqC,KACX,IAAIf,MAAM,CAAA,wCAAA,EAA2CpC,EAAQhB,GAAAA,EAAAA;QAI/D8B,EAAIyC,cAAAA,GAAAA,CAAiB,GACrBzC,EAAIkC,OAAAA,GAAUhD,GACdoB,EAASN;IAAG;AAAA,GC5LH0C,IAAQ,CACnBC,IAA8B,EAAA,EAC9BC,IAA2BxC,CAAAA,iLACbyC,EAAgBF,GAAgBC,ICLnCE,IAAc;;CAAA,8CAAA","ignoreList":[0,1,2,3,4],"debugId":null}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"file":"middleware.browser.js","sources":["file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/agent/browser-agent.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/base.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/node_modules/debug/src/browser.js","file:///Users/isseemii/app/letterseed/node_modules/get-it/node_modules/debug/src/common.js","file:///Users/isseemii/app/letterseed/node_modules/get-it/node_modules/ms/index.js","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/debug.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/headers.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/httpErrors.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/injectResponse.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/util/isBuffer.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/util/isPlainObject.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/jsonRequest.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/jsonResponse.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/mtls.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/util/isBrowserOptions.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/util/global.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/observable.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/progress/browser-progress.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/promise.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/proxy.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/util/browser-shouldRetry.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/retry/shared-retry.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/retry/browser-retry.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/urlEncoded.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/request/node-request.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware.browser.ts","file:///Users/isseemii/app/letterseed/node_modules/get-it/src/middleware/keepAlive.ts"],"sourcesContent":["/**\n * This middleware only has an effect in Node.js.\n * @public\n */\nexport function agent(\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _opts?: any,\n): any {\n  return {}\n}\n","import type {Middleware} from 'get-it'\n\nconst leadingSlash = /^\\//\nconst trailingSlash = /\\/$/\n\n/** @public */\nexport function base(baseUrl: string) {\n  const baseUri = baseUrl.replace(trailingSlash, '')\n  return {\n    processOptions: (options) => {\n      if (/^https?:\\/\\//i.test(options.url)) {\n        return options // Already prefixed\n      }\n\n      const url = [baseUri, options.url.replace(leadingSlash, '')].join('/')\n      return Object.assign({}, options, {url})\n    },\n  } satisfies Middleware\n}\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug') || exports.storage.getItem('DEBUG') ;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(/\\s+/g, ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","import debugIt from 'debug'\nimport type {Middleware} from 'get-it'\n\nconst SENSITIVE_HEADERS = ['cookie', 'authorization']\n\nconst hasOwn = Object.prototype.hasOwnProperty\nconst redactKeys = (source: any, redacted: any) => {\n  const target: any = {}\n  for (const key in source) {\n    if (hasOwn.call(source, key)) {\n      target[key] = redacted.indexOf(key.toLowerCase()) > -1 ? '<redacted>' : source[key]\n    }\n  }\n  return target\n}\n\n/** @public */\nexport function debug(opts: any = {}) {\n  const verbose = opts.verbose\n  const namespace = opts.namespace || 'get-it'\n  const defaultLogger = debugIt(namespace)\n  const log = opts.log || defaultLogger\n  const shortCircuit = log === defaultLogger && !debugIt.enabled(namespace)\n  let requestId = 0\n\n  return {\n    processOptions: (options) => {\n      options.debug = log\n      options.requestId = options.requestId || ++requestId\n      return options\n    },\n\n    onRequest: (event) => {\n      // Short-circuit if not enabled, to save some CPU cycles with formatting stuff\n      if (shortCircuit || !event) {\n        return event\n      }\n\n      const options = event.options\n\n      log('[%s] HTTP %s %s', options.requestId, options.method, options.url)\n\n      if (verbose && options.body && typeof options.body === 'string') {\n        log('[%s] Request body: %s', options.requestId, options.body)\n      }\n\n      if (verbose && options.headers) {\n        const headers =\n          opts.redactSensitiveHeaders === false\n            ? options.headers\n            : redactKeys(options.headers, SENSITIVE_HEADERS)\n\n        log('[%s] Request headers: %s', options.requestId, JSON.stringify(headers, null, 2))\n      }\n\n      return event\n    },\n\n    onResponse: (res, context) => {\n      // Short-circuit if not enabled, to save some CPU cycles with formatting stuff\n      if (shortCircuit || !res) {\n        return res\n      }\n\n      const reqId = context.options.requestId\n\n      log('[%s] Response code: %s %s', reqId, res.statusCode, res.statusMessage)\n\n      if (verbose && res.body) {\n        log('[%s] Response body: %s', reqId, stringifyBody(res))\n      }\n\n      return res\n    },\n\n    onError: (err, context) => {\n      const reqId = context.options.requestId\n      if (!err) {\n        log('[%s] Error encountered, but handled by an earlier middleware', reqId)\n        return err\n      }\n\n      log('[%s] ERROR: %s', reqId, err.message)\n      return err\n    },\n  } satisfies Middleware\n}\n\nfunction stringifyBody(res: any) {\n  const contentType = (res.headers['content-type'] || '').toLowerCase()\n  const isJson = contentType.indexOf('application/json') !== -1\n  return isJson ? tryFormat(res.body) : res.body\n}\n\n// Attempt pretty-formatting JSON\nfunction tryFormat(body: any) {\n  try {\n    const parsed = typeof body === 'string' ? JSON.parse(body) : body\n    return JSON.stringify(parsed, null, 2)\n  } catch {\n    return body\n  }\n}\n","import type {Middleware} from 'get-it'\n\n/** @public */\nexport function headers(_headers: any, opts: any = {}) {\n  return {\n    processOptions: (options) => {\n      const existing = options.headers || {}\n      options.headers = opts.override\n        ? Object.assign({}, existing, _headers)\n        : Object.assign({}, _headers, existing)\n\n      return options\n    },\n  } satisfies Middleware\n}\n","import type {Middleware} from 'get-it'\n\nclass HttpError extends Error {\n  response: any\n  request: any\n  constructor(res: any, ctx: any) {\n    super()\n    const truncatedUrl = res.url.length > 400 ? `${res.url.slice(0, 399)}…` : res.url\n    let msg = `${res.method}-request to ${truncatedUrl} resulted in `\n    msg += `HTTP ${res.statusCode} ${res.statusMessage}`\n\n    this.message = msg.trim()\n    this.response = res\n    this.request = ctx.options\n  }\n}\n\n/** @public */\nexport function httpErrors() {\n  return {\n    onResponse: (res, ctx) => {\n      const isHttpError = res.statusCode >= 400\n      if (!isHttpError) {\n        return res\n      }\n\n      throw new HttpError(res, ctx)\n    },\n  } satisfies Middleware\n}\n","import type {Middleware, MiddlewareHooks, MiddlewareResponse} from 'get-it'\n\n/** @public */\nexport function injectResponse(\n  opts: {\n    inject: (\n      event: Parameters<MiddlewareHooks['interceptRequest']>[1],\n      prevValue: Parameters<MiddlewareHooks['interceptRequest']>[0],\n    ) => Partial<MiddlewareResponse | undefined | void>\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } = {} as any,\n) {\n  if (typeof opts.inject !== 'function') {\n    throw new Error('`injectResponse` middleware requires a `inject` function')\n  }\n\n  const inject = function inject(prevValue, event) {\n    const response = opts.inject(event, prevValue)\n    if (!response) {\n      return prevValue\n    }\n\n    // Merge defaults so we don't have to provide the most basic of details unless we want to\n    const options = event.context.options\n    return {\n      body: '',\n      url: options.url,\n      method: options.method!,\n      headers: {},\n      statusCode: 200,\n      statusMessage: 'OK',\n      ...response,\n    } satisfies MiddlewareResponse\n  } satisfies Middleware['interceptRequest']\n\n  return {interceptRequest: inject} satisfies Middleware\n}\n","export const isBuffer =\n  typeof Buffer === 'undefined' ? () => false : (obj: unknown) => Buffer.isBuffer(obj)\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o: unknown): o is Record<string, unknown> {\n  return Object.prototype.toString.call(o) === '[object Object]'\n}\n\nexport function isPlainObject(o: unknown): boolean {\n  if (isObject(o) === false) return false\n\n  // If has modified constructor\n  const ctor = o.constructor\n  if (ctor === undefined) return true\n\n  // If has modified prototype\n  const prot = ctor.prototype\n  if (isObject(prot) === false) return false\n\n  // If constructor does not have an Object-specific method\n  if (\n    // eslint-disable-next-line no-prototype-builtins\n    prot.hasOwnProperty('isPrototypeOf') === false\n  ) {\n    return false\n  }\n\n  // Most likely a plain Object\n  return true\n}\n","import type {Middleware} from 'get-it'\n\nimport {isBuffer} from '../util/isBuffer'\nimport {isPlainObject} from '../util/isPlainObject'\n\nconst serializeTypes = ['boolean', 'string', 'number']\n\n/** @public */\nexport function jsonRequest() {\n  return {\n    processOptions: (options) => {\n      const body = options.body\n      if (!body) {\n        return options\n      }\n\n      const isStream = typeof body.pipe === 'function'\n      const shouldSerialize =\n        !isStream &&\n        !isBuffer(body) &&\n        (serializeTypes.indexOf(typeof body) !== -1 || Array.isArray(body) || isPlainObject(body))\n\n      if (!shouldSerialize) {\n        return options\n      }\n\n      return Object.assign({}, options, {\n        body: JSON.stringify(options.body),\n        headers: Object.assign({}, options.headers, {\n          'Content-Type': 'application/json',\n        }),\n      })\n    },\n  } satisfies Middleware\n}\n","import type {Middleware} from 'get-it'\n\n/** @public */\nexport function jsonResponse(opts?: any) {\n  return {\n    onResponse: (response) => {\n      const contentType = response.headers['content-type'] || ''\n      const shouldDecode = (opts && opts.force) || contentType.indexOf('application/json') !== -1\n      if (!response.body || !contentType || !shouldDecode) {\n        return response\n      }\n\n      return Object.assign({}, response, {body: tryParse(response.body)})\n    },\n\n    processOptions: (options) =>\n      Object.assign({}, options, {\n        headers: Object.assign({Accept: 'application/json'}, options.headers),\n      }),\n  } satisfies Middleware\n\n  function tryParse(body: any) {\n    try {\n      return JSON.parse(body)\n    } catch (err: any) {\n      err.message = `Failed to parsed response body as JSON: ${err.message}`\n      throw err\n    }\n  }\n}\n","import type {Middleware} from 'get-it'\n\nimport {isBrowserOptions} from '../util/isBrowserOptions'\n\n/** @public */\nexport function mtls(config: any = {}) {\n  if (!config.ca) {\n    throw new Error('Required mtls option \"ca\" is missing')\n  }\n  if (!config.cert) {\n    throw new Error('Required mtls option \"cert\" is missing')\n  }\n  if (!config.key) {\n    throw new Error('Required mtls option \"key\" is missing')\n  }\n\n  return {\n    finalizeOptions: (options) => {\n      if (isBrowserOptions(options)) {\n        return options\n      }\n\n      const mtlsOpts = {\n        cert: config.cert,\n        key: config.key,\n        ca: config.ca,\n      }\n      return Object.assign({}, options, mtlsOpts)\n    },\n  } satisfies Middleware\n}\n","import type {RequestOptions} from 'get-it'\n\nexport function isBrowserOptions(options: unknown): options is RequestOptions {\n  return typeof options === 'object' && options !== null && !('protocol' in options)\n}\n","let actualGlobal = {} as typeof globalThis\n\nif (typeof globalThis !== 'undefined') {\n  actualGlobal = globalThis\n} else if (typeof window !== 'undefined') {\n  actualGlobal = window\n} else if (typeof global !== 'undefined') {\n  actualGlobal = global\n} else if (typeof self !== 'undefined') {\n  actualGlobal = self\n}\n\nexport default actualGlobal\n","import type {Middleware} from 'get-it'\n\nimport global from '../util/global'\n\n/** @public */\nexport function observable(\n  opts: {\n    implementation?: any\n  } = {},\n) {\n  const Observable =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- @TODO consider dropping checking for a global Observable since it's not on a standards track\n    opts.implementation || (global as any).Observable\n  if (!Observable) {\n    throw new Error(\n      '`Observable` is not available in global scope, and no implementation was passed',\n    )\n  }\n\n  return {\n    onReturn: (channels, context) =>\n      new Observable((observer: any) => {\n        channels.error.subscribe((err) => observer.error(err))\n        channels.progress.subscribe((event) =>\n          observer.next(Object.assign({type: 'progress'}, event)),\n        )\n        channels.response.subscribe((response) => {\n          observer.next(Object.assign({type: 'response'}, response))\n          observer.complete()\n        })\n\n        channels.request.publish(context)\n        return () => channels.abort.publish()\n      }),\n  } satisfies Middleware\n}\n","import type {Middleware} from 'get-it'\n\n/** @public */\nexport function progress() {\n  return {\n    onRequest: (evt) => {\n      if (evt.adapter !== 'xhr') {\n        return\n      }\n\n      const xhr = evt.request\n      const context = evt.context\n\n      if ('upload' in xhr && 'onprogress' in xhr.upload) {\n        xhr.upload.onprogress = handleProgress('upload')\n      }\n\n      if ('onprogress' in xhr) {\n        xhr.onprogress = handleProgress('download')\n      }\n\n      function handleProgress(stage: 'download' | 'upload') {\n        return (event: any) => {\n          const percent = event.lengthComputable ? (event.loaded / event.total) * 100 : -1\n          context.channels.progress.publish({\n            stage,\n            percent,\n            total: event.total,\n            loaded: event.loaded,\n            lengthComputable: event.lengthComputable,\n          })\n        }\n      }\n    },\n  } satisfies Middleware\n}\n","import type {Middleware} from 'get-it'\n\n/** @public */\nexport const promise = (\n  options: {onlyBody?: boolean; implementation?: PromiseConstructor} = {},\n) => {\n  const PromiseImplementation = options.implementation || Promise\n  if (!PromiseImplementation) {\n    throw new Error('`Promise` is not available in global scope, and no implementation was passed')\n  }\n\n  return {\n    onReturn: (channels, context) =>\n      new PromiseImplementation((resolve, reject) => {\n        const cancel = context.options.cancelToken\n        if (cancel) {\n          cancel.promise.then((reason: any) => {\n            channels.abort.publish(reason)\n            reject(reason)\n          })\n        }\n\n        channels.error.subscribe(reject)\n        channels.response.subscribe((response) => {\n          resolve(options.onlyBody ? (response as any).body : response)\n        })\n\n        // Wait until next tick in case cancel has been performed\n        setTimeout(() => {\n          try {\n            channels.request.publish(context)\n          } catch (err) {\n            reject(err)\n          }\n        }, 0)\n      }),\n  } satisfies Middleware\n}\n\n/**\n * The cancel token API is based on the [cancelable promises proposal](https://github.com/tc39/proposal-cancelable-promises), which is currently at Stage 1.\n *\n * Code shamelessly stolen/borrowed from MIT-licensed [axios](https://github.com/mzabriskie/axios). Thanks to [Nick Uraltsev](https://github.com/nickuraltsev), [Matt Zabriskie](https://github.com/mzabriskie) and the other contributors of that project!\n */\n/** @public */\nexport class Cancel {\n  __CANCEL__ = true\n\n  message: string | undefined\n\n  constructor(message: string | undefined) {\n    this.message = message\n  }\n\n  toString() {\n    return `Cancel${this.message ? `: ${this.message}` : ''}`\n  }\n}\n\n/** @public */\nexport class CancelToken {\n  promise: Promise<any>\n  reason?: Cancel\n\n  constructor(executor: (cb: (message?: string) => void) => void) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.')\n    }\n\n    let resolvePromise: any = null\n\n    this.promise = new Promise((resolve) => {\n      resolvePromise = resolve\n    })\n\n    executor((message?: string) => {\n      if (this.reason) {\n        // Cancellation has already been requested\n        return\n      }\n\n      this.reason = new Cancel(message)\n      resolvePromise(this.reason)\n    })\n  }\n\n  static source = () => {\n    let cancel: (message?: string) => void\n    const token = new CancelToken((can) => {\n      cancel = can\n    })\n\n    return {\n      token: token,\n      cancel: cancel!,\n    }\n  }\n}\n\nconst isCancel = (value: any): value is Cancel => !!(value && value?.__CANCEL__)\n\npromise.Cancel = Cancel\npromise.CancelToken = CancelToken\npromise.isCancel = isCancel\n","import type {Middleware} from 'get-it'\n\n/** @public */\nexport function proxy(_proxy: any) {\n  if (_proxy !== false && (!_proxy || !_proxy.host)) {\n    throw new Error('Proxy middleware takes an object of host, port and auth properties')\n  }\n\n  return {\n    processOptions: (options) => Object.assign({proxy: _proxy}, options),\n  } satisfies Middleware\n}\n","export default (err: any, _attempt: any, options: any) => {\n  if (options.method !== 'GET' && options.method !== 'HEAD') {\n    return false\n  }\n\n  return err.isNetworkError || false\n}\n","import type {Middleware, RetryOptions} from 'get-it'\n\nconst isStream = (stream: any) =>\n  stream !== null && typeof stream === 'object' && typeof stream.pipe === 'function'\n\n/** @public */\nexport default (opts: RetryOptions) => {\n  const maxRetries = opts.maxRetries || 5\n  const retryDelay = opts.retryDelay || getRetryDelay\n  const allowRetry = opts.shouldRetry\n\n  return {\n    onError: (err, context) => {\n      const options = context.options\n      const max = options.maxRetries || maxRetries\n      const delay = options.retryDelay || retryDelay\n      const shouldRetry = options.shouldRetry || allowRetry\n      const attemptNumber = options.attemptNumber || 0\n\n      // We can't retry if body is a stream, since it'll be drained\n      if (isStream(options.body)) {\n        return err\n      }\n\n      // Give up?\n      if (!shouldRetry(err, attemptNumber, options) || attemptNumber >= max) {\n        return err\n      }\n\n      // Create a new context with an increased attempt number, so we can exit if we reach a limit\n      const newContext = Object.assign({}, context, {\n        options: Object.assign({}, options, {attemptNumber: attemptNumber + 1}),\n      })\n\n      // Wait a given amount of time before doing the request again\n      setTimeout(() => context.channels.request.publish(newContext), delay(attemptNumber))\n\n      // Signal that we've handled the error and that it should not propagate further\n      return null\n    },\n  } satisfies Middleware\n}\n\nfunction getRetryDelay(attemptNum: number) {\n  return 100 * Math.pow(2, attemptNum) + Math.random() * 100\n}\n","import type {RetryOptions} from 'get-it'\n\nimport defaultShouldRetry from '../../util/browser-shouldRetry'\nimport sharedRetry from './shared-retry'\n\n/** @public */\nexport const retry = (opts: Partial<RetryOptions> = {}) =>\n  sharedRetry({shouldRetry: defaultShouldRetry, ...opts})\n\nretry.shouldRetry = defaultShouldRetry\n","import type {Middleware} from 'get-it'\n\nimport {isBuffer} from '../util/isBuffer'\nimport {isPlainObject} from '../util/isPlainObject'\n\nfunction encode(data: Record<string, string | Set<number | string>>): string {\n  const query = new URLSearchParams()\n\n  const nest = (name: string, _value: unknown) => {\n    const value = _value instanceof Set ? Array.from(_value) : _value\n    if (Array.isArray(value)) {\n      if (value.length) {\n        for (const index in value) {\n          nest(`${name}[${index}]`, value[index])\n        }\n      } else {\n        query.append(`${name}[]`, '')\n      }\n    } else if (typeof value === 'object' && value !== null) {\n      for (const [key, obj] of Object.entries(value)) {\n        nest(`${name}[${key}]`, obj)\n      }\n    } else {\n      query.append(name, value as string)\n    }\n  }\n\n  for (const [key, value] of Object.entries(data)) {\n    nest(key, value)\n  }\n\n  return query.toString()\n}\n\n/** @public */\nexport function urlEncoded() {\n  return {\n    processOptions: (options) => {\n      const body = options.body\n      if (!body) {\n        return options\n      }\n\n      const isStream = typeof body.pipe === 'function'\n      const shouldSerialize = !isStream && !isBuffer(body) && isPlainObject(body)\n\n      if (!shouldSerialize) {\n        return options\n      }\n\n      return {\n        ...options,\n        body: encode(options.body),\n        headers: {\n          ...options.headers,\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      }\n    },\n  } satisfies Middleware\n}\n","import decompressResponse from 'decompress-response'\nimport follow, {type FollowResponse, type RedirectableRequest} from 'follow-redirects'\nimport type {FinalizeNodeOptionsPayload, HttpRequest, MiddlewareResponse} from 'get-it'\nimport http from 'http'\nimport https from 'https'\nimport qs from 'querystring'\nimport {Readable, type Stream} from 'stream'\nimport url from 'url'\n\nimport {lowerCaseHeaders} from '../util/lowerCaseHeaders'\nimport {progressStream} from '../util/progress-stream'\nimport {getProxyOptions, rewriteUriForProxy} from './node/proxy'\nimport {concat} from './node/simpleConcat'\nimport {timedOut} from './node/timedOut'\nimport * as tunneling from './node/tunnel'\nimport type {RequestAdapter} from '../types'\n\n/**\n * Taken from:\n * https://github.com/sindresorhus/is-stream/blob/fb8caed475b4107cee3c22be3252a904020eb2d4/index.js#L3-L6\n */\nconst isStream = (stream: any): stream is Stream =>\n  stream !== null && typeof stream === 'object' && typeof stream.pipe === 'function'\n\n/** @public */\nexport const adapter: RequestAdapter = 'node'\n\nexport class NodeRequestError extends Error {\n  request: http.ClientRequest\n  code?: string | undefined\n\n  constructor(err: NodeJS.ErrnoException, req: any) {\n    super(err.message)\n    this.request = req\n    this.code = err.code\n  }\n}\n\n// Reduce a fully fledged node-style response object to\n// something that works in both browser and node environment\nconst reduceResponse = (\n  res: any,\n  reqUrl: string,\n  method: string,\n  body: any,\n): MiddlewareResponse => ({\n  body,\n  url: reqUrl,\n  method: method,\n  headers: res.headers,\n  statusCode: res.statusCode,\n  statusMessage: res.statusMessage,\n})\n\nexport const httpRequester: HttpRequest = (context, cb) => {\n  const {options} = context\n  const uri = Object.assign({}, url.parse(options.url))\n\n  if (typeof fetch === 'function' && options.fetch) {\n    const controller = new AbortController()\n    const reqOpts = context.applyMiddleware('finalizeOptions', {\n      ...uri,\n      method: options.method,\n      headers: {\n        ...(typeof options.fetch === 'object' && options.fetch.headers\n          ? lowerCaseHeaders(options.fetch.headers)\n          : {}),\n        ...lowerCaseHeaders(options.headers),\n      },\n      maxRedirects: options.maxRedirects,\n    }) as FinalizeNodeOptionsPayload\n    const fetchOpts = {\n      credentials: options.withCredentials ? 'include' : 'omit',\n      ...(typeof options.fetch === 'object' ? options.fetch : {}),\n      method: reqOpts.method,\n      headers: reqOpts.headers,\n      body: options.body,\n      signal: controller.signal,\n    } satisfies RequestInit\n\n    // Allow middleware to inject a response, for instance in the case of caching or mocking\n    const injectedResponse = context.applyMiddleware('interceptRequest', undefined, {\n      adapter,\n      context,\n    })\n\n    // If middleware injected a response, treat it as we normally would and return it\n    // Do note that the injected response has to be reduced to a cross-environment friendly response\n    if (injectedResponse) {\n      const cbTimer = setTimeout(cb, 0, null, injectedResponse)\n      const cancel = () => clearTimeout(cbTimer)\n      return {abort: cancel}\n    }\n\n    const request = fetch(options.url, fetchOpts)\n\n    // Let middleware know we're about to do a request\n    context.applyMiddleware('onRequest', {options, adapter, request, context})\n\n    request\n      .then(async (res) => {\n        const body = options.rawBody ? res.body : await res.text()\n\n        const headers = {} as Record<string, string>\n        res.headers.forEach((value, key) => {\n          headers[key] = value\n        })\n\n        cb(null, {\n          body,\n          url: res.url,\n          method: options.method!,\n          headers,\n          statusCode: res.status,\n          statusMessage: res.statusText,\n        })\n      })\n      .catch((err) => {\n        if (err.name == 'AbortError') return\n        cb(err)\n      })\n\n    return {abort: () => controller.abort()}\n  }\n\n  const bodyType = isStream(options.body) ? 'stream' : typeof options.body\n  if (\n    bodyType !== 'undefined' &&\n    bodyType !== 'stream' &&\n    bodyType !== 'string' &&\n    !Buffer.isBuffer(options.body)\n  ) {\n    throw new Error(`Request body must be a string, buffer or stream, got ${bodyType}`)\n  }\n\n  const lengthHeader: any = {}\n  if (options.bodySize) {\n    lengthHeader['content-length'] = options.bodySize\n  } else if (options.body && bodyType !== 'stream') {\n    lengthHeader['content-length'] = Buffer.byteLength(options.body)\n  }\n\n  // Make sure callback is not called in the event of a cancellation\n  let aborted = false\n  const callback = (err: Error | null, res?: MiddlewareResponse) => !aborted && cb(err, res)\n  context.channels.abort.subscribe(() => {\n    aborted = true\n  })\n\n  // Create a reduced subset of options meant for the http.request() method\n  let reqOpts: any = Object.assign({}, uri, {\n    method: options.method,\n    headers: Object.assign({}, lowerCaseHeaders(options.headers), lengthHeader),\n    maxRedirects: options.maxRedirects,\n  })\n\n  // Figure out proxying/tunnel options\n  const proxy = getProxyOptions(options)\n  const tunnel = proxy && tunneling.shouldEnable(options)\n\n  // Allow middleware to inject a response, for instance in the case of caching or mocking\n  const injectedResponse = context.applyMiddleware('interceptRequest', undefined, {\n    adapter,\n    context,\n  })\n\n  // If middleware injected a response, treat it as we normally would and return it\n  // Do note that the injected response has to be reduced to a cross-environment friendly response\n  if (injectedResponse) {\n    const cbTimer = setImmediate(callback, null, injectedResponse)\n    const abort = () => clearImmediate(cbTimer)\n    return {abort}\n  }\n\n  // We're using the follow-redirects module to transparently follow redirects\n  if (options.maxRedirects !== 0) {\n    reqOpts.maxRedirects = options.maxRedirects || 5\n  }\n\n  // Apply currect options for proxy tunneling, if enabled\n  if (proxy && tunnel) {\n    reqOpts = tunneling.applyAgent(reqOpts, proxy)\n  } else if (proxy && !tunnel) {\n    reqOpts = rewriteUriForProxy(reqOpts, uri, proxy)\n  }\n\n  // Handle proxy authorization if present\n  if (!tunnel && proxy && proxy.auth && !reqOpts.headers['proxy-authorization']) {\n    const [username, password] =\n      typeof proxy.auth === 'string'\n        ? proxy.auth.split(':').map((item) => qs.unescape(item))\n        : [proxy.auth.username, proxy.auth.password]\n\n    const auth = Buffer.from(`${username}:${password}`, 'utf8')\n    const authBase64 = auth.toString('base64')\n    reqOpts.headers['proxy-authorization'] = `Basic ${authBase64}`\n  }\n\n  // Figure out transport (http/https, forwarding/non-forwarding agent)\n  const transport = getRequestTransport(reqOpts, proxy, tunnel)\n  if (typeof options.debug === 'function' && proxy) {\n    options.debug(\n      'Proxying using %s',\n      reqOpts.agent ? 'tunnel agent' : `${reqOpts.host}:${reqOpts.port}`,\n    )\n  }\n\n  // See if we should try to request a compressed response (and decompress on return)\n  const tryCompressed = reqOpts.method !== 'HEAD'\n  if (tryCompressed && !reqOpts.headers['accept-encoding'] && options.compress !== false) {\n    reqOpts.headers['accept-encoding'] =\n      // Workaround Bun not supporting brotli: https://github.com/oven-sh/bun/issues/267\n      typeof Bun !== 'undefined' ? 'gzip, deflate' : 'br, gzip, deflate'\n  }\n\n  let _res: http.IncomingMessage | undefined\n  const finalOptions = context.applyMiddleware(\n    'finalizeOptions',\n    reqOpts,\n  ) as FinalizeNodeOptionsPayload\n  const request = transport.request(finalOptions, (response) => {\n    const res = tryCompressed ? decompressResponse(response) : response\n    _res = res\n    const resStream = context.applyMiddleware('onHeaders', res, {\n      headers: response.headers,\n      adapter,\n      context,\n    })\n\n    // On redirects, `responseUrl` is set\n    const reqUrl = 'responseUrl' in response ? response.responseUrl : options.url\n\n    if (options.stream) {\n      callback(null, reduceResponse(res, reqUrl, reqOpts.method, resStream))\n      return\n    }\n\n    // Concatenate the response body, then parse the response with middlewares\n    concat(resStream, (err: any, data: any) => {\n      if (err) {\n        return callback(err)\n      }\n\n      const body = options.rawBody ? data : data.toString()\n      const reduced = reduceResponse(res, reqUrl, reqOpts.method, body)\n      return callback(null, reduced)\n    })\n  })\n\n  function onError(err: NodeJS.ErrnoException) {\n    // HACK: If we have a socket error, and response has already been assigned this means\n    // that a response has already been sent. According to node.js docs, this is\n    // will result in the response erroring with an error code of 'ECONNRESET'.\n    // We first destroy the response, then the request, with the same error. This way the\n    // error is forwarded to both the response and the request.\n    // See the event order outlined here https://nodejs.org/api/http.html#httprequesturl-options-callback for how node.js handles the different scenarios.\n    if (_res) _res.destroy(err)\n    request.destroy(err)\n  }\n\n  request.once('socket', (socket: NodeJS.Socket) => {\n    socket.once('error', onError)\n    request.once('response', (response) => {\n      response.once('end', () => {\n        socket.removeListener('error', onError)\n      })\n    })\n  })\n\n  request.once('error', (err: NodeJS.ErrnoException) => {\n    if (_res) return\n    // The callback has already been invoked. Any error should be sent to the response.\n    callback(new NodeRequestError(err, request))\n  })\n\n  if (options.timeout) {\n    timedOut(request, options.timeout)\n  }\n\n  // Cheating a bit here; since we're not concerned about the \"bundle size\" in node,\n  // and modifying the body stream would be sorta tricky, we're just always going\n  // to put a progress stream in the middle here.\n  const {bodyStream, progress} = getProgressStream(options)\n\n  // Let middleware know we're about to do a request\n  context.applyMiddleware('onRequest', {options, adapter, request, context, progress})\n\n  if (bodyStream) {\n    bodyStream.pipe(request)\n  } else {\n    request.end(options.body)\n  }\n\n  return {abort: () => request.abort()}\n}\n\nfunction getProgressStream(options: any) {\n  if (!options.body) {\n    return {}\n  }\n\n  const bodyIsStream = isStream(options.body)\n  const length = options.bodySize || (bodyIsStream ? null : Buffer.byteLength(options.body))\n  if (!length) {\n    return bodyIsStream ? {bodyStream: options.body} : {}\n  }\n\n  const progress = progressStream({time: 32, length})\n  const bodyStream = bodyIsStream ? options.body : Readable.from(options.body)\n  return {bodyStream: bodyStream.pipe(progress), progress}\n}\n\nfunction getRequestTransport(\n  reqOpts: any,\n  proxy: any,\n  tunnel: any,\n): {\n  request: (\n    options: any,\n    callback: (response: http.IncomingMessage | (http.IncomingMessage & FollowResponse)) => void,\n  ) => http.ClientRequest | RedirectableRequest<http.ClientRequest, http.IncomingMessage>\n} {\n  const isHttpsRequest = reqOpts.protocol === 'https:'\n  const transports =\n    reqOpts.maxRedirects === 0\n      ? {http: http, https: https}\n      : {http: follow.http, https: follow.https}\n\n  if (!proxy || tunnel) {\n    return isHttpsRequest ? transports.https : transports.http\n  }\n\n  // Assume the proxy is an HTTPS proxy if port is 443, or if there is a\n  // `protocol` option set that starts with https\n  let isHttpsProxy = proxy.port === 443\n  if (proxy.protocol) {\n    isHttpsProxy = /^https:?/.test(proxy.protocol)\n  }\n\n  return isHttpsProxy ? transports.https : transports.http\n}\n","export * from './middleware/agent/browser-agent'\nexport * from './middleware/base'\nexport * from './middleware/debug'\nexport * from './middleware/defaultOptionsProcessor'\nexport * from './middleware/defaultOptionsValidator'\nexport * from './middleware/headers'\nexport * from './middleware/httpErrors'\nexport * from './middleware/injectResponse'\nexport * from './middleware/jsonRequest'\nexport * from './middleware/jsonResponse'\nexport * from './middleware/mtls'\nexport * from './middleware/observable'\nexport * from './middleware/progress/browser-progress'\nexport * from './middleware/promise'\nexport * from './middleware/proxy'\nexport * from './middleware/retry/browser-retry'\nexport * from './middleware/urlEncoded'\n\nimport {agent} from './middleware/agent/browser-agent'\nimport {buildKeepAlive} from './middleware/keepAlive'\n/** @public */\nexport const keepAlive = buildKeepAlive(agent)\n","import type {AgentOptions} from 'http'\nimport type {Middleware} from 'get-it'\n\nimport {NodeRequestError} from '../request/node-request'\n\ntype KeepAliveOptions = {\n  ms?: number\n  maxFree?: number\n\n  /**\n    How many times to retry in case of ECONNRESET error. Default: 3\n  */\n  maxRetries?: number\n}\n\nexport function buildKeepAlive(agent: (opts: AgentOptions) => Pick<Middleware, 'finalizeOptions'>) {\n  return function keepAlive(config: KeepAliveOptions = {}): any {\n    const {maxRetries = 3, ms = 1000, maxFree = 256} = config\n\n    const {finalizeOptions} = agent({\n      keepAlive: true,\n      keepAliveMsecs: ms,\n      maxFreeSockets: maxFree,\n    })\n\n    return {\n      finalizeOptions,\n      onError: (err, context) => {\n        // When sending request through a keep-alive enabled agent, the underlying socket might be reused. But if server closes connection at unfortunate time, client may run into a 'ECONNRESET' error.\n        // We retry three times in case of ECONNRESET error.\n        // https://nodejs.org/docs/latest-v20.x/api/http.html#requestreusedsocket\n        if (\n          (context.options.method === 'GET' || context.options.method === 'POST') &&\n          err instanceof NodeRequestError &&\n          err.code === 'ECONNRESET' &&\n          err.request.reusedSocket\n        ) {\n          const attemptNumber = context.options.attemptNumber || 0\n          if (attemptNumber < maxRetries) {\n            // Create a new context with an increased attempt number, so we can exit if we reach a limit\n            const newContext = Object.assign({}, context, {\n              options: Object.assign({}, context.options, {attemptNumber: attemptNumber + 1}),\n            })\n            // If this is a reused socket we retry immediately\n            setImmediate(() => context.channels.request.publish(newContext))\n\n            return null\n          }\n        }\n\n        return err\n      },\n    } satisfies Middleware\n  }\n}\n"],"names":["agent","_opts","leadingSlash","trailingSlash","base","baseUrl","baseUri","replace","processOptions","options","test","url","join","Object","assign","browser","exports","formatArgs","args","this","useColors","namespace","module","humanize","diff","c","color","splice","index","lastC","match","save","namespaces","storage","setItem","removeItem","load","r","getItem","process","env","DEBUG","window","type","__nwjs","navigator","userAgent","toLowerCase","m","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","parseInt","localStorage","localstorage","destroy","warned","warn","colors","log","debug","common","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","enabled","self","curr","Number","Date","ms","prev","coerce","unshift","format","formatter","formatters","val","call","apply","selectColor","extend","defineProperty","enumerable","configurable","get","set","v","init","delimiter","newDebug","matchesTemplate","search","template","searchIndex","templateIndex","starIndex","matchIndex","length","default","Error","stack","message","disable","names","skips","map","enable","split","trim","filter","Boolean","ns","push","slice","name","skip","s","h","d","w","plural","msAbs","n","isPlural","Math","round","str","String","exec","parseFloat","parse","isFinite","long","abs","fmtShort","JSON","stringify","require$$0","keys","forEach","key","hash","i","charCodeAt","j","error","SENSITIVE_HEADERS","hasOwn","prototype","hasOwnProperty","opts","verbose","defaultLogger","debugIt","shortCircuit","requestId","onRequest","event","method","body","headers","redactSensitiveHeaders","source","redacted","target","indexOf","redactKeys","onResponse","res","context","reqId","statusCode","statusMessage","parsed","tryFormat","stringifyBody","onError","err","_headers","existing","override","HttpError","response","request","constructor","ctx","super","truncatedUrl","msg","httpErrors","injectResponse","inject","interceptRequest","prevValue","isBuffer","Buffer","obj","isObject","o","toString","isPlainObject","ctor","prot","serializeTypes","jsonRequest","pipe","Array","isArray","jsonResponse","contentType","shouldDecode","force","tryParse","Accept","mtls","config","ca","cert","finalizeOptions","isBrowserOptions","mtlsOpts","actualGlobal","globalThis","global","global$1","observable","Observable","implementation","onReturn","channels","observer","subscribe","progress","next","complete","publish","abort","evt","adapter","xhr","handleProgress","stage","percent","lengthComputable","loaded","total","upload","onprogress","promise","PromiseImplementation","Promise","resolve","reject","cancel","cancelToken","then","reason","onlyBody","setTimeout","Cancel","__CANCEL__","CancelToken","executor","TypeError","resolvePromise","static","token","can","proxy","_proxy","host","isCancel","value","defaultShouldRetry","_attempt","isNetworkError","getRetryDelay","attemptNum","pow","random","retry","maxRetries","retryDelay","allowRetry","shouldRetry","max","delay","attemptNumber","stream","newContext","sharedRetry","encode","data","query","URLSearchParams","nest","_value","Set","from","append","entries","urlEncoded","NodeRequestError","code","req","keepAlive","maxFree","keepAliveMsecs","maxFreeSockets","reusedSocket","setImmediate"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"debugId":null}},
    {"offset": {"line": 1056, "column": 0}, "map": {"version":3,"file":"isFunction.js","sourceRoot":"","sources":["../../../../src/internal/util/isFunction.ts"],"names":[],"mappings":";;;;;AAIA,SAAgB,UAAU,CAAC,KAAU;IACnC,OAAO,OAAO,KAAK,KAAK,UAAU,CAAC;AACrC,CAAC;AAFD,QAAA,UAAA,GAAA,WAEC","debugId":null}},
    {"offset": {"line": 1070, "column": 0}, "map": {"version":3,"file":"createErrorClass.js","sourceRoot":"","sources":["../../../../src/internal/util/createErrorClass.ts"],"names":[],"mappings":";;;;;AASA,SAAgB,gBAAgB,CAAI,UAAgC;IAClE,IAAM,MAAM,GAAG,SAAC,QAAa;QAC3B,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrB,QAAQ,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC;IACrC,CAAC,CAAC;IAEF,IAAM,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;IACpC,QAAQ,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACpD,QAAQ,CAAC,SAAS,CAAC,WAAW,GAAG,QAAQ,CAAC;IAC1C,OAAO,QAAQ,CAAC;AAClB,CAAC;AAVD,QAAA,gBAAA,GAAA,iBAUC","debugId":null}},
    {"offset": {"line": 1091, "column": 0}, "map": {"version":3,"file":"UnsubscriptionError.js","sourceRoot":"","sources":["../../../../src/internal/util/UnsubscriptionError.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,mDAAsD;AAkBzC,QAAA,mBAAmB,GAA4B,mBAAA,gBAAgB,CAC1E,SAAC,MAAM;IACL,OAAA,SAAS,uBAAuB,CAAY,MAA0B;QACpE,MAAM,CAAC,IAAI,CAAC,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,MAAM,GACd,MAAM,CAAC,MAAM,GAAA,8CACxB,MAAM,CAAC,GAAG,CAAC,SAAC,GAAG,EAAE,CAAC;YAAK,OAAG,CAAC,GAAG,CAAC,GAAA,OAAK,GAAG,CAAC,QAAQ,EAAI;QAA7B,CAA6B,CAAC,CAAC,IAAI,CAAC,MAAM,CAAG,GAC5D,EAAE,CAAC;QACP,IAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC;QAClC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;AARD,CAQC,CACJ,CAAC","debugId":null}},
    {"offset": {"line": 1112, "column": 0}, "map": {"version":3,"file":"arrRemove.js","sourceRoot":"","sources":["../../../../src/internal/util/arrRemove.ts"],"names":[],"mappings":";;;;;AAKA,SAAgB,SAAS,CAAI,GAA2B,EAAE,IAAO;IAC/D,IAAI,GAAG,EAAE;QACP,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC,IAAI,KAAK,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;KACpC;AACH,CAAC;AALD,QAAA,SAAA,GAAA,UAKC","debugId":null}},
    {"offset": {"line": 1129, "column": 0}, "map": {"version":3,"file":"Subscription.js","sourceRoot":"","sources":["../../../src/internal/Subscription.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1321, "column": 0}, "map": {"version":3,"file":"config.js","sourceRoot":"","sources":["../../../src/internal/config.ts"],"names":[],"mappings":";;;;;AAOa,QAAA,MAAM,GAAiB;IAClC,gBAAgB,EAAE,IAAI;IACtB,qBAAqB,EAAE,IAAI;IAC3B,OAAO,EAAE,SAAS;IAClB,qCAAqC,EAAE,KAAK;IAC5C,wBAAwB,EAAE,KAAK;CAChC,CAAC","debugId":null}},
    {"offset": {"line": 1338, "column": 0}, "map": {"version":3,"file":"timeoutProvider.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/timeoutProvider.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAea,QAAA,eAAe,GAAoB;IAG9C,UAAU,EAAV,SAAW,OAAmB,EAAE,OAAgB;QAAE,IAAA,OAAA,EAAA,CAAO;YAAP,IAAA,KAAA,CAAO,EAAP,KAAA,UAAA,MAAO,EAAP,IAAO,CAAA;YAAP,IAAA,CAAA,KAAA,EAAA,GAAA,SAAA,CAAA,GAAA,CAAO;;QAC/C,IAAA,QAAQ,GAAK,QAAA,eAAe,CAAA,QAApB,CAAqB;QACrC,IAAI,QAAQ,KAAA,QAAR,QAAQ,KAAA,KAAA,IAAA,KAAA,IAAR,QAAQ,CAAE,UAAU,EAAE;YACxB,OAAO,QAAQ,CAAC,UAAU,CAAA,KAAA,CAAnB,QAAQ,EAAA,cAAA;gBAAY,OAAO;gBAAE,OAAO;aAAA,EAAA,OAAK,IAAI,IAAE;SACvD;QACD,OAAO,UAAU,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA;YAAC,OAAO;YAAE,OAAO;SAAA,EAAA,OAAK,IAAI,IAAE;IAC/C,CAAC;IACD,YAAY,EAAZ,SAAa,MAAM;QACT,IAAA,QAAQ,GAAK,QAAA,eAAe,CAAA,QAApB,CAAqB;QACrC,OAAO,CAAC,CAAA,QAAQ,KAAA,QAAR,QAAQ,KAAA,KAAA,IAAA,KAAA,IAAR,QAAQ,CAAE,YAAY,KAAI,YAAY,CAAC,CAAC,MAAa,CAAC,CAAC;IACjE,CAAC;IACD,QAAQ,EAAE,SAAS;CACpB,CAAC","debugId":null}},
    {"offset": {"line": 1395, "column": 0}, "map": {"version":3,"file":"reportUnhandledError.js","sourceRoot":"","sources":["../../../../src/internal/util/reportUnhandledError.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,gCAAmC;AACnC,IAAA,4DAA+D;AAW/D,SAAgB,oBAAoB,CAAC,GAAQ;IAC3C,kBAAA,eAAe,CAAC,UAAU,CAAC;QACjB,IAAA,gBAAgB,GAAK,SAAA,MAAM,CAAA,gBAAX,CAAY;QACpC,IAAI,gBAAgB,EAAE;YAEpB,gBAAgB,CAAC,GAAG,CAAC,CAAC;SACvB,MAAM;YAEL,MAAM,GAAG,CAAC;SACX;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAXD,QAAA,oBAAA,GAAA,qBAWC","debugId":null}},
    {"offset": {"line": 1418, "column": 0}, "map": {"version":3,"file":"noop.js","sourceRoot":"","sources":["../../../../src/internal/util/noop.ts"],"names":[],"mappings":";;;;;AACA,SAAgB,IAAI,IAAK,CAAC;AAA1B,QAAA,IAAA,GAAA,KAA0B","debugId":null}},
    {"offset": {"line": 1430, "column": 0}, "map": {"version":3,"file":"NotificationFactories.js","sourceRoot":"","sources":["../../../src/internal/NotificationFactories.ts"],"names":[],"mappings":";;;;;AAOa,QAAA,qBAAqB,GAAG,AAAC;IAAM,OAAA,kBAAkB,CAAC,GAAG,EAAE,SAAS,EAAE,SAAS,CAAyB;AAArE,CAAqE,CAAC,EAAE,CAAC;AAOrH,SAAgB,iBAAiB,CAAC,KAAU;IAC1C,OAAO,kBAAkB,CAAC,GAAG,EAAE,SAAS,EAAE,KAAK,CAAQ,CAAC;AAC1D,CAAC;AAFD,QAAA,iBAAA,GAAA,kBAEC;AAOD,SAAgB,gBAAgB,CAAI,KAAQ;IAC1C,OAAO,kBAAkB,CAAC,GAAG,EAAE,KAAK,EAAE,SAAS,CAAwB,CAAC;AAC1E,CAAC;AAFD,QAAA,gBAAA,GAAA,iBAEC;AAQD,SAAgB,kBAAkB,CAAC,IAAqB,EAAE,KAAU,EAAE,KAAU;IAC9E,OAAO;QACL,IAAI,EAAA,IAAA;QACJ,KAAK,EAAA,KAAA;QACL,KAAK,EAAA,KAAA;KACN,CAAC;AACJ,CAAC;AAND,QAAA,kBAAA,GAAA,mBAMC","debugId":null}},
    {"offset": {"line": 1459, "column": 0}, "map": {"version":3,"file":"errorContext.js","sourceRoot":"","sources":["../../../../src/internal/util/errorContext.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,gCAAmC;AAEnC,IAAI,OAAO,GAAgD,IAAI,CAAC;AAShE,SAAgB,YAAY,CAAC,EAAc;IACzC,IAAI,SAAA,MAAM,CAAC,qCAAqC,EAAE;QAChD,IAAM,MAAM,GAAG,CAAC,OAAO,CAAC;QACxB,IAAI,MAAM,EAAE;YACV,OAAO,GAAG;gBAAE,WAAW,EAAE,KAAK;gBAAE,KAAK,EAAE,IAAI;YAAA,CAAE,CAAC;SAC/C;QACD,EAAE,EAAE,CAAC;QACL,IAAI,MAAM,EAAE;YACJ,IAAA,KAAyB,OAAQ,EAA/B,WAAW,GAAA,GAAA,WAAA,EAAE,KAAK,GAAA,GAAA,KAAa,CAAC;YACxC,OAAO,GAAG,IAAI,CAAC;YACf,IAAI,WAAW,EAAE;gBACf,MAAM,KAAK,CAAC;aACb;SACF;KACF,MAAM;QAGL,EAAE,EAAE,CAAC;KACN;AACH,CAAC;AAnBD,QAAA,YAAA,GAAA,aAmBC;AAMD,SAAgB,YAAY,CAAC,GAAQ;IACnC,IAAI,SAAA,MAAM,CAAC,qCAAqC,IAAI,OAAO,EAAE;QAC3D,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;QAC3B,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC;KACrB;AACH,CAAC;AALD,QAAA,YAAA,GAAA,aAKC","debugId":null}},
    {"offset": {"line": 1500, "column": 0}, "map": {"version":3,"file":"Subscriber.js","sourceRoot":"","sources":["../../../src/internal/Subscriber.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1703, "column": 0}, "map": {"version":3,"file":"observable.js","sourceRoot":"","sources":["../../../../src/internal/symbol/observable.ts"],"names":[],"mappings":";;;;;AAMa,QAAA,UAAU,GAAoB,AAAC;IAAM,OAAA,AAAC,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,GAAI,cAAc;AAArE,CAAqE,CAAC,EAAE,CAAC","debugId":null}},
    {"offset": {"line": 1716, "column": 0}, "map": {"version":3,"file":"identity.js","sourceRoot":"","sources":["../../../../src/internal/util/identity.ts"],"names":[],"mappings":";;;;;AA0CA,SAAgB,QAAQ,CAAI,CAAI;IAC9B,OAAO,CAAC,CAAC;AACX,CAAC;AAFD,QAAA,QAAA,GAAA,SAEC","debugId":null}},
    {"offset": {"line": 1730, "column": 0}, "map": {"version":3,"file":"pipe.js","sourceRoot":"","sources":["../../../../src/internal/util/pipe.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,mCAAsC;AA6EtC,SAAgB,IAAI;IAAC,IAAA,MAAA,EAAA,CAAsC;QAAtC,IAAA,KAAA,CAAsC,EAAtC,KAAA,UAAA,MAAsC,EAAtC,IAAsC,CAAA;QAAtC,GAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAsC;;IACzD,OAAO,aAAa,CAAC,GAAG,CAAC,CAAC;AAC5B,CAAC;AAFD,QAAA,IAAA,GAAA,KAEC;AAGD,SAAgB,aAAa,CAAO,GAA+B;IACjE,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;QACpB,OAAO,WAAA,QAAmC,CAAC;KAC5C;IAED,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;QACpB,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;KACf;IAED,OAAO,SAAS,KAAK,CAAC,KAAQ;QAC5B,OAAO,GAAG,CAAC,MAAM,CAAC,SAAC,IAAS,EAAE,EAAuB;YAAK,OAAA,EAAE,CAAC,IAAI,CAAC;QAAR,CAAQ,EAAE,KAAY,CAAC,CAAC;IACpF,CAAC,CAAC;AACJ,CAAC;AAZD,QAAA,aAAA,GAAA,cAYC","debugId":null}},
    {"offset": {"line": 1763, "column": 0}, "map": {"version":3,"file":"Observable.js","sourceRoot":"","sources":["../../../src/internal/Observable.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1871, "column": 0}, "map": {"version":3,"file":"lift.js","sourceRoot":"","sources":["../../../../src/internal/util/lift.ts"],"names":[],"mappings":";;;;;AAGA,IAAA,uCAA0C;AAK1C,SAAgB,OAAO,CAAC,MAAW;IACjC,OAAO,aAAA,UAAU,CAAC,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,IAAI,CAAC,CAAC;AAClC,CAAC;AAFD,QAAA,OAAA,GAAA,QAEC;AAMD,SAAgB,OAAO,CACrB,IAAqF;IAErF,OAAO,SAAC,MAAqB;QAC3B,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;YACnB,OAAO,MAAM,CAAC,IAAI,CAAC,SAA+B,YAA2B;gBAC3E,IAAI;oBACF,OAAO,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;iBACjC,CAAC,OAAO,GAAG,EAAE;oBACZ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBACjB;YACH,CAAC,CAAC,CAAC;SACJ;QACD,MAAM,IAAI,SAAS,CAAC,wCAAwC,CAAC,CAAC;IAChE,CAAC,CAAC;AACJ,CAAC;AAfD,QAAA,OAAA,GAAA,QAeC","debugId":null}},
    {"offset": {"line": 1901, "column": 0}, "map": {"version":3,"file":"OperatorSubscriber.js","sourceRoot":"","sources":["../../../../src/internal/operators/OperatorSubscriber.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,wCAA2C;AAc3C,SAAgB,wBAAwB,CACtC,WAA4B,EAC5B,MAA2B,EAC3B,UAAuB,EACvB,OAA4B,EAC5B,UAAuB;IAEvB,OAAO,IAAI,kBAAkB,CAAC,WAAW,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;AACtF,CAAC;AARD,QAAA,wBAAA,GAAA,yBAQC;AAMD,IAAA,qBAAA,SAAA,MAAA;IAA2C,UAAA,oBAAA,QAAa;IAiBtD,SAAA,mBACE,WAA4B,EAC5B,MAA2B,EAC3B,UAAuB,EACvB,OAA4B,EACpB,UAAuB,EACvB,iBAAiC;QAN3C,IAAA,QAoBE,OAAA,IAAA,CAAA,IAAA,EAAM,WAAW,CAAC,IAAA,IAAA,CAoCnB;QAnDS,MAAA,UAAU,GAAV,UAAU,CAAa;QACvB,MAAA,iBAAiB,GAAjB,iBAAiB,CAAgB;QAezC,KAAI,CAAC,KAAK,GAAG,MAAM,GACf,SAAuC,KAAQ;YAC7C,IAAI;gBACF,MAAM,CAAC,KAAK,CAAC,CAAC;aACf,CAAC,OAAO,GAAG,EAAE;gBACZ,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACxB;QACH,CAAC,GACD,OAAA,SAAA,CAAM,KAAK,CAAC;QAChB,KAAI,CAAC,MAAM,GAAG,OAAO,GACjB,SAAuC,GAAQ;YAC7C,IAAI;gBACF,OAAO,CAAC,GAAG,CAAC,CAAC;aACd,CAAC,OAAO,GAAG,EAAE;gBAEZ,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACxB,QAAS;gBAER,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;QACH,CAAC,GACD,OAAA,SAAA,CAAM,MAAM,CAAC;QACjB,KAAI,CAAC,SAAS,GAAG,UAAU,GACvB;YACE,IAAI;gBACF,UAAU,EAAE,CAAC;aACd,CAAC,OAAO,GAAG,EAAE;gBAEZ,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACxB,QAAS;gBAER,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;QACH,CAAC,GACD,OAAA,SAAA,CAAM,SAAS,CAAC;;IACtB,CAAC;IAED,mBAAA,SAAA,CAAA,WAAW,GAAX;;QACE,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;YAC/C,IAAA,QAAM,GAAK,IAAI,CAAA,MAAT,CAAU;YACxB,OAAA,SAAA,CAAM,WAAW,CAAA,IAAA,CAAA,IAAA,CAAE,CAAC;YAEpB,CAAC,QAAM,IAAA,CAAI,CAAA,KAAA,IAAI,CAAC,UAAU,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAA,IAAA,CAAf,IAAI,CAAe,CAAA,CAAC;SAChC;IACH,CAAC;IACH,OAAA,kBAAC;AAAD,CAAC,AAnFD,CAA2C,aAAA,UAAU,GAmFpD;AAnFY,QAAA,kBAAA,GAAA,mBAAkB","debugId":null}},
    {"offset": {"line": 1980, "column": 0}, "map": {"version":3,"file":"refCount.js","sourceRoot":"","sources":["../../../../src/internal/operators/refCount.ts"],"names":[],"mappings":";;;;;AAGA,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AA4DhE,SAAgB,QAAQ;IACtB,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,UAAU,GAAwB,IAAI,CAAC;QAE1C,MAAc,CAAC,SAAS,EAAE,CAAC;QAE5B,IAAM,UAAU,GAAG,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE;YACvF,IAAI,CAAC,MAAM,IAAK,MAAc,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,GAAG,EAAG,MAAc,CAAC,SAAS,EAAE;gBAChF,UAAU,GAAG,IAAI,CAAC;gBAClB,OAAO;aACR;YA2BD,IAAM,gBAAgB,GAAI,MAAc,CAAC,WAAW,CAAC;YACrD,IAAM,IAAI,GAAG,UAAU,CAAC;YACxB,UAAU,GAAG,IAAI,CAAC;YAElB,IAAI,gBAAgB,IAAI,CAAC,CAAC,IAAI,IAAI,gBAAgB,KAAK,IAAI,CAAC,EAAE;gBAC5D,gBAAgB,CAAC,WAAW,EAAE,CAAC;aAChC;YAED,UAAU,CAAC,WAAW,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAE7B,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;YACtB,UAAU,GAAI,MAAmC,CAAC,OAAO,EAAE,CAAC;SAC7D;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAtDD,QAAA,QAAA,GAAA,SAsDC","debugId":null}},
    {"offset": {"line": 2016, "column": 0}, "map": {"version":3,"file":"ConnectableObservable.js","sourceRoot":"","sources":["../../../../src/internal/observable/ConnectableObservable.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,wCAA2C;AAE3C,IAAA,4CAA+C;AAC/C,IAAA,8CAAwE;AACxE,IAAA,kEAA2E;AAC3E,IAAA,iCAAuC;AASvC,IAAA,wBAAA,SAAA,MAAA;IAA8C,UAAA,uBAAA,QAAa;IAgBzD,SAAA,sBAAmB,MAAqB,EAAY,cAAgC;QAApF,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,CAAO,IAAA,IAAA,CAOR;QARkB,MAAA,MAAM,GAAN,MAAM,CAAe;QAAY,MAAA,cAAc,GAAd,cAAc,CAAkB;QAf1E,MAAA,QAAQ,GAAsB,IAAI,CAAC;QACnC,MAAA,SAAS,GAAW,CAAC,CAAC;QACtB,MAAA,WAAW,GAAwB,IAAI,CAAC;QAkBhD,IAAI,OAAA,OAAO,CAAC,MAAM,CAAC,EAAE;YACnB,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;SACzB;;IACH,CAAC;IAGS,sBAAA,SAAA,CAAA,UAAU,GAApB,SAAqB,UAAyB;QAC5C,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IACjD,CAAC;IAES,sBAAA,SAAA,CAAA,UAAU,GAApB;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,SAAS,EAAE;YACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;SACvC;QACD,OAAO,IAAI,CAAC,QAAS,CAAC;IACxB,CAAC;IAES,sBAAA,SAAA,CAAA,SAAS,GAAnB;QACE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACX,IAAA,WAAW,GAAK,IAAI,CAAA,WAAT,CAAU;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxC,WAAW,KAAA,QAAX,WAAW,KAAA,KAAA,IAAA,KAAA,IAAX,WAAW,CAAE,WAAW,EAAE,CAAC;IAC7B,CAAC;IAMD,sBAAA,SAAA,CAAA,OAAO,GAAP;QAAA,IAAA,QAAA,IAAA,CA6BC;QA5BC,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;QAClC,IAAI,CAAC,UAAU,EAAE;YACf,UAAU,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,eAAA,YAAY,EAAE,CAAC;YACnD,IAAM,SAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YAClC,UAAU,CAAC,GAAG,CACZ,IAAI,CAAC,MAAM,CAAC,SAAS,CACnB,qBAAA,wBAAwB,CACtB,SAAc,EACd,SAAS,EACT;gBACE,KAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,SAAO,CAAC,QAAQ,EAAE,CAAC;YACrB,CAAC,EACD,SAAC,GAAG;gBACF,KAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,SAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,EACD;gBAAM,OAAA,KAAI,CAAC,SAAS,EAAE;YAAhB,CAAgB,CACvB,CACF,CACF,CAAC;YAEF,IAAI,UAAU,CAAC,MAAM,EAAE;gBACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,UAAU,GAAG,eAAA,YAAY,CAAC,KAAK,CAAC;aACjC;SACF;QACD,OAAO,UAAU,CAAC;IACpB,CAAC;IAMD,sBAAA,SAAA,CAAA,QAAQ,GAAR;QACE,OAAO,WAAA,QAAmB,EAAE,CAAC,IAAI,CAAkB,CAAC;IACtD,CAAC;IACH,OAAA,qBAAC;AAAD,CAAC,AAxFD,CAA8C,aAAA,UAAU,GAwFvD;AAxFY,QAAA,qBAAA,GAAA,sBAAqB","debugId":null}},
    {"offset": {"line": 2109, "column": 0}, "map": {"version":3,"file":"performanceTimestampProvider.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/performanceTimestampProvider.ts"],"names":[],"mappings":";;;;;AAMa,QAAA,4BAA4B,GAAiC;IACxE,GAAG,EAAA;QAGD,OAAO,CAAC,QAAA,4BAA4B,CAAC,QAAQ,IAAI,WAAW,CAAC,CAAC,GAAG,EAAE,CAAC;IACtE,CAAC;IACD,QAAQ,EAAE,SAAS;CACpB,CAAC","debugId":null}},
    {"offset": {"line": 2125, "column": 0}, "map": {"version":3,"file":"animationFrameProvider.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/animationFrameProvider.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,4CAA+C;AAclC,QAAA,sBAAsB,GAA2B;IAG5D,QAAQ,EAAR,SAAS,QAAQ;QACf,IAAI,OAAO,GAAG,qBAAqB,CAAC;QACpC,IAAI,MAAM,GAA4C,oBAAoB,CAAC;QACnE,IAAA,QAAQ,GAAK,QAAA,sBAAsB,CAAA,QAA3B,CAA4B;QAC5C,IAAI,QAAQ,EAAE;YACZ,OAAO,GAAG,QAAQ,CAAC,qBAAqB,CAAC;YACzC,MAAM,GAAG,QAAQ,CAAC,oBAAoB,CAAC;SACxC;QACD,IAAM,MAAM,GAAG,OAAO,CAAC,SAAC,SAAS;YAI/B,MAAM,GAAG,SAAS,CAAC;YACnB,QAAQ,CAAC,SAAS,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,eAAA,YAAY,CAAC;YAAM,OAAA,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAG,MAAM,CAAC;QAAhB,CAAgB,CAAC,CAAC;IAClD,CAAC;IACD,qBAAqB,EAAA;QAAC,IAAA,OAAA,EAAA,CAAO;YAAP,IAAA,KAAA,CAAO,EAAP,KAAA,UAAA,MAAO,EAAP,IAAO,CAAA;YAAP,IAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAO;;QACnB,IAAA,QAAQ,GAAK,QAAA,sBAAsB,CAAA,QAA3B,CAA4B;QAC5C,OAAO,CAAC,CAAA,QAAQ,KAAA,QAAR,QAAQ,KAAA,KAAA,IAAA,KAAA,IAAR,QAAQ,CAAE,qBAAqB,KAAI,qBAAqB,CAAC,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA,EAAA,EAAA,OAAI,IAAI,IAAE;IAC7E,CAAC;IACD,oBAAoB,EAAA;QAAC,IAAA,OAAA,EAAA,CAAO;YAAP,IAAA,KAAA,CAAO,EAAP,KAAA,UAAA,MAAO,EAAP,IAAO,CAAA;YAAP,IAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAO;;QAClB,IAAA,QAAQ,GAAK,QAAA,sBAAsB,CAAA,QAA3B,CAA4B;QAC5C,OAAO,CAAC,CAAA,QAAQ,KAAA,QAAR,QAAQ,KAAA,KAAA,IAAA,KAAA,IAAR,QAAQ,CAAE,oBAAoB,KAAI,oBAAoB,CAAC,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA,EAAA,EAAA,OAAI,IAAI,IAAE;IAC3E,CAAC;IACD,QAAQ,EAAE,SAAS;CACpB,CAAC","debugId":null}},
    {"offset": {"line": 2194, "column": 0}, "map": {"version":3,"file":"animationFrames.js","sourceRoot":"","sources":["../../../../../src/internal/observable/dom/animationFrames.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,2CAA8C;AAE9C,IAAA,yFAA4F;AAC5F,IAAA,6EAAgF;AAuEhF,SAAgB,eAAe,CAAC,iBAAqC;IACnE,OAAO,iBAAiB,CAAC,CAAC,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC;AAClG,CAAC;AAFD,QAAA,eAAA,GAAA,gBAEC;AAMD,SAAS,sBAAsB,CAAC,iBAAqC;IACnE,OAAO,IAAI,aAAA,UAAU,CAAyC,SAAC,UAAU;QAIvE,IAAM,QAAQ,GAAG,iBAAiB,IAAI,+BAAA,4BAA4B,CAAC;QAMnE,IAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;QAE7B,IAAI,EAAE,GAAG,CAAC,CAAC;QACX,IAAM,GAAG,GAAG;YACV,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBACtB,EAAE,GAAG,yBAAA,sBAAsB,CAAC,qBAAqB,CAAC,SAAC,SAAuC;oBACxF,EAAE,GAAG,CAAC,CAAC;oBAQP,IAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;oBAC3B,UAAU,CAAC,IAAI,CAAC;wBACd,SAAS,EAAE,iBAAiB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;wBAC9C,OAAO,EAAE,GAAG,GAAG,KAAK;qBACrB,CAAC,CAAC;oBACH,GAAG,EAAE,CAAC;gBACR,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;QAEF,GAAG,EAAE,CAAC;QAEN,OAAO;YACL,IAAI,EAAE,EAAE;gBACN,yBAAA,sBAAsB,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;aACjD;QACH,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAMD,IAAM,wBAAwB,GAAG,sBAAsB,EAAE,CAAC","debugId":null}},
    {"offset": {"line": 2238, "column": 0}, "map": {"version":3,"file":"ObjectUnsubscribedError.js","sourceRoot":"","sources":["../../../../src/internal/util/ObjectUnsubscribedError.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,mDAAsD;AAqBzC,QAAA,uBAAuB,GAAgC,mBAAA,gBAAgB,CAClF,SAAC,MAAM;IACL,OAAA,SAAS,2BAA2B;QAClC,MAAM,CAAC,IAAI,CAAC,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,yBAAyB,CAAC;QACtC,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC;IACvC,CAAC;AAJD,CAIC,CACJ,CAAC","debugId":null}},
    {"offset": {"line": 2256, "column": 0}, "map": {"version":3,"file":"Subject.js","sourceRoot":"","sources":["../../../src/internal/Subject.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2462, "column": 0}, "map": {"version":3,"file":"BehaviorSubject.js","sourceRoot":"","sources":["../../../src/internal/BehaviorSubject.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,iCAAoC;AAQpC,IAAA,kBAAA,SAAA,MAAA;IAAwC,UAAA,iBAAA,QAAU;IAChD,SAAA,gBAAoB,MAAS;QAA7B,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,CAAO,IAAA,IAAA,CACR;QAFmB,MAAA,MAAM,GAAN,MAAM,CAAG;;IAE7B,CAAC;IAED,OAAA,cAAA,CAAI,gBAAA,SAAA,EAAA,OAAK,EAAA;aAAT;YACE,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;QACzB,CAAC;;;OAAA;IAGS,gBAAA,SAAA,CAAA,UAAU,GAApB,SAAqB,UAAyB;QAC5C,IAAM,YAAY,GAAG,OAAA,SAAA,CAAM,UAAU,CAAA,IAAA,CAAA,IAAA,EAAC,UAAU,CAAC,CAAC;QAClD,CAAC,YAAY,CAAC,MAAM,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrD,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,gBAAA,SAAA,CAAA,QAAQ,GAAR;QACQ,IAAA,KAAoC,IAAI,EAAtC,QAAQ,GAAA,GAAA,QAAA,EAAE,WAAW,GAAA,GAAA,WAAA,EAAE,MAAM,GAAA,GAAA,MAAS,CAAC;QAC/C,IAAI,QAAQ,EAAE;YACZ,MAAM,WAAW,CAAC;SACnB;QACD,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,gBAAA,SAAA,CAAA,IAAI,GAAJ,SAAK,KAAQ;QACX,OAAA,SAAA,CAAM,IAAI,CAAA,IAAA,CAAA,IAAA,EAAC,AAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IACH,OAAA,eAAC;AAAD,CAAC,AA5BD,CAAwC,UAAA,OAAO,GA4B9C;AA5BY,QAAA,eAAA,GAAA,gBAAe","debugId":null}},
    {"offset": {"line": 2526, "column": 0}, "map": {"version":3,"file":"dateTimestampProvider.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/dateTimestampProvider.ts"],"names":[],"mappings":";;;;;AAMa,QAAA,qBAAqB,GAA0B;IAC1D,GAAG,EAAA;QAGD,OAAO,CAAC,QAAA,qBAAqB,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;IACxD,CAAC;IACD,QAAQ,EAAE,SAAS;CACpB,CAAC","debugId":null}},
    {"offset": {"line": 2542, "column": 0}, "map": {"version":3,"file":"ReplaySubject.js","sourceRoot":"","sources":["../../../src/internal/ReplaySubject.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,iCAAoC;AAIpC,IAAA,uEAA0E;AAgC1E,IAAA,gBAAA,SAAA,MAAA;IAAsC,UAAA,eAAA,QAAU;IAU9C,SAAA,cACU,WAAsB,EACtB,WAAsB,EACtB,kBAA6D;QAF7D,IAAA,gBAAA,KAAA,GAAA;YAAA,cAAA,QAAsB;QAAA;QACtB,IAAA,gBAAA,KAAA,GAAA;YAAA,cAAA,QAAsB;QAAA;QACtB,IAAA,uBAAA,KAAA,GAAA;YAAA,qBAAwC,wBAAA,qBAAqB;QAAA;QAHvE,IAAA,QAKE,OAAA,IAAA,CAAA,IAAA,CAAO,IAAA,IAAA,CAIR;QARS,MAAA,WAAW,GAAX,WAAW,CAAW;QACtB,MAAA,WAAW,GAAX,WAAW,CAAW;QACtB,MAAA,kBAAkB,GAAlB,kBAAkB,CAA2C;QAZ/D,MAAA,OAAO,GAAmB,EAAE,CAAC;QAC7B,MAAA,mBAAmB,GAAG,IAAI,CAAC;QAcjC,KAAI,CAAC,mBAAmB,GAAG,WAAW,KAAK,QAAQ,CAAC;QACpD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;QAC5C,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;;IAC9C,CAAC;IAED,cAAA,SAAA,CAAA,IAAI,GAAJ,SAAK,KAAQ;QACL,IAAA,KAA+E,IAAI,EAAjF,SAAS,GAAA,GAAA,SAAA,EAAE,OAAO,GAAA,GAAA,OAAA,EAAE,mBAAmB,GAAA,GAAA,mBAAA,EAAE,kBAAkB,GAAA,GAAA,kBAAA,EAAE,WAAW,GAAA,GAAA,WAAS,CAAC;QAC1F,IAAI,CAAC,SAAS,EAAE;YACd,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpB,CAAC,mBAAmB,IAAI,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,GAAG,WAAW,CAAC,CAAC;SAC9E;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,OAAA,SAAA,CAAM,IAAI,CAAA,IAAA,CAAA,IAAA,EAAC,KAAK,CAAC,CAAC;IACpB,CAAC;IAGS,cAAA,SAAA,CAAA,UAAU,GAApB,SAAqB,UAAyB;QAC5C,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAEhD,IAAA,KAAmC,IAAI,EAArC,mBAAmB,GAAA,GAAA,mBAAA,EAAE,OAAO,GAAA,GAAA,OAAS,CAAC;QAG9C,IAAM,IAAI,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QAC7B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;YACvF,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAM,CAAC,CAAC;SAC/B;QAED,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;QAEzC,OAAO,YAAY,CAAC;IACtB,CAAC;IAEO,cAAA,SAAA,CAAA,WAAW,GAAnB;QACQ,IAAA,KAAoE,IAAI,EAAtE,WAAW,GAAA,GAAA,WAAA,EAAE,kBAAkB,GAAA,GAAA,kBAAA,EAAE,OAAO,GAAA,GAAA,OAAA,EAAE,mBAAmB,GAAA,GAAA,mBAAS,CAAC;QAK/E,IAAM,kBAAkB,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;QACvE,WAAW,GAAG,QAAQ,IAAI,kBAAkB,GAAG,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,GAAG,kBAAkB,CAAC,CAAC;QAIxH,IAAI,CAAC,mBAAmB,EAAE;YACxB,IAAM,GAAG,GAAG,kBAAkB,CAAC,GAAG,EAAE,CAAC;YACrC,IAAI,IAAI,GAAG,CAAC,CAAC;YAGb,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,IAAK,OAAO,CAAC,CAAC,CAAY,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,CAAE;gBAC3E,IAAI,GAAG,CAAC,CAAC;aACV;YACD,IAAI,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC;SACrC;IACH,CAAC;IACH,OAAA,aAAC;AAAD,CAAC,AAzED,CAAsC,UAAA,OAAO,GAyE5C;AAzEY,QAAA,aAAA,GAAA,cAAa","debugId":null}},
    {"offset": {"line": 2634, "column": 0}, "map": {"version":3,"file":"AsyncSubject.js","sourceRoot":"","sources":["../../../src/internal/AsyncSubject.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,iCAAoC;AAOpC,IAAA,eAAA,SAAA,MAAA;IAAqC,UAAA,cAAA,QAAU;IAA/C,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CA+BC;QA9BS,MAAA,MAAM,GAAa,IAAI,CAAC;QACxB,MAAA,SAAS,GAAG,KAAK,CAAC;QAClB,MAAA,WAAW,GAAG,KAAK,CAAC;;IA4B9B,CAAC;IAzBW,aAAA,SAAA,CAAA,uBAAuB,GAAjC,SAAkC,UAAyB;QACnD,IAAA,KAAuE,IAAI,EAAzE,QAAQ,GAAA,GAAA,QAAA,EAAE,SAAS,GAAA,GAAA,SAAA,EAAE,MAAM,GAAA,GAAA,MAAA,EAAE,WAAW,GAAA,GAAA,WAAA,EAAE,SAAS,GAAA,GAAA,SAAA,EAAE,WAAW,GAAA,GAAA,WAAS,CAAC;QAClF,IAAI,QAAQ,EAAE;YACZ,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;SAC/B,MAAM,IAAI,SAAS,IAAI,WAAW,EAAE;YACnC,SAAS,IAAI,UAAU,CAAC,IAAI,CAAC,MAAO,CAAC,CAAC;YACtC,UAAU,CAAC,QAAQ,EAAE,CAAC;SACvB;IACH,CAAC;IAED,aAAA,SAAA,CAAA,IAAI,GAAJ,SAAK,KAAQ;QACX,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;IACH,CAAC;IAED,aAAA,SAAA,CAAA,QAAQ,GAAR;QACQ,IAAA,KAAqC,IAAI,EAAvC,SAAS,GAAA,GAAA,SAAA,EAAE,MAAM,GAAA,GAAA,MAAA,EAAE,WAAW,GAAA,GAAA,WAAS,CAAC;QAChD,IAAI,CAAC,WAAW,EAAE;YAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,SAAS,IAAI,OAAA,SAAA,CAAM,IAAI,CAAA,IAAA,CAAA,IAAA,EAAC,MAAO,CAAC,CAAC;YACjC,OAAA,SAAA,CAAM,QAAQ,CAAA,IAAA,CAAA,IAAA,CAAE,CAAC;SAClB;IACH,CAAC;IACH,OAAA,YAAC;AAAD,CAAC,AA/BD,CAAqC,UAAA,OAAO,GA+B3C;AA/BY,QAAA,YAAA,GAAA,aAAY","debugId":null}},
    {"offset": {"line": 2700, "column": 0}, "map": {"version":3,"file":"Action.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/Action.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,4CAA+C;AAe/C,IAAA,SAAA,SAAA,MAAA;IAA+B,UAAA,QAAA,QAAY;IACzC,SAAA,OAAY,SAAoB,EAAE,IAAmD;eACnF,OAAA,IAAA,CAAA,IAAA,CAAO,IAAA,IAAA;IACT,CAAC;IAWM,OAAA,SAAA,CAAA,QAAQ,GAAf,SAAgB,KAAS,EAAE,KAAiB;QAAjB,IAAA,UAAA,KAAA,GAAA;YAAA,QAAA,CAAiB;QAAA;QAC1C,OAAO,IAAI,CAAC;IACd,CAAC;IACH,OAAA,MAAC;AAAD,CAAC,AAjBD,CAA+B,eAAA,YAAY,GAiB1C;AAjBY,QAAA,MAAA,GAAA,OAAM","debugId":null}},
    {"offset": {"line": 2745, "column": 0}, "map": {"version":3,"file":"intervalProvider.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/intervalProvider.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAea,QAAA,gBAAgB,GAAqB;IAGhD,WAAW,EAAX,SAAY,OAAmB,EAAE,OAAgB;QAAE,IAAA,OAAA,EAAA,CAAO;YAAP,IAAA,KAAA,CAAO,EAAP,KAAA,UAAA,MAAO,EAAP,IAAO,CAAA;YAAP,IAAA,CAAA,KAAA,EAAA,GAAA,SAAA,CAAA,GAAA,CAAO;;QAChD,IAAA,QAAQ,GAAK,QAAA,gBAAgB,CAAA,QAArB,CAAsB;QACtC,IAAI,QAAQ,KAAA,QAAR,QAAQ,KAAA,KAAA,IAAA,KAAA,IAAR,QAAQ,CAAE,WAAW,EAAE;YACzB,OAAO,QAAQ,CAAC,WAAW,CAAA,KAAA,CAApB,QAAQ,EAAA,cAAA;gBAAa,OAAO;gBAAE,OAAO;aAAA,EAAA,OAAK,IAAI,IAAE;SACxD;QACD,OAAO,WAAW,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA;YAAC,OAAO;YAAE,OAAO;SAAA,EAAA,OAAK,IAAI,IAAE;IAChD,CAAC;IACD,aAAa,EAAb,SAAc,MAAM;QACV,IAAA,QAAQ,GAAK,QAAA,gBAAgB,CAAA,QAArB,CAAsB;QACtC,OAAO,CAAC,CAAA,QAAQ,KAAA,QAAR,QAAQ,KAAA,KAAA,IAAA,KAAA,IAAR,QAAQ,CAAE,aAAa,KAAI,aAAa,CAAC,CAAC,MAAa,CAAC,CAAC;IACnE,CAAC;IACD,QAAQ,EAAE,SAAS;CACpB,CAAC","debugId":null}},
    {"offset": {"line": 2802, "column": 0}, "map": {"version":3,"file":"AsyncAction.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/AsyncAction.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2924, "column": 0}, "map": {"version":3,"file":"Immediate.js","sourceRoot":"","sources":["../../../../src/internal/util/Immediate.ts"],"names":[],"mappings":";;;;;AAAA,IAAI,UAAU,GAAG,CAAC,CAAC;AAEnB,IAAI,QAAsB,CAAC;AAC3B,IAAM,aAAa,GAA2B,CAAA,CAAE,CAAC;AAOjD,SAAS,kBAAkB,CAAC,MAAc;IACxC,IAAI,MAAM,IAAI,aAAa,EAAE;QAC3B,OAAO,aAAa,CAAC,MAAM,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC;KACb;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAKY,QAAA,SAAS,GAAG;IACvB,YAAY,EAAZ,SAAa,EAAc;QACzB,IAAM,MAAM,GAAG,UAAU,EAAE,CAAC;QAC5B,aAAa,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,QAAQ,EAAE;YACb,QAAQ,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;SAC9B;QACD,QAAQ,CAAC,IAAI,CAAC;YAAM,OAAA,kBAAkB,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE;QAAlC,CAAkC,CAAC,CAAC;QACxD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,cAAc,EAAd,SAAe,MAAc;QAC3B,kBAAkB,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;CACF,CAAC;AAKW,QAAA,SAAS,GAAG;IACvB,OAAO,EAAA;QACL,OAAO,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC;IAC3C,CAAC;CACF,CAAC","debugId":null}},
    {"offset": {"line": 2965, "column": 0}, "map": {"version":3,"file":"immediateProvider.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/immediateProvider.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,2CAA8C;AAEtC,IAAA,YAAY,GAAqB,YAAA,SAAS,CAAA,YAA9B,EAAE,cAAc,GAAK,YAAA,SAAS,CAAA,cAAd,CAAe;AAgBtC,QAAA,iBAAiB,GAAsB;IAGlD,YAAY,EAAA;QAAC,IAAA,OAAA,EAAA,CAAO;YAAP,IAAA,KAAA,CAAO,EAAP,KAAA,UAAA,MAAO,EAAP,IAAO,CAAA;YAAP,IAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAO;;QACV,IAAA,QAAQ,GAAK,QAAA,iBAAiB,CAAA,QAAtB,CAAuB;QACvC,OAAO,CAAC,CAAA,QAAQ,KAAA,QAAR,QAAQ,KAAA,KAAA,IAAA,KAAA,IAAR,QAAQ,CAAE,YAAY,KAAI,YAAY,CAAC,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA,EAAA,EAAA,OAAI,IAAI,IAAE;IAC3D,CAAC;IACD,cAAc,EAAd,SAAe,MAAM;QACX,IAAA,QAAQ,GAAK,QAAA,iBAAiB,CAAA,QAAtB,CAAuB;QACvC,OAAO,CAAC,CAAA,QAAQ,KAAA,QAAR,QAAQ,KAAA,KAAA,IAAA,KAAA,IAAR,QAAQ,CAAE,cAAc,KAAI,cAAc,CAAC,CAAC,MAAa,CAAC,CAAC;IACrE,CAAC;IACD,QAAQ,EAAE,SAAS;CACpB,CAAC","debugId":null}},
    {"offset": {"line": 3015, "column": 0}, "map": {"version":3,"file":"AsapAction.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/AsapAction.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,yCAA4C;AAG5C,IAAA,qDAAwD;AAGxD,IAAA,aAAA,SAAA,MAAA;IAAmC,UAAA,YAAA,QAAc;IAC/C,SAAA,WAAsB,SAAwB,EAAY,IAAmD;QAA7G,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,SAAS,EAAE,IAAI,CAAC,IAAA,IAAA,CACvB;QAFqB,MAAA,SAAS,GAAT,SAAS,CAAe;QAAY,MAAA,IAAI,GAAJ,IAAI,CAA+C;;IAE7G,CAAC;IAES,WAAA,SAAA,CAAA,cAAc,GAAxB,SAAyB,SAAwB,EAAE,EAAgB,EAAE,KAAiB;QAAjB,IAAA,UAAA,KAAA,GAAA;YAAA,QAAA,CAAiB;QAAA;QAEpF,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE;YAC/B,OAAO,OAAA,SAAA,CAAM,cAAc,CAAA,IAAA,CAAA,IAAA,EAAC,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;SACnD;QAED,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAI7B,OAAO,SAAS,CAAC,UAAU,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,oBAAA,iBAAiB,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;IACrI,CAAC;IAES,WAAA,SAAA,CAAA,cAAc,GAAxB,SAAyB,SAAwB,EAAE,EAAgB,EAAE,KAAiB;;QAAjB,IAAA,UAAA,KAAA,GAAA;YAAA,QAAA,CAAiB;QAAA;QAIpF,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;YAC9C,OAAO,OAAA,SAAA,CAAM,cAAc,CAAA,IAAA,CAAA,IAAA,EAAC,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;SACnD;QAIO,IAAA,OAAO,GAAK,SAAS,CAAA,OAAd,CAAe;QAC9B,IAAI,EAAE,IAAI,IAAI,IAAI,CAAA,CAAA,KAAA,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,EAAE,MAAK,EAAE,EAAE;YACxD,oBAAA,iBAAiB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;YACrC,IAAI,SAAS,CAAC,UAAU,KAAK,EAAE,EAAE;gBAC/B,SAAS,CAAC,UAAU,GAAG,SAAS,CAAC;aAClC;SACF;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;IACH,OAAA,UAAC;AAAD,CAAC,AAtCD,CAAmC,cAAA,WAAW,GAsC7C;AAtCY,QAAA,UAAA,GAAA,WAAU","debugId":null}},
    {"offset": {"line": 3085, "column": 0}, "map": {"version":3,"file":"Scheduler.js","sourceRoot":"","sources":["../../../src/internal/Scheduler.ts"],"names":[],"mappings":";;;;;AAGA,IAAA,uEAA0E;AAoB1E,IAAA,YAAA;IAGE,SAAA,UAAoB,mBAAkC,EAAE,GAAiC;QAAjC,IAAA,QAAA,KAAA,GAAA;YAAA,MAAoB,SAAS,CAAC,GAAG;QAAA;QAArE,IAAA,CAAA,mBAAmB,GAAnB,mBAAmB,CAAe;QACpD,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACjB,CAAC;IA4BM,UAAA,SAAA,CAAA,QAAQ,GAAf,SAAmB,IAAmD,EAAE,KAAiB,EAAE,KAAS;QAA5B,IAAA,UAAA,KAAA,GAAA;YAAA,QAAA,CAAiB;QAAA;QACvF,OAAO,IAAI,IAAI,CAAC,mBAAmB,CAAI,IAAI,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC5E,CAAC;IAlCa,UAAA,GAAG,GAAiB,wBAAA,qBAAqB,CAAC,GAAG,CAAC;IAmC9D,OAAA,SAAC;CAAA,AApCD,IAoCC;AApCY,QAAA,SAAA,GAAA,UAAS","debugId":null}},
    {"offset": {"line": 3114, "column": 0}, "map": {"version":3,"file":"AsyncScheduler.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/AsyncScheduler.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,sCAAyC;AAKzC,IAAA,iBAAA,SAAA,MAAA;IAAoC,UAAA,gBAAA,QAAS;IAgB3C,SAAA,eAAY,eAA8B,EAAE,GAAiC;QAAjC,IAAA,QAAA,KAAA,GAAA;YAAA,MAAoB,YAAA,SAAS,CAAC,GAAG;QAAA;QAA7E,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,eAAe,EAAE,GAAG,CAAC,IAAA,IAAA,CAC5B;QAjBM,MAAA,OAAO,GAA4B,EAAE,CAAC;QAMtC,MAAA,OAAO,GAAY,KAAK,CAAC;;IAWhC,CAAC;IAEM,eAAA,SAAA,CAAA,KAAK,GAAZ,SAAa,MAAwB;QAC3B,IAAA,OAAO,GAAK,IAAI,CAAA,OAAT,CAAU;QAEzB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACrB,OAAO;SACR;QAED,IAAI,KAAU,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,GAAG;YACD,IAAI,AAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAE;gBACxD,MAAM;aACP;SACF,OAAS,CAAD,KAAO,GAAG,OAAO,CAAC,KAAK,EAAG,CAAC,AAAE;QAEtC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAErB,IAAI,KAAK,EAAE;YACT,MAAQ,CAAD,KAAO,GAAG,OAAO,CAAC,KAAK,EAAG,CAAC,AAAE;gBAClC,MAAM,CAAC,WAAW,EAAE,CAAC;aACtB;YACD,MAAM,KAAK,CAAC;SACb;IACH,CAAC;IACH,OAAA,cAAC;AAAD,CAAC,AA9CD,CAAoC,YAAA,SAAS,GA8C5C;AA9CY,QAAA,cAAA,GAAA,eAAc","debugId":null}},
    {"offset": {"line": 3180, "column": 0}, "map": {"version":3,"file":"AsapScheduler.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/AsapScheduler.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,+CAAkD;AAElD,IAAA,gBAAA,SAAA,MAAA;IAAmC,UAAA,eAAA,QAAc;IAAjD,SAAA;;IAkCA,CAAC;IAjCQ,cAAA,SAAA,CAAA,KAAK,GAAZ,SAAa,MAAyB;QACpC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAUpB,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAEpB,IAAA,OAAO,GAAK,IAAI,CAAA,OAAT,CAAU;QACzB,IAAI,KAAU,CAAC;QACf,MAAM,GAAG,MAAM,IAAI,OAAO,CAAC,KAAK,EAAG,CAAC;QAEpC,GAAG;YACD,IAAI,AAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAE;gBACxD,MAAM;aACP;SACF,OAAQ,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE,KAAK,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,CAAE;QAE5E,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAErB,IAAI,KAAK,EAAE;YACT,MAAO,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE,KAAK,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,CAAE;gBACxE,MAAM,CAAC,WAAW,EAAE,CAAC;aACtB;YACD,MAAM,KAAK,CAAC;SACb;IACH,CAAC;IACH,OAAA,aAAC;AAAD,CAAC,AAlCD,CAAmC,iBAAA,cAAc,GAkChD;AAlCY,QAAA,aAAA,GAAA,cAAa","debugId":null}},
    {"offset": {"line": 3239, "column": 0}, "map": {"version":3,"file":"asap.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/asap.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,uCAA0C;AAC1C,IAAA,6CAAgD;AAqCnC,QAAA,aAAa,GAAG,IAAI,gBAAA,aAAa,CAAC,aAAA,UAAU,CAAC,CAAC;AAK9C,QAAA,IAAI,GAAG,QAAA,aAAa,CAAC","debugId":null}},
    {"offset": {"line": 3253, "column": 0}, "map": {"version":3,"file":"async.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/async.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,yCAA4C;AAC5C,IAAA,+CAAkD;AAiDrC,QAAA,cAAc,GAAG,IAAI,iBAAA,cAAc,CAAC,cAAA,WAAW,CAAC,CAAC;AAKjD,QAAA,KAAK,GAAG,QAAA,cAAc,CAAC","debugId":null}},
    {"offset": {"line": 3267, "column": 0}, "map": {"version":3,"file":"QueueAction.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/QueueAction.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,yCAA4C;AAM5C,IAAA,cAAA,SAAA,MAAA;IAAoC,UAAA,aAAA,QAAc;IAChD,SAAA,YAAsB,SAAyB,EAAY,IAAmD;QAA9G,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,SAAS,EAAE,IAAI,CAAC,IAAA,IAAA,CACvB;QAFqB,MAAA,SAAS,GAAT,SAAS,CAAgB;QAAY,MAAA,IAAI,GAAJ,IAAI,CAA+C;;IAE9G,CAAC;IAEM,YAAA,SAAA,CAAA,QAAQ,GAAf,SAAgB,KAAS,EAAE,KAAiB;QAAjB,IAAA,UAAA,KAAA,GAAA;YAAA,QAAA,CAAiB;QAAA;QAC1C,IAAI,KAAK,GAAG,CAAC,EAAE;YACb,OAAO,OAAA,SAAA,CAAM,QAAQ,CAAA,IAAA,CAAA,IAAA,EAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SACrC;QACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,YAAA,SAAA,CAAA,OAAO,GAAd,SAAe,KAAQ,EAAE,KAAa;QACpC,OAAO,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,OAAA,SAAA,CAAM,OAAO,CAAA,IAAA,CAAA,IAAA,EAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC9F,CAAC;IAES,YAAA,SAAA,CAAA,cAAc,GAAxB,SAAyB,SAAyB,EAAE,EAAgB,EAAE,KAAiB;QAAjB,IAAA,UAAA,KAAA,GAAA;YAAA,QAAA,CAAiB;QAAA;QAKrF,IAAI,AAAC,KAAK,IAAI,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,GAAK,CAAD,IAAM,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAE;YACrE,OAAO,OAAA,SAAA,CAAM,cAAc,CAAA,IAAA,CAAA,IAAA,EAAC,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;SACnD;QAGD,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAMtB,OAAO,CAAC,CAAC;IACX,CAAC;IACH,OAAA,WAAC;AAAD,CAAC,AArCD,CAAoC,cAAA,WAAW,GAqC9C;AArCY,QAAA,WAAA,GAAA,YAAW","debugId":null}},
    {"offset": {"line": 3334, "column": 0}, "map": {"version":3,"file":"QueueScheduler.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/QueueScheduler.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,+CAAkD;AAElD,IAAA,iBAAA,SAAA,MAAA;IAAoC,UAAA,gBAAA,QAAc;IAAlD,SAAA;;IACA,CAAC;IAAD,OAAA,cAAC;AAAD,CAAC,AADD,CAAoC,iBAAA,cAAc,GACjD;AADY,QAAA,cAAA,GAAA,eAAc","debugId":null}},
    {"offset": {"line": 3373, "column": 0}, "map": {"version":3,"file":"queue.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/queue.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,yCAA4C;AAC5C,IAAA,+CAAkD;AAiErC,QAAA,cAAc,GAAG,IAAI,iBAAA,cAAc,CAAC,cAAA,WAAW,CAAC,CAAC;AAKjD,QAAA,KAAK,GAAG,QAAA,cAAc,CAAC","debugId":null}},
    {"offset": {"line": 3387, "column": 0}, "map": {"version":3,"file":"AnimationFrameAction.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/AnimationFrameAction.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,yCAA4C;AAG5C,IAAA,+DAAkE;AAGlE,IAAA,uBAAA,SAAA,MAAA;IAA6C,UAAA,sBAAA,QAAc;IACzD,SAAA,qBAAsB,SAAkC,EAAY,IAAmD;QAAvH,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,SAAS,EAAE,IAAI,CAAC,IAAA,IAAA,CACvB;QAFqB,MAAA,SAAS,GAAT,SAAS,CAAyB;QAAY,MAAA,IAAI,GAAJ,IAAI,CAA+C;;IAEvH,CAAC;IAES,qBAAA,SAAA,CAAA,cAAc,GAAxB,SAAyB,SAAkC,EAAE,EAAgB,EAAE,KAAiB;QAAjB,IAAA,UAAA,KAAA,GAAA;YAAA,QAAA,CAAiB;QAAA;QAE9F,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE;YAC/B,OAAO,OAAA,SAAA,CAAM,cAAc,CAAA,IAAA,CAAA,IAAA,EAAC,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;SACnD;QAED,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAI7B,OAAO,SAAS,CAAC,UAAU,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,yBAAA,sBAAsB,CAAC,qBAAqB,CAAC;YAAM,OAAA,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC;QAA1B,CAA0B,CAAC,CAAC,CAAC;IACzI,CAAC;IAES,qBAAA,SAAA,CAAA,cAAc,GAAxB,SAAyB,SAAkC,EAAE,EAAgB,EAAE,KAAiB;;QAAjB,IAAA,UAAA,KAAA,GAAA;YAAA,QAAA,CAAiB;QAAA;QAI9F,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;YAC9C,OAAO,OAAA,SAAA,CAAM,cAAc,CAAA,IAAA,CAAA,IAAA,EAAC,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;SACnD;QAIO,IAAA,OAAO,GAAK,SAAS,CAAA,OAAd,CAAe;QAC9B,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,KAAK,SAAS,CAAC,UAAU,IAAI,CAAA,CAAA,KAAA,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAE,EAAE,MAAK,EAAE,EAAE;YACvF,yBAAA,sBAAsB,CAAC,oBAAoB,CAAC,EAAY,CAAC,CAAC;YAC1D,SAAS,CAAC,UAAU,GAAG,SAAS,CAAC;SAClC;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;IACH,OAAA,oBAAC;AAAD,CAAC,AApCD,CAA6C,cAAA,WAAW,GAoCvD;AApCY,QAAA,oBAAA,GAAA,qBAAoB","debugId":null}},
    {"offset": {"line": 3457, "column": 0}, "map": {"version":3,"file":"AnimationFrameScheduler.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/AnimationFrameScheduler.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,+CAAkD;AAElD,IAAA,0BAAA,SAAA,MAAA;IAA6C,UAAA,yBAAA,QAAc;IAA3D,SAAA;;IAuCA,CAAC;IAtCQ,wBAAA,SAAA,CAAA,KAAK,GAAZ,SAAa,MAAyB;QACpC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAUpB,IAAI,OAAO,CAAC;QACZ,IAAI,MAAM,EAAE;YACV,OAAO,GAAG,MAAM,CAAC,EAAE,CAAC;SACrB,MAAM;YACL,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;SAC7B;QAEO,IAAA,OAAO,GAAK,IAAI,CAAA,OAAT,CAAU;QACzB,IAAI,KAAU,CAAC;QACf,MAAM,GAAG,MAAM,IAAI,OAAO,CAAC,KAAK,EAAG,CAAC;QAEpC,GAAG;YACD,IAAI,AAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAE;gBACxD,MAAM;aACP;SACF,OAAQ,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE,KAAK,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,CAAE;QAE5E,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAErB,IAAI,KAAK,EAAE;YACT,MAAO,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE,KAAK,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,CAAE;gBACxE,MAAM,CAAC,WAAW,EAAE,CAAC;aACtB;YACD,MAAM,KAAK,CAAC;SACb;IACH,CAAC;IACH,OAAA,uBAAC;AAAD,CAAC,AAvCD,CAA6C,iBAAA,cAAc,GAuC1D;AAvCY,QAAA,uBAAA,GAAA,wBAAuB","debugId":null}},
    {"offset": {"line": 3521, "column": 0}, "map": {"version":3,"file":"animationFrame.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/animationFrame.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,2DAA8D;AAC9D,IAAA,iEAAoE;AAkCvD,QAAA,uBAAuB,GAAG,IAAI,0BAAA,uBAAuB,CAAC,uBAAA,oBAAoB,CAAC,CAAC;AAK5E,QAAA,cAAc,GAAG,QAAA,uBAAuB,CAAC","debugId":null}},
    {"offset": {"line": 3535, "column": 0}, "map": {"version":3,"file":"VirtualTimeScheduler.js","sourceRoot":"","sources":["../../../../src/internal/scheduler/VirtualTimeScheduler.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3676, "column": 0}, "map": {"version":3,"file":"empty.js","sourceRoot":"","sources":["../../../../src/internal/observable/empty.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAA2C;AAiE9B,QAAA,KAAK,GAAG,IAAI,aAAA,UAAU,CAAQ,SAAC,UAAU;IAAK,OAAA,UAAU,CAAC,QAAQ,EAAE;AAArB,CAAqB,CAAC,CAAC;AAOlF,SAAgB,KAAK,CAAC,SAAyB;IAC7C,OAAO,SAAS,CAAC,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAA,KAAK,CAAC;AACvD,CAAC;AAFD,QAAA,KAAA,GAAA,MAEC;AAED,SAAS,cAAc,CAAC,SAAwB;IAC9C,OAAO,IAAI,aAAA,UAAU,CAAQ,SAAC,UAAU;QAAK,OAAA,SAAS,CAAC,QAAQ,CAAC;YAAM,OAAA,UAAU,CAAC,QAAQ,EAAE;QAArB,CAAqB,CAAC;IAA/C,CAA+C,CAAC,CAAC;AAChG,CAAC","debugId":null}},
    {"offset": {"line": 3701, "column": 0}, "map": {"version":3,"file":"isScheduler.js","sourceRoot":"","sources":["../../../../src/internal/util/isScheduler.ts"],"names":[],"mappings":";;;;;AACA,IAAA,uCAA0C;AAE1C,SAAgB,WAAW,CAAC,KAAU;IACpC,OAAO,KAAK,IAAI,aAAA,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC7C,CAAC;AAFD,QAAA,WAAA,GAAA,YAEC","debugId":null}},
    {"offset": {"line": 3716, "column": 0}, "map": {"version":3,"file":"args.js","sourceRoot":"","sources":["../../../../src/internal/util/args.ts"],"names":[],"mappings":";;;;;AACA,IAAA,uCAA0C;AAC1C,IAAA,yCAA4C;AAE5C,SAAS,IAAI,CAAI,GAAQ;IACvB,OAAO,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC7B,CAAC;AAED,SAAgB,iBAAiB,CAAC,IAAW;IAC3C,OAAO,aAAA,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;AACzD,CAAC;AAFD,QAAA,iBAAA,GAAA,kBAEC;AAED,SAAgB,YAAY,CAAC,IAAW;IACtC,OAAO,cAAA,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;AAC1D,CAAC;AAFD,QAAA,YAAA,GAAA,aAEC;AAED,SAAgB,SAAS,CAAC,IAAW,EAAE,YAAoB;IACzD,OAAO,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAG,CAAC,CAAC,CAAC,YAAY,CAAC;AACrE,CAAC;AAFD,QAAA,SAAA,GAAA,UAEC","debugId":null}},
    {"offset": {"line": 3743, "column": 0}, "map": {"version":3,"file":"isArrayLike.js","sourceRoot":"","sources":["../../../../src/internal/util/isArrayLike.ts"],"names":[],"mappings":";;;;;AAAa,QAAA,WAAW,GAAG,AAAC,SAAI,CAAM;IAAwB,OAAA,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,UAAU;AAA5D,CAA4D,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 3756, "column": 0}, "map": {"version":3,"file":"isPromise.js","sourceRoot":"","sources":["../../../../src/internal/util/isPromise.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,uCAA0C;AAM1C,SAAgB,SAAS,CAAC,KAAU;IAClC,OAAO,aAAA,UAAU,CAAC,KAAK,KAAA,QAAL,KAAK,KAAA,KAAA,IAAA,KAAA,IAAL,KAAK,CAAE,IAAI,CAAC,CAAC;AACjC,CAAC;AAFD,QAAA,SAAA,GAAA,UAEC","debugId":null}},
    {"offset": {"line": 3771, "column": 0}, "map": {"version":3,"file":"isInteropObservable.js","sourceRoot":"","sources":["../../../../src/internal/util/isInteropObservable.ts"],"names":[],"mappings":";;;;;AACA,IAAA,+CAAuE;AACvE,IAAA,uCAA0C;AAG1C,SAAgB,mBAAmB,CAAC,KAAU;IAC5C,OAAO,aAAA,UAAU,CAAC,KAAK,CAAC,aAAA,UAAiB,CAAC,CAAC,CAAC;AAC9C,CAAC;AAFD,QAAA,mBAAA,GAAA,oBAEC","debugId":null}},
    {"offset": {"line": 3787, "column": 0}, "map": {"version":3,"file":"isAsyncIterable.js","sourceRoot":"","sources":["../../../../src/internal/util/isAsyncIterable.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,uCAA0C;AAE1C,SAAgB,eAAe,CAAI,GAAQ;IACzC,OAAO,MAAM,CAAC,aAAa,IAAI,aAAA,UAAU,CAAC,GAAG,KAAA,QAAH,GAAG,KAAA,KAAA,IAAA,KAAA,IAAH,GAAG,CAAG,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;AACzE,CAAC;AAFD,QAAA,eAAA,GAAA,gBAEC","debugId":null}},
    {"offset": {"line": 3802, "column": 0}, "map": {"version":3,"file":"throwUnobservableError.js","sourceRoot":"","sources":["../../../../src/internal/util/throwUnobservableError.ts"],"names":[],"mappings":";;;;;AAIA,SAAgB,gCAAgC,CAAC,KAAU;IAEzD,OAAO,IAAI,SAAS,CAClB,kBAAA,CACE,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,MAAI,KAAK,GAAA,GAAG,IAAA,0HACwC,CAC3H,CAAC;AACJ,CAAC;AAPD,QAAA,gCAAA,GAAA,iCAOC","debugId":null}},
    {"offset": {"line": 3816, "column": 0}, "map": {"version":3,"file":"iterator.js","sourceRoot":"","sources":["../../../../src/internal/symbol/iterator.ts"],"names":[],"mappings":";;;;;AAAA,SAAgB,iBAAiB;IAC/B,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;QACpD,OAAO,YAAmB,CAAC;KAC5B;IAED,OAAO,MAAM,CAAC,QAAQ,CAAC;AACzB,CAAC;AAND,QAAA,iBAAA,GAAA,kBAMC;AAEY,QAAA,QAAQ,GAAG,iBAAiB,EAAE,CAAC","debugId":null}},
    {"offset": {"line": 3834, "column": 0}, "map": {"version":3,"file":"isIterable.js","sourceRoot":"","sources":["../../../../src/internal/util/isIterable.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,2CAAiE;AACjE,IAAA,uCAA0C;AAG1C,SAAgB,UAAU,CAAC,KAAU;IACnC,OAAO,aAAA,UAAU,CAAC,KAAK,KAAA,QAAL,KAAK,KAAA,KAAA,IAAA,KAAA,IAAL,KAAK,CAAG,WAAA,QAAe,CAAC,CAAC,CAAC;AAC9C,CAAC;AAFD,QAAA,UAAA,GAAA,WAEC","debugId":null}},
    {"offset": {"line": 3850, "column": 0}, "map": {"version":3,"file":"isReadableStreamLike.js","sourceRoot":"","sources":["../../../../src/internal/util/isReadableStreamLike.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,uCAA0C;AAE1C,SAAuB,kCAAkC,CAAI,cAAqC;;;;;;oBAC1F,MAAM,GAAG,cAAc,CAAC,SAAS,EAAE,CAAC;;;;;;;;;;;yBAEjC,IAAI,8BAAA;;oBAAA;oBACe,OAAA;wBAAA;wBAAA,QAAM,MAAM,CAAC,IAAI,EAAE;qBAAA,CAAA;;oBAArC,KAAkB,GAAA,IAAA,EAAmB,EAAnC,KAAK,GAAA,GAAA,KAAA,EAAE,IAAI,GAAA,GAAA,IAAA;yBACf,IAAI,EAAJ,OAAA;wBAAA;wBAAA;qBAAA,CAAI;;;;;;oBACN,OAAA;wBAAA;wBAAA,GAAA,IAAA;qBAAA,CAAO;;;;gCAEH,KAAM;qBAAA;;oBAAZ,OAAA;wBAAA;wBAAA,GAAA,IAAA;qBAAA,CAAY;;oBAAZ,GAAA,IAAA,EAAY,CAAC;;;;;;;;;;;oBAGf,MAAM,CAAC,WAAW,EAAE,CAAC;;;;;;;;;;;CAExB;AAbD,QAAA,kCAAA,GAAA,mCAaC;AAED,SAAgB,oBAAoB,CAAI,GAAQ;IAG9C,OAAO,aAAA,UAAU,CAAC,GAAG,KAAA,QAAH,GAAG,KAAA,KAAA,IAAA,KAAA,IAAH,GAAG,CAAE,SAAS,CAAC,CAAC;AACpC,CAAC;AAJD,QAAA,oBAAA,GAAA,qBAIC","debugId":null}},
    {"offset": {"line": 4077, "column": 0}, "map": {"version":3,"file":"innerFrom.js","sourceRoot":"","sources":["../../../../src/internal/observable/innerFrom.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4449, "column": 0}, "map": {"version":3,"file":"executeSchedule.js","sourceRoot":"","sources":["../../../../src/internal/util/executeSchedule.ts"],"names":[],"mappings":";;;;;AAkBA,SAAgB,eAAe,CAC7B,kBAAgC,EAChC,SAAwB,EACxB,IAAgB,EAChB,KAAS,EACT,MAAc;IADd,IAAA,UAAA,KAAA,GAAA;QAAA,QAAA,CAAS;IAAA;IACT,IAAA,WAAA,KAAA,GAAA;QAAA,SAAA,KAAc;IAAA;IAEd,IAAM,oBAAoB,GAAG,SAAS,CAAC,QAAQ,CAAC;QAC9C,IAAI,EAAE,CAAC;QACP,IAAI,MAAM,EAAE;YACV,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;SACpD,MAAM;YACL,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;IACH,CAAC,EAAE,KAAK,CAAC,CAAC;IAEV,kBAAkB,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IAE7C,IAAI,CAAC,MAAM,EAAE;QAKX,OAAO,oBAAoB,CAAC;KAC7B;AACH,CAAC;AAzBD,QAAA,eAAA,GAAA,gBAyBC","debugId":null}},
    {"offset": {"line": 4480, "column": 0}, "map": {"version":3,"file":"observeOn.js","sourceRoot":"","sources":["../../../../src/internal/operators/observeOn.ts"],"names":[],"mappings":";;;;;AAEA,IAAA,uDAA0D;AAC1D,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAsDhE,SAAgB,SAAS,CAAI,SAAwB,EAAE,KAAS;IAAT,IAAA,UAAA,KAAA,GAAA;QAAA,QAAA,CAAS;IAAA;IAC9D,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;YAAK,OAAA,kBAAA,eAAe,CAAC,UAAU,EAAE,SAAS,EAAE;gBAAM,OAAA,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;YAAtB,CAAsB,EAAE,KAAK,CAAC;QAA3E,CAA2E,EACtF;YAAM,OAAA,kBAAA,eAAe,CAAC,UAAU,EAAE,SAAS,EAAE;gBAAM,OAAA,UAAU,CAAC,QAAQ,EAAE;YAArB,CAAqB,EAAE,KAAK,CAAC;QAA1E,CAA0E,EAChF,SAAC,GAAG;YAAK,OAAA,kBAAA,eAAe,CAAC,UAAU,EAAE,SAAS,EAAE;gBAAM,OAAA,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC;YAArB,CAAqB,EAAE,KAAK,CAAC;QAA1E,CAA0E,CACpF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAXD,QAAA,SAAA,GAAA,UAWC","debugId":null}},
    {"offset": {"line": 4514, "column": 0}, "map": {"version":3,"file":"subscribeOn.js","sourceRoot":"","sources":["../../../../src/internal/operators/subscribeOn.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iCAAuC;AA6DvC,SAAgB,WAAW,CAAI,SAAwB,EAAE,KAAiB;IAAjB,IAAA,UAAA,KAAA,GAAA;QAAA,QAAA,CAAiB;IAAA;IACxE,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;YAAM,OAAA,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC;QAA5B,CAA4B,EAAE,KAAK,CAAC,CAAC,CAAC;IAChF,CAAC,CAAC,CAAC;AACL,CAAC;AAJD,QAAA,WAAA,GAAA,YAIC","debugId":null}},
    {"offset": {"line": 4536, "column": 0}, "map": {"version":3,"file":"scheduleObservable.js","sourceRoot":"","sources":["../../../../src/internal/scheduled/scheduleObservable.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,iDAAoD;AACpD,IAAA,gDAAmD;AACnD,IAAA,oDAAuD;AAGvD,SAAgB,kBAAkB,CAAI,KAA2B,EAAE,SAAwB;IACzF,OAAO,YAAA,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,cAAA,WAAW,CAAC,SAAS,CAAC,EAAE,YAAA,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;AAC7E,CAAC;AAFD,QAAA,kBAAA,GAAA,mBAEC","debugId":null}},
    {"offset": {"line": 4553, "column": 0}, "map": {"version":3,"file":"schedulePromise.js","sourceRoot":"","sources":["../../../../src/internal/scheduled/schedulePromise.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,iDAAoD;AACpD,IAAA,gDAAmD;AACnD,IAAA,oDAAuD;AAGvD,SAAgB,eAAe,CAAI,KAAqB,EAAE,SAAwB;IAChF,OAAO,YAAA,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,cAAA,WAAW,CAAC,SAAS,CAAC,EAAE,YAAA,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;AAC7E,CAAC;AAFD,QAAA,eAAA,GAAA,gBAEC","debugId":null}},
    {"offset": {"line": 4570, "column": 0}, "map": {"version":3,"file":"scheduleArray.js","sourceRoot":"","sources":["../../../../src/internal/scheduled/scheduleArray.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAA2C;AAG3C,SAAgB,aAAa,CAAI,KAAmB,EAAE,SAAwB;IAC5E,OAAO,IAAI,aAAA,UAAU,CAAI,SAAC,UAAU;QAElC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEV,OAAO,SAAS,CAAC,QAAQ,CAAC;YACxB,IAAI,CAAC,KAAK,KAAK,CAAC,MAAM,EAAE;gBAGtB,UAAU,CAAC,QAAQ,EAAE,CAAC;aACvB,MAAM;gBAGL,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAI5B,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;oBACtB,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AAvBD,QAAA,aAAA,GAAA,cAuBC","debugId":null}},
    {"offset": {"line": 4597, "column": 0}, "map": {"version":3,"file":"scheduleIterable.js","sourceRoot":"","sources":["../../../../src/internal/scheduled/scheduleIterable.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAA2C;AAE3C,IAAA,2CAAiE;AACjE,IAAA,6CAAgD;AAChD,IAAA,uDAA0D;AAO1D,SAAgB,gBAAgB,CAAI,KAAkB,EAAE,SAAwB;IAC9E,OAAO,IAAI,aAAA,UAAU,CAAI,SAAC,UAAU;QAClC,IAAI,QAAwB,CAAC;QAK7B,kBAAA,eAAe,CAAC,UAAU,EAAE,SAAS,EAAE;YAErC,QAAQ,GAAI,KAAa,CAAC,WAAA,QAAe,CAAC,EAAE,CAAC;YAE7C,kBAAA,eAAe,CACb,UAAU,EACV,SAAS,EACT;;gBACE,IAAI,KAAQ,CAAC;gBACb,IAAI,IAAyB,CAAC;gBAC9B,IAAI;oBAED,KAAkB,QAAQ,CAAC,IAAI,EAAE,EAA/B,KAAK,GAAA,GAAA,KAAA,EAAE,IAAI,GAAA,GAAA,IAAA,CAAqB,CAAC;iBACrC,CAAC,OAAO,GAAG,EAAE;oBAEZ,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACtB,OAAO;iBACR;gBAED,IAAI,IAAI,EAAE;oBAKR,UAAU,CAAC,QAAQ,EAAE,CAAC;iBACvB,MAAM;oBAEL,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACxB;YACH,CAAC,EACD,CAAC,EACD,IAAI,CACL,CAAC;QACJ,CAAC,CAAC,CAAC;QAMH,OAAO;YAAM,OAAA,aAAA,UAAU,CAAC,QAAQ,KAAA,QAAR,QAAQ,KAAA,KAAA,IAAA,KAAA,IAAR,QAAQ,CAAE,MAAM,CAAC,IAAI,QAAQ,CAAC,MAAM,EAAE;QAAjD,CAAiD,CAAC;IACjE,CAAC,CAAC,CAAC;AACL,CAAC;AAhDD,QAAA,gBAAA,GAAA,iBAgDC","debugId":null}},
    {"offset": {"line": 4639, "column": 0}, "map": {"version":3,"file":"scheduleAsyncIterable.js","sourceRoot":"","sources":["../../../../src/internal/scheduled/scheduleAsyncIterable.ts"],"names":[],"mappings":";;;;;AACA,IAAA,wCAA2C;AAC3C,IAAA,uDAA0D;AAE1D,SAAgB,qBAAqB,CAAI,KAAuB,EAAE,SAAwB;IACxF,IAAI,CAAC,KAAK,EAAE;QACV,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;KAC5C;IACD,OAAO,IAAI,aAAA,UAAU,CAAI,SAAC,UAAU;QAClC,kBAAA,eAAe,CAAC,UAAU,EAAE,SAAS,EAAE;YACrC,IAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC;YAC/C,kBAAA,eAAe,CACb,UAAU,EACV,SAAS,EACT;gBACE,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAC,MAAM;oBAC1B,IAAI,MAAM,CAAC,IAAI,EAAE;wBAGf,UAAU,CAAC,QAAQ,EAAE,CAAC;qBACvB,MAAM;wBACL,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;qBAC/B;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,EACD,CAAC,EACD,IAAI,CACL,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AA1BD,QAAA,qBAAA,GAAA,sBA0BC","debugId":null}},
    {"offset": {"line": 4671, "column": 0}, "map": {"version":3,"file":"scheduleReadableStreamLike.js","sourceRoot":"","sources":["../../../../src/internal/scheduled/scheduleReadableStreamLike.ts"],"names":[],"mappings":";;;;;AAEA,IAAA,6DAAgE;AAChE,IAAA,iEAAkF;AAElF,SAAgB,0BAA0B,CAAI,KAA4B,EAAE,SAAwB;IAClG,OAAO,wBAAA,qBAAqB,CAAC,uBAAA,kCAAkC,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,CAAC;AACrF,CAAC;AAFD,QAAA,0BAAA,GAAA,2BAEC","debugId":null}},
    {"offset": {"line": 4687, "column": 0}, "map": {"version":3,"file":"scheduled.js","sourceRoot":"","sources":["../../../../src/internal/scheduled/scheduled.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,uDAA0D;AAC1D,IAAA,iDAAoD;AACpD,IAAA,6CAAgD;AAChD,IAAA,mDAAsD;AACtD,IAAA,6DAAgE;AAChE,IAAA,+DAAkE;AAClE,IAAA,2CAA8C;AAC9C,IAAA,+CAAkD;AAClD,IAAA,6CAAgD;AAGhD,IAAA,uDAA0D;AAC1D,IAAA,qEAAkF;AAClF,IAAA,iEAAoE;AACpE,IAAA,uEAA0E;AAa1E,SAAgB,SAAS,CAAI,KAAyB,EAAE,SAAwB;IAC9E,IAAI,KAAK,IAAI,IAAI,EAAE;QACjB,IAAI,sBAAA,mBAAmB,CAAC,KAAK,CAAC,EAAE;YAC9B,OAAO,qBAAA,kBAAkB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;SAC7C;QACD,IAAI,cAAA,WAAW,CAAC,KAAK,CAAC,EAAE;YACtB,OAAO,gBAAA,aAAa,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;SACxC;QACD,IAAI,YAAA,SAAS,CAAC,KAAK,CAAC,EAAE;YACpB,OAAO,kBAAA,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;SAC1C;QACD,IAAI,kBAAA,eAAe,CAAC,KAAK,CAAC,EAAE;YAC1B,OAAO,wBAAA,qBAAqB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;SAChD;QACD,IAAI,aAAA,UAAU,CAAC,KAAK,CAAC,EAAE;YACrB,OAAO,mBAAA,gBAAgB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;SAC3C;QACD,IAAI,uBAAA,oBAAoB,CAAC,KAAK,CAAC,EAAE;YAC/B,OAAO,6BAAA,0BAA0B,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;SACrD;KACF;IACD,MAAM,yBAAA,gCAAgC,CAAC,KAAK,CAAC,CAAC;AAChD,CAAC;AAtBD,QAAA,SAAA,GAAA,UAsBC","debugId":null}},
    {"offset": {"line": 4734, "column": 0}, "map": {"version":3,"file":"from.js","sourceRoot":"","sources":["../../../../src/internal/observable/from.ts"],"names":[],"mappings":";;;;;AAEA,IAAA,gDAAmD;AACnD,IAAA,qCAAwC;AAkGxC,SAAgB,IAAI,CAAI,KAAyB,EAAE,SAAyB;IAC1E,OAAO,SAAS,CAAC,CAAC,CAAC,YAAA,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,YAAA,SAAS,CAAC,KAAK,CAAC,CAAC;AACpE,CAAC;AAFD,QAAA,IAAA,GAAA,KAEC","debugId":null}},
    {"offset": {"line": 4750, "column": 0}, "map": {"version":3,"file":"of.js","sourceRoot":"","sources":["../../../../src/internal/observable/of.ts"],"names":[],"mappings":";;;;;AAEA,IAAA,iCAA4C;AAC5C,IAAA,2BAA8B;AA4E9B,SAAgB,EAAE;IAAI,IAAA,OAAA,EAAA,CAAiC;QAAjC,IAAA,KAAA,CAAiC,EAAjC,KAAA,UAAA,MAAiC,EAAjC,IAAiC,CAAA;QAAjC,IAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAiC;;IACrD,IAAM,SAAS,GAAG,OAAA,YAAY,CAAC,IAAI,CAAC,CAAC;IACrC,OAAO,OAAA,IAAI,CAAC,IAAW,EAAE,SAAS,CAAC,CAAC;AACtC,CAAC;AAHD,QAAA,EAAA,GAAA,GAGC","debugId":null}},
    {"offset": {"line": 4771, "column": 0}, "map": {"version":3,"file":"throwError.js","sourceRoot":"","sources":["../../../../src/internal/observable/throwError.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAA2C;AAG3C,IAAA,6CAAgD;AAqHhD,SAAgB,UAAU,CAAC,mBAAwB,EAAE,SAAyB;IAC5E,IAAM,YAAY,GAAG,aAAA,UAAU,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAAM,OAAA,mBAAmB;IAAnB,CAAmB,CAAC;IACvG,IAAM,IAAI,GAAG,SAAC,UAA6B;QAAK,OAAA,UAAU,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;IAAhC,CAAgC,CAAC;IACjF,OAAO,IAAI,aAAA,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,SAAC,UAAU;QAAK,OAAA,SAAS,CAAC,QAAQ,CAAC,IAAW,EAAE,CAAC,EAAE,UAAU,CAAC;IAA9C,CAA8C,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAC3G,CAAC;AAJD,QAAA,UAAA,GAAA,WAIC","debugId":null}},
    {"offset": {"line": 4795, "column": 0}, "map": {"version":3,"file":"Notification.js","sourceRoot":"","sources":["../../../src/internal/Notification.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4865, "column": 0}, "map": {"version":3,"file":"isObservable.js","sourceRoot":"","sources":["../../../../src/internal/util/isObservable.ts"],"names":[],"mappings":";;;;;AACA,IAAA,wCAA2C;AAC3C,IAAA,uCAA0C;AAM1C,SAAgB,YAAY,CAAC,GAAQ;IAGnC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,YAAY,aAAA,UAAU,IAAI,AAAC,aAAA,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,aAAA,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,AAAC,CAAC,CAAC;AACrG,CAAC;AAJD,QAAA,YAAA,GAAA,aAIC","debugId":null}},
    {"offset": {"line": 4881, "column": 0}, "map": {"version":3,"file":"EmptyError.js","sourceRoot":"","sources":["../../../../src/internal/util/EmptyError.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,mDAAsD;AAsBzC,QAAA,UAAU,GAAmB,mBAAA,gBAAgB,CACxD,SAAC,MAAM;IACL,OAAA,SAAS,cAAc;QACrB,MAAM,CAAC,IAAI,CAAC,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,yBAAyB,CAAC;IAC3C,CAAC;AAJD,CAIC,CACJ,CAAC","debugId":null}},
    {"offset": {"line": 4899, "column": 0}, "map": {"version":3,"file":"lastValueFrom.js","sourceRoot":"","sources":["../../../src/internal/lastValueFrom.ts"],"names":[],"mappings":";;;;;AACA,IAAA,4CAA+C;AAoD/C,SAAgB,aAAa,CAAO,MAAqB,EAAE,MAA+B;IACxF,IAAM,SAAS,GAAG,OAAO,MAAM,KAAK,QAAQ,CAAC;IAC7C,OAAO,IAAI,OAAO,CAAQ,SAAC,OAAO,EAAE,MAAM;QACxC,IAAI,SAAS,GAAG,KAAK,CAAC;QACtB,IAAI,MAAS,CAAC;QACd,MAAM,CAAC,SAAS,CAAC;YACf,IAAI,EAAE,SAAC,KAAK;gBACV,MAAM,GAAG,KAAK,CAAC;gBACf,SAAS,GAAG,IAAI,CAAC;YACnB,CAAC;YACD,KAAK,EAAE,MAAM;YACb,QAAQ,EAAE;gBACR,IAAI,SAAS,EAAE;oBACb,OAAO,CAAC,MAAM,CAAC,CAAC;iBACjB,MAAM,IAAI,SAAS,EAAE;oBACpB,OAAO,CAAC,MAAO,CAAC,YAAY,CAAC,CAAC;iBAC/B,MAAM;oBACL,MAAM,CAAC,IAAI,aAAA,UAAU,EAAE,CAAC,CAAC;iBAC1B;YACH,CAAC;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AAtBD,QAAA,aAAA,GAAA,cAsBC","debugId":null}},
    {"offset": {"line": 4934, "column": 0}, "map": {"version":3,"file":"firstValueFrom.js","sourceRoot":"","sources":["../../../src/internal/firstValueFrom.ts"],"names":[],"mappings":";;;;;AACA,IAAA,4CAA+C;AAC/C,IAAA,uCAA8C;AAqD9C,SAAgB,cAAc,CAAO,MAAqB,EAAE,MAAgC;IAC1F,IAAM,SAAS,GAAG,OAAO,MAAM,KAAK,QAAQ,CAAC;IAC7C,OAAO,IAAI,OAAO,CAAQ,SAAC,OAAO,EAAE,MAAM;QACxC,IAAM,UAAU,GAAG,IAAI,aAAA,cAAc,CAAI;YACvC,IAAI,EAAE,SAAC,KAAK;gBACV,OAAO,CAAC,KAAK,CAAC,CAAC;gBACf,UAAU,CAAC,WAAW,EAAE,CAAC;YAC3B,CAAC;YACD,KAAK,EAAE,MAAM;YACb,QAAQ,EAAE;gBACR,IAAI,SAAS,EAAE;oBACb,OAAO,CAAC,MAAO,CAAC,YAAY,CAAC,CAAC;iBAC/B,MAAM;oBACL,MAAM,CAAC,IAAI,aAAA,UAAU,EAAE,CAAC,CAAC;iBAC1B;YACH,CAAC;SACF,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;AACL,CAAC;AAnBD,QAAA,cAAA,GAAA,eAmBC","debugId":null}},
    {"offset": {"line": 4967, "column": 0}, "map": {"version":3,"file":"ArgumentOutOfRangeError.js","sourceRoot":"","sources":["../../../../src/internal/util/ArgumentOutOfRangeError.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,mDAAsD;AAoBzC,QAAA,uBAAuB,GAAgC,mBAAA,gBAAgB,CAClF,SAAC,MAAM;IACL,OAAA,SAAS,2BAA2B;QAClC,MAAM,CAAC,IAAI,CAAC,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,yBAAyB,CAAC;QACtC,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC;IACzC,CAAC;AAJD,CAIC,CACJ,CAAC","debugId":null}},
    {"offset": {"line": 4985, "column": 0}, "map": {"version":3,"file":"NotFoundError.js","sourceRoot":"","sources":["../../../../src/internal/util/NotFoundError.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,mDAAsD;AAkBzC,QAAA,aAAa,GAAsB,mBAAA,gBAAgB,CAC9D,SAAC,MAAM;IACL,OAAA,SAAS,iBAAiB,CAAY,OAAe;QACnD,MAAM,CAAC,IAAI,CAAC,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;AAJD,CAIC,CACJ,CAAC","debugId":null}},
    {"offset": {"line": 5003, "column": 0}, "map": {"version":3,"file":"SequenceError.js","sourceRoot":"","sources":["../../../../src/internal/util/SequenceError.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,mDAAsD;AAkBzC,QAAA,aAAa,GAAsB,mBAAA,gBAAgB,CAC9D,SAAC,MAAM;IACL,OAAA,SAAS,iBAAiB,CAAY,OAAe;QACnD,MAAM,CAAC,IAAI,CAAC,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;AAJD,CAIC,CACJ,CAAC","debugId":null}},
    {"offset": {"line": 5021, "column": 0}, "map": {"version":3,"file":"isDate.js","sourceRoot":"","sources":["../../../../src/internal/util/isDate.ts"],"names":[],"mappings":";;;;;AAOA,SAAgB,WAAW,CAAC,KAAU;IACpC,OAAO,KAAK,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,KAAY,CAAC,CAAC;AACvD,CAAC;AAFD,QAAA,WAAA,GAAA,YAEC","debugId":null}},
    {"offset": {"line": 5035, "column": 0}, "map": {"version":3,"file":"timeout.js","sourceRoot":"","sources":["../../../../src/internal/operators/timeout.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5109, "column": 0}, "map": {"version":3,"file":"map.js","sourceRoot":"","sources":["../../../../src/internal/operators/map.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AA4ChE,SAAgB,GAAG,CAAO,OAAuC,EAAE,OAAa;IAC9E,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAEhC,IAAI,KAAK,GAAG,CAAC,CAAC;QAGd,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAC,KAAQ;YAG5C,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QACzD,CAAC,CAAC,CACH,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAdD,QAAA,GAAA,GAAA,IAcC","debugId":null}},
    {"offset": {"line": 5130, "column": 0}, "map": {"version":3,"file":"mapOneOrManyArgs.js","sourceRoot":"","sources":["../../../../src/internal/util/mapOneOrManyArgs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,oCAAuC;AAE/B,IAAA,OAAO,GAAK,KAAK,CAAA,OAAV,CAAW;AAE1B,SAAS,WAAW,CAAO,EAA2B,EAAE,IAAW;IAC/D,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA,EAAA,EAAA,OAAI,IAAI,IAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AAClD,CAAC;AAMD,SAAgB,gBAAgB,CAAO,EAA2B;IAC9D,OAAO,MAAA,GAAG,CAAC,SAAA,IAAI;QAAI,OAAA,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC;IAArB,CAAqB,CAAC,CAAA;AAC7C,CAAC;AAFD,QAAA,gBAAA,GAAA,iBAEC","debugId":null}},
    {"offset": {"line": 5174, "column": 0}, "map": {"version":3,"file":"bindCallbackInternals.js","sourceRoot":"","sources":["../../../../src/internal/observable/bindCallbackInternals.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5280, "column": 0}, "map": {"version":3,"file":"bindCallback.js","sourceRoot":"","sources":["../../../../src/internal/observable/bindCallback.ts"],"names":[],"mappings":";;;;;AAGA,IAAA,6DAAgE;AA2IhE,SAAgB,YAAY,CAC1B,YAAkE,EAClE,cAA0D,EAC1D,SAAyB;IAEzB,OAAO,wBAAA,qBAAqB,CAAC,KAAK,EAAE,YAAY,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC;AAC/E,CAAC;AAND,QAAA,YAAA,GAAA,aAMC","debugId":null}},
    {"offset": {"line": 5295, "column": 0}, "map": {"version":3,"file":"bindNodeCallback.js","sourceRoot":"","sources":["../../../../src/internal/observable/bindNodeCallback.ts"],"names":[],"mappings":";;;;;AAGA,IAAA,6DAAgE;AAyHhE,SAAgB,gBAAgB,CAC9B,YAA4E,EAC5E,cAA0D,EAC1D,SAAyB;IAEzB,OAAO,wBAAA,qBAAqB,CAAC,IAAI,EAAE,YAAY,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC;AAC9E,CAAC;AAND,QAAA,gBAAA,GAAA,iBAMC","debugId":null}},
    {"offset": {"line": 5310, "column": 0}, "map": {"version":3,"file":"argsArgArrayOrObject.js","sourceRoot":"","sources":["../../../../src/internal/util/argsArgArrayOrObject.ts"],"names":[],"mappings":";;;;;AAAQ,IAAA,OAAO,GAAK,KAAK,CAAA,OAAV,CAAW;AAClB,IAAA,cAAc,GAA4C,MAAM,CAAA,cAAlD,EAAa,WAAW,GAAoB,MAAM,CAAA,SAA1B,EAAQ,OAAO,GAAK,MAAM,CAAA,IAAX,CAAY;AAQzE,SAAgB,oBAAoB,CAAiC,IAAuB;IAC1F,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;QACrB,IAAM,OAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACtB,IAAI,OAAO,CAAC,OAAK,CAAC,EAAE;YAClB,OAAO;gBAAE,IAAI,EAAE,OAAK;gBAAE,IAAI,EAAE,IAAI;YAAA,CAAE,CAAC;SACpC;QACD,IAAI,MAAM,CAAC,OAAK,CAAC,EAAE;YACjB,IAAM,IAAI,GAAG,OAAO,CAAC,OAAK,CAAC,CAAC;YAC5B,OAAO;gBACL,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,SAAC,GAAG;oBAAK,OAAA,OAAK,CAAC,GAAG,CAAC;gBAAV,CAAU,CAAC;gBACnC,IAAI,EAAA,IAAA;aACL,CAAC;SACH;KACF;IAED,OAAO;QAAE,IAAI,EAAE,IAAW;QAAE,IAAI,EAAE,IAAI;IAAA,CAAE,CAAC;AAC3C,CAAC;AAhBD,QAAA,oBAAA,GAAA,qBAgBC;AAED,SAAS,MAAM,CAAC,GAAQ;IACtB,OAAO,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,cAAc,CAAC,GAAG,CAAC,KAAK,WAAW,CAAC;AAC/E,CAAC","debugId":null}},
    {"offset": {"line": 5350, "column": 0}, "map": {"version":3,"file":"createObject.js","sourceRoot":"","sources":["../../../../src/internal/util/createObject.ts"],"names":[],"mappings":";;;;;AAAA,SAAgB,YAAY,CAAC,IAAc,EAAE,MAAa;IACxD,OAAO,IAAI,CAAC,MAAM,CAAC,SAAC,MAAM,EAAE,GAAG,EAAE,CAAC;QAAK,OAAA,AAAC,AAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAE,MAAM,CAAC;IAAnC,CAAmC,EAAE,CAAA,CAAS,CAAC,CAAC;AACzF,CAAC;AAFD,QAAA,YAAA,GAAA,aAEC","debugId":null}},
    {"offset": {"line": 5366, "column": 0}, "map": {"version":3,"file":"combineLatest.js","sourceRoot":"","sources":["../../../../src/internal/observable/combineLatest.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5446, "column": 0}, "map": {"version":3,"file":"mergeInternals.js","sourceRoot":"","sources":["../../../../src/internal/operators/mergeInternals.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iDAAoD;AAGpD,IAAA,uDAA0D;AAC1D,IAAA,uDAAgE;AAehE,SAAgB,cAAc,CAC5B,MAAqB,EACrB,UAAyB,EACzB,OAAwD,EACxD,UAAkB,EAClB,YAAsC,EACtC,MAAgB,EAChB,iBAAiC,EACjC,mBAAgC;IAGhC,IAAM,MAAM,GAAQ,EAAE,CAAC;IAEvB,IAAI,MAAM,GAAG,CAAC,CAAC;IAEf,IAAI,KAAK,GAAG,CAAC,CAAC;IAEd,IAAI,UAAU,GAAG,KAAK,CAAC;IAKvB,IAAM,aAAa,GAAG;QAIpB,IAAI,UAAU,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE;YAC3C,UAAU,CAAC,QAAQ,EAAE,CAAC;SACvB;IACH,CAAC,CAAC;IAGF,IAAM,SAAS,GAAG,SAAC,KAAQ;QAAK,OAAA,AAAC,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAA9D,CAA8D,CAAC;IAE/F,IAAM,UAAU,GAAG,SAAC,KAAQ;QAI1B,MAAM,IAAI,UAAU,CAAC,IAAI,CAAC,KAAY,CAAC,CAAC;QAIxC,MAAM,EAAE,CAAC;QAKT,IAAI,aAAa,GAAG,KAAK,CAAC;QAG1B,YAAA,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,SAAS,CAC1C,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,UAAU;YAGT,YAAY,KAAA,QAAZ,YAAY,KAAA,KAAA,IAAA,KAAA,IAAZ,YAAY,CAAG,UAAU,CAAC,CAAC;YAE3B,IAAI,MAAM,EAAE;gBAGV,SAAS,CAAC,UAAiB,CAAC,CAAC;aAC9B,MAAM;gBAEL,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC7B;QACH,CAAC,EACD;YAGE,aAAa,GAAG,IAAI,CAAC;QACvB,CAAC,EAED,SAAS,EACT;YAIE,IAAI,aAAa,EAAE;gBAKjB,IAAI;oBAIF,MAAM,EAAE,CAAC;;wBAMP,IAAM,aAAa,GAAG,MAAM,CAAC,KAAK,EAAG,CAAC;wBAItC,IAAI,iBAAiB,EAAE;4BACrB,kBAAA,eAAe,CAAC,UAAU,EAAE,iBAAiB,EAAE;gCAAM,OAAA,UAAU,CAAC,aAAa,CAAC;4BAAzB,CAAyB,CAAC,CAAC;yBACjF,MAAM;4BACL,UAAU,CAAC,aAAa,CAAC,CAAC;yBAC3B;;oBATH,MAAO,MAAM,CAAC,MAAM,IAAI,MAAM,GAAG,UAAU,CAAA;;qBAU1C;oBAED,aAAa,EAAE,CAAC;iBACjB,CAAC,OAAO,GAAG,EAAE;oBACZ,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBACvB;aACF;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC;IAGF,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAS,EAAE;QAE9C,UAAU,GAAG,IAAI,CAAC;QAClB,aAAa,EAAE,CAAC;IAClB,CAAC,CAAC,CACH,CAAC;IAIF,OAAO;QACL,mBAAmB,KAAA,QAAnB,mBAAmB,KAAA,KAAA,IAAA,KAAA,IAAnB,mBAAmB,EAAI,CAAC;IAC1B,CAAC,CAAC;AACJ,CAAC;AAhID,QAAA,cAAA,GAAA,eAgIC","debugId":null}},
    {"offset": {"line": 5518, "column": 0}, "map": {"version":3,"file":"mergeMap.js","sourceRoot":"","sources":["../../../../src/internal/operators/mergeMap.ts"],"names":[],"mappings":";;;;;AACA,IAAA,yBAA4B;AAC5B,IAAA,iDAAoD;AACpD,IAAA,iCAAuC;AACvC,IAAA,+CAAkD;AAClD,IAAA,6CAAgD;AA2EhD,SAAgB,QAAQ,CACtB,OAAuC,EACvC,cAAwH,EACxH,UAA6B;IAA7B,IAAA,eAAA,KAAA,GAAA;QAAA,aAAA,QAA6B;IAAA;IAE7B,IAAI,aAAA,UAAU,CAAC,cAAc,CAAC,EAAE;QAE9B,OAAO,QAAQ,CAAC,SAAC,CAAC,EAAE,CAAC;YAAK,OAAA,MAAA,GAAG,CAAC,SAAC,CAAM,EAAE,EAAU;gBAAK,OAAA,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YAA3B,CAA2B,CAAC,CAAC,YAAA,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAAlF,CAAkF,EAAE,UAAU,CAAC,CAAC;KAC3H,MAAM,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE;QAC7C,UAAU,GAAG,cAAc,CAAC;KAC7B;IAED,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAAK,OAAA,iBAAA,cAAc,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,CAAC;IAAvD,CAAuD,CAAC,CAAC;AAClG,CAAC;AAbD,QAAA,QAAA,GAAA,SAaC","debugId":null}},
    {"offset": {"line": 5551, "column": 0}, "map": {"version":3,"file":"mergeAll.js","sourceRoot":"","sources":["../../../../src/internal/operators/mergeAll.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,mCAAsC;AACtC,IAAA,yCAA4C;AA8D5C,SAAgB,QAAQ,CAAiC,UAA6B;IAA7B,IAAA,eAAA,KAAA,GAAA;QAAA,aAAA,QAA6B;IAAA;IACpF,OAAO,WAAA,QAAQ,CAAC,WAAA,QAAQ,EAAE,UAAU,CAAC,CAAC;AACxC,CAAC;AAFD,QAAA,QAAA,GAAA,SAEC","debugId":null}},
    {"offset": {"line": 5570, "column": 0}, "map": {"version":3,"file":"concatAll.js","sourceRoot":"","sources":["../../../../src/internal/operators/concatAll.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,mCAAsC;AA2DtC,SAAgB,SAAS;IACvB,OAAO,WAAA,QAAQ,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC;AAFD,QAAA,SAAA,GAAA,UAEC","debugId":null}},
    {"offset": {"line": 5585, "column": 0}, "map": {"version":3,"file":"concat.js","sourceRoot":"","sources":["../../../../src/internal/observable/concat.ts"],"names":[],"mappings":";;;;;AAEA,IAAA,gDAAmD;AACnD,IAAA,iCAA4C;AAC5C,IAAA,2BAA8B;AA4G9B,SAAgB,MAAM;IAAC,IAAA,OAAA,EAAA,CAAc;QAAd,IAAA,KAAA,CAAc,EAAd,KAAA,UAAA,MAAc,EAAd,IAAc,CAAA;QAAd,IAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAc;;IACnC,OAAO,YAAA,SAAS,EAAE,CAAC,OAAA,IAAI,CAAC,IAAI,EAAE,OAAA,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC;AAFD,QAAA,MAAA,GAAA,OAEC","debugId":null}},
    {"offset": {"line": 5606, "column": 0}, "map": {"version":3,"file":"defer.js","sourceRoot":"","sources":["../../../../src/internal/observable/defer.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAA2C;AAE3C,IAAA,qCAAwC;AAiDxC,SAAgB,KAAK,CAAiC,iBAA0B;IAC9E,OAAO,IAAI,aAAA,UAAU,CAAqB,SAAC,UAAU;QACnD,YAAA,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;AACL,CAAC;AAJD,QAAA,KAAA,GAAA,MAIC","debugId":null}},
    {"offset": {"line": 5624, "column": 0}, "map": {"version":3,"file":"connectable.js","sourceRoot":"","sources":["../../../../src/internal/observable/connectable.ts"],"names":[],"mappings":";;;;;AACA,IAAA,kCAAqC;AAErC,IAAA,wCAA2C;AAC3C,IAAA,6BAAgC;AAsBhC,IAAM,cAAc,GAA+B;IACjD,SAAS,EAAE;QAAM,OAAA,IAAI,UAAA,OAAO,EAAW;IAAtB,CAAsB;IACvC,iBAAiB,EAAE,IAAI;CACxB,CAAC;AAUF,SAAgB,WAAW,CAAI,MAA0B,EAAE,MAA6C;IAA7C,IAAA,WAAA,KAAA,GAAA;QAAA,SAAA,cAA6C;IAAA;IAEtG,IAAI,UAAU,GAAwB,IAAI,CAAC;IACnC,IAAA,SAAS,GAA+B,MAAM,CAAA,SAArC,EAAE,KAA6B,MAAM,CAAA,iBAAX,EAAxB,iBAAiB,GAAA,OAAA,KAAA,IAAG,IAAI,GAAA,EAAA,CAAY;IACvD,IAAI,OAAO,GAAG,SAAS,EAAE,CAAC;IAE1B,IAAM,MAAM,GAAQ,IAAI,aAAA,UAAU,CAAI,SAAC,UAAU;QAC/C,OAAO,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAKH,MAAM,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,MAAM,EAAE;YACpC,UAAU,GAAG,QAAA,KAAK,CAAC;gBAAM,OAAA,MAAM;YAAN,CAAM,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YACpD,IAAI,iBAAiB,EAAE;gBACrB,UAAU,CAAC,GAAG,CAAC;oBAAM,OAAA,AAAC,OAAO,GAAG,SAAS,EAAE,CAAC;gBAAvB,CAAuB,CAAC,CAAC;aAC/C;SACF;QACD,OAAO,UAAU,CAAC;IACpB,CAAC,CAAC;IAEF,OAAO,MAAM,CAAC;AAChB,CAAC;AAxBD,QAAA,WAAA,GAAA,YAwBC","debugId":null}},
    {"offset": {"line": 5669, "column": 0}, "map": {"version":3,"file":"forkJoin.js","sourceRoot":"","sources":["../../../../src/internal/observable/forkJoin.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAA2C;AAE3C,IAAA,iEAAoE;AACpE,IAAA,qCAAwC;AACxC,IAAA,iCAAiD;AACjD,IAAA,kEAA2E;AAC3E,IAAA,yDAA4D;AAC5D,IAAA,iDAAoD;AAyIpD,SAAgB,QAAQ;IAAC,IAAA,OAAA,EAAA,CAAc;QAAd,IAAA,KAAA,CAAc,EAAd,KAAA,UAAA,MAAc,EAAd,IAAc,CAAA;QAAd,IAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAc;;IACrC,IAAM,cAAc,GAAG,OAAA,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACzC,IAAA,KAA0B,uBAAA,oBAAoB,CAAC,IAAI,CAAC,EAA5C,OAAO,GAAA,GAAA,IAAA,EAAE,IAAI,GAAA,GAAA,IAA+B,CAAC;IAC3D,IAAM,MAAM,GAAG,IAAI,aAAA,UAAU,CAAC,SAAC,UAAU;QAC/B,IAAA,MAAM,GAAK,OAAO,CAAA,MAAZ,CAAa;QAC3B,IAAI,CAAC,MAAM,EAAE;YACX,UAAU,CAAC,QAAQ,EAAE,CAAC;YACtB,OAAO;SACR;QACD,IAAM,MAAM,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;QACjC,IAAI,oBAAoB,GAAG,MAAM,CAAC;QAClC,IAAI,kBAAkB,GAAG,MAAM,CAAC;+BACvB,WAAW;YAClB,IAAI,QAAQ,GAAG,KAAK,CAAC;YACrB,YAAA,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CACvC,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;gBACJ,IAAI,CAAC,QAAQ,EAAE;oBACb,QAAQ,GAAG,IAAI,CAAC;oBAChB,kBAAkB,EAAE,CAAC;iBACtB;gBACD,MAAM,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;YAC9B,CAAC,EACD;gBAAM,OAAA,oBAAoB,EAAE;YAAtB,CAAsB,EAC5B,SAAS,EACT;gBACE,IAAI,CAAC,oBAAoB,IAAI,CAAC,QAAQ,EAAE;oBACtC,IAAI,CAAC,kBAAkB,EAAE;wBACvB,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,eAAA,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;qBAC7D;oBACD,UAAU,CAAC,QAAQ,EAAE,CAAC;iBACvB;YACH,CAAC,CACF,CACF,CAAC;;QAvBJ,IAAK,IAAI,WAAW,GAAG,CAAC,EAAE,WAAW,GAAG,MAAM,EAAE,WAAW,EAAE,CAAA;oBAApD,WAAW;SAwBnB;IACH,CAAC,CAAC,CAAC;IACH,OAAO,cAAc,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAA,gBAAgB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACjF,CAAC;AAvCD,QAAA,QAAA,GAAA,SAuCC","debugId":null}},
    {"offset": {"line": 5728, "column": 0}, "map": {"version":3,"file":"fromEvent.js","sourceRoot":"","sources":["../../../../src/internal/observable/fromEvent.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5829, "column": 0}, "map": {"version":3,"file":"fromEventPattern.js","sourceRoot":"","sources":["../../../../src/internal/observable/fromEventPattern.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAA2C;AAC3C,IAAA,6CAAgD;AAEhD,IAAA,yDAA4D;AAsI5D,SAAgB,gBAAgB,CAC9B,UAA8C,EAC9C,aAAiE,EACjE,cAAsC;IAEtC,IAAI,cAAc,EAAE;QAClB,OAAO,gBAAgB,CAAI,UAAU,EAAE,aAAa,CAAC,CAAC,IAAI,CAAC,mBAAA,gBAAgB,CAAC,cAAc,CAAC,CAAC,CAAC;KAC9F;IAED,OAAO,IAAI,aAAA,UAAU,CAAU,SAAC,UAAU;QACxC,IAAM,OAAO,GAAG;YAAC,IAAA,IAAA,EAAA,CAAS;gBAAT,IAAA,KAAA,CAAS,EAAT,KAAA,UAAA,MAAS,EAAT,IAAS,CAAA;gBAAT,CAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAS;;YAAK,OAAA,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAA1C,CAA0C,CAAC;QAC1E,IAAM,QAAQ,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC;QACrC,OAAO,aAAA,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAAM,OAAA,aAAa,CAAC,OAAO,EAAE,QAAQ,CAAC;QAAhC,CAAgC,CAAC,CAAC,CAAC,SAAS,CAAC;IACxF,CAAC,CAAC,CAAC;AACL,CAAC;AAdD,QAAA,gBAAA,GAAA,iBAcC","debugId":null}},
    {"offset": {"line": 5861, "column": 0}, "map": {"version":3,"file":"generate.js","sourceRoot":"","sources":["../../../../src/internal/observable/generate.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,yCAA4C;AAE5C,IAAA,+CAAkD;AAClD,IAAA,6BAAgC;AAChC,IAAA,8DAAiE;AA0UjE,SAAgB,QAAQ,CACtB,qBAAgD,EAChD,SAA4B,EAC5B,OAAwB,EACxB,yBAA4D,EAC5D,SAAyB;;IAEzB,IAAI,cAAgC,CAAC;IACrC,IAAI,YAAe,CAAC;IAIpB,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;QAGzB,KAMG,qBAA8C,EALhD,YAAY,GAAA,GAAA,YAAA,EACZ,SAAS,GAAA,GAAA,SAAA,EACT,OAAO,GAAA,GAAA,OAAA,EACP,KAAA,GAAA,cAA6C,EAA7C,cAAc,GAAA,OAAA,KAAA,IAAG,WAAA,QAA4B,GAAA,EAAA,EAC7C,SAAS,GAAA,GAAA,SAAA,CACwC,CAAC;KACrD,MAAM;QAGL,YAAY,GAAG,qBAA0B,CAAC;QAC1C,IAAI,CAAC,yBAAyB,IAAI,cAAA,WAAW,CAAC,yBAAyB,CAAC,EAAE;YACxE,cAAc,GAAG,WAAA,QAA4B,CAAC;YAC9C,SAAS,GAAG,yBAA0C,CAAC;SACxD,MAAM;YACL,cAAc,GAAG,yBAA6C,CAAC;SAChE;KACF;IAGD,SAAU,GAAG;;;;;oBACF,KAAK,GAAG,YAAY;;;yBAAE,CAAA,CAAC,SAAS,IAAI,SAAS,CAAC,KAAK,CAAC,CAAA,EAAA,OAAA;wBAAA;wBAAA;qBAAA;oBAC3D,OAAA;wBAAA;wBAAM,cAAc,CAAC,KAAK,CAAC;qBAAA,CAAA;;oBAA3B,GAAA,IAAA,EAA2B,CAAC;;;oBADiC,KAAK,GAAG,OAAQ,CAAC,KAAK,CAAC,CAAA;;;;;;;;;;;KAGvF;IAGD,OAAO,QAAA,KAAK,CACV,AAAC,SAAS,GAGN;QAAM,OAAA,mBAAA,gBAAgB,CAAC,GAAG,EAAE,EAAE,SAAU,CAAC;IAAnC,CAAmC,GAGzC,GAAG,CAA6B,CACrC,CAAC;AACJ,CAAC;AAnDD,QAAA,QAAA,GAAA,SAmDC","debugId":null}},
    {"offset": {"line": 6023, "column": 0}, "map": {"version":3,"file":"iif.js","sourceRoot":"","sources":["../../../../src/internal/observable/iif.ts"],"names":[],"mappings":";;;;;AACA,IAAA,6BAAgC;AAiFhC,SAAgB,GAAG,CAAO,SAAwB,EAAE,UAA8B,EAAE,WAA+B;IACjH,OAAO,QAAA,KAAK,CAAC;QAAM,OAAA,AAAC,SAAS,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC;IAAxC,CAAwC,CAAC,CAAC;AAC/D,CAAC;AAFD,QAAA,GAAA,GAAA,IAEC","debugId":null}},
    {"offset": {"line": 6040, "column": 0}, "map": {"version":3,"file":"timer.js","sourceRoot":"","sources":["../../../../src/internal/observable/timer.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAA2C;AAE3C,IAAA,wCAA6D;AAC7D,IAAA,+CAAkD;AAClD,IAAA,qCAA6C;AAgI7C,SAAgB,KAAK,CACnB,OAA0B,EAC1B,mBAA4C,EAC5C,SAAyC;IAFzC,IAAA,YAAA,KAAA,GAAA;QAAA,UAAA,CAA0B;IAAA;IAE1B,IAAA,cAAA,KAAA,GAAA;QAAA,YAA2B,QAAA,KAAc;IAAA;IAIzC,IAAI,gBAAgB,GAAG,CAAC,CAAC,CAAC;IAE1B,IAAI,mBAAmB,IAAI,IAAI,EAAE;QAI/B,IAAI,cAAA,WAAW,CAAC,mBAAmB,CAAC,EAAE;YACpC,SAAS,GAAG,mBAAmB,CAAC;SACjC,MAAM;YAGL,gBAAgB,GAAG,mBAAmB,CAAC;SACxC;KACF;IAED,OAAO,IAAI,aAAA,UAAU,CAAC,SAAC,UAAU;QAI/B,IAAI,GAAG,GAAG,SAAA,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,SAAU,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;QAEvE,IAAI,GAAG,GAAG,CAAC,EAAE;YAEX,GAAG,GAAG,CAAC,CAAC;SACT;QAGD,IAAI,CAAC,GAAG,CAAC,CAAC;QAGV,OAAO,SAAS,CAAC,QAAQ,CAAC;YACxB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBAEtB,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;gBAErB,IAAI,CAAC,IAAI,gBAAgB,EAAE;oBAGzB,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;iBAC5C,MAAM;oBAEL,UAAU,CAAC,QAAQ,EAAE,CAAC;iBACvB;aACF;QACH,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC,CAAC,CAAC;AACL,CAAC;AArDD,QAAA,KAAA,GAAA,MAqDC","debugId":null}},
    {"offset": {"line": 6088, "column": 0}, "map": {"version":3,"file":"interval.js","sourceRoot":"","sources":["../../../../src/internal/observable/interval.ts"],"names":[],"mappings":";;;;;AACA,IAAA,wCAAoD;AAEpD,IAAA,6BAAgC;AA8ChC,SAAgB,QAAQ,CAAC,MAAU,EAAE,SAAyC;IAArD,IAAA,WAAA,KAAA,GAAA;QAAA,SAAA,CAAU;IAAA;IAAE,IAAA,cAAA,KAAA,GAAA;QAAA,YAA2B,QAAA,cAAc;IAAA;IAC5E,IAAI,MAAM,GAAG,CAAC,EAAE;QAEd,MAAM,GAAG,CAAC,CAAC;KACZ;IAED,OAAO,QAAA,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;AAC1C,CAAC;AAPD,QAAA,QAAA,GAAA,SAOC","debugId":null}},
    {"offset": {"line": 6113, "column": 0}, "map": {"version":3,"file":"merge.js","sourceRoot":"","sources":["../../../../src/internal/observable/merge.ts"],"names":[],"mappings":";;;;;AAEA,IAAA,8CAAiD;AACjD,IAAA,qCAAwC;AACxC,IAAA,6BAAgC;AAChC,IAAA,iCAAuD;AACvD,IAAA,2BAA8B;AAiF9B,SAAgB,KAAK;IAAC,IAAA,OAAA,EAAA,CAA8D;QAA9D,IAAA,KAAA,CAA8D,EAA9D,KAAA,UAAA,MAA8D,EAA9D,IAA8D,CAAA;QAA9D,IAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAA8D;;IAClF,IAAM,SAAS,GAAG,OAAA,YAAY,CAAC,IAAI,CAAC,CAAC;IACrC,IAAM,UAAU,GAAG,OAAA,SAAS,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC7C,IAAM,OAAO,GAAG,IAAkC,CAAC;IACnD,OAAO,CAAC,OAAO,CAAC,MAAM,GAElB,QAAA,KAAK,GACL,OAAO,CAAC,MAAM,KAAK,CAAC,GAEpB,YAAA,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAErB,WAAA,QAAQ,CAAC,UAAU,CAAC,CAAC,OAAA,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;AACrD,CAAC;AAZD,QAAA,KAAA,GAAA,MAYC","debugId":null}},
    {"offset": {"line": 6139, "column": 0}, "map": {"version":3,"file":"never.js","sourceRoot":"","sources":["../../../../src/internal/observable/never.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAA2C;AAC3C,IAAA,iCAAoC;AAmCvB,QAAA,KAAK,GAAG,IAAI,aAAA,UAAU,CAAQ,OAAA,IAAI,CAAC,CAAC;AAKjD,SAAgB,KAAK;IACnB,OAAO,QAAA,KAAK,CAAC;AACf,CAAC;AAFD,QAAA,KAAA,GAAA,MAEC","debugId":null}},
    {"offset": {"line": 6156, "column": 0}, "map": {"version":3,"file":"argsOrArgArray.js","sourceRoot":"","sources":["../../../../src/internal/util/argsOrArgArray.ts"],"names":[],"mappings":";;;;;AAAQ,IAAA,OAAO,GAAK,KAAK,CAAA,OAAV,CAAW;AAM1B,SAAgB,cAAc,CAAI,IAAiB;IACjD,OAAO,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,IAAY,CAAC;AACzE,CAAC;AAFD,QAAA,cAAA,GAAA,eAEC","debugId":null}},
    {"offset": {"line": 6171, "column": 0}, "map": {"version":3,"file":"onErrorResumeNext.js","sourceRoot":"","sources":["../../../../src/internal/observable/onErrorResumeNext.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAA2C;AAE3C,IAAA,qDAAwD;AACxD,IAAA,kEAAqE;AACrE,IAAA,iCAAoC;AACpC,IAAA,qCAAwC;AAmExC,SAAgB,iBAAiB;IAC/B,IAAA,UAAA,EAAA,CAAyE;QAAzE,IAAA,KAAA,CAAyE,EAAzE,KAAA,UAAA,MAAyE,EAAzE,IAAyE,CAAA;QAAzE,OAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAyE;;IAEzE,IAAM,WAAW,GAA4B,iBAAA,cAAc,CAAC,OAAO,CAAQ,CAAC;IAE5E,OAAO,IAAI,aAAA,UAAU,CAAC,SAAC,UAAU;QAC/B,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,IAAM,aAAa,GAAG;YACpB,IAAI,WAAW,GAAG,WAAW,CAAC,MAAM,EAAE;gBACpC,IAAI,UAAU,GAAA,KAAA,CAAuB,CAAC;gBACtC,IAAI;oBACF,UAAU,GAAG,YAAA,SAAS,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBACpD,CAAC,OAAO,GAAG,EAAE;oBACZ,aAAa,EAAE,CAAC;oBAChB,OAAO;iBACR;gBACD,IAAM,eAAe,GAAG,IAAI,qBAAA,kBAAkB,CAAC,UAAU,EAAE,SAAS,EAAE,OAAA,IAAI,EAAE,OAAA,IAAI,CAAC,CAAC;gBAClF,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;gBACtC,eAAe,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;aACpC,MAAM;gBACL,UAAU,CAAC,QAAQ,EAAE,CAAC;aACvB;QACH,CAAC,CAAC;QACF,aAAa,EAAE,CAAC;IAClB,CAAC,CAAC,CAAC;AACL,CAAC;AAzBD,QAAA,iBAAA,GAAA,kBAyBC","debugId":null}},
    {"offset": {"line": 6214, "column": 0}, "map": {"version":3,"file":"pairs.js","sourceRoot":"","sources":["../../../../src/internal/observable/pairs.ts"],"names":[],"mappings":";;;;;AAEA,IAAA,2BAA8B;AA2E9B,SAAgB,KAAK,CAAC,GAAQ,EAAE,SAAyB;IACvD,OAAO,OAAA,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,SAAgB,CAAC,CAAC;AACrD,CAAC;AAFD,QAAA,KAAA,GAAA,MAEC","debugId":null}},
    {"offset": {"line": 6229, "column": 0}, "map": {"version":3,"file":"not.js","sourceRoot":"","sources":["../../../../src/internal/util/not.ts"],"names":[],"mappings":";;;;;AAAA,SAAgB,GAAG,CAAI,IAA0C,EAAE,OAAY;IAC7E,OAAO,SAAC,KAAQ,EAAE,KAAa;QAAK,OAAA,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC;IAAjC,CAAiC,CAAC;AACxE,CAAC;AAFD,QAAA,GAAA,GAAA,IAEC","debugId":null}},
    {"offset": {"line": 6245, "column": 0}, "map": {"version":3,"file":"filter.js","sourceRoot":"","sources":["../../../../src/internal/operators/filter.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AA0DhE,SAAgB,MAAM,CAAI,SAA+C,EAAE,OAAa;IACtF,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAEhC,IAAI,KAAK,GAAG,CAAC,CAAC;QAId,MAAM,CAAC,SAAS,CAId,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAC,KAAK;YAAK,OAAA,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;QAAjE,CAAiE,CAAC,CACnH,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAdD,QAAA,MAAA,GAAA,OAcC","debugId":null}},
    {"offset": {"line": 6266, "column": 0}, "map": {"version":3,"file":"partition.js","sourceRoot":"","sources":["../../../../src/internal/observable/partition.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,+BAAkC;AAClC,IAAA,0CAA6C;AAG7C,IAAA,qCAAwC;AA0ExC,SAAgB,SAAS,CACvB,MAA0B,EAC1B,SAA0D,EAC1D,OAAa;IAEb,OAAO;QAAC,SAAA,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,YAAA,SAAS,CAAC,MAAM,CAAC,CAAC;QAAE,SAAA,MAAM,CAAC,MAAA,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,YAAA,SAAS,CAAC,MAAM,CAAC,CAAC;KAGxG,CAAC;AACJ,CAAC;AATD,QAAA,SAAA,GAAA,UASC","debugId":null}},
    {"offset": {"line": 6286, "column": 0}, "map": {"version":3,"file":"race.js","sourceRoot":"","sources":["../../../../src/internal/observable/race.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAA2C;AAC3C,IAAA,qCAAwC;AAGxC,IAAA,qDAAwD;AACxD,IAAA,kEAA2E;AA6C3E,SAAgB,IAAI;IAAI,IAAA,UAAA,EAAA,CAAyD;QAAzD,IAAA,KAAA,CAAyD,EAAzD,KAAA,UAAA,MAAyD,EAAzD,IAAyD,CAAA;QAAzD,OAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAyD;;IAC/E,OAAO,GAAG,iBAAA,cAAc,CAAC,OAAO,CAAC,CAAC;IAElC,OAAO,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,YAAA,SAAS,CAAC,OAAO,CAAC,CAAC,CAAuB,CAAC,CAAC,CAAC,CAAC,IAAI,aAAA,UAAU,CAAI,QAAQ,CAAC,OAA+B,CAAC,CAAC,CAAC;AAC3I,CAAC;AAJD,QAAA,IAAA,GAAA,KAIC;AAOD,SAAgB,QAAQ,CAAI,OAA6B;IACvD,OAAO,SAAC,UAAyB;QAC/B,IAAI,aAAa,GAAmB,EAAE,CAAC;+BAM9B,CAAC;YACR,aAAa,CAAC,IAAI,CAChB,YAAA,SAAS,CAAC,OAAO,CAAC,CAAC,CAAuB,CAAC,CAAC,SAAS,CACnD,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAC,KAAK;gBACzC,IAAI,aAAa,EAAE;oBAGjB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;wBAC7C,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;qBAC3C;oBACD,aAAa,GAAG,IAAK,CAAC;iBACvB;gBACD,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACzB,CAAC,CAAC,CACH,CACF,CAAC;;QAfJ,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,aAAa,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,CAAA;oBAArE,CAAC;SAgBT;IACH,CAAC,CAAC;AACJ,CAAC;AA1BD,QAAA,QAAA,GAAA,SA0BC","debugId":null}},
    {"offset": {"line": 6329, "column": 0}, "map": {"version":3,"file":"range.js","sourceRoot":"","sources":["../../../../src/internal/observable/range.ts"],"names":[],"mappings":";;;;;AACA,IAAA,wCAA2C;AAC3C,IAAA,6BAAgC;AAoDhC,SAAgB,KAAK,CAAC,KAAa,EAAE,KAAc,EAAE,SAAyB;IAC5E,IAAI,KAAK,IAAI,IAAI,EAAE;QAEjB,KAAK,GAAG,KAAK,CAAC;QACd,KAAK,GAAG,CAAC,CAAC;KACX;IAED,IAAI,KAAK,IAAI,CAAC,EAAE;QAEd,OAAO,QAAA,KAAK,CAAC;KACd;IAGD,IAAM,GAAG,GAAG,KAAK,GAAG,KAAK,CAAC;IAE1B,OAAO,IAAI,aAAA,UAAU,CACnB,SAAS,GAEL,SAAC,UAAU;QACT,IAAI,CAAC,GAAG,KAAK,CAAC;QACd,OAAO,SAAS,CAAC,QAAQ,CAAC;YACxB,IAAI,CAAC,GAAG,GAAG,EAAE;gBACX,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;gBACrB,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB,MAAM;gBACL,UAAU,CAAC,QAAQ,EAAE,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;IACL,CAAC,GAED,SAAC,UAAU;QACT,IAAI,CAAC,GAAG,KAAK,CAAC;QACd,MAAO,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAE;YACpC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;SACtB;QACD,UAAU,CAAC,QAAQ,EAAE,CAAC;IACxB,CAAC,CACN,CAAC;AACJ,CAAC;AAtCD,QAAA,KAAA,GAAA,MAsCC","debugId":null}},
    {"offset": {"line": 6369, "column": 0}, "map": {"version":3,"file":"using.js","sourceRoot":"","sources":["../../../../src/internal/observable/using.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAA2C;AAE3C,IAAA,qCAAwC;AACxC,IAAA,6BAAgC;AA4BhC,SAAgB,KAAK,CACnB,eAA4C,EAC5C,iBAAgE;IAEhE,OAAO,IAAI,aAAA,UAAU,CAAqB,SAAC,UAAU;QACnD,IAAM,QAAQ,GAAG,eAAe,EAAE,CAAC;QACnC,IAAM,MAAM,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,YAAA,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAA,KAAK,CAAC;QAClD,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAC7B,OAAO;YAGL,IAAI,QAAQ,EAAE;gBACZ,QAAQ,CAAC,WAAW,EAAE,CAAC;aACxB;QACH,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAjBD,QAAA,KAAA,GAAA,MAiBC","debugId":null}},
    {"offset": {"line": 6396, "column": 0}, "map": {"version":3,"file":"zip.js","sourceRoot":"","sources":["../../../../src/internal/observable/zip.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,wCAA2C;AAE3C,IAAA,qCAAwC;AACxC,IAAA,qDAAwD;AACxD,IAAA,6BAAgC;AAChC,IAAA,kEAA2E;AAC3E,IAAA,iCAAiD;AA8CjD,SAAgB,GAAG;IAAC,IAAA,OAAA,EAAA,CAAkB;QAAlB,IAAA,KAAA,CAAkB,EAAlB,KAAA,UAAA,MAAkB,EAAlB,IAAkB,CAAA;QAAlB,IAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAkB;;IACpC,IAAM,cAAc,GAAG,OAAA,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAE/C,IAAM,OAAO,GAAG,iBAAA,cAAc,CAAC,IAAI,CAA0B,CAAC;IAE9D,OAAO,OAAO,CAAC,MAAM,GACjB,IAAI,aAAA,UAAU,CAAY,SAAC,UAAU;QAGnC,IAAI,OAAO,GAAgB,OAAO,CAAC,GAAG,CAAC;YAAM,OAAA,EAAE;QAAF,CAAE,CAAC,CAAC;QAKjD,IAAI,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC;YAAM,OAAA,KAAK;QAAL,CAAK,CAAC,CAAC;QAGzC,UAAU,CAAC,GAAG,CAAC;YACb,OAAO,GAAG,SAAS,GAAG,IAAK,CAAC;QAC9B,CAAC,CAAC,CAAC;+BAKM,WAAW;YAClB,YAAA,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CACvC,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;gBACJ,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAIjC,IAAI,OAAO,CAAC,KAAK,CAAC,SAAC,MAAM;oBAAK,OAAA,MAAM,CAAC,MAAM;gBAAb,CAAa,CAAC,EAAE;oBAC5C,IAAM,MAAM,GAAQ,OAAO,CAAC,GAAG,CAAC,SAAC,MAAM;wBAAK,OAAA,MAAM,CAAC,KAAK,EAAG;oBAAf,CAAe,CAAC,CAAC;oBAE7D,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,cAAc,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA,EAAA,EAAA,OAAI,MAAM,IAAE,CAAC,CAAC,MAAM,CAAC,CAAC;oBAIrE,IAAI,OAAO,CAAC,IAAI,CAAC,SAAC,MAAM,EAAE,CAAC;wBAAK,OAAA,CAAC,MAAM,CAAC,MAAM,IAAI,SAAS,CAAC,CAAC,CAAC;oBAA9B,CAA8B,CAAC,EAAE;wBAC/D,UAAU,CAAC,QAAQ,EAAE,CAAC;qBACvB;iBACF;YACH,CAAC,EACD;gBAGE,SAAS,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;gBAI9B,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,MAAM,IAAI,UAAU,CAAC,QAAQ,EAAE,CAAC;YACxD,CAAC,CACF,CACF,CAAC;;QA/BJ,IAAK,IAAI,WAAW,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,IAAI,WAAW,GAAG,OAAO,CAAC,MAAM,EAAE,WAAW,EAAE,CAAA;oBAAlF,WAAW;SAgCnB;QAGD,OAAO;YACL,OAAO,GAAG,SAAS,GAAG,IAAK,CAAC;QAC9B,CAAC,CAAC;IACJ,CAAC,CAAC,GACF,QAAA,KAAK,CAAC;AACZ,CAAC;AAhED,QAAA,GAAA,GAAA,IAgEC","debugId":null}},
    {"offset": {"line": 6482, "column": 0}, "map": {"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/internal/types.ts"],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6491, "column": 0}, "map": {"version":3,"file":"audit.js","sourceRoot":"","sources":["../../../../src/internal/operators/audit.ts"],"names":[],"mappings":";;;;;AAGA,IAAA,iCAAuC;AACvC,IAAA,iDAAoD;AACpD,IAAA,uDAAgE;AA+ChE,SAAgB,KAAK,CAAI,gBAAoD;IAC3E,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,SAAS,GAAa,IAAI,CAAC;QAC/B,IAAI,kBAAkB,GAA2B,IAAI,CAAC;QACtD,IAAI,UAAU,GAAG,KAAK,CAAC;QAEvB,IAAM,WAAW,GAAG;YAClB,kBAAkB,KAAA,QAAlB,kBAAkB,KAAA,KAAA,IAAA,KAAA,IAAlB,kBAAkB,CAAE,WAAW,EAAE,CAAC;YAClC,kBAAkB,GAAG,IAAI,CAAC;YAC1B,IAAI,QAAQ,EAAE;gBACZ,QAAQ,GAAG,KAAK,CAAC;gBACjB,IAAM,KAAK,GAAG,SAAU,CAAC;gBACzB,SAAS,GAAG,IAAI,CAAC;gBACjB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACxB;YACD,UAAU,IAAI,UAAU,CAAC,QAAQ,EAAE,CAAC;QACtC,CAAC,CAAC;QAEF,IAAM,eAAe,GAAG;YACtB,kBAAkB,GAAG,IAAI,CAAC;YAC1B,UAAU,IAAI,UAAU,CAAC,QAAQ,EAAE,CAAC;QACtC,CAAC,CAAC;QAEF,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;YACJ,QAAQ,GAAG,IAAI,CAAC;YAChB,SAAS,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,kBAAkB,EAAE;gBACvB,YAAA,SAAS,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAC1C,AAAC,kBAAkB,GAAG,qBAAA,wBAAwB,CAAC,UAAU,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC,CAC1F,CAAC;aACH;QACH,CAAC,EACD;YACE,UAAU,GAAG,IAAI,CAAC;YAClB,CAAC,CAAC,QAAQ,IAAI,CAAC,kBAAkB,IAAI,kBAAkB,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,QAAQ,EAAE,CAAC;QAC3F,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AA3CD,QAAA,KAAA,GAAA,MA2CC","debugId":null}},
    {"offset": {"line": 6538, "column": 0}, "map": {"version":3,"file":"auditTime.js","sourceRoot":"","sources":["../../../../src/internal/operators/auditTime.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAAoD;AACpD,IAAA,6BAAgC;AAChC,IAAA,yCAA4C;AAkD5C,SAAgB,SAAS,CAAI,QAAgB,EAAE,SAAyC;IAAzC,IAAA,cAAA,KAAA,GAAA;QAAA,YAA2B,QAAA,cAAc;IAAA;IACtF,OAAO,QAAA,KAAK,CAAC;QAAM,OAAA,QAAA,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC;IAA1B,CAA0B,CAAC,CAAC;AACjD,CAAC;AAFD,QAAA,SAAA,GAAA,UAEC","debugId":null}},
    {"offset": {"line": 6560, "column": 0}, "map": {"version":3,"file":"buffer.js","sourceRoot":"","sources":["../../../../src/internal/operators/buffer.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,iCAAoC;AACpC,IAAA,uDAAgE;AAChE,IAAA,iDAAoD;AAwCpD,SAAgB,MAAM,CAAI,eAAqC;IAC7D,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAEhC,IAAI,aAAa,GAAQ,EAAE,CAAC;QAG5B,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;YAAK,OAAA,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC;QAAzB,CAAyB,EACpC;YACE,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC/B,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,CACF,CACF,CAAC;QAGF,YAAA,SAAS,CAAC,eAAe,CAAC,CAAC,SAAS,CAClC,qBAAA,wBAAwB,CACtB,UAAU,EACV;YAEE,IAAM,CAAC,GAAG,aAAa,CAAC;YACxB,aAAa,GAAG,EAAE,CAAC;YACnB,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,EACD,OAAA,IAAI,CACL,CACF,CAAC;QAEF,OAAO;YAEL,aAAa,GAAG,IAAK,CAAC;QACxB,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AApCD,QAAA,MAAA,GAAA,OAoCC","debugId":null}},
    {"offset": {"line": 6594, "column": 0}, "map": {"version":3,"file":"bufferCount.js","sourceRoot":"","sources":["../../../../src/internal/operators/bufferCount.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAChE,IAAA,2CAA8C;AAqD9C,SAAgB,WAAW,CAAI,UAAkB,EAAE,gBAAsC;IAAtC,IAAA,qBAAA,KAAA,GAAA;QAAA,mBAAA,IAAsC;IAAA;IAGvF,gBAAgB,GAAG,gBAAgB,KAAA,QAAhB,gBAAgB,KAAA,KAAA,IAAhB,gBAAgB,GAAI,UAAU,CAAC;IAElD,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,OAAO,GAAU,EAAE,CAAC;QACxB,IAAI,KAAK,GAAG,CAAC,CAAC;QAEd,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;;YACJ,IAAI,MAAM,GAAiB,IAAI,CAAC;YAKhC,IAAI,KAAK,EAAE,GAAG,gBAAiB,KAAK,CAAC,EAAE;gBACrC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAClB;;gBAGD,IAAqB,IAAA,YAAA,SAAA,OAAO,CAAA,EAAA,cAAA,UAAA,IAAA,EAAA,EAAA,CAAA,YAAA,IAAA,EAAA,cAAA,UAAA,IAAA,GAAE;oBAAzB,IAAM,MAAM,GAAA,YAAA,KAAA;oBACf,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAMnB,IAAI,UAAU,IAAI,MAAM,CAAC,MAAM,EAAE;wBAC/B,MAAM,GAAG,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAN,MAAM,GAAI,EAAE,CAAC;wBACtB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACrB;iBACF;;;;;;;;;;;;YAED,IAAI,MAAM,EAAE;;oBAIV,IAAqB,IAAA,WAAA,SAAA,MAAM,CAAA,EAAA,aAAA,SAAA,IAAA,EAAA,EAAA,CAAA,WAAA,IAAA,EAAA,aAAA,SAAA,IAAA,GAAE;wBAAxB,IAAM,MAAM,GAAA,WAAA,KAAA;wBACf,YAAA,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;wBAC3B,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACzB;;;;;;;;;;;;aACF;QACH,CAAC,EACD;;;gBAGE,IAAqB,IAAA,YAAA,SAAA,OAAO,CAAA,EAAA,cAAA,UAAA,IAAA,EAAA,EAAA,CAAA,YAAA,IAAA,EAAA,cAAA,UAAA,IAAA,GAAE;oBAAzB,IAAM,MAAM,GAAA,YAAA,KAAA;oBACf,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACzB;;;;;;;;;;;;YACD,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,EAED,SAAS,EACT;YAEE,OAAO,GAAG,IAAK,CAAC;QAClB,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AA/DD,QAAA,WAAA,GAAA,YA+DC","debugId":null}},
    {"offset": {"line": 6699, "column": 0}, "map": {"version":3,"file":"bufferTime.js","sourceRoot":"","sources":["../../../../src/internal/operators/bufferTime.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6805, "column": 0}, "map": {"version":3,"file":"bufferToggle.js","sourceRoot":"","sources":["../../../../src/internal/operators/bufferToggle.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,4CAA+C;AAE/C,IAAA,iCAAuC;AACvC,IAAA,iDAAoD;AACpD,IAAA,uDAAgE;AAChE,IAAA,iCAAoC;AACpC,IAAA,2CAA8C;AA6C9C,SAAgB,YAAY,CAC1B,QAA4B,EAC5B,eAAmD;IAEnD,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAM,OAAO,GAAU,EAAE,CAAC;QAG1B,YAAA,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC3B,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,SAAS;YACR,IAAM,MAAM,GAAQ,EAAE,CAAC;YACvB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAGrB,IAAM,mBAAmB,GAAG,IAAI,eAAA,YAAY,EAAE,CAAC;YAE/C,IAAM,UAAU,GAAG;gBACjB,YAAA,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;gBAC3B,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACxB,mBAAmB,CAAC,WAAW,EAAE,CAAC;YACpC,CAAC,CAAC;YAGF,mBAAmB,CAAC,GAAG,CAAC,YAAA,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,qBAAA,wBAAwB,CAAC,UAAU,EAAE,UAAU,EAAE,OAAA,IAAI,CAAC,CAAC,CAAC,CAAC;QACnI,CAAC,EACD,OAAA,IAAI,CACL,CACF,CAAC;QAEF,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;;;gBAEJ,IAAqB,IAAA,YAAA,SAAA,OAAO,CAAA,EAAA,cAAA,UAAA,IAAA,EAAA,EAAA,CAAA,YAAA,IAAA,EAAA,cAAA,UAAA,IAAA,GAAE;oBAAzB,IAAM,MAAM,GAAA,YAAA,KAAA;oBACf,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACpB;;;;;;;;;;;;QACH,CAAC,EACD;YAEE,MAAO,OAAO,CAAC,MAAM,GAAG,CAAC,CAAE;gBACzB,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAG,CAAC,CAAC;aACnC;YACD,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAlDD,QAAA,YAAA,GAAA,aAkDC","debugId":null}},
    {"offset": {"line": 6876, "column": 0}, "map": {"version":3,"file":"bufferWhen.js","sourceRoot":"","sources":["../../../../src/internal/operators/bufferWhen.ts"],"names":[],"mappings":";;;;;AAEA,IAAA,iCAAuC;AACvC,IAAA,iCAAoC;AACpC,IAAA,uDAAgE;AAChE,IAAA,iDAAoD;AAwCpD,SAAgB,UAAU,CAAI,eAA2C;IACvE,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAEhC,IAAI,MAAM,GAAe,IAAI,CAAC;QAI9B,IAAI,iBAAiB,GAAyB,IAAI,CAAC;QAMnD,IAAM,UAAU,GAAG;YAGjB,iBAAiB,KAAA,QAAjB,iBAAiB,KAAA,KAAA,IAAA,KAAA,IAAjB,iBAAiB,CAAE,WAAW,EAAE,CAAC;YAEjC,IAAM,CAAC,GAAG,MAAM,CAAC;YACjB,MAAM,GAAG,EAAE,CAAC;YACZ,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAGxB,YAAA,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC,SAAS,CAAC,AAAC,iBAAiB,GAAG,qBAAA,wBAAwB,CAAC,UAAU,EAAE,UAAU,EAAE,OAAA,IAAI,CAAC,CAAC,CAAC,CAAC;QACvH,CAAC,CAAC;QAGF,UAAU,EAAE,CAAC;QAGb,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EAEV,SAAC,KAAK;YAAK,OAAA,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,IAAI,CAAC,KAAK,CAAC;QAAnB,CAAmB,EAG9B;YACE,MAAM,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAClC,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,EAED,SAAS,EAET;YAAM,OAAA,AAAC,MAAM,GAAG,iBAAiB,GAAG,IAAK,CAAC;QAApC,CAAoC,CAC3C,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAhDD,QAAA,UAAA,GAAA,WAgDC","debugId":null}},
    {"offset": {"line": 6913, "column": 0}, "map": {"version":3,"file":"catchError.js","sourceRoot":"","sources":["../../../../src/internal/operators/catchError.ts"],"names":[],"mappings":";;;;;AAIA,IAAA,iDAAoD;AACpD,IAAA,uDAAgE;AAChE,IAAA,iCAAuC;AAkGvC,SAAgB,UAAU,CACxB,QAAgD;IAEhD,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,QAAQ,GAAwB,IAAI,CAAC;QACzC,IAAI,SAAS,GAAG,KAAK,CAAC;QACtB,IAAI,aAA6C,CAAC;QAElD,QAAQ,GAAG,MAAM,CAAC,SAAS,CACzB,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,SAAC,GAAG;YAC7D,aAAa,GAAG,YAAA,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACvE,IAAI,QAAQ,EAAE;gBACZ,QAAQ,CAAC,WAAW,EAAE,CAAC;gBACvB,QAAQ,GAAG,IAAI,CAAC;gBAChB,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;aACrC,MAAM;gBAGL,SAAS,GAAG,IAAI,CAAC;aAClB;QACH,CAAC,CAAC,CACH,CAAC;QAEF,IAAI,SAAS,EAAE;YAMb,QAAQ,CAAC,WAAW,EAAE,CAAC;YACvB,QAAQ,GAAG,IAAI,CAAC;YAChB,aAAc,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;SACtC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAlCD,QAAA,UAAA,GAAA,WAkCC","debugId":null}},
    {"offset": {"line": 6949, "column": 0}, "map": {"version":3,"file":"scanInternals.js","sourceRoot":"","sources":["../../../../src/internal/operators/scanInternals.ts"],"names":[],"mappings":";;;;;AAEA,IAAA,uDAAgE;AAWhE,SAAgB,aAAa,CAC3B,WAA2D,EAC3D,IAAO,EACP,OAAgB,EAChB,UAAmB,EACnB,kBAAqC;IAErC,OAAO,SAAC,MAAqB,EAAE,UAA2B;QAIxD,IAAI,QAAQ,GAAG,OAAO,CAAC;QAIvB,IAAI,KAAK,GAAQ,IAAI,CAAC;QAEtB,IAAI,KAAK,GAAG,CAAC,CAAC;QAGd,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;YAEJ,IAAM,CAAC,GAAG,KAAK,EAAE,CAAC;YAElB,KAAK,GAAG,QAAQ,GAEZ,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,GAI5B,CAAC,AAAC,QAAQ,GAAG,IAAI,CAAC,CAAE,KAAK,CAAC,CAAC;YAG/B,UAAU,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,CAAC,EAGD,kBAAkB,IACf;YACC,QAAQ,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnC,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,CAAC,CACL,CACF,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AAhDD,QAAA,aAAA,GAAA,cAgDC","debugId":null}},
    {"offset": {"line": 6976, "column": 0}, "map": {"version":3,"file":"reduce.js","sourceRoot":"","sources":["../../../../src/internal/operators/reduce.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,6CAAgD;AAEhD,IAAA,iCAAuC;AAwDvC,SAAgB,MAAM,CAAO,WAAuD,EAAE,IAAU;IAC9F,OAAO,OAAA,OAAO,CAAC,gBAAA,aAAa,CAAC,WAAW,EAAE,IAAI,EAAE,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;AACvF,CAAC;AAFD,QAAA,MAAA,GAAA,OAEC","debugId":null}},
    {"offset": {"line": 6992, "column": 0}, "map": {"version":3,"file":"toArray.js","sourceRoot":"","sources":["../../../../src/internal/operators/toArray.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,+BAAkC;AAElC,IAAA,iCAAuC;AAEvC,IAAM,UAAU,GAAG,SAAC,GAAU,EAAE,KAAU;IAAK,OAAA,AAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;AAAtB,CAAsB,CAAC;AAgCtE,SAAgB,OAAO;IAIrB,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,SAAA,MAAM,CAAC,UAAU,EAAE,EAAS,CAAC,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;AACL,CAAC;AAPD,QAAA,OAAA,GAAA,QAOC","debugId":null}},
    {"offset": {"line": 7013, "column": 0}, "map": {"version":3,"file":"joinAllInternals.js","sourceRoot":"","sources":["../../../../src/internal/operators/joinAllInternals.ts"],"names":[],"mappings":";;;;;AAEA,IAAA,yCAA4C;AAC5C,IAAA,yDAA4D;AAC5D,IAAA,iCAAoC;AACpC,IAAA,mCAAsC;AACtC,IAAA,iCAAoC;AAYpC,SAAgB,gBAAgB,CAAO,MAAwD,EAAE,OAA+B;IAC9H,OAAO,OAAA,IAAI,CAGT,UAAA,OAAO,EAAgE,EAEvE,WAAA,QAAQ,CAAC,SAAC,OAAO;QAAK,OAAA,MAAM,CAAC,OAAO,CAAC;IAAf,CAAe,CAAC,EAEtC,OAAO,CAAC,CAAC,CAAC,mBAAA,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAE,WAAA,QAAgB,CACxD,CAAC;AACJ,CAAC;AAVD,QAAA,gBAAA,GAAA,iBAUC","debugId":null}},
    {"offset": {"line": 7034, "column": 0}, "map": {"version":3,"file":"combineLatestAll.js","sourceRoot":"","sources":["../../../../src/internal/operators/combineLatestAll.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,yDAA4D;AAE5D,IAAA,mDAAsD;AA6CtD,SAAgB,gBAAgB,CAAI,OAAsC;IACxE,OAAO,mBAAA,gBAAgB,CAAC,gBAAA,aAAa,EAAE,OAAO,CAAC,CAAC;AAClD,CAAC;AAFD,QAAA,gBAAA,GAAA,iBAEC","debugId":null}},
    {"offset": {"line": 7050, "column": 0}, "map": {"version":3,"file":"combineAll.js","sourceRoot":"","sources":["../../../../src/internal/operators/combineAll.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,mDAAsD;AAKzC,QAAA,UAAU,GAAG,mBAAA,gBAAgB,CAAC","debugId":null}},
    {"offset": {"line": 7062, "column": 0}, "map": {"version":3,"file":"combineLatest.js","sourceRoot":"","sources":["../../../../src/internal/operators/combineLatest.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,yDAAgE;AAEhE,IAAA,iCAAuC;AACvC,IAAA,qDAAwD;AACxD,IAAA,yDAA4D;AAC5D,IAAA,iCAAoC;AACpC,IAAA,iCAAiD;AAoBjD,SAAgB,aAAa;IAAO,IAAA,OAAA,EAAA,CAA6D;QAA7D,IAAA,KAAA,CAA6D,EAA7D,KAAA,UAAA,MAA6D,EAA7D,IAA6D,CAAA;QAA7D,IAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAA6D;;IAC/F,IAAM,cAAc,GAAG,OAAA,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAC/C,OAAO,cAAc,GACjB,OAAA,IAAI,CAAC,aAAa,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA,EAAA,EAAA,OAAK,IAAoC,KAAG,mBAAA,gBAAgB,CAAC,cAAc,CAAC,CAAC,GAC/F,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QACzB,gBAAA,iBAAiB,CAAA,cAAA;YAAE,MAAM;SAAA,EAAA,OAAK,iBAAA,cAAc,CAAC,IAAI,CAAC,GAAE,CAAC,UAAU,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;AACT,CAAC;AAPD,QAAA,aAAA,GAAA,cAOC","debugId":null}},
    {"offset": {"line": 7114, "column": 0}, "map": {"version":3,"file":"combineLatestWith.js","sourceRoot":"","sources":["../../../../src/internal/operators/combineLatestWith.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,6CAAgD;AA0ChD,SAAgB,iBAAiB;IAC/B,IAAA,eAAA,EAAA,CAA6C;QAA7C,IAAA,KAAA,CAA6C,EAA7C,KAAA,UAAA,MAA6C,EAA7C,IAA6C,CAAA;QAA7C,YAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAA6C;;IAE7C,OAAO,gBAAA,aAAa,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA,EAAA,EAAA,OAAI,YAAY,IAAE;AACxC,CAAC;AAJD,QAAA,iBAAA,GAAA,kBAIC","debugId":null}},
    {"offset": {"line": 7156, "column": 0}, "map": {"version":3,"file":"concatMap.js","sourceRoot":"","sources":["../../../../src/internal/operators/concatMap.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,mCAAsC;AAEtC,IAAA,6CAAgD;AA2EhD,SAAgB,SAAS,CACvB,OAAuC,EACvC,cAA6G;IAE7G,OAAO,aAAA,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAA,QAAQ,CAAC,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,WAAA,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AAClG,CAAC;AALD,QAAA,SAAA,GAAA,UAKC","debugId":null}},
    {"offset": {"line": 7172, "column": 0}, "map": {"version":3,"file":"concatMapTo.js","sourceRoot":"","sources":["../../../../src/internal/operators/concatMapTo.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,qCAAwC;AAExC,IAAA,6CAAgD;AAuEhD,SAAgB,WAAW,CACzB,eAAkB,EAClB,cAA6G;IAE7G,OAAO,aAAA,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,YAAA,SAAS,CAAC;QAAM,OAAA,eAAe;IAAf,CAAe,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,YAAA,SAAS,CAAC;QAAM,OAAA,eAAe;IAAf,CAAe,CAAC,CAAC;AAC1H,CAAC;AALD,QAAA,WAAA,GAAA,YAKC","debugId":null}},
    {"offset": {"line": 7192, "column": 0}, "map": {"version":3,"file":"concat.js","sourceRoot":"","sources":["../../../../src/internal/operators/concat.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,qCAAwC;AACxC,IAAA,iCAA4C;AAC5C,IAAA,uCAA0C;AAY1C,SAAgB,MAAM;IAAO,IAAA,OAAA,EAAA,CAAc;QAAd,IAAA,KAAA,CAAc,EAAd,KAAA,UAAA,MAAc,EAAd,IAAc,CAAA;QAAd,IAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAc;;IACzC,IAAM,SAAS,GAAG,OAAA,YAAY,CAAC,IAAI,CAAC,CAAC;IACrC,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,YAAA,SAAS,EAAE,CAAC,OAAA,IAAI,CAAA,cAAA;YAAE,MAAM;SAAA,EAAA,OAAK,IAAI,IAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IACxE,CAAC,CAAC,CAAC;AACL,CAAC;AALD,QAAA,MAAA,GAAA,OAKC","debugId":null}},
    {"offset": {"line": 7242, "column": 0}, "map": {"version":3,"file":"concatWith.js","sourceRoot":"","sources":["../../../../src/internal/operators/concatWith.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,+BAAkC;AA0ClC,SAAgB,UAAU;IACxB,IAAA,eAAA,EAAA,CAA6C;QAA7C,IAAA,KAAA,CAA6C,EAA7C,KAAA,UAAA,MAA6C,EAA7C,IAA6C,CAAA;QAA7C,YAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAA6C;;IAE7C,OAAO,SAAA,MAAM,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA,EAAA,EAAA,OAAI,YAAY,IAAE;AACjC,CAAC;AAJD,QAAA,UAAA,GAAA,WAIC","debugId":null}},
    {"offset": {"line": 7284, "column": 0}, "map": {"version":3,"file":"fromSubscribable.js","sourceRoot":"","sources":["../../../../src/internal/observable/fromSubscribable.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAA2C;AAc3C,SAAgB,gBAAgB,CAAI,YAA6B;IAC/D,OAAO,IAAI,aAAA,UAAU,CAAC,SAAC,UAAyB;QAAK,OAAA,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC;IAAlC,CAAkC,CAAC,CAAC;AAC3F,CAAC;AAFD,QAAA,gBAAA,GAAA,iBAEC","debugId":null}},
    {"offset": {"line": 7301, "column": 0}, "map": {"version":3,"file":"connect.js","sourceRoot":"","sources":["../../../../src/internal/operators/connect.ts"],"names":[],"mappings":";;;;;AAEA,IAAA,kCAAqC;AACrC,IAAA,iDAAoD;AACpD,IAAA,iCAAuC;AACvC,IAAA,+DAAkE;AAgBlE,IAAM,cAAc,GAA2B;IAC7C,SAAS,EAAE;QAAM,OAAA,IAAI,UAAA,OAAO,EAAW;IAAtB,CAAsB;CACxC,CAAC;AA2EF,SAAgB,OAAO,CACrB,QAAsC,EACtC,MAAyC;IAAzC,IAAA,WAAA,KAAA,GAAA;QAAA,SAAA,cAAyC;IAAA;IAEjC,IAAA,SAAS,GAAK,MAAM,CAAA,SAAX,CAAY;IAC7B,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAM,OAAO,GAAG,SAAS,EAAE,CAAC;QAC5B,YAAA,SAAS,CAAC,QAAQ,CAAC,mBAAA,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QACrE,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;AACL,CAAC;AAVD,QAAA,OAAA,GAAA,QAUC","debugId":null}},
    {"offset": {"line": 7332, "column": 0}, "map": {"version":3,"file":"count.js","sourceRoot":"","sources":["../../../../src/internal/operators/count.ts"],"names":[],"mappings":";;;;;AACA,IAAA,+BAAkC;AAyDlC,SAAgB,KAAK,CAAI,SAAgD;IACvE,OAAO,SAAA,MAAM,CAAC,SAAC,KAAK,EAAE,KAAK,EAAE,CAAC;QAAK,OAAA,AAAC,CAAC,SAAS,IAAI,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAAvD,CAAuD,EAAE,CAAC,CAAC,CAAC;AACjG,CAAC;AAFD,QAAA,KAAA,GAAA,MAEC","debugId":null}},
    {"offset": {"line": 7349, "column": 0}, "map": {"version":3,"file":"debounce.js","sourceRoot":"","sources":["../../../../src/internal/operators/debounce.ts"],"names":[],"mappings":";;;;;AAEA,IAAA,iCAAuC;AACvC,IAAA,iCAAoC;AACpC,IAAA,uDAAgE;AAChE,IAAA,iDAAoD;AA4DpD,SAAgB,QAAQ,CAAI,gBAAoD;IAC9E,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,SAAS,GAAa,IAAI,CAAC;QAE/B,IAAI,kBAAkB,GAA2B,IAAI,CAAC;QAEtD,IAAM,IAAI,GAAG;YAIX,kBAAkB,KAAA,QAAlB,kBAAkB,KAAA,KAAA,IAAA,KAAA,IAAlB,kBAAkB,CAAE,WAAW,EAAE,CAAC;YAClC,kBAAkB,GAAG,IAAI,CAAC;YAC1B,IAAI,QAAQ,EAAE;gBAEZ,QAAQ,GAAG,KAAK,CAAC;gBACjB,IAAM,KAAK,GAAG,SAAU,CAAC;gBACzB,SAAS,GAAG,IAAI,CAAC;gBACjB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACxB;QACH,CAAC,CAAC;QAEF,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAQ;YAIP,kBAAkB,KAAA,QAAlB,kBAAkB,KAAA,KAAA,IAAA,KAAA,IAAlB,kBAAkB,CAAE,WAAW,EAAE,CAAC;YAClC,QAAQ,GAAG,IAAI,CAAC;YAChB,SAAS,GAAG,KAAK,CAAC;YAGlB,kBAAkB,GAAG,qBAAA,wBAAwB,CAAC,UAAU,EAAE,IAAI,EAAE,OAAA,IAAI,CAAC,CAAC;YAEtE,YAAA,SAAS,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;QACnE,CAAC,EACD;YAGE,IAAI,EAAE,CAAC;YACP,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,EAED,SAAS,EACT;YAEE,SAAS,GAAG,kBAAkB,GAAG,IAAI,CAAC;QACxC,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AArDD,QAAA,QAAA,GAAA,SAqDC","debugId":null}},
    {"offset": {"line": 7393, "column": 0}, "map": {"version":3,"file":"debounceTime.js","sourceRoot":"","sources":["../../../../src/internal/operators/debounceTime.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAAoD;AAGpD,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AA0DhE,SAAgB,YAAY,CAAI,OAAe,EAAE,SAAyC;IAAzC,IAAA,cAAA,KAAA,GAAA;QAAA,YAA2B,QAAA,cAAc;IAAA;IACxF,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,UAAU,GAAwB,IAAI,CAAC;QAC3C,IAAI,SAAS,GAAa,IAAI,CAAC;QAC/B,IAAI,QAAQ,GAAkB,IAAI,CAAC;QAEnC,IAAM,IAAI,GAAG;YACX,IAAI,UAAU,EAAE;gBAEd,UAAU,CAAC,WAAW,EAAE,CAAC;gBACzB,UAAU,GAAG,IAAI,CAAC;gBAClB,IAAM,KAAK,GAAG,SAAU,CAAC;gBACzB,SAAS,GAAG,IAAI,CAAC;gBACjB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACxB;QACH,CAAC,CAAC;QACF,SAAS,YAAY;YAInB,IAAM,UAAU,GAAG,QAAS,GAAG,OAAO,CAAC;YACvC,IAAM,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC;YAC5B,IAAI,GAAG,GAAG,UAAU,EAAE;gBAEpB,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,UAAU,GAAG,GAAG,CAAC,CAAC;gBACxD,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC3B,OAAO;aACR;YAED,IAAI,EAAE,CAAC;QACT,CAAC;QAED,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAQ;YACP,SAAS,GAAG,KAAK,CAAC;YAClB,QAAQ,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC;YAG3B,IAAI,CAAC,UAAU,EAAE;gBACf,UAAU,GAAG,SAAS,CAAC,QAAQ,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;gBACvD,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;aAC5B;QACH,CAAC,EACD;YAGE,IAAI,EAAE,CAAC;YACP,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,EAED,SAAS,EACT;YAEE,SAAS,GAAG,UAAU,GAAG,IAAI,CAAC;QAChC,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AA5DD,QAAA,YAAA,GAAA,aA4DC","debugId":null}},
    {"offset": {"line": 7449, "column": 0}, "map": {"version":3,"file":"defaultIfEmpty.js","sourceRoot":"","sources":["../../../../src/internal/operators/defaultIfEmpty.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAqChE,SAAgB,cAAc,CAAO,YAAe;IAClD,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;YACJ,QAAQ,GAAG,IAAI,CAAC;YAChB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,EACD;YACE,IAAI,CAAC,QAAQ,EAAE;gBACb,UAAU,CAAC,IAAI,CAAC,YAAa,CAAC,CAAC;aAChC;YACD,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAnBD,QAAA,cAAA,GAAA,eAmBC","debugId":null}},
    {"offset": {"line": 7476, "column": 0}, "map": {"version":3,"file":"take.js","sourceRoot":"","sources":["../../../../src/internal/operators/take.ts"],"names":[],"mappings":";;;;;AACA,IAAA,yCAA4C;AAC5C,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AA4ChE,SAAgB,IAAI,CAAI,KAAa;IACnC,OAAO,KAAK,IAAI,CAAC,GAEb;QAAM,OAAA,QAAA,KAAK;IAAL,CAAK,GACX,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QACzB,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAC,KAAK;YAIzC,IAAI,EAAE,IAAI,IAAI,KAAK,EAAE;gBACnB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAIvB,IAAI,KAAK,IAAI,IAAI,EAAE;oBACjB,UAAU,CAAC,QAAQ,EAAE,CAAC;iBACvB;aACF;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC,CAAC,CAAC;AACT,CAAC;AAvBD,QAAA,IAAA,GAAA,KAuBC","debugId":null}},
    {"offset": {"line": 7505, "column": 0}, "map": {"version":3,"file":"ignoreElements.js","sourceRoot":"","sources":["../../../../src/internal/operators/ignoreElements.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAChE,IAAA,iCAAoC;AAqCpC,SAAgB,cAAc;IAC5B,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,MAAM,CAAC,SAAS,CAAC,qBAAA,wBAAwB,CAAC,UAAU,EAAE,OAAA,IAAI,CAAC,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;AACL,CAAC;AAJD,QAAA,cAAA,GAAA,eAIC","debugId":null}},
    {"offset": {"line": 7524, "column": 0}, "map": {"version":3,"file":"mapTo.js","sourceRoot":"","sources":["../../../../src/internal/operators/mapTo.ts"],"names":[],"mappings":";;;;;AACA,IAAA,yBAA4B;AA4C5B,SAAgB,KAAK,CAAI,KAAQ;IAC/B,OAAO,MAAA,GAAG,CAAC;QAAM,OAAA,KAAK;IAAL,CAAK,CAAC,CAAC;AAC1B,CAAC;AAFD,QAAA,KAAA,GAAA,MAEC","debugId":null}},
    {"offset": {"line": 7541, "column": 0}, "map": {"version":3,"file":"delayWhen.js","sourceRoot":"","sources":["../../../../src/internal/operators/delayWhen.ts"],"names":[],"mappings":";;;;;AAEA,IAAA,2CAA8C;AAC9C,IAAA,2BAA8B;AAC9B,IAAA,+CAAkD;AAClD,IAAA,6BAAgC;AAChC,IAAA,mCAAsC;AACtC,IAAA,iDAAoD;AAoFpD,SAAgB,SAAS,CACvB,qBAAwE,EACxE,iBAAmC;IAEnC,IAAI,iBAAiB,EAAE;QAErB,OAAO,SAAC,MAAqB;YAC3B,OAAA,SAAA,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAA,IAAI,CAAC,CAAC,CAAC,EAAE,iBAAA,cAAc,EAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;QAAxG,CAAwG,CAAC;KAC5G;IAED,OAAO,WAAA,QAAQ,CAAC,SAAC,KAAK,EAAE,KAAK;QAAK,OAAA,YAAA,SAAS,CAAC,qBAAqB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,OAAA,IAAI,CAAC,CAAC,CAAC,EAAE,QAAA,KAAK,CAAC,KAAK,CAAC,CAAC;IAA1E,CAA0E,CAAC,CAAC;AAChH,CAAC;AAXD,QAAA,SAAA,GAAA,UAWC","debugId":null}},
    {"offset": {"line": 7568, "column": 0}, "map": {"version":3,"file":"delay.js","sourceRoot":"","sources":["../../../../src/internal/operators/delay.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAAoD;AAEpD,IAAA,qCAAwC;AACxC,IAAA,yCAA4C;AA0D5C,SAAgB,KAAK,CAAI,GAAkB,EAAE,SAAyC;IAAzC,IAAA,cAAA,KAAA,GAAA;QAAA,YAA2B,QAAA,cAAc;IAAA;IACpF,IAAM,QAAQ,GAAG,QAAA,KAAK,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IACvC,OAAO,YAAA,SAAS,CAAC;QAAM,OAAA,QAAQ;IAAR,CAAQ,CAAC,CAAC;AACnC,CAAC;AAHD,QAAA,KAAA,GAAA,MAGC","debugId":null}},
    {"offset": {"line": 7591, "column": 0}, "map": {"version":3,"file":"dematerialize.js","sourceRoot":"","sources":["../../../../src/internal/operators/dematerialize.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,4CAAsD;AAEtD,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAkDhE,SAAgB,aAAa;IAC3B,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,MAAM,CAAC,SAAS,CAAC,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAC,YAAY;YAAK,OAAA,eAAA,mBAAmB,CAAC,YAAY,EAAE,UAAU,CAAC;QAA7C,CAA6C,CAAC,CAAC,CAAC;IAC1H,CAAC,CAAC,CAAC;AACL,CAAC;AAJD,QAAA,aAAA,GAAA,cAIC","debugId":null}},
    {"offset": {"line": 7612, "column": 0}, "map": {"version":3,"file":"distinct.js","sourceRoot":"","sources":["../../../../src/internal/operators/distinct.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAChE,IAAA,iCAAoC;AACpC,IAAA,iDAAoD;AA2DpD,SAAgB,QAAQ,CAAO,WAA6B,EAAE,OAA8B;IAC1F,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAM,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;QAC/B,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAC,KAAK;YACzC,IAAM,GAAG,GAAG,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACrD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBAC1B,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACtB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACxB;QACH,CAAC,CAAC,CACH,CAAC;QAEF,OAAO,IAAI,YAAA,SAAS,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,qBAAA,wBAAwB,CAAC,UAAU,EAAE;YAAM,OAAA,YAAY,CAAC,KAAK,EAAE;QAApB,CAAoB,EAAE,OAAA,IAAI,CAAC,CAAC,CAAC;IAClH,CAAC,CAAC,CAAC;AACL,CAAC;AAfD,QAAA,QAAA,GAAA,SAeC","debugId":null}},
    {"offset": {"line": 7642, "column": 0}, "map": {"version":3,"file":"distinctUntilChanged.js","sourceRoot":"","sources":["../../../../src/internal/operators/distinctUntilChanged.ts"],"names":[],"mappings":";;;;;AACA,IAAA,yCAA4C;AAC5C,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAuIhE,SAAgB,oBAAoB,CAClC,UAAiD,EACjD,WAA0D;IAA1D,IAAA,gBAAA,KAAA,GAAA;QAAA,cAA+B,WAAA,QAA2B;IAAA;IAK1D,UAAU,GAAG,UAAU,KAAA,QAAV,UAAU,KAAA,KAAA,IAAV,UAAU,GAAI,cAAc,CAAC;IAE1C,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAGhC,IAAI,WAAc,CAAC;QAEnB,IAAI,KAAK,GAAG,IAAI,CAAC;QAEjB,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAC,KAAK;YAEzC,IAAM,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;YAKtC,IAAI,KAAK,IAAI,CAAC,UAAW,CAAC,WAAW,EAAE,UAAU,CAAC,EAAE;gBAMlD,KAAK,GAAG,KAAK,CAAC;gBACd,WAAW,GAAG,UAAU,CAAC;gBAGzB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACxB;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAvCD,QAAA,oBAAA,GAAA,qBAuCC;AAED,SAAS,cAAc,CAAC,CAAM,EAAE,CAAM;IACpC,OAAO,CAAC,KAAK,CAAC,CAAC;AACjB,CAAC","debugId":null}},
    {"offset": {"line": 7677, "column": 0}, "map": {"version":3,"file":"distinctUntilKeyChanged.js","sourceRoot":"","sources":["../../../../src/internal/operators/distinctUntilKeyChanged.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,2DAA8D;AAqE9D,SAAgB,uBAAuB,CACrC,GAAM,EACN,OAAuC;IAEvC,OAAO,uBAAA,oBAAoB,CAAC,SAAC,CAAI,EAAE,CAAI;QAAK,OAAA,AAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;IAAvD,CAAuD,CAAC,CAAC;AACvG,CAAC;AALD,QAAA,uBAAA,GAAA,wBAKC","debugId":null}},
    {"offset": {"line": 7694, "column": 0}, "map": {"version":3,"file":"throwIfEmpty.js","sourceRoot":"","sources":["../../../../src/internal/operators/throwIfEmpty.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,6CAAgD;AAEhD,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAsChE,SAAgB,YAAY,CAAI,YAA6C;IAA7C,IAAA,iBAAA,KAAA,GAAA;QAAA,eAAA,mBAA6C;IAAA;IAC3E,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;YACJ,QAAQ,GAAG,IAAI,CAAC;YAChB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,EACD;YAAM,OAAA,AAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;QAArE,CAAqE,CAC5E,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAdD,QAAA,YAAA,GAAA,aAcC;AAED,SAAS,mBAAmB;IAC1B,OAAO,IAAI,aAAA,UAAU,EAAE,CAAC;AAC1B,CAAC","debugId":null}},
    {"offset": {"line": 7725, "column": 0}, "map": {"version":3,"file":"elementAt.js","sourceRoot":"","sources":["../../../../src/internal/operators/elementAt.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,uEAA0E;AAG1E,IAAA,+BAAkC;AAClC,IAAA,2CAA8C;AAC9C,IAAA,+CAAkD;AAClD,IAAA,2BAA8B;AAkD9B,SAAgB,SAAS,CAAW,KAAa,EAAE,YAAgB;IACjE,IAAI,KAAK,GAAG,CAAC,EAAE;QACb,MAAM,IAAI,0BAAA,uBAAuB,EAAE,CAAC;KACrC;IACD,IAAM,eAAe,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC;IAC9C,OAAO,SAAC,MAAqB;QAC3B,OAAA,MAAM,CAAC,IAAI,CACT,SAAA,MAAM,CAAC,SAAC,CAAC,EAAE,CAAC;YAAK,OAAA,CAAC,KAAK,KAAK;QAAX,CAAW,CAAC,EAC7B,OAAA,IAAI,CAAC,CAAC,CAAC,EACP,eAAe,CAAC,CAAC,CAAC,iBAAA,cAAc,CAAC,YAAa,CAAC,CAAC,CAAC,CAAC,eAAA,YAAY,CAAC;YAAM,OAAA,IAAI,0BAAA,uBAAuB,EAAE;QAA7B,CAA6B,CAAC,CACpG;IAJD,CAIC,CAAC;AACN,CAAC;AAXD,QAAA,SAAA,GAAA,UAWC","debugId":null}},
    {"offset": {"line": 7754, "column": 0}, "map": {"version":3,"file":"endWith.js","sourceRoot":"","sources":["../../../../src/internal/operators/endWith.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAA,2CAA8C;AAC9C,IAAA,mCAAsC;AA8DtC,SAAgB,OAAO;IAAI,IAAA,SAAA,EAAA,CAAmC;QAAnC,IAAA,KAAA,CAAmC,EAAnC,KAAA,UAAA,MAAmC,EAAnC,IAAmC,CAAA;QAAnC,MAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAmC;;IAC5D,OAAO,SAAC,MAAqB;QAAK,OAAA,SAAA,MAAM,CAAC,MAAM,EAAE,KAAA,EAAE,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA,EAAA,EAAA,OAAI,MAAM,IAAmB;IAA9C,CAA8C,CAAC;AACnF,CAAC;AAFD,QAAA,OAAA,GAAA,QAEC","debugId":null}},
    {"offset": {"line": 7799, "column": 0}, "map": {"version":3,"file":"every.js","sourceRoot":"","sources":["../../../../src/internal/operators/every.ts"],"names":[],"mappings":";;;;;AAEA,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAwChE,SAAgB,KAAK,CACnB,SAAsE,EACtE,OAAa;IAEb,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;YACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,MAAM,CAAC,EAAE;gBACpD,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACvB,UAAU,CAAC,QAAQ,EAAE,CAAC;aACvB;QACH,CAAC,EACD;YACE,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAtBD,QAAA,KAAA,GAAA,MAsBC","debugId":null}},
    {"offset": {"line": 7826, "column": 0}, "map": {"version":3,"file":"exhaustMap.js","sourceRoot":"","sources":["../../../../src/internal/operators/exhaustMap.ts"],"names":[],"mappings":";;;;;AAGA,IAAA,yBAA4B;AAC5B,IAAA,iDAAoD;AACpD,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AA6DhE,SAAgB,UAAU,CACxB,OAAuC,EACvC,cAA6G;IAE7G,IAAI,cAAc,EAAE;QAElB,OAAO,SAAC,MAAqB;YAC3B,OAAA,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,SAAC,CAAC,EAAE,CAAC;gBAAK,OAAA,YAAA,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAA,GAAG,CAAC,SAAC,CAAM,EAAE,EAAO;oBAAK,OAAA,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBAA3B,CAA2B,CAAC,CAAC;YAApF,CAAoF,CAAC,CAAC;QAAvH,CAAuH,CAAC;KAC3H;IACD,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,QAAQ,GAAyB,IAAI,CAAC;QAC1C,IAAI,UAAU,GAAG,KAAK,CAAC;QACvB,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,UAAU;YACT,IAAI,CAAC,QAAQ,EAAE;gBACb,QAAQ,GAAG,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAS,EAAE;oBACzD,QAAQ,GAAG,IAAI,CAAC;oBAChB,UAAU,IAAI,UAAU,CAAC,QAAQ,EAAE,CAAC;gBACtC,CAAC,CAAC,CAAC;gBACH,YAAA,SAAS,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;aAC7D;QACH,CAAC,EACD;YACE,UAAU,GAAG,IAAI,CAAC;YAClB,CAAC,QAAQ,IAAI,UAAU,CAAC,QAAQ,EAAE,CAAC;QACrC,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAhCD,QAAA,UAAA,GAAA,WAgCC","debugId":null}},
    {"offset": {"line": 7869, "column": 0}, "map": {"version":3,"file":"exhaustAll.js","sourceRoot":"","sources":["../../../../src/internal/operators/exhaustAll.ts"],"names":[],"mappings":";;;;;AACA,IAAA,uCAA0C;AAC1C,IAAA,yCAA4C;AA8C5C,SAAgB,UAAU;IACxB,OAAO,aAAA,UAAU,CAAC,WAAA,QAAQ,CAAC,CAAC;AAC9B,CAAC;AAFD,QAAA,UAAA,GAAA,WAEC","debugId":null}},
    {"offset": {"line": 7885, "column": 0}, "map": {"version":3,"file":"exhaust.js","sourceRoot":"","sources":["../../../../src/internal/operators/exhaust.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,uCAA0C;AAK7B,QAAA,OAAO,GAAG,aAAA,UAAU,CAAC","debugId":null}},
    {"offset": {"line": 7897, "column": 0}, "map": {"version":3,"file":"expand.js","sourceRoot":"","sources":["../../../../src/internal/operators/expand.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,+CAAkD;AAsElD,SAAgB,MAAM,CACpB,OAAuC,EACvC,UAAqB,EACrB,SAAyB;IADzB,IAAA,eAAA,KAAA,GAAA;QAAA,aAAA,QAAqB;IAAA;IAGrB,UAAU,GAAG,CAAC,UAAU,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC;IAC3D,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,OAAA,iBAAA,cAAc,CAEZ,MAAM,EACN,UAAU,EACV,OAAO,EACP,UAAU,EAGV,SAAS,EAGT,IAAI,EACJ,SAAS,CACV;IAbD,CAaC,CACF,CAAC;AACJ,CAAC;AAtBD,QAAA,MAAA,GAAA,OAsBC","debugId":null}},
    {"offset": {"line": 7919, "column": 0}, "map": {"version":3,"file":"finalize.js","sourceRoot":"","sources":["../../../../src/internal/operators/finalize.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iCAAuC;AA+DvC,SAAgB,QAAQ,CAAI,QAAoB;IAC9C,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAGhC,IAAI;YACF,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;SAC9B,QAAS;YACR,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SAC1B;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAVD,QAAA,QAAA,GAAA,SAUC","debugId":null}},
    {"offset": {"line": 7940, "column": 0}, "map": {"version":3,"file":"find.js","sourceRoot":"","sources":["../../../../src/internal/operators/find.ts"],"names":[],"mappings":";;;;;AAGA,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AA2DhE,SAAgB,IAAI,CAClB,SAAsE,EACtE,OAAa;IAEb,OAAO,OAAA,OAAO,CAAC,UAAU,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;AAC1D,CAAC;AALD,QAAA,IAAA,GAAA,KAKC;AAED,SAAgB,UAAU,CACxB,SAAsE,EACtE,OAAY,EACZ,IAAuB;IAEvB,IAAM,SAAS,GAAG,IAAI,KAAK,OAAO,CAAC;IACnC,OAAO,SAAC,MAAqB,EAAE,UAA2B;QACxD,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;YACJ,IAAM,CAAC,GAAG,KAAK,EAAE,CAAC;YAClB,IAAI,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE;gBAC7C,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;gBACvC,UAAU,CAAC,QAAQ,EAAE,CAAC;aACvB;QACH,CAAC,EACD;YACE,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YAC5C,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AAzBD,QAAA,UAAA,GAAA,WAyBC","debugId":null}},
    {"offset": {"line": 7973, "column": 0}, "map": {"version":3,"file":"findIndex.js","sourceRoot":"","sources":["../../../../src/internal/operators/findIndex.ts"],"names":[],"mappings":";;;;;AAEA,IAAA,iCAAuC;AACvC,IAAA,2BAAoC;AAsDpC,SAAgB,SAAS,CACvB,SAAsE,EACtE,OAAa;IAEb,OAAO,OAAA,OAAO,CAAC,OAAA,UAAU,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;AAC1D,CAAC;AALD,QAAA,SAAA,GAAA,UAKC","debugId":null}},
    {"offset": {"line": 7989, "column": 0}, "map": {"version":3,"file":"first.js","sourceRoot":"","sources":["../../../../src/internal/operators/first.ts"],"names":[],"mappings":";;;;;AACA,IAAA,6CAAgD;AAEhD,IAAA,+BAAkC;AAClC,IAAA,2BAA8B;AAC9B,IAAA,+CAAkD;AAClD,IAAA,2CAA8C;AAC9C,IAAA,yCAA4C;AA0E5C,SAAgB,KAAK,CACnB,SAAgF,EAChF,YAAgB;IAEhB,IAAM,eAAe,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC;IAC9C,OAAO,SAAC,MAAqB;QAC3B,OAAA,MAAM,CAAC,IAAI,CACT,SAAS,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,SAAC,CAAC,EAAE,CAAC;YAAK,OAAA,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;QAAvB,CAAuB,CAAC,CAAC,CAAC,CAAC,WAAA,QAAQ,EAChE,OAAA,IAAI,CAAC,CAAC,CAAC,EACP,eAAe,CAAC,CAAC,CAAC,iBAAA,cAAc,CAAC,YAAa,CAAC,CAAC,CAAC,CAAC,eAAA,YAAY,CAAC;YAAM,OAAA,IAAI,aAAA,UAAU,EAAE;QAAhB,CAAgB,CAAC,CACvF;IAJD,CAIC,CAAC;AACN,CAAC;AAXD,QAAA,KAAA,GAAA,MAWC","debugId":null}},
    {"offset": {"line": 8016, "column": 0}, "map": {"version":3,"file":"groupBy.js","sourceRoot":"","sources":["../../../../src/internal/operators/groupBy.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8099, "column": 0}, "map": {"version":3,"file":"isEmpty.js","sourceRoot":"","sources":["../../../../src/internal/operators/isEmpty.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AA+DhE,SAAgB,OAAO;IACrB,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV;YACE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvB,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,EACD;YACE,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAhBD,QAAA,OAAA,GAAA,QAgBC","debugId":null}},
    {"offset": {"line": 8123, "column": 0}, "map": {"version":3,"file":"takeLast.js","sourceRoot":"","sources":["../../../../src/internal/operators/takeLast.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,yCAA4C;AAE5C,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAyChE,SAAgB,QAAQ,CAAI,KAAa;IACvC,OAAO,KAAK,IAAI,CAAC,GACb;QAAM,OAAA,QAAA,KAAK;IAAL,CAAK,GACX,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAKzB,IAAI,MAAM,GAAQ,EAAE,CAAC;QACrB,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;YAEJ,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAGnB,KAAK,GAAG,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1C,CAAC,EACD;;;gBAGE,IAAoB,IAAA,WAAA,SAAA,MAAM,CAAA,EAAA,aAAA,SAAA,IAAA,EAAA,EAAA,CAAA,WAAA,IAAA,EAAA,aAAA,SAAA,IAAA,GAAE;oBAAvB,IAAM,KAAK,GAAA,WAAA,KAAA;oBACd,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACxB;;;;;;;;;;;;YACD,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,EAED,SAAS,EACT;YAEE,MAAM,GAAG,IAAK,CAAC;QACjB,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACT,CAAC;AApCD,QAAA,QAAA,GAAA,SAoCC","debugId":null}},
    {"offset": {"line": 8183, "column": 0}, "map": {"version":3,"file":"last.js","sourceRoot":"","sources":["../../../../src/internal/operators/last.ts"],"names":[],"mappings":";;;;;AACA,IAAA,6CAAgD;AAEhD,IAAA,+BAAkC;AAClC,IAAA,mCAAsC;AACtC,IAAA,2CAA8C;AAC9C,IAAA,+CAAkD;AAClD,IAAA,yCAA4C;AAwE5C,SAAgB,IAAI,CAClB,SAAgF,EAChF,YAAgB;IAEhB,IAAM,eAAe,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC;IAC9C,OAAO,SAAC,MAAqB;QAC3B,OAAA,MAAM,CAAC,IAAI,CACT,SAAS,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,SAAC,CAAC,EAAE,CAAC;YAAK,OAAA,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;QAAvB,CAAuB,CAAC,CAAC,CAAC,CAAC,WAAA,QAAQ,EAChE,WAAA,QAAQ,CAAC,CAAC,CAAC,EACX,eAAe,CAAC,CAAC,CAAC,iBAAA,cAAc,CAAC,YAAa,CAAC,CAAC,CAAC,CAAC,eAAA,YAAY,CAAC;YAAM,OAAA,IAAI,aAAA,UAAU,EAAE;QAAhB,CAAgB,CAAC,CACvF;IAJD,CAIC,CAAC;AACN,CAAC;AAXD,QAAA,IAAA,GAAA,KAWC","debugId":null}},
    {"offset": {"line": 8210, "column": 0}, "map": {"version":3,"file":"materialize.js","sourceRoot":"","sources":["../../../../src/internal/operators/materialize.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,4CAA+C;AAE/C,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAkDhE,SAAgB,WAAW;IACzB,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;YACJ,UAAU,CAAC,IAAI,CAAC,eAAA,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;QAClD,CAAC,EACD;YACE,UAAU,CAAC,IAAI,CAAC,eAAA,YAAY,CAAC,cAAc,EAAE,CAAC,CAAC;YAC/C,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,EACD,SAAC,GAAG;YACF,UAAU,CAAC,IAAI,CAAC,eAAA,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/C,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAnBD,QAAA,WAAA,GAAA,YAmBC","debugId":null}},
    {"offset": {"line": 8237, "column": 0}, "map": {"version":3,"file":"max.js","sourceRoot":"","sources":["../../../../src/internal/operators/max.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,+BAAkC;AAElC,IAAA,6CAAgD;AAiDhD,SAAgB,GAAG,CAAI,QAAiC;IACtD,OAAO,SAAA,MAAM,CAAC,aAAA,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAC,CAAC,EAAE,CAAC;QAAK,OAAA,AAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAA5B,CAA4B,CAAC,CAAC,CAAC,SAAC,CAAC,EAAE,CAAC;QAAK,OAAA,AAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAAf,CAAe,CAAC,CAAC;AAC3G,CAAC;AAFD,QAAA,GAAA,GAAA,IAEC","debugId":null}},
    {"offset": {"line": 8257, "column": 0}, "map": {"version":3,"file":"flatMap.js","sourceRoot":"","sources":["../../../../src/internal/operators/flatMap.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,mCAAsC;AAKzB,QAAA,OAAO,GAAG,WAAA,QAAQ,CAAC","debugId":null}},
    {"offset": {"line": 8269, "column": 0}, "map": {"version":3,"file":"mergeMapTo.js","sourceRoot":"","sources":["../../../../src/internal/operators/mergeMapTo.ts"],"names":[],"mappings":";;;;;AACA,IAAA,mCAAsC;AACtC,IAAA,6CAAgD;AA2DhD,SAAgB,UAAU,CACxB,eAAkB,EAClB,cAAwH,EACxH,UAA6B;IAA7B,IAAA,eAAA,KAAA,GAAA;QAAA,aAAA,QAA6B;IAAA;IAE7B,IAAI,aAAA,UAAU,CAAC,cAAc,CAAC,EAAE;QAC9B,OAAO,WAAA,QAAQ,CAAC;YAAM,OAAA,eAAe;QAAf,CAAe,EAAE,cAAc,EAAE,UAAU,CAAC,CAAC;KACpE;IACD,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE;QACtC,UAAU,GAAG,cAAc,CAAC;KAC7B;IACD,OAAO,WAAA,QAAQ,CAAC;QAAM,OAAA,eAAe;IAAf,CAAe,EAAE,UAAU,CAAC,CAAC;AACrD,CAAC;AAZD,QAAA,UAAA,GAAA,WAYC","debugId":null}},
    {"offset": {"line": 8298, "column": 0}, "map": {"version":3,"file":"mergeScan.js","sourceRoot":"","sources":["../../../../src/internal/operators/mergeScan.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,+CAAkD;AAmElD,SAAgB,SAAS,CACvB,WAAoE,EACpE,IAAO,EACP,UAAqB;IAArB,IAAA,eAAA,KAAA,GAAA;QAAA,aAAA,QAAqB;IAAA;IAErB,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAEhC,IAAI,KAAK,GAAG,IAAI,CAAC;QAEjB,OAAO,iBAAA,cAAc,CACnB,MAAM,EACN,UAAU,EACV,SAAC,KAAK,EAAE,KAAK;YAAK,OAAA,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;QAAhC,CAAgC,EAClD,UAAU,EACV,SAAC,KAAK;YACJ,KAAK,GAAG,KAAK,CAAC;QAChB,CAAC,EACD,KAAK,EACL,SAAS,EACT;YAAM,OAAA,AAAC,KAAK,GAAG,IAAK,CAAC;QAAf,CAAe,CACtB,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAtBD,QAAA,SAAA,GAAA,UAsBC","debugId":null}},
    {"offset": {"line": 8326, "column": 0}, "map": {"version":3,"file":"merge.js","sourceRoot":"","sources":["../../../../src/internal/operators/merge.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,mCAAsC;AACtC,IAAA,iCAAuD;AACvD,IAAA,uCAA0C;AAiB1C,SAAgB,KAAK;IAAI,IAAA,OAAA,EAAA,CAAkB;QAAlB,IAAA,KAAA,CAAkB,EAAlB,KAAA,UAAA,MAAkB,EAAlB,IAAkB,CAAA;QAAlB,IAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAkB;;IACzC,IAAM,SAAS,GAAG,OAAA,YAAY,CAAC,IAAI,CAAC,CAAC;IACrC,IAAM,UAAU,GAAG,OAAA,SAAS,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAE7C,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,WAAA,QAAQ,CAAC,UAAU,CAAC,CAAC,OAAA,IAAI,CAAA,cAAA;YAAE,MAAM;SAAA,EAAA,OAAM,IAA6B,IAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IAC3G,CAAC,CAAC,CAAC;AACL,CAAC;AAPD,QAAA,KAAA,GAAA,MAOC","debugId":null}},
    {"offset": {"line": 8377, "column": 0}, "map": {"version":3,"file":"mergeWith.js","sourceRoot":"","sources":["../../../../src/internal/operators/mergeWith.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,6BAAgC;AA2ChC,SAAgB,SAAS;IACvB,IAAA,eAAA,EAAA,CAA6C;QAA7C,IAAA,KAAA,CAA6C,EAA7C,KAAA,UAAA,MAA6C,EAA7C,IAA6C,CAAA;QAA7C,YAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAA6C;;IAE7C,OAAO,QAAA,KAAK,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA,EAAA,EAAA,OAAI,YAAY,IAAE;AAChC,CAAC;AAJD,QAAA,SAAA,GAAA,UAIC","debugId":null}},
    {"offset": {"line": 8419, "column": 0}, "map": {"version":3,"file":"min.js","sourceRoot":"","sources":["../../../../src/internal/operators/min.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,+BAAkC;AAElC,IAAA,6CAAgD;AAiDhD,SAAgB,GAAG,CAAI,QAAiC;IACtD,OAAO,SAAA,MAAM,CAAC,aAAA,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAC,CAAC,EAAE,CAAC;QAAK,OAAA,AAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAA5B,CAA4B,CAAC,CAAC,CAAC,SAAC,CAAC,EAAE,CAAC;QAAK,OAAA,AAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAAf,CAAe,CAAC,CAAC;AAC3G,CAAC;AAFD,QAAA,GAAA,GAAA,IAEC","debugId":null}},
    {"offset": {"line": 8439, "column": 0}, "map": {"version":3,"file":"multicast.js","sourceRoot":"","sources":["../../../../src/internal/operators/multicast.ts"],"names":[],"mappings":";;;;;AAEA,IAAA,yEAA4E;AAE5E,IAAA,6CAAgD;AAChD,IAAA,iCAAoC;AA4EpC,SAAgB,SAAS,CACvB,uBAAwD,EACxD,QAAmD;IAEnD,IAAM,cAAc,GAAG,aAAA,UAAU,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC;QAAM,OAAA,uBAAuB;IAAvB,CAAuB,CAAC;IAErH,IAAI,aAAA,UAAU,CAAC,QAAQ,CAAC,EAAE;QAIxB,OAAO,UAAA,OAAO,CAAC,QAAQ,EAAE;YACvB,SAAS,EAAE,cAAc;SAC1B,CAAC,CAAC;KACJ;IAED,OAAO,SAAC,MAAqB;QAAK,OAAA,IAAI,wBAAA,qBAAqB,CAAM,MAAM,EAAE,cAAc,CAAC;IAAtD,CAAsD,CAAC;AAC3F,CAAC;AAhBD,QAAA,SAAA,GAAA,UAgBC","debugId":null}},
    {"offset": {"line": 8466, "column": 0}, "map": {"version":3,"file":"onErrorResumeNextWith.js","sourceRoot":"","sources":["../../../../src/internal/operators/onErrorResumeNextWith.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,qDAAwD;AACxD,IAAA,iEAAkF;AAiFlF,SAAgB,qBAAqB;IACnC,IAAA,UAAA,EAAA,CAAyE;QAAzE,IAAA,KAAA,CAAyE,EAAzE,KAAA,UAAA,MAAyE,EAAzE,IAAyE,CAAA;QAAzE,OAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAyE;;IAMzE,IAAM,WAAW,GAAG,iBAAA,cAAc,CAAC,OAAO,CAAuC,CAAC;IAElF,OAAO,SAAC,MAAM;QAAK,OAAA,oBAAA,iBAAU,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA;YAAC,MAAM;SAAA,EAAA,OAAK,WAAW;IAAjC,CAAkC,CAAC;AACxD,CAAC;AAVD,QAAA,qBAAA,GAAA,sBAUC;AAKY,QAAA,iBAAiB,GAAG,qBAAqB,CAAC","debugId":null}},
    {"offset": {"line": 8515, "column": 0}, "map": {"version":3,"file":"pairwise.js","sourceRoot":"","sources":["../../../../src/internal/operators/pairwise.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AA6ChE,SAAgB,QAAQ;IACtB,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,IAAO,CAAC;QACZ,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAC,KAAK;YACzC,IAAM,CAAC,GAAG,IAAI,CAAC;YACf,IAAI,GAAG,KAAK,CAAC;YACb,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC;gBAAC,CAAC;gBAAE,KAAK;aAAC,CAAC,CAAC;YACvC,OAAO,GAAG,IAAI,CAAC;QACjB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAbD,QAAA,QAAA,GAAA,SAaC","debugId":null}},
    {"offset": {"line": 8543, "column": 0}, "map": {"version":3,"file":"pluck.js","sourceRoot":"","sources":["../../../../src/internal/operators/pluck.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,yBAA4B;AAwF5B,SAAgB,KAAK;IAAO,IAAA,aAAA,EAAA,CAA8C;QAA9C,IAAA,KAAA,CAA8C,EAA9C,KAAA,UAAA,MAA8C,EAA9C,IAA8C,CAAA;QAA9C,UAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAA8C;;IACxE,IAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;IACjC,IAAI,MAAM,KAAK,CAAC,EAAE;QAChB,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;KACxD;IACD,OAAO,MAAA,GAAG,CAAC,SAAC,CAAC;QACX,IAAI,WAAW,GAAQ,CAAC,CAAC;QACzB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAE;YAC/B,IAAM,CAAC,GAAG,WAAW,KAAA,QAAX,WAAW,KAAA,KAAA,IAAA,KAAA,IAAX,WAAW,CAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,OAAO,CAAC,KAAK,WAAW,EAAE;gBAC5B,WAAW,GAAG,CAAC,CAAC;aACjB,MAAM;gBACL,OAAO,SAAS,CAAC;aAClB;SACF;QACD,OAAO,WAAW,CAAC;IACrB,CAAC,CAAC,CAAC;AACL,CAAC;AAjBD,QAAA,KAAA,GAAA,MAiBC","debugId":null}},
    {"offset": {"line": 8577, "column": 0}, "map": {"version":3,"file":"publish.js","sourceRoot":"","sources":["../../../../src/internal/operators/publish.ts"],"names":[],"mappings":";;;;;AACA,IAAA,kCAAqC;AACrC,IAAA,qCAAwC;AAGxC,IAAA,iCAAoC;AAqFpC,SAAgB,OAAO,CAAO,QAAiC;IAC7D,OAAO,QAAQ,CAAC,CAAC,CAAC,SAAC,MAAM;QAAK,OAAA,UAAA,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;IAAzB,CAAyB,CAAC,CAAC,CAAC,SAAC,MAAM;QAAK,OAAA,YAAA,SAAS,CAAC,IAAI,UAAA,OAAO,EAAK,CAAC,CAAC,MAAM,CAAC;IAAnC,CAAmC,CAAC;AAC5G,CAAC;AAFD,QAAA,OAAA,GAAA,QAEC","debugId":null}},
    {"offset": {"line": 8598, "column": 0}, "map": {"version":3,"file":"publishBehavior.js","sourceRoot":"","sources":["../../../../src/internal/operators/publishBehavior.ts"],"names":[],"mappings":";;;;;AACA,IAAA,kDAAqD;AACrD,IAAA,yEAA4E;AAiB5E,SAAgB,eAAe,CAAI,YAAe;IAEhD,OAAO,SAAC,MAAM;QACZ,IAAM,OAAO,GAAG,IAAI,kBAAA,eAAe,CAAI,YAAY,CAAC,CAAC;QACrD,OAAO,IAAI,wBAAA,qBAAqB,CAAC,MAAM,EAAE;YAAM,OAAA,OAAO;QAAP,CAAO,CAAC,CAAC;IAC1D,CAAC,CAAC;AACJ,CAAC;AAND,QAAA,eAAA,GAAA,gBAMC","debugId":null}},
    {"offset": {"line": 8619, "column": 0}, "map": {"version":3,"file":"publishLast.js","sourceRoot":"","sources":["../../../../src/internal/operators/publishLast.ts"],"names":[],"mappings":";;;;;AACA,IAAA,4CAA+C;AAC/C,IAAA,yEAA4E;AAmE5E,SAAgB,WAAW;IAEzB,OAAO,SAAC,MAAM;QACZ,IAAM,OAAO,GAAG,IAAI,eAAA,YAAY,EAAK,CAAC;QACtC,OAAO,IAAI,wBAAA,qBAAqB,CAAC,MAAM,EAAE;YAAM,OAAA,OAAO;QAAP,CAAO,CAAC,CAAC;IAC1D,CAAC,CAAC;AACJ,CAAC;AAND,QAAA,WAAA,GAAA,YAMC","debugId":null}},
    {"offset": {"line": 8640, "column": 0}, "map": {"version":3,"file":"publishReplay.js","sourceRoot":"","sources":["../../../../src/internal/operators/publishReplay.ts"],"names":[],"mappings":";;;;;AACA,IAAA,8CAAiD;AACjD,IAAA,qCAAwC;AAExC,IAAA,6CAAgD;AA8EhD,SAAgB,aAAa,CAC3B,UAAmB,EACnB,UAAmB,EACnB,mBAAgE,EAChE,iBAAqC;IAErC,IAAI,mBAAmB,IAAI,CAAC,aAAA,UAAU,CAAC,mBAAmB,CAAC,EAAE;QAC3D,iBAAiB,GAAG,mBAAmB,CAAC;KACzC;IACD,IAAM,QAAQ,GAAG,aAAA,UAAU,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,SAAS,CAAC;IAGnF,OAAO,SAAC,MAAqB;QAAK,OAAA,YAAA,SAAS,CAAC,IAAI,gBAAA,aAAa,CAAI,UAAU,EAAE,UAAU,EAAE,iBAAiB,CAAC,EAAE,QAAS,CAAC,CAAC,MAAM,CAAC;IAA7F,CAA6F,CAAC;AAClI,CAAC;AAbD,QAAA,aAAA,GAAA,cAaC","debugId":null}},
    {"offset": {"line": 8663, "column": 0}, "map": {"version":3,"file":"raceWith.js","sourceRoot":"","sources":["../../../../src/internal/operators/raceWith.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,uCAA8C;AAC9C,IAAA,iCAAuC;AACvC,IAAA,yCAA4C;AA4B5C,SAAgB,QAAQ;IACtB,IAAA,eAAA,EAAA,CAA6C;QAA7C,IAAA,KAAA,CAA6C,EAA7C,KAAA,UAAA,MAA6C,EAA7C,IAA6C,CAAA;QAA7C,YAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAA6C;;IAE7C,OAAO,CAAC,YAAY,CAAC,MAAM,GACvB,WAAA,QAAQ,GACR,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QACzB,OAAA,QAAQ,CAAA,cAAA;YAAiB,MAAM;SAAA,EAAA,OAAK,YAAY,GAAE,CAAC,UAAU,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;AACT,CAAC;AARD,QAAA,QAAA,GAAA,SAQC","debugId":null}},
    {"offset": {"line": 8711, "column": 0}, "map": {"version":3,"file":"repeat.js","sourceRoot":"","sources":["../../../../src/internal/operators/repeat.ts"],"names":[],"mappings":";;;;;AACA,IAAA,yCAA4C;AAC5C,IAAA,iCAAuC;AAEvC,IAAA,uDAAgE;AAChE,IAAA,iDAAoD;AACpD,IAAA,yCAA4C;AA6G5C,SAAgB,MAAM,CAAI,aAAqC;;IAC7D,IAAI,KAAK,GAAG,QAAQ,CAAC;IACrB,IAAI,KAA4B,CAAC;IAEjC,IAAI,aAAa,IAAI,IAAI,EAAE;QACzB,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;YAClC,KAA4B,aAAa,CAAA,KAAzB,EAAhB,KAAK,GAAA,OAAA,KAAA,IAAG,QAAQ,GAAA,EAAA,EAAE,KAAK,GAAK,aAAa,CAAA,KAAlB,CAAmB,CAAC;SAC/C,MAAM;YACL,KAAK,GAAG,aAAa,CAAC;SACvB;KACF;IAED,OAAO,KAAK,IAAI,CAAC,GACb;QAAM,OAAA,QAAA,KAAK;IAAL,CAAK,GACX,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QACzB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,SAA8B,CAAC;QAEnC,IAAM,WAAW,GAAG;YAClB,SAAS,KAAA,QAAT,SAAS,KAAA,KAAA,IAAA,KAAA,IAAT,SAAS,CAAE,WAAW,EAAE,CAAC;YACzB,SAAS,GAAG,IAAI,CAAC;YACjB,IAAI,KAAK,IAAI,IAAI,EAAE;gBACjB,IAAM,QAAQ,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAA,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAA,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;gBACpF,IAAM,oBAAkB,GAAG,qBAAA,wBAAwB,CAAC,UAAU,EAAE;oBAC9D,oBAAkB,CAAC,WAAW,EAAE,CAAC;oBACjC,iBAAiB,EAAE,CAAC;gBACtB,CAAC,CAAC,CAAC;gBACH,QAAQ,CAAC,SAAS,CAAC,oBAAkB,CAAC,CAAC;aACxC,MAAM;gBACL,iBAAiB,EAAE,CAAC;aACrB;QACH,CAAC,CAAC;QAEF,IAAM,iBAAiB,GAAG;YACxB,IAAI,SAAS,GAAG,KAAK,CAAC;YACtB,SAAS,GAAG,MAAM,CAAC,SAAS,CAC1B,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAS,EAAE;gBAC9C,IAAI,EAAE,KAAK,GAAG,KAAK,EAAE;oBACnB,IAAI,SAAS,EAAE;wBACb,WAAW,EAAE,CAAC;qBACf,MAAM;wBACL,SAAS,GAAG,IAAI,CAAC;qBAClB;iBACF,MAAM;oBACL,UAAU,CAAC,QAAQ,EAAE,CAAC;iBACvB;YACH,CAAC,CAAC,CACH,CAAC;YAEF,IAAI,SAAS,EAAE;gBACb,WAAW,EAAE,CAAC;aACf;QACH,CAAC,CAAC;QAEF,iBAAiB,EAAE,CAAC;IACtB,CAAC,CAAC,CAAC;AACT,CAAC;AAxDD,QAAA,MAAA,GAAA,OAwDC","debugId":null}},
    {"offset": {"line": 8777, "column": 0}, "map": {"version":3,"file":"repeatWhen.js","sourceRoot":"","sources":["../../../../src/internal/operators/repeatWhen.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iDAAoD;AACpD,IAAA,kCAAqC;AAIrC,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAoChE,SAAgB,UAAU,CAAI,QAAmE;IAC/F,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,QAA6B,CAAC;QAClC,IAAI,SAAS,GAAG,KAAK,CAAC;QACtB,IAAI,YAA2B,CAAC;QAChC,IAAI,kBAAkB,GAAG,KAAK,CAAC;QAC/B,IAAI,cAAc,GAAG,KAAK,CAAC;QAK3B,IAAM,aAAa,GAAG;YAAM,OAAA,cAAc,IAAI,kBAAkB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC;QAArE,CAAqE,CAAC;QAKlG,IAAM,oBAAoB,GAAG;YAC3B,IAAI,CAAC,YAAY,EAAE;gBACjB,YAAY,GAAG,IAAI,UAAA,OAAO,EAAE,CAAC;gBAI7B,YAAA,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CACzC,qBAAA,wBAAwB,CACtB,UAAU,EACV;oBACE,IAAI,QAAQ,EAAE;wBACZ,sBAAsB,EAAE,CAAC;qBAC1B,MAAM;wBAKL,SAAS,GAAG,IAAI,CAAC;qBAClB;gBACH,CAAC,EACD;oBACE,kBAAkB,GAAG,IAAI,CAAC;oBAC1B,aAAa,EAAE,CAAC;gBAClB,CAAC,CACF,CACF,CAAC;aACH;YACD,OAAO,YAAY,CAAC;QACtB,CAAC,CAAC;QAEF,IAAM,sBAAsB,GAAG;YAC7B,cAAc,GAAG,KAAK,CAAC;YAEvB,QAAQ,GAAG,MAAM,CAAC,SAAS,CACzB,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAS,EAAE;gBAC9C,cAAc,GAAG,IAAI,CAAC;gBAMtB,CAAC,aAAa,EAAE,IAAI,oBAAoB,EAAE,CAAC,IAAI,EAAE,CAAC;YACpD,CAAC,CAAC,CACH,CAAC;YAEF,IAAI,SAAS,EAAE;gBAKb,QAAQ,CAAC,WAAW,EAAE,CAAC;gBAIvB,QAAQ,GAAG,IAAI,CAAC;gBAEhB,SAAS,GAAG,KAAK,CAAC;gBAElB,sBAAsB,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC;QAGF,sBAAsB,EAAE,CAAC;IAC3B,CAAC,CAAC,CAAC;AACL,CAAC;AAjFD,QAAA,UAAA,GAAA,WAiFC","debugId":null}},
    {"offset": {"line": 8834, "column": 0}, "map": {"version":3,"file":"retry.js","sourceRoot":"","sources":["../../../../src/internal/operators/retry.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iCAAuC;AAEvC,IAAA,uDAAgE;AAChE,IAAA,yCAA4C;AAC5C,IAAA,yCAA4C;AAC5C,IAAA,iDAAoD;AA6EpD,SAAgB,KAAK,CAAI,aAA8C;IAA9C,IAAA,kBAAA,KAAA,GAAA;QAAA,gBAAA,QAA8C;IAAA;IACrE,IAAI,MAAmB,CAAC;IACxB,IAAI,aAAa,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;QACtD,MAAM,GAAG,aAAa,CAAC;KACxB,MAAM;QACL,MAAM,GAAG;YACP,KAAK,EAAE,aAAuB;SAC/B,CAAC;KACH;IACO,IAAA,KAAoE,MAAM,CAAA,KAA1D,EAAhB,KAAK,GAAA,OAAA,KAAA,IAAG,QAAQ,GAAA,EAAA,EAAE,KAAK,GAA6C,MAAM,CAAA,KAAnD,EAAE,KAA2C,MAAM,CAAA,cAAX,EAAtB,cAAc,GAAA,OAAA,KAAA,IAAG,KAAK,GAAA,EAAA,CAAY;IAEnF,OAAO,KAAK,IAAI,CAAC,GACb,WAAA,QAAQ,GACR,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QACzB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,QAA6B,CAAC;QAClC,IAAM,iBAAiB,GAAG;YACxB,IAAI,SAAS,GAAG,KAAK,CAAC;YACtB,QAAQ,GAAG,MAAM,CAAC,SAAS,CACzB,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;gBAEJ,IAAI,cAAc,EAAE;oBAClB,KAAK,GAAG,CAAC,CAAC;iBACX;gBACD,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACzB,CAAC,EAED,SAAS,EACT,SAAC,GAAG;gBACF,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE;oBAEnB,IAAM,OAAK,GAAG;wBACZ,IAAI,QAAQ,EAAE;4BACZ,QAAQ,CAAC,WAAW,EAAE,CAAC;4BACvB,QAAQ,GAAG,IAAI,CAAC;4BAChB,iBAAiB,EAAE,CAAC;yBACrB,MAAM;4BACL,SAAS,GAAG,IAAI,CAAC;yBAClB;oBACH,CAAC,CAAC;oBAEF,IAAI,KAAK,IAAI,IAAI,EAAE;wBAIjB,IAAM,QAAQ,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAA,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAA,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;wBACzF,IAAM,oBAAkB,GAAG,qBAAA,wBAAwB,CACjD,UAAU,EACV;4BAIE,oBAAkB,CAAC,WAAW,EAAE,CAAC;4BACjC,OAAK,EAAE,CAAC;wBACV,CAAC,EACD;4BAGE,UAAU,CAAC,QAAQ,EAAE,CAAC;wBACxB,CAAC,CACF,CAAC;wBACF,QAAQ,CAAC,SAAS,CAAC,oBAAkB,CAAC,CAAC;qBACxC,MAAM;wBAEL,OAAK,EAAE,CAAC;qBACT;iBACF,MAAM;oBAGL,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBACvB;YACH,CAAC,CACF,CACF,CAAC;YACF,IAAI,SAAS,EAAE;gBACb,QAAQ,CAAC,WAAW,EAAE,CAAC;gBACvB,QAAQ,GAAG,IAAI,CAAC;gBAChB,iBAAiB,EAAE,CAAC;aACrB;QACH,CAAC,CAAC;QACF,iBAAiB,EAAE,CAAC;IACtB,CAAC,CAAC,CAAC;AACT,CAAC;AApFD,QAAA,KAAA,GAAA,MAoFC","debugId":null}},
    {"offset": {"line": 8909, "column": 0}, "map": {"version":3,"file":"retryWhen.js","sourceRoot":"","sources":["../../../../src/internal/operators/retryWhen.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iDAAoD;AACpD,IAAA,kCAAqC;AAIrC,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AA2DhE,SAAgB,SAAS,CAAI,QAA2D;IACtF,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,QAA6B,CAAC;QAClC,IAAI,SAAS,GAAG,KAAK,CAAC;QACtB,IAAI,OAAqB,CAAC;QAE1B,IAAM,qBAAqB,GAAG;YAC5B,QAAQ,GAAG,MAAM,CAAC,SAAS,CACzB,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,SAAC,GAAG;gBAC7D,IAAI,CAAC,OAAO,EAAE;oBACZ,OAAO,GAAG,IAAI,UAAA,OAAO,EAAE,CAAC;oBACxB,YAAA,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CACpC,qBAAA,wBAAwB,CAAC,UAAU,EAAE;wBAMnC,OAAA,QAAQ,CAAC,CAAC,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC,AAAC,SAAS,GAAG,IAAI,CAAC;oBAAvD,CAAuD,CACxD,CACF,CAAC;iBACH;gBACD,IAAI,OAAO,EAAE;oBAEX,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACnB;YACH,CAAC,CAAC,CACH,CAAC;YAEF,IAAI,SAAS,EAAE;gBAKb,QAAQ,CAAC,WAAW,EAAE,CAAC;gBACvB,QAAQ,GAAG,IAAI,CAAC;gBAEhB,SAAS,GAAG,KAAK,CAAC;gBAElB,qBAAqB,EAAE,CAAC;aACzB;QACH,CAAC,CAAC;QAGF,qBAAqB,EAAE,CAAC;IAC1B,CAAC,CAAC,CAAC;AACL,CAAC;AA9CD,QAAA,SAAA,GAAA,UA8CC","debugId":null}},
    {"offset": {"line": 8951, "column": 0}, "map": {"version":3,"file":"sample.js","sourceRoot":"","sources":["../../../../src/internal/operators/sample.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,iDAAoD;AAEpD,IAAA,iCAAuC;AACvC,IAAA,iCAAoC;AACpC,IAAA,uDAAgE;AA0ChE,SAAgB,MAAM,CAAI,QAA8B;IACtD,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,SAAS,GAAa,IAAI,CAAC;QAC/B,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAC,KAAK;YACzC,QAAQ,GAAG,IAAI,CAAC;YAChB,SAAS,GAAG,KAAK,CAAC;QACpB,CAAC,CAAC,CACH,CAAC;QACF,YAAA,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC3B,qBAAA,wBAAwB,CACtB,UAAU,EACV;YACE,IAAI,QAAQ,EAAE;gBACZ,QAAQ,GAAG,KAAK,CAAC;gBACjB,IAAM,KAAK,GAAG,SAAU,CAAC;gBACzB,SAAS,GAAG,IAAI,CAAC;gBACjB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACxB;QACH,CAAC,EACD,OAAA,IAAI,CACL,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAzBD,QAAA,MAAA,GAAA,OAyBC","debugId":null}},
    {"offset": {"line": 8984, "column": 0}, "map": {"version":3,"file":"sampleTime.js","sourceRoot":"","sources":["../../../../src/internal/operators/sampleTime.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAAoD;AAEpD,IAAA,+BAAkC;AAClC,IAAA,+CAAkD;AA6ClD,SAAgB,UAAU,CAAI,MAAc,EAAE,SAAyC;IAAzC,IAAA,cAAA,KAAA,GAAA;QAAA,YAA2B,QAAA,cAAc;IAAA;IACrF,OAAO,SAAA,MAAM,CAAC,WAAA,QAAQ,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC;AAC7C,CAAC;AAFD,QAAA,UAAA,GAAA,WAEC","debugId":null}},
    {"offset": {"line": 9004, "column": 0}, "map": {"version":3,"file":"scan.js","sourceRoot":"","sources":["../../../../src/internal/operators/scan.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,6CAAgD;AAqFhD,SAAgB,IAAI,CAAU,WAA2D,EAAE,IAAQ;IAMjG,OAAO,OAAA,OAAO,CAAC,gBAAA,aAAa,CAAC,WAAW,EAAE,IAAS,EAAE,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AACrF,CAAC;AAPD,QAAA,IAAA,GAAA,KAOC","debugId":null}},
    {"offset": {"line": 9020, "column": 0}, "map": {"version":3,"file":"sequenceEqual.js","sourceRoot":"","sources":["../../../../src/internal/operators/sequenceEqual.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAChE,IAAA,iDAAoD;AA2DpD,SAAgB,aAAa,CAC3B,SAA6B,EAC7B,UAAuD;IAAvD,IAAA,eAAA,KAAA,GAAA;QAAA,aAAA,SAAuC,CAAC,EAAE,CAAC;YAAK,OAAA,CAAC,KAAK,CAAC;QAAP,CAAO;IAAA;IAEvD,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAEhC,IAAM,MAAM,GAAG,WAAW,EAAK,CAAC;QAEhC,IAAM,MAAM,GAAG,WAAW,EAAK,CAAC;QAGhC,IAAM,IAAI,GAAG,SAAC,OAAgB;YAC5B,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACzB,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,CAAC;QAOF,IAAM,gBAAgB,GAAG,SAAC,SAA2B,EAAE,UAA4B;YACjF,IAAM,uBAAuB,GAAG,qBAAA,wBAAwB,CACtD,UAAU,EACV,SAAC,CAAI;gBACK,IAAA,MAAM,GAAe,UAAU,CAAA,MAAzB,EAAE,QAAQ,GAAK,UAAU,CAAA,QAAf,CAAgB;gBACxC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;oBAOvB,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACnD,MAAM;oBAIL,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;iBAChD;YACH,CAAC,EACD;gBAEE,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAClB,IAAA,QAAQ,GAAa,UAAU,CAAA,QAAvB,EAAE,MAAM,GAAK,UAAU,CAAA,MAAf,CAAgB;gBAKxC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;gBAEtC,uBAAuB,KAAA,QAAvB,uBAAuB,KAAA,KAAA,IAAA,KAAA,IAAvB,uBAAuB,CAAE,WAAW,EAAE,CAAC;YACzC,CAAC,CACF,CAAC;YAEF,OAAO,uBAAuB,CAAC;QACjC,CAAC,CAAC;QAGF,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;QACnD,YAAA,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;AACL,CAAC;AA9DD,QAAA,aAAA,GAAA,cA8DC;AAgBD,SAAS,WAAW;IAClB,OAAO;QACL,MAAM,EAAE,EAAE;QACV,QAAQ,EAAE,KAAK;KAChB,CAAC;AACJ,CAAC","debugId":null}},
    {"offset": {"line": 9073, "column": 0}, "map": {"version":3,"file":"share.js","sourceRoot":"","sources":["../../../../src/internal/operators/share.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9195, "column": 0}, "map": {"version":3,"file":"shareReplay.js","sourceRoot":"","sources":["../../../../src/internal/operators/shareReplay.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,8CAAiD;AAEjD,IAAA,6BAAgC;AAwJhC,SAAgB,WAAW,CACzB,kBAA+C,EAC/C,UAAmB,EACnB,SAAyB;;IAEzB,IAAI,UAAkB,CAAC;IACvB,IAAI,QAAQ,GAAG,KAAK,CAAC;IACrB,IAAI,kBAAkB,IAAI,OAAO,kBAAkB,KAAK,QAAQ,EAAE;QAC7D,KAA8E,kBAAkB,CAAA,UAA3E,EAArB,UAAU,GAAA,OAAA,KAAA,IAAG,QAAQ,GAAA,EAAA,EAAE,KAAuD,kBAAkB,CAAA,UAApD,EAArB,UAAU,GAAA,OAAA,KAAA,IAAG,QAAQ,GAAA,EAAA,EAAE,KAAgC,kBAAkB,CAAA,QAAlC,EAAhB,QAAQ,GAAA,OAAA,KAAA,IAAG,KAAK,GAAA,EAAA,EAAE,SAAS,GAAK,kBAAkB,CAAA,SAAvB,CAAwB,CAAC;KACtG,MAAM;QACL,UAAU,GAAG,AAAC,kBAAkB,KAAA,QAAlB,kBAAkB,KAAA,KAAA,IAAlB,kBAAkB,GAAI,QAAQ,CAAW,CAAC;KACzD;IACD,OAAO,QAAA,KAAK,CAAI;QACd,SAAS,EAAE;YAAM,OAAA,IAAI,gBAAA,aAAa,CAAC,UAAU,EAAE,UAAU,EAAE,SAAS,CAAC;QAApD,CAAoD;QACrE,YAAY,EAAE,IAAI;QAClB,eAAe,EAAE,KAAK;QACtB,mBAAmB,EAAE,QAAQ;KAC9B,CAAC,CAAC;AACL,CAAC;AAlBD,QAAA,WAAA,GAAA,YAkBC","debugId":null}},
    {"offset": {"line": 9226, "column": 0}, "map": {"version":3,"file":"single.js","sourceRoot":"","sources":["../../../../src/internal/operators/single.ts"],"names":[],"mappings":";;;;;AACA,IAAA,6CAAgD;AAGhD,IAAA,mDAAsD;AACtD,IAAA,mDAAsD;AACtD,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAqFhE,SAAgB,MAAM,CAAI,SAAuE;IAC/F,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,WAAc,CAAC;QACnB,IAAI,SAAS,GAAG,KAAK,CAAC;QACtB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;YACJ,SAAS,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,MAAM,CAAC,EAAE;gBACnD,QAAQ,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,gBAAA,aAAa,CAAC,0BAA0B,CAAC,CAAC,CAAC;gBAC5E,QAAQ,GAAG,IAAI,CAAC;gBAChB,WAAW,GAAG,KAAK,CAAC;aACrB;QACH,CAAC,EACD;YACE,IAAI,QAAQ,EAAE;gBACZ,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC7B,UAAU,CAAC,QAAQ,EAAE,CAAC;aACvB,MAAM;gBACL,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,gBAAA,aAAa,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,IAAI,aAAA,UAAU,EAAE,CAAC,CAAC;aAC1F;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AA5BD,QAAA,MAAA,GAAA,OA4BC","debugId":null}},
    {"offset": {"line": 9265, "column": 0}, "map": {"version":3,"file":"skip.js","sourceRoot":"","sources":["../../../../src/internal/operators/skip.ts"],"names":[],"mappings":";;;;;AACA,IAAA,+BAAkC;AAmClC,SAAgB,IAAI,CAAI,KAAa;IACnC,OAAO,SAAA,MAAM,CAAC,SAAC,CAAC,EAAE,KAAK;QAAK,OAAA,KAAK,IAAI,KAAK;IAAd,CAAc,CAAC,CAAC;AAC9C,CAAC;AAFD,QAAA,IAAA,GAAA,KAEC","debugId":null}},
    {"offset": {"line": 9282, "column": 0}, "map": {"version":3,"file":"skipLast.js","sourceRoot":"","sources":["../../../../src/internal/operators/skipLast.ts"],"names":[],"mappings":";;;;;AACA,IAAA,yCAA4C;AAC5C,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AA4ChE,SAAgB,QAAQ,CAAI,SAAiB;IAC3C,OAAO,SAAS,IAAI,CAAC,GAEjB,WAAA,QAAQ,GACR,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAIzB,IAAI,IAAI,GAAQ,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC;QAGrC,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAC,KAAK;YAKzC,IAAM,UAAU,GAAG,IAAI,EAAE,CAAC;YAC1B,IAAI,UAAU,GAAG,SAAS,EAAE;gBAI1B,IAAI,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;aAC1B,MAAM;gBAIL,IAAM,KAAK,GAAG,UAAU,GAAG,SAAS,CAAC;gBAGrC,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC7B,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;gBAKpB,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC3B;QACH,CAAC,CAAC,CACH,CAAC;QAEF,OAAO;YAEL,IAAI,GAAG,IAAK,CAAC;QACf,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACT,CAAC;AA/CD,QAAA,QAAA,GAAA,SA+CC","debugId":null}},
    {"offset": {"line": 9316, "column": 0}, "map": {"version":3,"file":"skipUntil.js","sourceRoot":"","sources":["../../../../src/internal/operators/skipUntil.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAChE,IAAA,iDAAoD;AACpD,IAAA,iCAAoC;AA+CpC,SAAgB,SAAS,CAAI,QAA8B;IACzD,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,MAAM,GAAG,KAAK,CAAC;QAEnB,IAAM,cAAc,GAAG,qBAAA,wBAAwB,CAC7C,UAAU,EACV;YACE,cAAc,KAAA,QAAd,cAAc,KAAA,KAAA,IAAA,KAAA,IAAd,cAAc,CAAE,WAAW,EAAE,CAAC;YAC9B,MAAM,GAAG,IAAI,CAAC;QAChB,CAAC,EACD,OAAA,IAAI,CACL,CAAC;QAEF,YAAA,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAE9C,MAAM,CAAC,SAAS,CAAC,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAC,KAAK;YAAK,OAAA,MAAM,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;QAAhC,CAAgC,CAAC,CAAC,CAAC;IACtG,CAAC,CAAC,CAAC;AACL,CAAC;AAjBD,QAAA,SAAA,GAAA,UAiBC","debugId":null}},
    {"offset": {"line": 9344, "column": 0}, "map": {"version":3,"file":"skipWhile.js","sourceRoot":"","sources":["../../../../src/internal/operators/skipWhile.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAiDhE,SAAgB,SAAS,CAAI,SAA+C;IAC1E,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAC,KAAK;YAAK,OAAA,CAAC,MAAM,IAAI,CAAC,MAAM,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;QAA3E,CAA2E,CAAC,CAC7H,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AARD,QAAA,SAAA,GAAA,UAQC","debugId":null}},
    {"offset": {"line": 9366, "column": 0}, "map": {"version":3,"file":"startWith.js","sourceRoot":"","sources":["../../../../src/internal/operators/startWith.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,2CAA8C;AAE9C,IAAA,iCAA4C;AAC5C,IAAA,iCAAuC;AAuDvC,SAAgB,SAAS;IAAO,IAAA,SAAA,EAAA,CAAc;QAAd,IAAA,KAAA,CAAc,EAAd,KAAA,UAAA,MAAc,EAAd,IAAc,CAAA;QAAd,MAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAc;;IAC5C,IAAM,SAAS,GAAG,OAAA,YAAY,CAAC,MAAM,CAAC,CAAC;IACvC,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAIhC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,SAAA,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IACjG,CAAC,CAAC,CAAC;AACL,CAAC;AARD,QAAA,SAAA,GAAA,UAQC","debugId":null}},
    {"offset": {"line": 9390, "column": 0}, "map": {"version":3,"file":"switchMap.js","sourceRoot":"","sources":["../../../../src/internal/operators/switchMap.ts"],"names":[],"mappings":";;;;;AAEA,IAAA,iDAAoD;AACpD,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAgFhE,SAAgB,SAAS,CACvB,OAAuC,EACvC,cAA6G;IAE7G,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,eAAe,GAA0C,IAAI,CAAC;QAClE,IAAI,KAAK,GAAG,CAAC,CAAC;QAEd,IAAI,UAAU,GAAG,KAAK,CAAC;QAIvB,IAAM,aAAa,GAAG;YAAM,OAAA,UAAU,IAAI,CAAC,eAAe,IAAI,UAAU,CAAC,QAAQ,EAAE;QAAvD,CAAuD,CAAC;QAEpF,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;YAEJ,eAAe,KAAA,QAAf,eAAe,KAAA,KAAA,IAAA,KAAA,IAAf,eAAe,CAAE,WAAW,EAAE,CAAC;YAC/B,IAAI,UAAU,GAAG,CAAC,CAAC;YACnB,IAAM,UAAU,GAAG,KAAK,EAAE,CAAC;YAE3B,YAAA,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,SAAS,CAC7C,AAAC,eAAe,GAAG,qBAAA,wBAAwB,CACzC,UAAU,EAIV,SAAC,UAAU;gBAAK,OAAA,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;YAA1G,CAA0G,EAC1H;gBAIE,eAAe,GAAG,IAAK,CAAC;gBACxB,aAAa,EAAE,CAAC;YAClB,CAAC,CACF,CAAC,CACH,CAAC;QACJ,CAAC,EACD;YACE,UAAU,GAAG,IAAI,CAAC;YAClB,aAAa,EAAE,CAAC;QAClB,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AA/CD,QAAA,SAAA,GAAA,UA+CC","debugId":null}},
    {"offset": {"line": 9428, "column": 0}, "map": {"version":3,"file":"switchAll.js","sourceRoot":"","sources":["../../../../src/internal/operators/switchAll.ts"],"names":[],"mappings":";;;;;AACA,IAAA,qCAAwC;AACxC,IAAA,yCAA4C;AA4D5C,SAAgB,SAAS;IACvB,OAAO,YAAA,SAAS,CAAC,WAAA,QAAQ,CAAC,CAAC;AAC7B,CAAC;AAFD,QAAA,SAAA,GAAA,UAEC","debugId":null}},
    {"offset": {"line": 9444, "column": 0}, "map": {"version":3,"file":"switchMapTo.js","sourceRoot":"","sources":["../../../../src/internal/operators/switchMapTo.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,qCAAwC;AAExC,IAAA,6CAAgD;AAwDhD,SAAgB,WAAW,CACzB,eAAkB,EAClB,cAA6G;IAE7G,OAAO,aAAA,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,YAAA,SAAS,CAAC;QAAM,OAAA,eAAe;IAAf,CAAe,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,YAAA,SAAS,CAAC;QAAM,OAAA,eAAe;IAAf,CAAe,CAAC,CAAC;AAC1H,CAAC;AALD,QAAA,WAAA,GAAA,YAKC","debugId":null}},
    {"offset": {"line": 9464, "column": 0}, "map": {"version":3,"file":"switchScan.js","sourceRoot":"","sources":["../../../../src/internal/operators/switchScan.ts"],"names":[],"mappings":";;;;;AACA,IAAA,qCAAwC;AACxC,IAAA,iCAAuC;AAqBvC,SAAgB,UAAU,CACxB,WAAmD,EACnD,IAAO;IAEP,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAGhC,IAAI,KAAK,GAAG,IAAI,CAAC;QAKjB,YAAA,SAAS,CAGP,SAAC,KAAQ,EAAE,KAAK;YAAK,OAAA,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;QAAhC,CAAgC,EAGrD,SAAC,CAAC,EAAE,UAAU;YAAK,OAAA,AAAC,AAAC,KAAK,GAAG,UAAU,CAAC,CAAE,UAAU,CAAC;QAAlC,CAAkC,CACtD,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAEhC,OAAO;YAEL,KAAK,GAAG,IAAK,CAAC;QAChB,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AA1BD,QAAA,UAAA,GAAA,WA0BC","debugId":null}},
    {"offset": {"line": 9490, "column": 0}, "map": {"version":3,"file":"takeUntil.js","sourceRoot":"","sources":["../../../../src/internal/operators/takeUntil.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAChE,IAAA,iDAAoD;AACpD,IAAA,iCAAoC;AAwCpC,SAAgB,SAAS,CAAI,QAA8B;IACzD,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,YAAA,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,qBAAA,wBAAwB,CAAC,UAAU,EAAE;YAAM,OAAA,UAAU,CAAC,QAAQ,EAAE;QAArB,CAAqB,EAAE,OAAA,IAAI,CAAC,CAAC,CAAC;QACvG,CAAC,UAAU,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;AACL,CAAC;AALD,QAAA,SAAA,GAAA,UAKC","debugId":null}},
    {"offset": {"line": 9513, "column": 0}, "map": {"version":3,"file":"takeWhile.js","sourceRoot":"","sources":["../../../../src/internal/operators/takeWhile.ts"],"names":[],"mappings":";;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAoDhE,SAAgB,SAAS,CAAI,SAA+C,EAAE,SAAiB;IAAjB,IAAA,cAAA,KAAA,GAAA;QAAA,YAAA,KAAiB;IAAA;IAC7F,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAC,KAAK;YACzC,IAAM,MAAM,GAAG,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;YACzC,CAAC,MAAM,IAAI,SAAS,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChD,CAAC,MAAM,IAAI,UAAU,CAAC,QAAQ,EAAE,CAAC;QACnC,CAAC,CAAC,CACH,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAXD,QAAA,SAAA,GAAA,UAWC","debugId":null}},
    {"offset": {"line": 9539, "column": 0}, "map": {"version":3,"file":"tap.js","sourceRoot":"","sources":["../../../../src/internal/operators/tap.ts"],"names":[],"mappings":";;;;;AACA,IAAA,6CAAgD;AAChD,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAChE,IAAA,yCAA4C;AAkK5C,SAAgB,GAAG,CACjB,cAAsE,EACtE,KAAiC,EACjC,QAA8B;IAK9B,IAAM,WAAW,GACf,aAAA,UAAU,CAAC,cAAc,CAAC,IAAI,KAAK,IAAI,QAAQ,GAE1C;QAAE,IAAI,EAAE,cAAyE;QAAE,KAAK,EAAA,KAAA;QAAE,QAAQ,EAAA,QAAA;IAAA,CAA8B,GACjI,cAAc,CAAC;IAErB,OAAO,WAAW,GACd,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;;QACzB,CAAA,KAAA,WAAW,CAAC,SAAS,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAA,IAAA,CAArB,WAAW,CAAc,CAAC;QAC1B,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;;YACJ,CAAA,KAAA,WAAW,CAAC,IAAI,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAA,IAAA,CAAhB,WAAW,EAAQ,KAAK,CAAC,CAAC;YAC1B,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,EACD;;YACE,OAAO,GAAG,KAAK,CAAC;YAChB,CAAA,KAAA,WAAW,CAAC,QAAQ,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAA,IAAA,CAApB,WAAW,CAAa,CAAC;YACzB,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,EACD,SAAC,GAAG;;YACF,OAAO,GAAG,KAAK,CAAC;YAChB,CAAA,KAAA,WAAW,CAAC,KAAK,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAA,IAAA,CAAjB,WAAW,EAAS,GAAG,CAAC,CAAC;YACzB,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC,EACD;;YACE,IAAI,OAAO,EAAE;gBACX,CAAA,KAAA,WAAW,CAAC,WAAW,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAA,IAAA,CAAvB,WAAW,CAAgB,CAAC;aAC7B;YACD,CAAA,KAAA,WAAW,CAAC,QAAQ,MAAA,QAAA,OAAA,KAAA,IAAA,KAAA,IAAA,GAAA,IAAA,CAApB,WAAW,CAAa,CAAC;QAC3B,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,GAIF,WAAA,QAAQ,CAAC;AACf,CAAC;AAhDD,QAAA,GAAA,GAAA,IAgDC","debugId":null}},
    {"offset": {"line": 9587, "column": 0}, "map": {"version":3,"file":"throttle.js","sourceRoot":"","sources":["../../../../src/internal/operators/throttle.ts"],"names":[],"mappings":";;;;;AAGA,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAChE,IAAA,iDAAoD;AA8EpD,SAAgB,QAAQ,CAAI,gBAAoD,EAAE,MAAuB;IACvG,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAC1B,IAAA,KAAuC,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAN,MAAM,GAAI,CAAA,CAAE,EAAjD,KAAA,GAAA,OAAc,EAAd,OAAO,GAAA,OAAA,KAAA,IAAG,IAAI,GAAA,EAAA,EAAE,KAAA,GAAA,QAAgB,EAAhB,QAAQ,GAAA,OAAA,KAAA,IAAG,KAAK,GAAA,EAAiB,CAAC;QAC1D,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,SAAS,GAAa,IAAI,CAAC;QAC/B,IAAI,SAAS,GAAwB,IAAI,CAAC;QAC1C,IAAI,UAAU,GAAG,KAAK,CAAC;QAEvB,IAAM,aAAa,GAAG;YACpB,SAAS,KAAA,QAAT,SAAS,KAAA,KAAA,IAAA,KAAA,IAAT,SAAS,CAAE,WAAW,EAAE,CAAC;YACzB,SAAS,GAAG,IAAI,CAAC;YACjB,IAAI,QAAQ,EAAE;gBACZ,IAAI,EAAE,CAAC;gBACP,UAAU,IAAI,UAAU,CAAC,QAAQ,EAAE,CAAC;aACrC;QACH,CAAC,CAAC;QAEF,IAAM,iBAAiB,GAAG;YACxB,SAAS,GAAG,IAAI,CAAC;YACjB,UAAU,IAAI,UAAU,CAAC,QAAQ,EAAE,CAAC;QACtC,CAAC,CAAC;QAEF,IAAM,aAAa,GAAG,SAAC,KAAQ;YAC7B,OAAA,AAAC,SAAS,GAAG,YAAA,SAAS,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,qBAAA,wBAAwB,CAAC,UAAU,EAAE,aAAa,EAAE,iBAAiB,CAAC,CAAC,CAAC;QAAlI,CAAkI,CAAC;QAErI,IAAM,IAAI,GAAG;YACX,IAAI,QAAQ,EAAE;gBAIZ,QAAQ,GAAG,KAAK,CAAC;gBACjB,IAAM,KAAK,GAAG,SAAU,CAAC;gBACzB,SAAS,GAAG,IAAI,CAAC;gBAEjB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACvB,CAAC,UAAU,IAAI,aAAa,CAAC,KAAK,CAAC,CAAC;aACrC;QACH,CAAC,CAAC;QAEF,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EAMV,SAAC,KAAK;YACJ,QAAQ,GAAG,IAAI,CAAC;YAChB,SAAS,GAAG,KAAK,CAAC;YAClB,CAAC,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;QACjF,CAAC,EACD;YACE,UAAU,GAAG,IAAI,CAAC;YAClB,CAAC,CAAC,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,QAAQ,EAAE,CAAC;QACrF,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AA3DD,QAAA,QAAA,GAAA,SA2DC","debugId":null}},
    {"offset": {"line": 9642, "column": 0}, "map": {"version":3,"file":"throttleTime.js","sourceRoot":"","sources":["../../../../src/internal/operators/throttleTime.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAAoD;AACpD,IAAA,mCAAsD;AAEtD,IAAA,yCAA4C;AAmD5C,SAAgB,YAAY,CAC1B,QAAgB,EAChB,SAAyC,EACzC,MAAuB;IADvB,IAAA,cAAA,KAAA,GAAA;QAAA,YAA2B,QAAA,cAAc;IAAA;IAGzC,IAAM,SAAS,GAAG,QAAA,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IAC7C,OAAO,WAAA,QAAQ,CAAC;QAAM,OAAA,SAAS;IAAT,CAAS,EAAE,MAAM,CAAC,CAAC;AAC3C,CAAC;AAPD,QAAA,YAAA,GAAA,aAOC","debugId":null}},
    {"offset": {"line": 9665, "column": 0}, "map": {"version":3,"file":"timeInterval.js","sourceRoot":"","sources":["../../../../src/internal/operators/timeInterval.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAAoD;AAEpD,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAyChE,SAAgB,YAAY,CAAI,SAAyC;IAAzC,IAAA,cAAA,KAAA,GAAA;QAAA,YAA2B,QAAA,cAAc;IAAA;IACvE,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,IAAI,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC;QAC3B,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAC,KAAK;YACzC,IAAM,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC;YAC5B,IAAM,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC;YAC5B,IAAI,GAAG,GAAG,CAAC;YACX,UAAU,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CACH,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAZD,QAAA,YAAA,GAAA,aAYC;AAKD,IAAA,eAAA;IAIE,SAAA,aAAmB,KAAQ,EAAS,QAAgB;QAAjC,IAAA,CAAA,KAAK,GAAL,KAAK,CAAG;QAAS,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAAQ;IAAG,CAAC;IAC1D,OAAA,YAAC;AAAD,CAAC,AALD,IAKC;AALY,QAAA,YAAA,GAAA,aAAY","debugId":null}},
    {"offset": {"line": 9701, "column": 0}, "map": {"version":3,"file":"timeoutWith.js","sourceRoot":"","sources":["../../../../src/internal/operators/timeoutWith.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,wCAA2C;AAC3C,IAAA,qCAA6C;AAE7C,IAAA,iCAAoC;AA+EpC,SAAgB,WAAW,CACzB,GAAkB,EAClB,cAAkC,EAClC,SAAyB;IAEzB,IAAI,KAAgC,CAAC;IACrC,IAAI,IAAwB,CAAC;IAC7B,IAAI,KAA+B,CAAC;IACpC,SAAS,GAAG,SAAS,KAAA,QAAT,SAAS,KAAA,KAAA,IAAT,SAAS,GAAI,QAAA,KAAK,CAAC;IAE/B,IAAI,SAAA,WAAW,CAAC,GAAG,CAAC,EAAE;QACpB,KAAK,GAAG,GAAG,CAAC;KACb,MAAM,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAClC,IAAI,GAAG,GAAG,CAAC;KACZ;IAED,IAAI,cAAc,EAAE;QAClB,KAAK,GAAG;YAAM,OAAA,cAAc;QAAd,CAAc,CAAC;KAC9B,MAAM;QACL,MAAM,IAAI,SAAS,CAAC,qCAAqC,CAAC,CAAC;KAC5D;IAED,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;QAEjC,MAAM,IAAI,SAAS,CAAC,sBAAsB,CAAC,CAAC;KAC7C;IAED,OAAO,UAAA,OAAO,CAAwB;QACpC,KAAK,EAAA,KAAA;QACL,IAAI,EAAA,IAAA;QACJ,SAAS,EAAA,SAAA;QACT,IAAI,EAAE,KAAK;KACZ,CAAC,CAAC;AACL,CAAC;AAjCD,QAAA,WAAA,GAAA,YAiCC","debugId":null}},
    {"offset": {"line": 9742, "column": 0}, "map": {"version":3,"file":"timestamp.js","sourceRoot":"","sources":["../../../../src/internal/operators/timestamp.ts"],"names":[],"mappings":";;;;;AACA,IAAA,wEAA2E;AAC3E,IAAA,yBAA4B;AAkC5B,SAAgB,SAAS,CAAI,iBAA4D;IAA5D,IAAA,sBAAA,KAAA,GAAA;QAAA,oBAAuC,wBAAA,qBAAqB;IAAA;IACvF,OAAO,MAAA,GAAG,CAAC,SAAC,KAAQ;QAAK,OAAA,AAAC;YAAE,KAAK,EAAA,KAAA;YAAE,SAAS,EAAE,iBAAiB,CAAC,GAAG,EAAE;QAAA,CAAE,CAAC;IAA/C,CAA+C,CAAC,CAAC;AAC5E,CAAC;AAFD,QAAA,SAAA,GAAA,UAEC","debugId":null}},
    {"offset": {"line": 9766, "column": 0}, "map": {"version":3,"file":"window.js","sourceRoot":"","sources":["../../../../src/internal/operators/window.ts"],"names":[],"mappings":";;;;;AAEA,IAAA,kCAAqC;AACrC,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAChE,IAAA,iCAAoC;AACpC,IAAA,iDAAoD;AA8CpD,SAAgB,MAAM,CAAI,gBAAsC;IAC9D,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,aAAa,GAAe,IAAI,UAAA,OAAO,EAAK,CAAC;QAEjD,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,CAAC;QAE9C,IAAM,YAAY,GAAG,SAAC,GAAQ;YAC5B,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACzB,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC,CAAC;QAGF,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;YAAK,OAAA,aAAa,KAAA,QAAb,aAAa,KAAA,KAAA,IAAA,KAAA,IAAb,aAAa,CAAE,IAAI,CAAC,KAAK,CAAC;QAA1B,CAA0B,EACrC;YACE,aAAa,CAAC,QAAQ,EAAE,CAAC;YACzB,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,EACD,YAAY,CACb,CACF,CAAC;QAGF,YAAA,SAAS,CAAC,gBAAgB,CAAC,CAAC,SAAS,CACnC,qBAAA,wBAAwB,CACtB,UAAU,EACV;YACE,aAAa,CAAC,QAAQ,EAAE,CAAC;YACzB,UAAU,CAAC,IAAI,CAAC,AAAC,aAAa,GAAG,IAAI,UAAA,OAAO,EAAE,CAAC,CAAC,CAAC;QACnD,CAAC,EACD,OAAA,IAAI,EACJ,YAAY,CACb,CACF,CAAC;QAEF,OAAO;YAIL,aAAa,KAAA,QAAb,aAAa,KAAA,KAAA,IAAA,KAAA,IAAb,aAAa,CAAE,WAAW,EAAE,CAAC;YAC7B,aAAa,GAAG,IAAK,CAAC;QACxB,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AA7CD,QAAA,MAAA,GAAA,OA6CC","debugId":null}},
    {"offset": {"line": 9806, "column": 0}, "map": {"version":3,"file":"windowCount.js","sourceRoot":"","sources":["../../../../src/internal/operators/windowCount.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA,IAAA,kCAAqC;AAErC,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AA+DhE,SAAgB,WAAW,CAAI,UAAkB,EAAE,gBAA4B;IAA5B,IAAA,qBAAA,KAAA,GAAA;QAAA,mBAAA,CAA4B;IAAA;IAC7E,IAAM,UAAU,GAAG,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,UAAU,CAAC;IAExE,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,OAAO,GAAG;YAAC,IAAI,UAAA,OAAO,EAAK;SAAC,CAAC;QACjC,IAAI,MAAM,GAAa,EAAE,CAAC;QAC1B,IAAI,KAAK,GAAG,CAAC,CAAC;QAGd,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC;QAE3C,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAQ;;;gBAIP,IAAqB,IAAA,YAAA,SAAA,OAAO,CAAA,EAAA,cAAA,UAAA,IAAA,EAAA,EAAA,CAAA,YAAA,IAAA,EAAA,cAAA,UAAA,IAAA,GAAE;oBAAzB,IAAM,QAAM,GAAA,YAAA,KAAA;oBACf,QAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACpB;;;;;;;;;;;;YAMD,IAAM,CAAC,GAAG,KAAK,GAAG,UAAU,GAAG,CAAC,CAAC;YACjC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,UAAU,KAAK,CAAC,EAAE;gBAClC,OAAO,CAAC,KAAK,EAAG,CAAC,QAAQ,EAAE,CAAC;aAC7B;YAOD,IAAI,EAAE,KAAK,GAAG,UAAU,KAAK,CAAC,EAAE;gBAC9B,IAAM,QAAM,GAAG,IAAI,UAAA,OAAO,EAAK,CAAC;gBAChC,OAAO,CAAC,IAAI,CAAC,QAAM,CAAC,CAAC;gBACrB,UAAU,CAAC,IAAI,CAAC,QAAM,CAAC,YAAY,EAAE,CAAC,CAAC;aACxC;QACH,CAAC,EACD;YACE,MAAO,OAAO,CAAC,MAAM,GAAG,CAAC,CAAE;gBACzB,OAAO,CAAC,KAAK,EAAG,CAAC,QAAQ,EAAE,CAAC;aAC7B;YACD,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,EACD,SAAC,GAAG;YACF,MAAO,OAAO,CAAC,MAAM,GAAG,CAAC,CAAE;gBACzB,OAAO,CAAC,KAAK,EAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAC7B;YACD,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC,EACD;YACE,MAAM,GAAG,IAAK,CAAC;YACf,OAAO,GAAG,IAAK,CAAC;QAClB,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AA7DD,QAAA,WAAA,GAAA,YA6DC","debugId":null}},
    {"offset": {"line": 9889, "column": 0}, "map": {"version":3,"file":"windowTime.js","sourceRoot":"","sources":["../../../../src/internal/operators/windowTime.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,kCAAqC;AACrC,IAAA,wCAAoD;AAEpD,IAAA,4CAA+C;AAE/C,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAChE,IAAA,2CAA8C;AAC9C,IAAA,iCAA4C;AAC5C,IAAA,uDAA0D;AAgG1D,SAAgB,UAAU,CAAI,cAAsB;;IAAE,IAAA,YAAA,EAAA,CAAmB;QAAnB,IAAA,KAAA,CAAmB,EAAnB,KAAA,UAAA,MAAmB,EAAnB,IAAmB,CAAA;QAAnB,SAAA,CAAA,KAAA,EAAA,GAAA,SAAA,CAAA,GAAA,CAAmB;;IACvE,IAAM,SAAS,GAAG,CAAA,KAAA,OAAA,YAAY,CAAC,SAAS,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,QAAA,cAAc,CAAC;IAC5D,IAAM,sBAAsB,GAAG,CAAA,KAAC,SAAS,CAAC,CAAC,CAAY,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI,CAAC;IAChE,IAAM,aAAa,GAAI,SAAS,CAAC,CAAC,CAAY,IAAI,QAAQ,CAAC;IAE3D,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAEhC,IAAI,aAAa,GAA6B,EAAE,CAAC;QAGjD,IAAI,cAAc,GAAG,KAAK,CAAC;QAE3B,IAAM,WAAW,GAAG,SAAC,MAAkD;YAC7D,IAAA,MAAM,GAAW,MAAM,CAAA,MAAjB,EAAE,IAAI,GAAK,MAAM,CAAA,IAAX,CAAY;YAChC,MAAM,CAAC,QAAQ,EAAE,CAAC;YAClB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,YAAA,SAAS,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;YACjC,cAAc,IAAI,WAAW,EAAE,CAAC;QAClC,CAAC,CAAC;QAMF,IAAM,WAAW,GAAG;YAClB,IAAI,aAAa,EAAE;gBACjB,IAAM,IAAI,GAAG,IAAI,eAAA,YAAY,EAAE,CAAC;gBAChC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACrB,IAAM,QAAM,GAAG,IAAI,UAAA,OAAO,EAAK,CAAC;gBAChC,IAAM,QAAM,GAAG;oBACb,MAAM,EAAA,QAAA;oBACN,IAAI,EAAA,IAAA;oBACJ,IAAI,EAAE,CAAC;iBACR,CAAC;gBACF,aAAa,CAAC,IAAI,CAAC,QAAM,CAAC,CAAC;gBAC3B,UAAU,CAAC,IAAI,CAAC,QAAM,CAAC,YAAY,EAAE,CAAC,CAAC;gBACvC,kBAAA,eAAe,CAAC,IAAI,EAAE,SAAS,EAAE;oBAAM,OAAA,WAAW,CAAC,QAAM,CAAC;gBAAnB,CAAmB,EAAE,cAAc,CAAC,CAAC;aAC7E;QACH,CAAC,CAAC;QAEF,IAAI,sBAAsB,KAAK,IAAI,IAAI,sBAAsB,IAAI,CAAC,EAAE;YAIlE,kBAAA,eAAe,CAAC,UAAU,EAAE,SAAS,EAAE,WAAW,EAAE,sBAAsB,EAAE,IAAI,CAAC,CAAC;SACnF,MAAM;YACL,cAAc,GAAG,IAAI,CAAC;SACvB;QAED,WAAW,EAAE,CAAC;QAQd,IAAM,IAAI,GAAG,SAAC,EAAqC;YAAK,OAAA,aAAc,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;QAAlC,CAAkC,CAAC;QAM3F,IAAM,SAAS,GAAG,SAAC,EAAqC;YACtD,IAAI,CAAC,SAAC,EAAU;oBAAR,MAAM,GAAA,GAAA,MAAA;gBAAO,OAAA,EAAE,CAAC,MAAM,CAAC;YAAV,CAAU,CAAC,CAAC;YACjC,EAAE,CAAC,UAAU,CAAC,CAAC;YACf,UAAU,CAAC,WAAW,EAAE,CAAC;QAC3B,CAAC,CAAC;QAEF,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAQ;YAEP,IAAI,CAAC,SAAC,MAAM;gBACV,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAE1B,aAAa,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;QACL,CAAC,EAED;YAAM,OAAA,SAAS,CAAC,SAAC,QAAQ;gBAAK,OAAA,QAAQ,CAAC,QAAQ,EAAE;YAAnB,CAAmB,CAAC;QAA5C,CAA4C,EAElD,SAAC,GAAG;YAAK,OAAA,SAAS,CAAC,SAAC,QAAQ;gBAAK,OAAA,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC;YAAnB,CAAmB,CAAC;QAA5C,CAA4C,CACtD,CACF,CAAC;QAKF,OAAO;YAEL,aAAa,GAAG,IAAK,CAAC;QACxB,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AA/FD,QAAA,UAAA,GAAA,WA+FC","debugId":null}},
    {"offset": {"line": 9980, "column": 0}, "map": {"version":3,"file":"windowToggle.js","sourceRoot":"","sources":["../../../../src/internal/operators/windowToggle.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA,IAAA,kCAAqC;AACrC,IAAA,4CAA+C;AAE/C,IAAA,iCAAuC;AACvC,IAAA,iDAAoD;AACpD,IAAA,uDAAgE;AAChE,IAAA,iCAAoC;AACpC,IAAA,2CAA8C;AA+C9C,SAAgB,YAAY,CAC1B,QAA4B,EAC5B,eAAuD;IAEvD,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAM,OAAO,GAAiB,EAAE,CAAC;QAEjC,IAAM,WAAW,GAAG,SAAC,GAAQ;YAC3B,MAAO,CAAC,GAAG,OAAO,CAAC,MAAM,CAAE;gBACzB,OAAO,CAAC,KAAK,EAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAC7B;YACD,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC,CAAC;QAEF,YAAA,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC3B,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,SAAS;YACR,IAAM,MAAM,GAAG,IAAI,UAAA,OAAO,EAAK,CAAC;YAChC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACrB,IAAM,mBAAmB,GAAG,IAAI,eAAA,YAAY,EAAE,CAAC;YAC/C,IAAM,WAAW,GAAG;gBAClB,YAAA,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;gBAC3B,MAAM,CAAC,QAAQ,EAAE,CAAC;gBAClB,mBAAmB,CAAC,WAAW,EAAE,CAAC;YACpC,CAAC,CAAC;YAEF,IAAI,eAAgC,CAAC;YACrC,IAAI;gBACF,eAAe,GAAG,YAAA,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD,CAAC,OAAO,GAAG,EAAE;gBACZ,WAAW,CAAC,GAAG,CAAC,CAAC;gBACjB,OAAO;aACR;YAED,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC;YAEvC,mBAAmB,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,qBAAA,wBAAwB,CAAC,UAAU,EAAE,WAAW,EAAE,OAAA,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;QAC3H,CAAC,EACD,OAAA,IAAI,CACL,CACF,CAAC;QAGF,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAQ;;YAGP,IAAM,WAAW,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;;gBACpC,IAAqB,IAAA,gBAAA,SAAA,WAAW,CAAA,EAAA,kBAAA,cAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,IAAA,EAAA,kBAAA,cAAA,IAAA,GAAE;oBAA7B,IAAM,QAAM,GAAA,gBAAA,KAAA;oBACf,QAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACpB;;;;;;;;;;;;QACH,CAAC,EACD;YAEE,MAAO,CAAC,GAAG,OAAO,CAAC,MAAM,CAAE;gBACzB,OAAO,CAAC,KAAK,EAAG,CAAC,QAAQ,EAAE,CAAC;aAC7B;YACD,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,EACD,WAAW,EACX;YAME,MAAO,CAAC,GAAG,OAAO,CAAC,MAAM,CAAE;gBACzB,OAAO,CAAC,KAAK,EAAG,CAAC,WAAW,EAAE,CAAC;aAChC;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AA5ED,QAAA,YAAA,GAAA,aA4EC","debugId":null}},
    {"offset": {"line": 10071, "column": 0}, "map": {"version":3,"file":"windowWhen.js","sourceRoot":"","sources":["../../../../src/internal/operators/windowWhen.ts"],"names":[],"mappings":";;;;;AAEA,IAAA,kCAAqC;AAErC,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAChE,IAAA,iDAAoD;AA+CpD,SAAgB,UAAU,CAAI,eAA2C;IACvE,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,MAAyB,CAAC;QAC9B,IAAI,iBAA8C,CAAC;QAMnD,IAAM,WAAW,GAAG,SAAC,GAAQ;YAC3B,MAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC,CAAC;QAQF,IAAM,UAAU,GAAG;YAGjB,iBAAiB,KAAA,QAAjB,iBAAiB,KAAA,KAAA,IAAA,KAAA,IAAjB,iBAAiB,CAAE,WAAW,EAAE,CAAC;YAGjC,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAA,KAAA,IAAN,MAAM,CAAE,QAAQ,EAAE,CAAC;YAGnB,MAAM,GAAG,IAAI,UAAA,OAAO,EAAK,CAAC;YAC1B,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC;YAGvC,IAAI,eAAgC,CAAC;YACrC,IAAI;gBACF,eAAe,GAAG,YAAA,SAAS,CAAC,eAAe,EAAE,CAAC,CAAC;aAChD,CAAC,OAAO,GAAG,EAAE;gBACZ,WAAW,CAAC,GAAG,CAAC,CAAC;gBACjB,OAAO;aACR;YAMD,eAAe,CAAC,SAAS,CAAC,AAAC,iBAAiB,GAAG,qBAAA,wBAAwB,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;QAC7H,CAAC,CAAC;QAGF,UAAU,EAAE,CAAC;QAGb,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;YAAK,OAAA,MAAO,CAAC,IAAI,CAAC,KAAK,CAAC;QAAnB,CAAmB,EAC9B;YAEE,MAAO,CAAC,QAAQ,EAAE,CAAC;YACnB,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,EACD,WAAW,EACX;YAGE,iBAAiB,KAAA,QAAjB,iBAAiB,KAAA,KAAA,IAAA,KAAA,IAAjB,iBAAiB,CAAE,WAAW,EAAE,CAAC;YACjC,MAAM,GAAG,IAAK,CAAC;QACjB,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAvED,QAAA,UAAA,GAAA,WAuEC","debugId":null}},
    {"offset": {"line": 10120, "column": 0}, "map": {"version":3,"file":"withLatestFrom.js","sourceRoot":"","sources":["../../../../src/internal/operators/withLatestFrom.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,iCAAuC;AACvC,IAAA,uDAAgE;AAChE,IAAA,iDAAoD;AACpD,IAAA,yCAA4C;AAC5C,IAAA,iCAAoC;AACpC,IAAA,iCAAiD;AAoDjD,SAAgB,cAAc;IAAO,IAAA,SAAA,EAAA,CAAgB;QAAhB,IAAA,KAAA,CAAgB,EAAhB,KAAA,UAAA,MAAgB,EAAhB,IAAgB,CAAA;QAAhB,MAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAgB;;IACnD,IAAM,OAAO,GAAG,OAAA,iBAAiB,CAAC,MAAM,CAAwC,CAAC;IAEjF,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;QAC1B,IAAM,WAAW,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;QAInC,IAAI,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC;YAAM,OAAA,KAAK;QAAL,CAAK,CAAC,CAAC;QAGvC,IAAI,KAAK,GAAG,KAAK,CAAC;+BAMT,CAAC;YACR,YAAA,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAC5B,qBAAA,wBAAwB,CACtB,UAAU,EACV,SAAC,KAAK;gBACJ,WAAW,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;oBAE1B,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;oBAKnB,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,WAAA,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAK,CAAC,CAAC;iBAC1D;YACH,CAAC,EAGD,OAAA,IAAI,CACL,CACF,CAAC;;QApBJ,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAA;oBAAnB,CAAC;SAqBT;QAGD,MAAM,CAAC,SAAS,CACd,qBAAA,wBAAwB,CAAC,UAAU,EAAE,SAAC,KAAK;YACzC,IAAI,KAAK,EAAE;gBAET,IAAM,MAAM,GAAA,cAAA;oBAAI,KAAK;iBAAA,EAAA,OAAK,WAAW,EAAC,CAAC;gBACvC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA,EAAA,EAAA,OAAI,MAAM,IAAE,CAAC,CAAC,MAAM,CAAC,CAAC;aACxD;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AApDD,QAAA,cAAA,GAAA,eAoDC","debugId":null}},
    {"offset": {"line": 10195, "column": 0}, "map": {"version":3,"file":"zipAll.js","sourceRoot":"","sources":["../../../../src/internal/operators/zipAll.ts"],"names":[],"mappings":";;;;;AACA,IAAA,qCAAwC;AACxC,IAAA,mDAAsD;AAetD,SAAgB,MAAM,CAAO,OAA+B;IAC1D,OAAO,mBAAA,gBAAgB,CAAC,MAAA,GAAG,EAAE,OAAO,CAAC,CAAC;AACxC,CAAC;AAFD,QAAA,MAAA,GAAA,OAEC","debugId":null}},
    {"offset": {"line": 10211, "column": 0}, "map": {"version":3,"file":"zip.js","sourceRoot":"","sources":["../../../../src/internal/operators/zip.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,qCAAqD;AAErD,IAAA,iCAAuC;AAmBvC,SAAgB,GAAG;IAAO,IAAA,UAAA,EAAA,CAAwE;QAAxE,IAAA,KAAA,CAAwE,EAAxE,KAAA,UAAA,MAAwE,EAAxE,IAAwE,CAAA;QAAxE,OAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAwE;;IAChG,OAAO,OAAA,OAAO,CAAC,SAAC,MAAM,EAAE,UAAU;QAChC,MAAA,GAAS,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA;YAAC,MAA8B;SAAA,EAAA,OAAM,OAAuC,IAAE,SAAS,CAAC,UAAU,CAAC,CAAC;IAC/G,CAAC,CAAC,CAAC;AACL,CAAC;AAJD,QAAA,GAAA,GAAA,IAIC","debugId":null}},
    {"offset": {"line": 10258, "column": 0}, "map": {"version":3,"file":"zipWith.js","sourceRoot":"","sources":["../../../../src/internal/operators/zipWith.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,yBAA4B;AAyB5B,SAAgB,OAAO;IAAkC,IAAA,cAAA,EAAA,CAA4C;QAA5C,IAAA,KAAA,CAA4C,EAA5C,KAAA,UAAA,MAA4C,EAA5C,IAA4C,CAAA;QAA5C,WAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAA4C;;IACnG,OAAO,MAAA,GAAG,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA,EAAA,EAAA,OAAI,WAAW,IAAE;AAC7B,CAAC;AAFD,QAAA,OAAA,GAAA,QAEC","debugId":null}},
    {"offset": {"line": 10300, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAeA,IAAA,gDAAmD;AAA1C,OAAA,cAAA,CAAA,SAAA,cAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,UAAU;IAAA;AAAA,GAAA;AACnB,IAAA,iFAAoF;AAA3E,OAAA,cAAA,CAAA,SAAA,yBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,wBAAA,qBAAqB;IAAA;AAAA,GAAA;AAG9B,IAAA,uDAA0D;AAAjD,OAAA,cAAA,CAAA,SAAA,cAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,UAAU;IAAA;AAAA,GAAA;AACnB,IAAA,yEAA4E;AAAnE,OAAA,cAAA,CAAA,SAAA,mBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,kBAAA,eAAe;IAAA;AAAA,GAAA;AAGxB,IAAA,0CAA6C;AAApC,OAAA,cAAA,CAAA,SAAA,WAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,UAAA,OAAO;IAAA;AAAA,GAAA;AAChB,IAAA,0DAA6D;AAApD,OAAA,cAAA,CAAA,SAAA,mBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,kBAAA,eAAe;IAAA;AAAA,GAAA;AACxB,IAAA,sDAAyD;AAAhD,OAAA,cAAA,CAAA,SAAA,iBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,gBAAA,aAAa;IAAA;AAAA,GAAA;AACtB,IAAA,oDAAuD;AAA9C,OAAA,cAAA,CAAA,SAAA,gBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,eAAA,YAAY;IAAA;AAAA,GAAA;AAGrB,IAAA,8CAAgE;AAAvD,OAAA,cAAA,CAAA,SAAA,QAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,OAAA,IAAI;IAAA;AAAA,GAAA;AAAE,OAAA,cAAA,CAAA,SAAA,iBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,OAAA,aAAa;IAAA;AAAA,GAAA;AAC5B,IAAA,gDAAmE;AAA1D,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AAAE,OAAA,cAAA,CAAA,SAAA,kBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,cAAc;IAAA;AAAA,GAAA;AAC9B,IAAA,gDAAmE;AAA1D,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AAAE,OAAA,cAAA,CAAA,SAAA,kBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,cAAc;IAAA;AAAA,GAAA;AAC9B,IAAA,kEAA8F;AAArF,OAAA,cAAA,CAAA,SAAA,kBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,cAAc;IAAA;AAAA,GAAA;AAAE,OAAA,cAAA,CAAA,SAAA,2BAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,uBAAuB;IAAA;AAAA,GAAA;AAChD,IAAA,8EAAgG;AAAvF,OAAA,cAAA,CAAA,SAAA,wBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,uBAAA,oBAAoB;IAAA;AAAA,GAAA;AAAE,OAAA,cAAA,CAAA,SAAA,iBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,uBAAA,aAAa;IAAA;AAAA,GAAA;AAC5C,IAAA,8CAAiD;AAAxC,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAGlB,IAAA,oDAAuD;AAA9C,OAAA,cAAA,CAAA,SAAA,gBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,eAAA,YAAY;IAAA;AAAA,GAAA;AACrB,IAAA,gDAAmD;AAA1C,OAAA,cAAA,CAAA,SAAA,cAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,UAAU;IAAA;AAAA,GAAA;AAGnB,IAAA,oDAAyE;AAAhE,OAAA,cAAA,CAAA,SAAA,gBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,eAAA,YAAY;IAAA;AAAA,GAAA;AAAE,OAAA,cAAA,CAAA,SAAA,oBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,eAAA,gBAAgB;IAAA;AAAA,GAAA;AAGvC,IAAA,yCAA4C;AAAnC,OAAA,cAAA,CAAA,SAAA,QAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,OAAA,IAAI;IAAA;AAAA,GAAA;AACb,IAAA,yCAA4C;AAAnC,OAAA,cAAA,CAAA,SAAA,QAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,OAAA,IAAI;IAAA;AAAA,GAAA;AACb,IAAA,iDAAoD;AAA3C,OAAA,cAAA,CAAA,SAAA,YAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,WAAA,QAAQ;IAAA;AAAA,GAAA;AACjB,IAAA,yDAA4D;AAAnD,OAAA,cAAA,CAAA,SAAA,gBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,eAAA,YAAY;IAAA;AAAA,GAAA;AAGrB,IAAA,sDAAyD;AAAhD,OAAA,cAAA,CAAA,SAAA,iBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,gBAAA,aAAa;IAAA;AAAA,GAAA;AACtB,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,kBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,cAAc;IAAA;AAAA,GAAA;AAGvB,IAAA,+EAAkF;AAAzE,OAAA,cAAA,CAAA,SAAA,2BAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,0BAAA,uBAAuB;IAAA;AAAA,GAAA;AAChC,IAAA,qDAAwD;AAA/C,OAAA,cAAA,CAAA,SAAA,cAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,UAAU;IAAA;AAAA,GAAA;AACnB,IAAA,2DAA8D;AAArD,OAAA,cAAA,CAAA,SAAA,iBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,gBAAA,aAAa;IAAA;AAAA,GAAA;AACtB,IAAA,+EAAkF;AAAzE,OAAA,cAAA,CAAA,SAAA,2BAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,0BAAA,uBAAuB;IAAA;AAAA,GAAA;AAChC,IAAA,2DAA8D;AAArD,OAAA,cAAA,CAAA,SAAA,iBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,gBAAA,aAAa;IAAA;AAAA,GAAA;AACtB,IAAA,oDAA4D;AAAnD,OAAA,cAAA,CAAA,SAAA,gBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,UAAA,YAAY;IAAA;AAAA,GAAA;AACrB,IAAA,uEAA0E;AAAjE,OAAA,cAAA,CAAA,SAAA,uBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,sBAAA,mBAAmB;IAAA;AAAA,GAAA;AAG5B,IAAA,+DAAkE;AAAzD,OAAA,cAAA,CAAA,SAAA,gBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,eAAA,YAAY;IAAA;AAAA,GAAA;AACrB,IAAA,uEAA0E;AAAjE,OAAA,cAAA,CAAA,SAAA,oBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,mBAAA,gBAAgB;IAAA;AAAA,GAAA;AACzB,IAAA,iEAAoE;AAA3D,OAAA,cAAA,CAAA,SAAA,iBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,gBAAA,aAAa;IAAA;AAAA,GAAA;AACtB,IAAA,mDAAsD;AAA7C,OAAA,cAAA,CAAA,SAAA,UAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,SAAA,MAAM;IAAA;AAAA,GAAA;AACf,IAAA,6DAAgE;AAAvD,OAAA,cAAA,CAAA,SAAA,eAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,cAAA,WAAW;IAAA;AAAA,GAAA;AACpB,IAAA,iDAAoD;AAA3C,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AACd,IAAA,iDAAoD;AAA3C,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AACd,IAAA,uDAA0D;AAAjD,OAAA,cAAA,CAAA,SAAA,YAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,WAAA,QAAQ;IAAA;AAAA,GAAA;AACjB,IAAA,+CAAkD;AAAzC,OAAA,cAAA,CAAA,SAAA,QAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,OAAA,IAAI;IAAA;AAAA,GAAA;AACb,IAAA,yDAA4D;AAAnD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,uEAA0E;AAAjE,OAAA,cAAA,CAAA,SAAA,oBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,mBAAA,gBAAgB;IAAA;AAAA,GAAA;AACzB,IAAA,uDAA0D;AAAjD,OAAA,cAAA,CAAA,SAAA,YAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,WAAA,QAAQ;IAAA;AAAA,GAAA;AACjB,IAAA,6CAAgD;AAAvC,OAAA,cAAA,CAAA,SAAA,OAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,MAAA,GAAG;IAAA;AAAA,GAAA;AACZ,IAAA,uDAA0D;AAAjD,OAAA,cAAA,CAAA,SAAA,YAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,WAAA,QAAQ;IAAA;AAAA,GAAA;AACjB,IAAA,iDAAoD;AAA3C,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AACd,IAAA,iDAAoD;AAA3C,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AACd,IAAA,2CAA8C;AAArC,OAAA,cAAA,CAAA,SAAA,MAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,KAAA,EAAE;IAAA;AAAA,GAAA;AACX,IAAA,yEAA4E;AAAnE,OAAA,cAAA,CAAA,SAAA,qBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,oBAAA,iBAAiB;IAAA;AAAA,GAAA;AAC1B,IAAA,iDAAoD;AAA3C,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AACd,IAAA,yDAA4D;AAAnD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,+CAAkD;AAAzC,OAAA,cAAA,CAAA,SAAA,QAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,OAAA,IAAI;IAAA;AAAA,GAAA;AACb,IAAA,iDAAoD;AAA3C,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AACd,IAAA,2DAA8D;AAArD,OAAA,cAAA,CAAA,SAAA,cAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,UAAU;IAAA;AAAA,GAAA;AACnB,IAAA,iDAAoD;AAA3C,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AACd,IAAA,iDAAoD;AAA3C,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AACd,IAAA,6CAAgD;AAAvC,OAAA,cAAA,CAAA,SAAA,OAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,MAAA,GAAG;IAAA;AAAA,GAAA;AACZ,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAGlB,IAAA,iDAAoD;AAA3C,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AACd,IAAA,iDAAoD;AAA3C,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AAGd,uHAAA,SAAiC;AAGjC,IAAA,wCAAyD;AAAhD,OAAA,cAAA,CAAA,SAAA,UAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,SAAA,MAAM;IAAA;AAAA,GAAA;AAGf,IAAA,gDAAmD;AAA1C,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AACd,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,kDAAqD;AAA5C,OAAA,cAAA,CAAA,SAAA,UAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,SAAA,MAAM;IAAA;AAAA,GAAA;AACf,IAAA,4DAA+D;AAAtD,OAAA,cAAA,CAAA,SAAA,eAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,cAAA,WAAW;IAAA;AAAA,GAAA;AACpB,IAAA,0DAA6D;AAApD,OAAA,cAAA,CAAA,SAAA,cAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,UAAU;IAAA;AAAA,GAAA;AACnB,IAAA,8DAAiE;AAAxD,OAAA,cAAA,CAAA,SAAA,gBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,eAAA,YAAY;IAAA;AAAA,GAAA;AACrB,IAAA,0DAA6D;AAApD,OAAA,cAAA,CAAA,SAAA,cAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,UAAU;IAAA;AAAA,GAAA;AACnB,IAAA,0DAA6D;AAApD,OAAA,cAAA,CAAA,SAAA,cAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,UAAU;IAAA;AAAA,GAAA;AACnB,IAAA,0DAA6D;AAApD,OAAA,cAAA,CAAA,SAAA,cAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,UAAU;IAAA;AAAA,GAAA;AACnB,IAAA,sEAAyE;AAAhE,OAAA,cAAA,CAAA,SAAA,oBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,mBAAA,gBAAgB;IAAA;AAAA,GAAA;AACzB,IAAA,wEAA2E;AAAlE,OAAA,cAAA,CAAA,SAAA,qBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,oBAAA,iBAAiB;IAAA;AAAA,GAAA;AAC1B,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,4DAA+D;AAAtD,OAAA,cAAA,CAAA,SAAA,eAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,cAAA,WAAW;IAAA;AAAA,GAAA;AACpB,IAAA,0DAA6D;AAApD,OAAA,cAAA,CAAA,SAAA,cAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,UAAU;IAAA;AAAA,GAAA;AACnB,IAAA,oDAAsE;AAA7D,OAAA,cAAA,CAAA,SAAA,WAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,UAAA,OAAO;IAAA;AAAA,GAAA;AAChB,IAAA,gDAAmD;AAA1C,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AACd,IAAA,sDAAyD;AAAhD,OAAA,cAAA,CAAA,SAAA,YAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,WAAA,QAAQ;IAAA;AAAA,GAAA;AACjB,IAAA,8DAAiE;AAAxD,OAAA,cAAA,CAAA,SAAA,gBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,eAAA,YAAY;IAAA;AAAA,GAAA;AACrB,IAAA,kEAAqE;AAA5D,OAAA,cAAA,CAAA,SAAA,kBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,cAAc;IAAA;AAAA,GAAA;AACvB,IAAA,gDAAmD;AAA1C,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AACd,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,gEAAmE;AAA1D,OAAA,cAAA,CAAA,SAAA,iBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,gBAAA,aAAa;IAAA;AAAA,GAAA;AACtB,IAAA,sDAAyD;AAAhD,OAAA,cAAA,CAAA,SAAA,YAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,WAAA,QAAQ;IAAA;AAAA,GAAA;AACjB,IAAA,8EAAiF;AAAxE,OAAA,cAAA,CAAA,SAAA,wBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,uBAAA,oBAAoB;IAAA;AAAA,GAAA;AAC7B,IAAA,oFAAuF;AAA9E,OAAA,cAAA,CAAA,SAAA,2BAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,0BAAA,uBAAuB;IAAA;AAAA,GAAA;AAChC,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,oDAAuD;AAA9C,OAAA,cAAA,CAAA,SAAA,WAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,UAAA,OAAO;IAAA;AAAA,GAAA;AAChB,IAAA,gDAAmD;AAA1C,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AACd,IAAA,oDAAuD;AAA9C,OAAA,cAAA,CAAA,SAAA,WAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,UAAA,OAAO;IAAA;AAAA,GAAA;AAChB,IAAA,0DAA6D;AAApD,OAAA,cAAA,CAAA,SAAA,cAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,UAAU;IAAA;AAAA,GAAA;AACnB,IAAA,0DAA6D;AAApD,OAAA,cAAA,CAAA,SAAA,cAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,UAAU;IAAA;AAAA,GAAA;AACnB,IAAA,kDAAqD;AAA5C,OAAA,cAAA,CAAA,SAAA,UAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,SAAA,MAAM;IAAA;AAAA,GAAA;AACf,IAAA,kDAAqD;AAA5C,OAAA,cAAA,CAAA,SAAA,UAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,SAAA,MAAM;IAAA;AAAA,GAAA;AACf,IAAA,sDAAyD;AAAhD,OAAA,cAAA,CAAA,SAAA,YAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,WAAA,QAAQ;IAAA;AAAA,GAAA;AACjB,IAAA,8CAAiD;AAAxC,OAAA,cAAA,CAAA,SAAA,QAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,OAAA,IAAI;IAAA;AAAA,GAAA;AACb,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,gDAAmD;AAA1C,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AACd,IAAA,oDAAuG;AAA9F,OAAA,cAAA,CAAA,SAAA,WAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,UAAA,OAAO;IAAA;AAAA,GAAA;AAChB,IAAA,kEAAqE;AAA5D,OAAA,cAAA,CAAA,SAAA,kBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,cAAc;IAAA;AAAA,GAAA;AACvB,IAAA,oDAAuD;AAA9C,OAAA,cAAA,CAAA,SAAA,WAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,UAAA,OAAO;IAAA;AAAA,GAAA;AAChB,IAAA,8CAAiD;AAAxC,OAAA,cAAA,CAAA,SAAA,QAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,OAAA,IAAI;IAAA;AAAA,GAAA;AACb,IAAA,4CAA+C;AAAtC,OAAA,cAAA,CAAA,SAAA,OAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,MAAA,GAAG;IAAA;AAAA,GAAA;AACZ,IAAA,gDAAmD;AAA1C,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AACd,IAAA,4DAA+D;AAAtD,OAAA,cAAA,CAAA,SAAA,eAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,cAAA,WAAW;IAAA;AAAA,GAAA;AACpB,IAAA,4CAA+C;AAAtC,OAAA,cAAA,CAAA,SAAA,OAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,MAAA,GAAG;IAAA;AAAA,GAAA;AACZ,IAAA,sDAAyD;AAAhD,OAAA,cAAA,CAAA,SAAA,YAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,WAAA,QAAQ;IAAA;AAAA,GAAA;AACjB,IAAA,oDAAuD;AAA9C,OAAA,cAAA,CAAA,SAAA,WAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,UAAA,OAAO;IAAA;AAAA,GAAA;AAChB,IAAA,sDAAyD;AAAhD,OAAA,cAAA,CAAA,SAAA,YAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,WAAA,QAAQ;IAAA;AAAA,GAAA;AACjB,IAAA,0DAA6D;AAApD,OAAA,cAAA,CAAA,SAAA,cAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,UAAU;IAAA;AAAA,GAAA;AACnB,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,4CAA+C;AAAtC,OAAA,cAAA,CAAA,SAAA,OAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,MAAA,GAAG;IAAA;AAAA,GAAA;AACZ,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,gFAAmF;AAA1E,OAAA,cAAA,CAAA,SAAA,yBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,wBAAA,qBAAqB;IAAA;AAAA,GAAA;AAC9B,IAAA,sDAAyD;AAAhD,OAAA,cAAA,CAAA,SAAA,YAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,WAAA,QAAQ;IAAA;AAAA,GAAA;AACjB,IAAA,gDAAmD;AAA1C,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AACd,IAAA,oDAAuD;AAA9C,OAAA,cAAA,CAAA,SAAA,WAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,UAAA,OAAO;IAAA;AAAA,GAAA;AAChB,IAAA,oEAAuE;AAA9D,OAAA,cAAA,CAAA,SAAA,mBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,kBAAA,eAAe;IAAA;AAAA,GAAA;AACxB,IAAA,4DAA+D;AAAtD,OAAA,cAAA,CAAA,SAAA,eAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,cAAA,WAAW;IAAA;AAAA,GAAA;AACpB,IAAA,gEAAmE;AAA1D,OAAA,cAAA,CAAA,SAAA,iBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,gBAAA,aAAa;IAAA;AAAA,GAAA;AACtB,IAAA,sDAAyD;AAAhD,OAAA,cAAA,CAAA,SAAA,YAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,WAAA,QAAQ;IAAA;AAAA,GAAA;AACjB,IAAA,kDAAqD;AAA5C,OAAA,cAAA,CAAA,SAAA,UAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,SAAA,MAAM;IAAA;AAAA,GAAA;AACf,IAAA,kDAAmE;AAA1D,OAAA,cAAA,CAAA,SAAA,UAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,SAAA,MAAM;IAAA;AAAA,GAAA;AACf,IAAA,0DAA6D;AAApD,OAAA,cAAA,CAAA,SAAA,cAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,UAAU;IAAA;AAAA,GAAA;AACnB,IAAA,gDAAgE;AAAvD,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AACd,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,sDAAyD;AAAhD,OAAA,cAAA,CAAA,SAAA,YAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,WAAA,QAAQ;IAAA;AAAA,GAAA;AACjB,IAAA,kDAAqD;AAA5C,OAAA,cAAA,CAAA,SAAA,UAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,SAAA,MAAM;IAAA;AAAA,GAAA;AACf,IAAA,0DAA6D;AAApD,OAAA,cAAA,CAAA,SAAA,cAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,UAAU;IAAA;AAAA,GAAA;AACnB,IAAA,8CAAiD;AAAxC,OAAA,cAAA,CAAA,SAAA,QAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,OAAA,IAAI;IAAA;AAAA,GAAA;AACb,IAAA,gEAAmE;AAA1D,OAAA,cAAA,CAAA,SAAA,iBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,gBAAA,aAAa;IAAA;AAAA,GAAA;AACtB,IAAA,gDAAgE;AAAvD,OAAA,cAAA,CAAA,SAAA,SAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,QAAA,KAAK;IAAA;AAAA,GAAA;AACd,IAAA,4DAAkF;AAAzE,OAAA,cAAA,CAAA,SAAA,eAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,cAAA,WAAW;IAAA;AAAA,GAAA;AACpB,IAAA,kDAAqD;AAA5C,OAAA,cAAA,CAAA,SAAA,UAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,SAAA,MAAM;IAAA;AAAA,GAAA;AACf,IAAA,8CAAiD;AAAxC,OAAA,cAAA,CAAA,SAAA,QAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,OAAA,IAAI;IAAA;AAAA,GAAA;AACb,IAAA,sDAAyD;AAAhD,OAAA,cAAA,CAAA,SAAA,YAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,WAAA,QAAQ;IAAA;AAAA,GAAA;AACjB,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,4DAA+D;AAAtD,OAAA,cAAA,CAAA,SAAA,eAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,cAAA,WAAW;IAAA;AAAA,GAAA;AACpB,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,4DAA+D;AAAtD,OAAA,cAAA,CAAA,SAAA,eAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,cAAA,WAAW;IAAA;AAAA,GAAA;AACpB,IAAA,0DAA6D;AAApD,OAAA,cAAA,CAAA,SAAA,cAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,UAAU;IAAA;AAAA,GAAA;AACnB,IAAA,8CAAiD;AAAxC,OAAA,cAAA,CAAA,SAAA,QAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,OAAA,IAAI;IAAA;AAAA,GAAA;AACb,IAAA,sDAAyD;AAAhD,OAAA,cAAA,CAAA,SAAA,YAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,WAAA,QAAQ;IAAA;AAAA,GAAA;AACjB,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,4CAA4D;AAAnD,OAAA,cAAA,CAAA,SAAA,OAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,MAAA,GAAG;IAAA;AAAA,GAAA;AACZ,IAAA,sDAAyE;AAAhE,OAAA,cAAA,CAAA,SAAA,YAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,WAAA,QAAQ;IAAA;AAAA,GAAA;AACjB,IAAA,8DAAiE;AAAxD,OAAA,cAAA,CAAA,SAAA,gBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,eAAA,YAAY;IAAA;AAAA,GAAA;AACrB,IAAA,8DAAiE;AAAxD,OAAA,cAAA,CAAA,SAAA,gBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,eAAA,YAAY;IAAA;AAAA,GAAA;AACrB,IAAA,8DAAiE;AAAxD,OAAA,cAAA,CAAA,SAAA,gBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,eAAA,YAAY;IAAA;AAAA,GAAA;AACrB,IAAA,oDAAmF;AAA1E,OAAA,cAAA,CAAA,SAAA,WAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,UAAA,OAAO;IAAA;AAAA,GAAA;AAChB,IAAA,4DAA+D;AAAtD,OAAA,cAAA,CAAA,SAAA,eAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,cAAA,WAAW;IAAA;AAAA,GAAA;AACpB,IAAA,wDAA2D;AAAlD,OAAA,cAAA,CAAA,SAAA,aAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,YAAA,SAAS;IAAA;AAAA,GAAA;AAClB,IAAA,oDAAuD;AAA9C,OAAA,cAAA,CAAA,SAAA,WAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,UAAA,OAAO;IAAA;AAAA,GAAA;AAChB,IAAA,kDAAqD;AAA5C,OAAA,cAAA,CAAA,SAAA,UAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,SAAA,MAAM;IAAA;AAAA,GAAA;AACf,IAAA,4DAA+D;AAAtD,OAAA,cAAA,CAAA,SAAA,eAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,cAAA,WAAW;IAAA;AAAA,GAAA;AACpB,IAAA,0DAA6D;AAApD,OAAA,cAAA,CAAA,SAAA,cAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,UAAU;IAAA;AAAA,GAAA;AACnB,IAAA,8DAAiE;AAAxD,OAAA,cAAA,CAAA,SAAA,gBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,eAAA,YAAY;IAAA;AAAA,GAAA;AACrB,IAAA,0DAA6D;AAApD,OAAA,cAAA,CAAA,SAAA,cAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,aAAA,UAAU;IAAA;AAAA,GAAA;AACnB,IAAA,kEAAqE;AAA5D,OAAA,cAAA,CAAA,SAAA,kBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,iBAAA,cAAc;IAAA;AAAA,GAAA;AACvB,IAAA,kDAAqD;AAA5C,OAAA,cAAA,CAAA,SAAA,UAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,SAAA,MAAM;IAAA;AAAA,GAAA;AACf,IAAA,oDAAuD;AAA9C,OAAA,cAAA,CAAA,SAAA,WAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,UAAA,OAAO;IAAA;AAAA,GAAA","debugId":null}},
    {"offset": {"line": 11535, "column": 0}, "map": {"version":3,"file":"stegaClean.js","sources":["file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/util/isRecord.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/node_modules/%40vercel/stega/dist/index.mjs","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/stega/stegaClean.ts"],"sourcesContent":["/** @internal */\nexport function isRecord(value: unknown): value is Record<string, unknown> {\n  return typeof value === 'object' && value !== null && !Array.isArray(value)\n}\n","var s={0:8203,1:8204,2:8205,3:8290,4:8291,5:8288,6:65279,7:8289,8:119155,9:119156,a:119157,b:119158,c:119159,d:119160,e:119161,f:119162},c={0:8203,1:8204,2:8205,3:65279},u=new Array(4).fill(String.fromCodePoint(c[0])).join(\"\"),m=String.fromCharCode(0);function E(t){let e=JSON.stringify(t);return`${u}${Array.from(e).map(r=>{let n=r.charCodeAt(0);if(n>255)throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);return Array.from(n.toString(4).padStart(4,\"0\")).map(o=>String.fromCodePoint(c[o])).join(\"\")}).join(\"\")}`}function y(t){let e=JSON.stringify(t);return Array.from(e).map(r=>{let n=r.charCodeAt(0);if(n>255)throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);return Array.from(n.toString(16).padStart(2,\"0\")).map(o=>String.fromCodePoint(s[o])).join(\"\")}).join(\"\")}function I(t){return!Number.isNaN(Number(t))||/[a-z]/i.test(t)&&!/\\d+(?:[-:\\/]\\d+){2}(?:T\\d+(?:[-:\\/]\\d+){1,2}(\\.\\d+)?Z?)?/.test(t)?!1:Boolean(Date.parse(t))}function T(t){try{new URL(t,t.startsWith(\"/\")?\"https://acme.com\":void 0)}catch{return!1}return!0}function C(t,e,r=\"auto\"){return r===!0||r===\"auto\"&&(I(t)||T(t))?t:`${t}${E(e)}`}var x=Object.fromEntries(Object.entries(c).map(t=>t.reverse())),g=Object.fromEntries(Object.entries(s).map(t=>t.reverse())),S=`${Object.values(s).map(t=>`\\\\u{${t.toString(16)}}`).join(\"\")}`,f=new RegExp(`[${S}]{4,}`,\"gu\");function G(t){let e=t.match(f);if(!!e)return h(e[0],!0)[0]}function $(t){let e=t.match(f);if(!!e)return e.map(r=>h(r)).flat()}function h(t,e=!1){let r=Array.from(t);if(r.length%2===0){if(r.length%4||!t.startsWith(u))return A(r,e)}else throw new Error(\"Encoded data has invalid length\");let n=[];for(let o=r.length*.25;o--;){let p=r.slice(o*4,o*4+4).map(d=>x[d.codePointAt(0)]).join(\"\");n.unshift(String.fromCharCode(parseInt(p,4)))}if(e){n.shift();let o=n.indexOf(m);return o===-1&&(o=n.length),[JSON.parse(n.slice(0,o).join(\"\"))]}return n.join(\"\").split(m).filter(Boolean).map(o=>JSON.parse(o))}function A(t,e){var d;let r=[];for(let i=t.length*.5;i--;){let a=`${g[t[i*2].codePointAt(0)]}${g[t[i*2+1].codePointAt(0)]}`;r.unshift(String.fromCharCode(parseInt(a,16)))}let n=[],o=[r.join(\"\")],p=10;for(;o.length;){let i=o.shift();try{if(n.push(JSON.parse(i)),e)return n}catch(a){if(!p--)throw a;let l=+((d=a.message.match(/\\sposition\\s(\\d+)$/))==null?void 0:d[1]);if(!l)throw a;o.unshift(i.substring(0,l),i.substring(l))}}return n}function _(t){var e;return{cleaned:t.replace(f,\"\"),encoded:((e=t.match(f))==null?void 0:e[0])||\"\"}}function O(t){return t&&JSON.parse(_(JSON.stringify(t)).cleaned)}export{f as VERCEL_STEGA_REGEX,y as legacyStegaEncode,O as vercelStegaClean,C as vercelStegaCombine,G as vercelStegaDecode,$ as vercelStegaDecodeAll,E as vercelStegaEncode,_ as vercelStegaSplit};\n","import {vercelStegaClean} from '@vercel/stega'\n\n/**\n * Can take a `result` JSON from a `const {result} = client.fetch(query, params, {filterResponse: false})`\n * and remove all stega-encoded data from it.\n * @public\n */\nexport function stegaClean<Result = unknown>(result: Result): Result {\n  return vercelStegaClean<Result>(result)\n}\n\n/**\n * Can take a `result` JSON from a `const {result} = client.fetch(query, params, {filterResponse: false})`\n * and remove all stega-encoded data from it.\n * @alpha\n * @deprecated Use `stegaClean` instead\n */\nexport const vercelStegaCleanAll = stegaClean\n"],"names":["vercelStegaClean"],"mappings":"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","ignoreList":[0,1,2],"debugId":null}},
    {"offset": {"line": 11613, "column": 0}, "map": {"version":3,"file":"partition.js","sourceRoot":"","sources":["../../../../src/internal/operators/partition.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,+BAAkC;AAClC,IAAA,+BAAkC;AAsDlC,SAAgB,SAAS,CACvB,SAA+C,EAC/C,OAAa;IAEb,OAAO,SAAC,MAAqB;QAC3B,OAAA;YAAC,SAAA,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,MAAM,CAAC;YAAE,SAAA,MAAM,CAAC,MAAA,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;SAAmC;IAA/G,CAA+G,CAAC;AACpH,CAAC;AAND,QAAA,SAAA,GAAA,UAMC","debugId":null}},
    {"offset": {"line": 11634, "column": 0}, "map": {"version":3,"file":"race.js","sourceRoot":"","sources":["../../../../src/internal/operators/race.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAA,qDAAwD;AACxD,IAAA,mCAAsC;AAetC,SAAgB,IAAI;IAAI,IAAA,OAAA,EAAA,CAAc;QAAd,IAAA,KAAA,CAAc,EAAd,KAAA,UAAA,MAAc,EAAd,IAAc,CAAA;QAAd,IAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAc;;IACpC,OAAO,WAAA,QAAQ,CAAA,KAAA,CAAA,KAAA,GAAA,cAAA,EAAA,EAAA,OAAI,iBAAA,cAAc,CAAC,IAAI,CAAC,IAAE;AAC3C,CAAC;AAFD,QAAA,IAAA,GAAA,KAEC","debugId":null}},
    {"offset": {"line": 11677, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/operators/index.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 12481, "column": 0}, "map": {"version":3,"file":"isRecord.js","sources":["file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/util/isRecord.ts"],"sourcesContent":["/** @internal */\nexport function isRecord(value: unknown): value is Record<string, unknown> {\n  return typeof value === 'object' && value !== null && !Array.isArray(value)\n}\n"],"names":[],"mappings":";;;AACO,SAAS,SAAS,KAAA,EAAkD;IAClE,OAAA,OAAO,SAAU,YAAY,UAAU,QAAQ,CAAC,MAAM,OAAA,CAAQ,KAAK;AAC5E","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12495, "column": 0}, "map": {"version":3,"file":"resolveEditInfo.js","sources":["file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/csm/studioPath.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/csm/draftUtils.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/csm/jsonPath.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/csm/resolveMapping.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/csm/isArray.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/csm/walkMap.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/csm/createEditUrl.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/csm/resolveEditInfo.ts"],"sourcesContent":["/** @alpha */\nexport type KeyedSegment = {_key: string}\n\n/** @alpha */\nexport type IndexTuple = [number | '', number | '']\n\n/** @alpha */\nexport type PathSegment = string | number | KeyedSegment | IndexTuple\n\n/** @alpha */\nexport type Path = PathSegment[]\n\nconst rePropName =\n  /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g\n/** @internal */\nexport const reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/\nconst reIndexTuple = /^\\d*:\\d*$/\n\n/** @internal */\nexport function isIndexSegment(segment: PathSegment): segment is number {\n  return typeof segment === 'number' || (typeof segment === 'string' && /^\\[\\d+\\]$/.test(segment))\n}\n\n/** @internal */\nexport function isKeySegment(segment: PathSegment): segment is KeyedSegment {\n  if (typeof segment === 'string') {\n    return reKeySegment.test(segment.trim())\n  }\n\n  return typeof segment === 'object' && '_key' in segment\n}\n\n/** @internal */\nexport function isIndexTuple(segment: PathSegment): segment is IndexTuple {\n  if (typeof segment === 'string' && reIndexTuple.test(segment)) {\n    return true\n  }\n\n  if (!Array.isArray(segment) || segment.length !== 2) {\n    return false\n  }\n\n  const [from, to] = segment\n  return (typeof from === 'number' || from === '') && (typeof to === 'number' || to === '')\n}\n\n/** @internal */\nexport function get<Result = unknown, Fallback = unknown>(\n  obj: unknown,\n  path: Path | string,\n  defaultVal?: Fallback,\n): Result | typeof defaultVal {\n  const select = typeof path === 'string' ? fromString(path) : path\n  if (!Array.isArray(select)) {\n    throw new Error('Path must be an array or a string')\n  }\n\n  let acc: unknown | undefined = obj\n  for (let i = 0; i < select.length; i++) {\n    const segment = select[i]\n    if (isIndexSegment(segment)) {\n      if (!Array.isArray(acc)) {\n        return defaultVal\n      }\n\n      acc = acc[segment]\n    }\n\n    if (isKeySegment(segment)) {\n      if (!Array.isArray(acc)) {\n        return defaultVal\n      }\n\n      acc = acc.find((item) => item._key === segment._key)\n    }\n\n    if (typeof segment === 'string') {\n      acc =\n        typeof acc === 'object' && acc !== null\n          ? ((acc as Record<string, unknown>)[segment] as Result)\n          : undefined\n    }\n\n    if (typeof acc === 'undefined') {\n      return defaultVal\n    }\n  }\n\n  return acc as Result\n}\n\n/** @alpha */\nexport function toString(path: Path): string {\n  if (!Array.isArray(path)) {\n    throw new Error('Path is not an array')\n  }\n\n  return path.reduce<string>((target, segment, i) => {\n    const segmentType = typeof segment\n    if (segmentType === 'number') {\n      return `${target}[${segment}]`\n    }\n\n    if (segmentType === 'string') {\n      const separator = i === 0 ? '' : '.'\n      return `${target}${separator}${segment}`\n    }\n\n    if (isKeySegment(segment) && segment._key) {\n      return `${target}[_key==\"${segment._key}\"]`\n    }\n\n    if (Array.isArray(segment)) {\n      const [from, to] = segment\n      return `${target}[${from}:${to}]`\n    }\n\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``)\n  }, '')\n}\n\n/** @alpha */\nexport function fromString(path: string): Path {\n  if (typeof path !== 'string') {\n    throw new Error('Path is not a string')\n  }\n\n  const segments = path.match(rePropName)\n  if (!segments) {\n    throw new Error('Invalid path string')\n  }\n\n  return segments.map(parsePathSegment)\n}\n\nfunction parsePathSegment(segment: string): PathSegment {\n  if (isIndexSegment(segment)) {\n    return parseIndexSegment(segment)\n  }\n\n  if (isKeySegment(segment)) {\n    return parseKeySegment(segment)\n  }\n\n  if (isIndexTuple(segment)) {\n    return parseIndexTupleSegment(segment)\n  }\n\n  return segment\n}\n\nfunction parseIndexSegment(segment: string): PathSegment {\n  return Number(segment.replace(/[^\\d]/g, ''))\n}\n\nfunction parseKeySegment(segment: string): KeyedSegment {\n  const segments = segment.match(reKeySegment)\n  return {_key: segments![1]}\n}\n\nfunction parseIndexTupleSegment(segment: string): IndexTuple {\n  const [from, to] = segment.split(':').map((seg) => (seg === '' ? seg : Number(seg)))\n  return [from, to]\n}\n","// nominal/opaque type hack\ntype Opaque<T, K> = T & {__opaqueId__: K}\n\n/** @internal */\nexport type DraftId = Opaque<string, 'draftId'>\n\n/** @internal */\nexport type PublishedId = Opaque<string, 'publishedId'>\n\n/** @internal */\nexport const DRAFTS_FOLDER = 'drafts'\n\n/** @internal */\nexport const VERSION_FOLDER = 'versions'\n\nconst PATH_SEPARATOR = '.'\nconst DRAFTS_PREFIX = `${DRAFTS_FOLDER}${PATH_SEPARATOR}`\nconst VERSION_PREFIX = `${VERSION_FOLDER}${PATH_SEPARATOR}`\n\n/** @internal */\nexport function isDraftId(id: string): id is DraftId {\n  return id.startsWith(DRAFTS_PREFIX)\n}\n\n/** @internal */\nexport function isVersionId(id: string): boolean {\n  return id.startsWith(VERSION_PREFIX)\n}\n\n/** @internal */\nexport function isPublishedId(id: string): id is PublishedId {\n  return !isDraftId(id) && !isVersionId(id)\n}\n\n/** @internal */\nexport function getDraftId(id: string): DraftId {\n  if (isVersionId(id)) {\n    const publishedId = getPublishedId(id)\n    return (DRAFTS_PREFIX + publishedId) as DraftId\n  }\n\n  return isDraftId(id) ? id : ((DRAFTS_PREFIX + id) as DraftId)\n}\n\n/**  @internal */\nexport function getVersionId(id: string, version: string): string {\n  if (version === 'drafts' || version === 'published') {\n    throw new Error('Version can not be \"published\" or \"drafts\"')\n  }\n\n  return `${VERSION_PREFIX}${version}${PATH_SEPARATOR}${getPublishedId(id)}`\n}\n\n/**\n *  @internal\n *  Given an id, returns the versionId if it exists.\n *  e.g. `versions.summer-drop.foo` = `summer-drop`\n *  e.g. `drafts.foo` = `undefined`\n *  e.g. `foo` = `undefined`\n */\nexport function getVersionFromId(id: string): string | undefined {\n  if (!isVersionId(id)) return undefined\n  // eslint-disable-next-line unused-imports/no-unused-vars\n  const [_versionPrefix, versionId, ..._publishedId] = id.split(PATH_SEPARATOR)\n\n  return versionId\n}\n\n/** @internal */\nexport function getPublishedId(id: string): PublishedId {\n  if (isVersionId(id)) {\n    // make sure to only remove the versions prefix and the bundle name\n    return id.split(PATH_SEPARATOR).slice(2).join(PATH_SEPARATOR) as PublishedId as PublishedId\n  }\n\n  if (isDraftId(id)) {\n    return id.slice(DRAFTS_PREFIX.length) as PublishedId\n  }\n\n  return id as PublishedId\n}\n","import * as studioPath from './studioPath'\nimport type {\n  ContentSourceMapParsedPath,\n  ContentSourceMapParsedPathKeyedSegment,\n  ContentSourceMapPaths,\n  Path,\n} from './types'\n\nconst ESCAPE: Record<string, string> = {\n  '\\f': '\\\\f',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t',\n  \"'\": \"\\\\'\",\n  '\\\\': '\\\\\\\\',\n}\n\nconst UNESCAPE: Record<string, string> = {\n  '\\\\f': '\\f',\n  '\\\\n': '\\n',\n  '\\\\r': '\\r',\n  '\\\\t': '\\t',\n  \"\\\\'\": \"'\",\n  '\\\\\\\\': '\\\\',\n}\n\n/**\n * @internal\n */\nexport function jsonPath(path: ContentSourceMapParsedPath): ContentSourceMapPaths[number] {\n  return `$${path\n    .map((segment) => {\n      if (typeof segment === 'string') {\n        const escapedKey = segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => {\n          return ESCAPE[match]\n        })\n        return `['${escapedKey}']`\n      }\n\n      if (typeof segment === 'number') {\n        return `[${segment}]`\n      }\n\n      if (segment._key !== '') {\n        const escapedKey = segment._key.replace(/['\\\\]/g, (match) => {\n          return ESCAPE[match]\n        })\n        return `[?(@._key=='${escapedKey}')]`\n      }\n\n      return `[${segment._index}]`\n    })\n    .join('')}`\n}\n\n/**\n * @internal\n */\nexport function parseJsonPath(path: ContentSourceMapPaths[number]): ContentSourceMapParsedPath {\n  const parsed: ContentSourceMapParsedPath = []\n\n  const parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g\n  let match: RegExpExecArray | null\n\n  while ((match = parseRe.exec(path)) !== null) {\n    if (match[1] !== undefined) {\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => {\n        return UNESCAPE[m]\n      })\n\n      parsed.push(key)\n      continue\n    }\n\n    if (match[2] !== undefined) {\n      parsed.push(parseInt(match[2], 10))\n      continue\n    }\n\n    if (match[3] !== undefined) {\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => {\n        return UNESCAPE[m]\n      })\n\n      parsed.push({\n        _key,\n        _index: -1,\n      })\n      continue\n    }\n  }\n\n  return parsed\n}\n\n/**\n * @internal\n */\nexport function jsonPathToStudioPath(path: ContentSourceMapParsedPath): Path {\n  return path.map((segment) => {\n    if (typeof segment === 'string') {\n      return segment\n    }\n\n    if (typeof segment === 'number') {\n      return segment\n    }\n\n    if (segment._key !== '') {\n      return {_key: segment._key}\n    }\n\n    if (segment._index !== -1) {\n      return segment._index\n    }\n\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`)\n  })\n}\n\n/**\n * @internal\n */\nexport function studioPathToJsonPath(path: Path | string): ContentSourceMapParsedPath {\n  const parsedPath = typeof path === 'string' ? studioPath.fromString(path) : path\n\n  return parsedPath.map((segment) => {\n    if (typeof segment === 'string') {\n      return segment\n    }\n\n    if (typeof segment === 'number') {\n      return segment\n    }\n\n    if (Array.isArray(segment)) {\n      throw new Error(`IndexTuple segments aren't supported:${JSON.stringify(segment)}`)\n    }\n\n    if (isContentSourceMapParsedPathKeyedSegment(segment)) {\n      return segment\n    }\n\n    if (segment._key) {\n      return {_key: segment._key, _index: -1}\n    }\n\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`)\n  })\n}\n\nfunction isContentSourceMapParsedPathKeyedSegment(\n  segment: studioPath.PathSegment | ContentSourceMapParsedPath[number],\n): segment is ContentSourceMapParsedPathKeyedSegment {\n  return typeof segment === 'object' && '_key' in segment && '_index' in segment\n}\n\n/**\n * @internal\n */\nexport function jsonPathToMappingPath(path: ContentSourceMapParsedPath): (string | number)[] {\n  return path.map((segment) => {\n    if (typeof segment === 'string') {\n      return segment\n    }\n\n    if (typeof segment === 'number') {\n      return segment\n    }\n\n    if (segment._index !== -1) {\n      return segment._index\n    }\n\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`)\n  })\n}\n","import {jsonPath, jsonPathToMappingPath} from './jsonPath'\nimport type {ContentSourceMap, ContentSourceMapMapping, ContentSourceMapParsedPath} from './types'\n\n/**\n * @internal\n */\nexport function resolveMapping(\n  resultPath: ContentSourceMapParsedPath,\n  csm?: ContentSourceMap,\n):\n  | {\n      mapping: ContentSourceMapMapping\n      matchedPath: string\n      pathSuffix: string\n    }\n  | undefined {\n  if (!csm?.mappings) {\n    return undefined\n  }\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath))\n\n  if (csm.mappings[resultMappingPath] !== undefined) {\n    return {\n      mapping: csm.mappings[resultMappingPath],\n      matchedPath: resultMappingPath,\n      pathSuffix: '',\n    }\n  }\n\n  const mappings = Object.entries(csm.mappings)\n    .filter(([key]) => resultMappingPath.startsWith(key))\n    .sort(([key1], [key2]) => key2.length - key1.length)\n\n  if (mappings.length == 0) {\n    return undefined\n  }\n\n  const [matchedPath, mapping] = mappings[0]\n  const pathSuffix = resultMappingPath.substring(matchedPath.length)\n  return {mapping, matchedPath, pathSuffix}\n}\n","/** @internal */\nexport function isArray(value: unknown): value is Array<unknown> {\n  return value !== null && Array.isArray(value)\n}\n","import {isRecord} from '../util/isRecord'\nimport {isArray} from './isArray'\nimport type {ContentSourceMapParsedPath, WalkMapFn} from './types'\n\n/**\n * generic way to walk a nested object or array and apply a mapping function to each value\n * @internal\n */\nexport function walkMap(\n  value: unknown,\n  mappingFn: WalkMapFn,\n  path: ContentSourceMapParsedPath = [],\n): unknown {\n  if (isArray(value)) {\n    return value.map((v, idx) => {\n      if (isRecord(v)) {\n        const _key = v['_key']\n        if (typeof _key === 'string') {\n          return walkMap(v, mappingFn, path.concat({_key, _index: idx}))\n        }\n      }\n\n      return walkMap(v, mappingFn, path.concat(idx))\n    })\n  }\n\n  if (isRecord(value)) {\n    // Handle Portable Text in a faster way\n    if (value._type === 'block' || value._type === 'span') {\n      const result = {...value}\n      if (value._type === 'block') {\n        result.children = walkMap(value.children, mappingFn, path.concat('children'))\n      } else if (value._type === 'span') {\n        result.text = walkMap(value.text, mappingFn, path.concat('text'))\n      }\n      return result\n    }\n\n    return Object.fromEntries(\n      Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))]),\n    )\n  }\n\n  return mappingFn(value, path)\n}\n","import {getPublishedId, getVersionFromId, isPublishedId, isVersionId} from './draftUtils'\nimport {jsonPathToStudioPath} from './jsonPath'\nimport * as studioPath from './studioPath'\nimport type {CreateEditUrlOptions, EditIntentUrl, StudioBaseUrl} from './types'\n\n/** @internal */\nexport function createEditUrl(options: CreateEditUrlOptions): `${StudioBaseUrl}${EditIntentUrl}` {\n  const {\n    baseUrl,\n    workspace: _workspace = 'default',\n    tool: _tool = 'default',\n    id: _id,\n    type,\n    path,\n    projectId,\n    dataset,\n  } = options\n\n  if (!baseUrl) {\n    throw new Error('baseUrl is required')\n  }\n  if (!path) {\n    throw new Error('path is required')\n  }\n  if (!_id) {\n    throw new Error('id is required')\n  }\n  if (baseUrl !== '/' && baseUrl.endsWith('/')) {\n    throw new Error('baseUrl must not end with a slash')\n  }\n\n  const workspace = _workspace === 'default' ? undefined : _workspace\n  const tool = _tool === 'default' ? undefined : _tool\n  const id = getPublishedId(_id)\n  const stringifiedPath = Array.isArray(path)\n    ? studioPath.toString(jsonPathToStudioPath(path))\n    : path\n\n  // eslint-disable-next-line no-warning-comments\n  // @TODO Using searchParams as a temporary workaround until `@sanity/overlays` can decode state from the path reliably\n  const searchParams = new URLSearchParams({\n    baseUrl,\n    id,\n    type,\n    path: stringifiedPath,\n  })\n  if (workspace) {\n    searchParams.set('workspace', workspace)\n  }\n  if (tool) {\n    searchParams.set('tool', tool)\n  }\n  if (projectId) {\n    searchParams.set('projectId', projectId)\n  }\n  if (dataset) {\n    searchParams.set('dataset', dataset)\n  }\n  if (isPublishedId(_id)) {\n    searchParams.set('perspective', 'published')\n  } else if (isVersionId(_id)) {\n    const versionId = getVersionFromId(_id)!\n    searchParams.set('perspective', versionId)\n  }\n\n  const segments = [baseUrl === '/' ? '' : baseUrl]\n  if (workspace) {\n    segments.push(workspace)\n  }\n  const routerParams = [\n    'mode=presentation',\n    `id=${id}`,\n    `type=${type}`,\n    `path=${encodeURIComponent(stringifiedPath)}`,\n  ]\n  if (tool) {\n    routerParams.push(`tool=${tool}`)\n  }\n  segments.push('intent', 'edit', `${routerParams.join(';')}?${searchParams}`)\n  return segments.join('/') as unknown as `${StudioBaseUrl}${EditIntentUrl}`\n}\n","import {parseJsonPath} from './jsonPath'\nimport {resolveMapping} from './resolveMapping'\nimport type {\n  CreateEditUrlOptions,\n  ResolveEditInfoOptions,\n  StudioBaseRoute,\n  StudioBaseUrl,\n  StudioUrl,\n} from './types'\n\n/** @internal */\nexport function resolveEditInfo(options: ResolveEditInfoOptions): CreateEditUrlOptions | undefined {\n  const {resultSourceMap: csm, resultPath} = options\n  const {mapping, pathSuffix} = resolveMapping(resultPath, csm) || {}\n\n  if (!mapping) {\n    // console.warn('no mapping for path', { path: resultPath, sourceMap: csm })\n    return undefined\n  }\n\n  if (mapping.source.type === 'literal') {\n    return undefined\n  }\n\n  if (mapping.source.type === 'unknown') {\n    return undefined\n  }\n\n  const sourceDoc = csm.documents[mapping.source.document]\n  const sourcePath = csm.paths[mapping.source.path]\n\n  if (sourceDoc && sourcePath) {\n    const {baseUrl, workspace, tool} = resolveStudioBaseRoute(\n      typeof options.studioUrl === 'function' ? options.studioUrl(sourceDoc) : options.studioUrl,\n    )\n    if (!baseUrl) return undefined\n    const {_id, _type, _projectId, _dataset} = sourceDoc\n    return {\n      baseUrl,\n      workspace,\n      tool,\n      id: _id,\n      type: _type,\n      path: parseJsonPath(sourcePath + pathSuffix),\n      projectId: _projectId,\n      dataset: _dataset,\n    } satisfies CreateEditUrlOptions\n  }\n\n  return undefined\n}\n\n/** @internal */\nexport function resolveStudioBaseRoute(studioUrl: StudioUrl): StudioBaseRoute {\n  let baseUrl: StudioBaseUrl = typeof studioUrl === 'string' ? studioUrl : studioUrl.baseUrl\n  if (baseUrl !== '/') {\n    baseUrl = baseUrl.replace(/\\/$/, '')\n  }\n  if (typeof studioUrl === 'string') {\n    return {baseUrl}\n  }\n  return {...studioUrl, baseUrl}\n}\n"],"names":["studioPath.fromString","studioPath.toString"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7],"debugId":null}},
    {"offset": {"line": 12815, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/nanoid/url-alphabet/index.js"],"sourcesContent":["let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nexport { urlAlphabet }\n"],"names":[],"mappings":";;;AAAA,IAAI,cACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12826, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/nanoid/index.js"],"sourcesContent":["import crypto from 'crypto'\nimport { urlAlphabet } from './url-alphabet/index.js'\nconst POOL_SIZE_MULTIPLIER = 128\nlet pool, poolOffset\nlet fillPool = bytes => {\n  if (!pool || pool.length < bytes) {\n    pool = Buffer.allocUnsafe(bytes * POOL_SIZE_MULTIPLIER)\n    crypto.randomFillSync(pool)\n    poolOffset = 0\n  } else if (poolOffset + bytes > pool.length) {\n    crypto.randomFillSync(pool)\n    poolOffset = 0\n  }\n  poolOffset += bytes\n}\nlet random = bytes => {\n  fillPool((bytes |= 0))\n  return pool.subarray(poolOffset - bytes, poolOffset)\n}\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (31 - Math.clz32((alphabet.length - 1) | 1))) - 1\n  let step = Math.ceil((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let i = step\n      while (i--) {\n        id += alphabet[bytes[i] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  fillPool((size |= 0))\n  let id = ''\n  for (let i = poolOffset - size; i < poolOffset; i++) {\n    id += urlAlphabet[pool[i] & 63]\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AACA,MAAM,uBAAuB;AAC7B,IAAI,MAAM;AACV,IAAI,WAAW,CAAA;IACb,IAAI,CAAC,QAAQ,KAAK,MAAM,GAAG,OAAO;QAChC,OAAO,OAAO,WAAW,CAAC,QAAQ;QAClC,qGAAA,CAAA,UAAM,CAAC,cAAc,CAAC;QACtB,aAAa;IACf,OAAO,IAAI,aAAa,QAAQ,KAAK,MAAM,EAAE;QAC3C,qGAAA,CAAA,UAAM,CAAC,cAAc,CAAC;QACtB,aAAa;IACf;IACA,cAAc;AAChB;AACA,IAAI,SAAS,CAAA;IACX,SAAU,SAAS;IACnB,OAAO,KAAK,QAAQ,CAAC,aAAa,OAAO;AAC3C;AACA,IAAI,eAAe,CAAC,UAAU,aAAa;IACzC,IAAI,OAAO,CAAC,KAAM,KAAK,KAAK,KAAK,CAAC,AAAC,SAAS,MAAM,GAAG,IAAK,EAAG,IAAI;IACjE,IAAI,OAAO,KAAK,IAAI,CAAC,AAAC,MAAM,OAAO,cAAe,SAAS,MAAM;IACjE,OAAO,CAAC,OAAO,WAAW;QACxB,IAAI,KAAK;QACT,MAAO,KAAM;YACX,IAAI,QAAQ,UAAU;YACtB,IAAI,IAAI;YACR,MAAO,IAAK;gBACV,MAAM,QAAQ,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,IAAI;gBACnC,IAAI,GAAG,MAAM,KAAK,MAAM,OAAO;YACjC;QACF;IACF;AACF;AACA,IAAI,iBAAiB,CAAC,UAAU,OAAO,EAAE,GACvC,aAAa,UAAU,MAAM;AAC/B,IAAI,SAAS,CAAC,OAAO,EAAE;IACrB,SAAU,QAAQ;IAClB,IAAI,KAAK;IACT,IAAK,IAAI,IAAI,aAAa,MAAM,IAAI,YAAY,IAAK;QACnD,MAAM,kJAAA,CAAA,cAAW,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG;IACjC;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 12884, "column": 0}, "map": {"version":3,"file":"index.browser.js","sources":["file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/util/codeFrame.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/http/errors.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/http/request.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/generateHelpUrl.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/validators.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/types.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/util/once.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/warnings.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/config.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/data/eventsource.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/util/getSelection.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/data/patch.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/data/transaction.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/http/requestOptions.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/data/encodeQueryString.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/data/dataMethods.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/agent/actions/generate.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/agent/actions/patch.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/agent/actions/prompt.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/agent/actions/transform.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/agent/actions/translate.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/agent/actions/AgentActionsClient.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/assets/AssetsClient.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/util/defaults.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/util/pick.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/data/eventsourcePolyfill.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/data/reconnectOnConnectionFailure.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/data/listen.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/util/shareReplayLatest.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/data/live.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/datasets/DatasetsClient.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/mediaLibrary/MediaLibraryVideoClient.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/projects/ProjectsClient.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/util/createVersionId.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/releases/createRelease.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/releases/ReleasesClient.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/users/UsersClient.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/SanityClient.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/defineCreateClient.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/defineDeprecatedCreateClient.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/http/browserMiddleware.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/client/src/index.browser.ts"],"sourcesContent":["/**\n * Inlined, modified version of the `codeFrameColumns` function from `@babel/code-frame`.\n * MIT-licensed - https://github.com/babel/babel/blob/main/LICENSE\n * Copyright (c) 2014-present Sebastian McKenzie and other contributors.\n */\ntype Location = {\n  column: number\n  line: number\n}\n\ntype NodeLocation = {\n  start: Location\n  end?: Location\n}\n\ntype GroqLocation = {\n  start: number\n  end?: number\n}\n\n/**\n * RegExp to test for newlines.\n */\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/\n\n/**\n * Extract what lines should be marked and highlighted.\n */\n\ntype MarkerLines = Record<number, true | [number, number]>\n\n/**\n * Highlight a code frame with the given location and message.\n *\n * @param query - The query to be highlighted.\n * @param location - The location of the error in the code/query.\n * @param message - Message to be displayed inline (if possible) next to the highlighted\n * location in the code. If it can't be positioned inline, it will be placed above the\n * code frame.\n * @returns The highlighted code frame.\n */\nexport function codeFrame(query: string, location: GroqLocation, message?: string): string {\n  const lines = query.split(NEWLINE)\n  const loc = {\n    start: columnToLine(location.start, lines),\n    end: location.end ? columnToLine(location.end, lines) : undefined,\n  }\n\n  const {start, end, markerLines} = getMarkerLines(loc, lines)\n\n  const numberMaxWidth = `${end}`.length\n\n  return query\n    .split(NEWLINE, end)\n    .slice(start, end)\n    .map((line, index) => {\n      const number = start + 1 + index\n      const paddedNumber = ` ${number}`.slice(-numberMaxWidth)\n      const gutter = ` ${paddedNumber} |`\n      const hasMarker = markerLines[number]\n      const lastMarkerLine = !markerLines[number + 1]\n      if (!hasMarker) {\n        return ` ${gutter}${line.length > 0 ? ` ${line}` : ''}`\n      }\n\n      let markerLine = ''\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, ' ')\n        const numberOfMarkers = hasMarker[1] || 1\n\n        markerLine = [\n          '\\n ',\n          gutter.replace(/\\d/g, ' '),\n          ' ',\n          markerSpacing,\n          '^'.repeat(numberOfMarkers),\n        ].join('')\n\n        if (lastMarkerLine && message) {\n          markerLine += ' ' + message\n        }\n      }\n      return ['>', gutter, line.length > 0 ? ` ${line}` : '', markerLine].join('')\n    })\n    .join('\\n')\n}\n\nfunction getMarkerLines(\n  loc: NodeLocation,\n  source: Array<string>,\n): {\n  start: number\n  end: number\n  markerLines: MarkerLines\n} {\n  const startLoc: Location = {...loc.start}\n  const endLoc: Location = {...startLoc, ...loc.end}\n  const linesAbove = 2\n  const linesBelow = 3\n  const startLine = startLoc.line ?? -1\n  const startColumn = startLoc.column ?? 0\n  const endLine = endLoc.line\n  const endColumn = endLoc.column\n\n  let start = Math.max(startLine - (linesAbove + 1), 0)\n  let end = Math.min(source.length, endLine + linesBelow)\n\n  if (startLine === -1) {\n    start = 0\n  }\n\n  if (endLine === -1) {\n    end = source.length\n  }\n\n  const lineDiff = endLine - startLine\n  const markerLines: MarkerLines = {}\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length\n\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1]\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn]\n      } else {\n        const sourceLength = source[lineNumber - i].length\n\n        markerLines[lineNumber] = [0, sourceLength]\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0]\n      } else {\n        markerLines[startLine] = true\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn]\n    }\n  }\n\n  return {start, end, markerLines}\n}\n\nfunction columnToLine(column: number, lines: string[]): Location {\n  let offset = 0\n\n  for (let i = 0; i < lines.length; i++) {\n    const lineLength = lines[i].length + 1 // assume '\\n' after each line\n\n    if (offset + lineLength > column) {\n      return {\n        line: i + 1, // 1-based line\n        column: column - offset, // 0-based column\n      }\n    }\n\n    offset += lineLength\n  }\n\n  // Fallback: beyond last line\n  return {\n    line: lines.length,\n    column: lines[lines.length - 1]?.length ?? 0,\n  }\n}\n","import type {HttpContext} from 'get-it'\n\nimport type {ActionError, Any, ErrorProps, MutationError, QueryParseError} from '../types'\nimport {codeFrame} from '../util/codeFrame'\nimport {isRecord} from '../util/isRecord'\n\nconst MAX_ITEMS_IN_ERROR_MESSAGE = 5\n\n/**\n * Shared properties for HTTP errors (eg both ClientError and ServerError)\n * Use `isHttpError` for type narrowing and accessing response properties.\n *\n * @public\n */\nexport interface HttpError {\n  statusCode: number\n  message: string\n  response: {\n    body: unknown\n    url: string\n    method: string\n    headers: Record<string, string>\n    statusCode: number\n    statusMessage: string | null\n  }\n}\n\n/**\n * Checks if the provided error is an HTTP error.\n *\n * @param error - The error to check.\n * @returns `true` if the error is an HTTP error, `false` otherwise.\n * @public\n */\nexport function isHttpError(error: unknown): error is HttpError {\n  if (!isRecord(error)) {\n    return false\n  }\n\n  const response = error.response\n  if (\n    typeof error.statusCode !== 'number' ||\n    typeof error.message !== 'string' ||\n    !isRecord(response)\n  ) {\n    return false\n  }\n\n  if (\n    typeof response.body === 'undefined' ||\n    typeof response.url !== 'string' ||\n    typeof response.method !== 'string' ||\n    typeof response.headers !== 'object' ||\n    typeof response.statusCode !== 'number'\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/** @public */\nexport class ClientError extends Error {\n  response: ErrorProps['response']\n  statusCode: ErrorProps['statusCode'] = 400\n  responseBody: ErrorProps['responseBody']\n  details: ErrorProps['details']\n\n  constructor(res: Any, context?: HttpContext) {\n    const props = extractErrorProps(res, context)\n    super(props.message)\n    Object.assign(this, props)\n  }\n}\n\n/** @public */\nexport class ServerError extends Error {\n  response: ErrorProps['response']\n  statusCode: ErrorProps['statusCode'] = 500\n  responseBody: ErrorProps['responseBody']\n  details: ErrorProps['details']\n\n  constructor(res: Any) {\n    const props = extractErrorProps(res)\n    super(props.message)\n    Object.assign(this, props)\n  }\n}\n\nfunction extractErrorProps(res: Any, context?: HttpContext): ErrorProps {\n  const body = res.body\n  const props = {\n    response: res,\n    statusCode: res.statusCode,\n    responseBody: stringifyBody(body, res),\n    message: '',\n    details: undefined as Any,\n  }\n\n  // Fall back early if we didn't get a JSON object returned as expected\n  if (!isRecord(body)) {\n    props.message = httpErrorMessage(res, body)\n    return props\n  }\n\n  const error = body.error\n\n  // API/Boom style errors ({statusCode, error, message})\n  if (typeof error === 'string' && typeof body.message === 'string') {\n    props.message = `${error} - ${body.message}`\n    return props\n  }\n\n  // Content Lake errors with a `error` prop being an object\n  if (typeof error !== 'object' || error === null) {\n    if (typeof error === 'string') {\n      props.message = error\n    } else if (typeof body.message === 'string') {\n      props.message = body.message\n    } else {\n      props.message = httpErrorMessage(res, body)\n    }\n    return props\n  }\n\n  // Mutation errors (specifically)\n  if (isMutationError(error) || isActionError(error)) {\n    const allItems = error.items || []\n    const items = allItems\n      .slice(0, MAX_ITEMS_IN_ERROR_MESSAGE)\n      .map((item) => item.error?.description)\n      .filter(Boolean)\n    let itemsStr = items.length ? `:\\n- ${items.join('\\n- ')}` : ''\n    if (allItems.length > MAX_ITEMS_IN_ERROR_MESSAGE) {\n      itemsStr += `\\n...and ${allItems.length - MAX_ITEMS_IN_ERROR_MESSAGE} more`\n    }\n    props.message = `${error.description}${itemsStr}`\n    props.details = body.error\n    return props\n  }\n\n  // Query parse errors\n  if (isQueryParseError(error)) {\n    const tag = context?.options?.query?.tag\n    props.message = formatQueryParseError(error, tag)\n    props.details = body.error\n    return props\n  }\n\n  if ('description' in error && typeof error.description === 'string') {\n    // Query/database errors ({error: {description, other, arb, props}})\n    props.message = error.description\n    props.details = error\n    return props\n  }\n\n  // Other, more arbitrary errors\n  props.message = httpErrorMessage(res, body)\n  return props\n}\n\nfunction isMutationError(error: object): error is MutationError {\n  return (\n    'type' in error &&\n    error.type === 'mutationError' &&\n    'description' in error &&\n    typeof error.description === 'string'\n  )\n}\n\nfunction isActionError(error: object): error is ActionError {\n  return (\n    'type' in error &&\n    error.type === 'actionError' &&\n    'description' in error &&\n    typeof error.description === 'string'\n  )\n}\n\n/** @internal */\nexport function isQueryParseError(error: object): error is QueryParseError {\n  return (\n    isRecord(error) &&\n    error.type === 'queryParseError' &&\n    typeof error.query === 'string' &&\n    typeof error.start === 'number' &&\n    typeof error.end === 'number'\n  )\n}\n\n/**\n * Formats a GROQ query parse error into a human-readable string.\n *\n * @param error - The error object containing details about the parse error.\n * @param tag - An optional tag to include in the error message.\n * @returns A formatted error message string.\n * @public\n */\nexport function formatQueryParseError(error: QueryParseError, tag?: string | null) {\n  const {query, start, end, description} = error\n\n  if (!query || typeof start === 'undefined') {\n    return `GROQ query parse error: ${description}`\n  }\n\n  const withTag = tag ? `\\n\\nTag: ${tag}` : ''\n  const framed = codeFrame(query, {start, end}, description)\n\n  return `GROQ query parse error:\\n${framed}${withTag}`\n}\n\nfunction httpErrorMessage(res: Any, body: unknown) {\n  const details = typeof body === 'string' ? ` (${sliceWithEllipsis(body, 100)})` : ''\n  const statusMessage = res.statusMessage ? ` ${res.statusMessage}` : ''\n  return `${res.method}-request to ${res.url} resulted in HTTP ${res.statusCode}${statusMessage}${details}`\n}\n\nfunction stringifyBody(body: Any, res: Any) {\n  const contentType = (res.headers['content-type'] || '').toLowerCase()\n  const isJson = contentType.indexOf('application/json') !== -1\n  return isJson ? JSON.stringify(body, null, 2) : body\n}\n\nfunction sliceWithEllipsis(str: string, max: number) {\n  return str.length > max ? `${str.slice(0, max)}…` : str\n}\n\n/** @public */\nexport class CorsOriginError extends Error {\n  projectId: string\n  addOriginUrl?: URL\n\n  constructor({projectId}: {projectId: string}) {\n    super('CorsOriginError')\n    this.name = 'CorsOriginError'\n    this.projectId = projectId\n\n    const url = new URL(`https://sanity.io/manage/project/${projectId}/api`)\n    if (typeof location !== 'undefined') {\n      const {origin} = location\n      url.searchParams.set('cors', 'add')\n      url.searchParams.set('origin', origin)\n      this.addOriginUrl = url\n      this.message = `The current origin is not allowed to connect to the Live Content API. Add it here: ${url}`\n    } else {\n      this.message = `The current origin is not allowed to connect to the Live Content API. Change your configuration here: ${url}`\n    }\n  }\n}\n","import {getIt, type HttpContext, type Middlewares, type Requester} from 'get-it'\nimport {jsonRequest, jsonResponse, observable, progress, retry} from 'get-it/middleware'\nimport {Observable} from 'rxjs'\n\nimport type {Any} from '../types'\nimport {ClientError, ServerError} from './errors'\n\nconst httpError = {\n  onResponse: (res: Any, context: HttpContext) => {\n    if (res.statusCode >= 500) {\n      throw new ServerError(res)\n    } else if (res.statusCode >= 400) {\n      throw new ClientError(res, context)\n    }\n\n    return res\n  },\n}\n\nfunction printWarnings(config: {ignoreWarnings?: string | RegExp | Array<string | RegExp>} = {}) {\n  const seen: Record<string, boolean> = {}\n\n  // Helper function to check if a warning should be ignored\n  const shouldIgnoreWarning = (message: string): boolean => {\n    if (config.ignoreWarnings === undefined) return false\n\n    const patterns = Array.isArray(config.ignoreWarnings)\n      ? config.ignoreWarnings\n      : [config.ignoreWarnings]\n\n    return patterns.some((pattern) => {\n      if (typeof pattern === 'string') {\n        return message.includes(pattern)\n      } else if (pattern instanceof RegExp) {\n        return pattern.test(message)\n      }\n      return false\n    })\n  }\n\n  return {\n    onResponse: (res: Any) => {\n      const warn = res.headers['x-sanity-warning']\n      const warnings = Array.isArray(warn) ? warn : [warn]\n      for (const msg of warnings) {\n        if (!msg || seen[msg]) continue\n\n        // Skip warnings that match ignore patterns\n        if (shouldIgnoreWarning(msg)) {\n          continue\n        }\n\n        seen[msg] = true\n        console.warn(msg) // eslint-disable-line no-console\n      }\n      return res\n    },\n  }\n}\n\ntype HttpRequestConfig = {\n  ignoreWarnings?: string | RegExp | Array<string | RegExp>\n}\n\n/** @internal */\nexport function defineHttpRequest(\n  envMiddleware: Middlewares,\n  config: HttpRequestConfig = {},\n): Requester {\n  return getIt([\n    retry({shouldRetry}),\n    ...envMiddleware,\n    printWarnings(config),\n    jsonRequest(),\n    jsonResponse(),\n    progress(),\n    httpError,\n    observable({implementation: Observable}),\n  ])\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction shouldRetry(err: any, attempt: number, options: any) {\n  // Allow opting out of retries\n  if (options.maxRetries === 0) return false\n\n  // By default `retry.shouldRetry` doesn't retry on server errors so we add our own logic.\n\n  const isSafe = options.method === 'GET' || options.method === 'HEAD'\n  const uri = options.uri || options.url\n  const isQuery = uri.startsWith('/data/query')\n  const isRetriableResponse =\n    err.response &&\n    (err.response.statusCode === 429 ||\n      err.response.statusCode === 502 ||\n      err.response.statusCode === 503)\n\n  // We retry the following errors:\n  // - 429 means that the request was rate limited. It's a bit difficult\n  //   to know exactly how long it makes sense to wait and/or how many\n  //   attempts we should retry, but the backoff should alleviate the\n  //   additional load.\n  // - 502/503 can occur when certain components struggle to talk to their\n  //   upstream dependencies. This is most likely a temporary problem\n  //   and retrying makes sense.\n\n  if ((isSafe || isQuery) && isRetriableResponse) return true\n\n  return retry.shouldRetry(err, attempt, options)\n}\n","const BASE_URL = 'https://www.sanity.io/help/'\n\nexport function generateHelpUrl(slug: string) {\n  return BASE_URL + slug\n}\n","import type {Any, InitializedClientConfig, SanityDocumentStub} from './types'\n\nconst VALID_ASSET_TYPES = ['image', 'file']\nconst VALID_INSERT_LOCATIONS = ['before', 'after', 'replace']\n\nexport const dataset = (name: string) => {\n  if (!/^(~[a-z0-9]{1}[-\\w]{0,63}|[a-z0-9]{1}[-\\w]{0,63})$/.test(name)) {\n    throw new Error(\n      'Datasets can only contain lowercase characters, numbers, underscores and dashes, and start with tilde, and be maximum 64 characters',\n    )\n  }\n}\n\nexport const projectId = (id: string) => {\n  if (!/^[-a-z0-9]+$/i.test(id)) {\n    throw new Error('`projectId` can only contain only a-z, 0-9 and dashes')\n  }\n}\n\nexport const validateAssetType = (type: string) => {\n  if (VALID_ASSET_TYPES.indexOf(type) === -1) {\n    throw new Error(`Invalid asset type: ${type}. Must be one of ${VALID_ASSET_TYPES.join(', ')}`)\n  }\n}\n\nexport const validateObject = (op: string, val: Any) => {\n  if (val === null || typeof val !== 'object' || Array.isArray(val)) {\n    throw new Error(`${op}() takes an object of properties`)\n  }\n}\n\nexport const validateDocumentId = (op: string, id: string) => {\n  if (typeof id !== 'string' || !/^[a-z0-9_][a-z0-9_.-]{0,127}$/i.test(id) || id.includes('..')) {\n    throw new Error(`${op}(): \"${id}\" is not a valid document ID`)\n  }\n}\n\nexport const requireDocumentId = (op: string, doc: Record<string, Any>) => {\n  if (!doc._id) {\n    throw new Error(`${op}() requires that the document contains an ID (\"_id\" property)`)\n  }\n\n  validateDocumentId(op, doc._id)\n}\n\nexport const validateDocumentType = (op: string, type: string) => {\n  if (typeof type !== 'string') {\n    throw new Error(`\\`${op}()\\`: \\`${type}\\` is not a valid document type`)\n  }\n}\n\nexport const requireDocumentType = (op: string, doc: Record<string, Any>) => {\n  if (!doc._type) {\n    throw new Error(`\\`${op}()\\` requires that the document contains a type (\\`_type\\` property)`)\n  }\n\n  validateDocumentType(op, doc._type)\n}\n\nexport const validateVersionIdMatch = (builtVersionId: string, document: SanityDocumentStub) => {\n  if (document._id && document._id !== builtVersionId) {\n    throw new Error(\n      `The provided document ID (\\`${document._id}\\`) does not match the generated version ID (\\`${builtVersionId}\\`)`,\n    )\n  }\n}\n\nexport const validateInsert = (at: string, selector: string, items: Any[]) => {\n  const signature = 'insert(at, selector, items)'\n  if (VALID_INSERT_LOCATIONS.indexOf(at) === -1) {\n    const valid = VALID_INSERT_LOCATIONS.map((loc) => `\"${loc}\"`).join(', ')\n    throw new Error(`${signature} takes an \"at\"-argument which is one of: ${valid}`)\n  }\n\n  if (typeof selector !== 'string') {\n    throw new Error(`${signature} takes a \"selector\"-argument which must be a string`)\n  }\n\n  if (!Array.isArray(items)) {\n    throw new Error(`${signature} takes an \"items\"-argument which must be an array`)\n  }\n}\n\nexport const hasDataset = (config: InitializedClientConfig): string => {\n  if (!config.dataset) {\n    throw new Error('`dataset` must be provided to perform queries')\n  }\n\n  return config.dataset || ''\n}\n\nexport const requestTag = (tag: string) => {\n  if (typeof tag !== 'string' || !/^[a-z0-9._-]{1,75}$/i.test(tag)) {\n    throw new Error(\n      `Tag can only contain alphanumeric characters, underscores, dashes and dots, and be between one and 75 characters long.`,\n    )\n  }\n\n  return tag\n}\n\nexport const resourceConfig = (config: InitializedClientConfig): void => {\n  if (!config['~experimental_resource']) {\n    throw new Error('`resource` must be provided to perform resource queries')\n  }\n  const {type, id} = config['~experimental_resource']\n\n  switch (type) {\n    case 'dataset': {\n      const segments = id.split('.')\n      if (segments.length !== 2) {\n        throw new Error('Dataset resource ID must be in the format \"project.dataset\"')\n      }\n      return\n    }\n    case 'dashboard':\n    case 'media-library':\n    case 'canvas': {\n      return\n    }\n    default:\n      // @ts-expect-error - handle all supported resource types\n      throw new Error(`Unsupported resource type: ${type.toString()}`)\n  }\n}\n\nexport const resourceGuard = (service: string, config: InitializedClientConfig): void => {\n  if (config['~experimental_resource']) {\n    throw new Error(`\\`${service}\\` does not support resource-based operations`)\n  }\n}\n","// deno-lint-ignore-file no-empty-interface\n/* eslint-disable @typescript-eslint/no-empty-object-type */\n\nimport type {Requester} from 'get-it'\n\nimport type {InitializedStegaConfig, StegaConfig} from './stega/types'\n\n/**\n * Used to tag types that is set to `any` as a temporary measure, but should be replaced with proper typings in the future\n * @internal\n */\nexport type Any = any // eslint-disable-line @typescript-eslint/no-explicit-any\n\ndeclare global {\n  // Declare empty stub interfaces for environments where \"dom\" lib is not included\n  interface File {}\n}\n\n/** @public */\nexport type UploadBody = File | Blob | Buffer | NodeJS.ReadableStream\n\n/** @public */\nexport interface RequestOptions {\n  timeout?: number\n  token?: string\n  tag?: string\n  headers?: Record<string, string>\n  method?: string\n  query?: Any\n  body?: Any\n  signal?: AbortSignal\n}\n\n/**\n * @public\n * @deprecated – The `r`-prefix is not required, use `string` instead\n */\nexport type ReleaseId = `r${string}`\n\n/**\n * @deprecated use 'drafts' instead\n */\ntype DeprecatedPreviewDrafts = 'previewDrafts'\n\n/** @public */\nexport type StackablePerspective = ('published' | 'drafts' | string) & {}\n\n/** @public */\nexport type ClientPerspective =\n  | DeprecatedPreviewDrafts\n  | 'published'\n  | 'drafts'\n  | 'raw'\n  | StackablePerspective[]\n\ntype ClientConfigResource =\n  | {\n      type: 'canvas'\n      id: string\n    }\n  | {\n      type: 'media-library'\n      id: string\n    }\n  | {\n      type: 'dataset'\n      id: string\n    }\n  | {\n      type: 'dashboard'\n      id: string\n    }\n\n/** @public */\nexport interface ClientConfig {\n  projectId?: string\n  dataset?: string\n  /** @defaultValue true */\n  useCdn?: boolean\n  token?: string\n\n  /** @internal */\n  '~experimental_resource'?: ClientConfigResource\n\n  /**\n   * What perspective to use for the client. See {@link https://www.sanity.io/docs/perspectives|perspective documentation}\n   * @remarks\n   * As of API version `v2025-02-19`, the default perspective has changed from `raw` to `published`. {@link https://www.sanity.io/changelog/676aaa9d-2da6-44fb-abe5-580f28047c10|Changelog}\n   * @defaultValue 'published'\n   */\n  perspective?: ClientPerspective\n  apiHost?: string\n\n  /**\n   @remarks\n   * As of API version `v2025-02-19`, the default perspective has changed from `raw` to `published`. {@link https://www.sanity.io/changelog/676aaa9d-2da6-44fb-abe5-580f28047c10|Changelog}\n   */\n  apiVersion?: string\n  proxy?: string\n\n  /**\n   * Optional request tag prefix for all request tags\n   */\n  requestTagPrefix?: string\n\n  /**\n   * Optional default headers to include with all requests\n   *\n   * @remarks request-specific headers will override any default headers with the same name.\n   */\n  headers?: Record<string, string>\n\n  ignoreBrowserTokenWarning?: boolean\n  /**\n   * Ignore specific warning messages from the client.\n   *\n   * @remarks\n   * - String values perform substring matching (not exact matching) against warning messages\n   * - RegExp values are tested against the full warning message\n   * - Array values allow multiple patterns to be specified\n   *\n   * @example\n   * ```typescript\n   * // Ignore warnings containing \"experimental\"\n   * ignoreWarnings: 'experimental'\n   *\n   * // Ignore multiple warning types\n   * ignoreWarnings: ['experimental', 'deprecated']\n   *\n   * // Use regex for exact matching\n   * ignoreWarnings: /^This is an experimental API version$/\n   *\n   * // Mix strings and regex patterns\n   * ignoreWarnings: ['rate limit', /^deprecated/i]\n   * ```\n   */\n  ignoreWarnings?: string | RegExp | Array<string | RegExp>\n  withCredentials?: boolean\n  allowReconfigure?: boolean\n  timeout?: number\n\n  /** Number of retries for requests. Defaults to 5. */\n  maxRetries?: number\n\n  /**\n   * The amount of time, in milliseconds, to wait before retrying, given an attemptNumber (starting at 0).\n   *\n   * Defaults to exponential back-off, starting at 100ms, doubling for each attempt, together with random\n   * jitter between 0 and 100 milliseconds. More specifically the following algorithm is used:\n   *\n   *   Delay = 100 * 2^attemptNumber + randomNumberBetween0and100\n   */\n  retryDelay?: (attemptNumber: number) => number\n\n  /**\n   * @deprecated Don't use\n   */\n  useProjectHostname?: boolean\n\n  /**\n   * @deprecated Don't use\n   */\n  requester?: Requester\n\n  /**\n   * Adds a `resultSourceMap` key to the API response, with the type `ContentSourceMap`\n   */\n  resultSourceMap?: boolean | 'withKeyArraySelector'\n  /**\n   *@deprecated set `cache` and `next` options on `client.fetch` instead\n   */\n  fetch?:\n    | {\n        cache?: ResponseQueryOptions['cache']\n        next?: ResponseQueryOptions['next']\n      }\n    | boolean\n  /**\n   * Options for how, if enabled, Content Source Maps are encoded into query results using steganography\n   */\n  stega?: StegaConfig | boolean\n  /**\n   * Lineage token for recursion control\n   */\n  lineage?: string\n}\n\n/** @public */\nexport interface InitializedClientConfig extends ClientConfig {\n  // These are required in the initialized config\n  apiHost: string\n  apiVersion: string\n  useProjectHostname: boolean\n  useCdn: boolean\n  // These are added by the initConfig function\n  /**\n   * @deprecated Internal, don't use\n   */\n  isDefaultApi: boolean\n  /**\n   * @deprecated Internal, don't use\n   */\n  url: string\n  /**\n   * @deprecated Internal, don't use\n   */\n  cdnUrl: string\n  /**\n   * The fully initialized stega config, can be used to check if stega is enabled\n   */\n  stega: InitializedStegaConfig\n  /**\n   * Default headers to include with all requests\n   *\n   * @remarks request-specific headers will override any default headers with the same name.\n   */\n  headers?: Record<string, string>\n}\n\n/** @public */\nexport type AssetMetadataType =\n  | 'location'\n  | 'exif'\n  | 'image'\n  | 'palette'\n  | 'lqip'\n  | 'blurhash'\n  | 'none'\n\n/** @public */\nexport interface UploadClientConfig {\n  /**\n   * Optional request tag for the upload\n   */\n  tag?: string\n\n  /**\n   * Whether or not to preserve the original filename (default: true)\n   */\n  preserveFilename?: boolean\n\n  /**\n   * Filename for this file (optional)\n   */\n  filename?: string\n\n  /**\n   * Milliseconds to wait before timing the request out\n   */\n  timeout?: number\n\n  /**\n   * Mime type of the file\n   */\n  contentType?: string\n\n  /**\n   * Array of metadata parts to extract from asset\n   */\n  extract?: AssetMetadataType[]\n\n  /**\n   * Optional freeform label for the asset. Generally not used.\n   */\n  label?: string\n\n  /**\n   * Optional title for the asset\n   */\n  title?: string\n\n  /**\n   * Optional description for the asset\n   */\n  description?: string\n\n  /**\n   * The credit to person(s) and/or organization(s) required by the supplier of the asset to be used when published\n   */\n  creditLine?: string\n\n  /**\n   * Source data (when the asset is from an external service)\n   */\n  source?: {\n    /**\n     * The (u)id of the asset within the source, i.e. 'i-f323r1E'\n     */\n    id: string\n\n    /**\n     * The name of the source, i.e. 'unsplash'\n     */\n    name: string\n\n    /**\n     * A url to where to find the asset, or get more info about it in the source\n     */\n    url?: string\n  }\n}\n\n/** @internal */\nexport interface SanityReference {\n  _ref: string\n}\n\n/** @internal */\nexport type SanityDocument<T extends Record<string, Any> = Record<string, Any>> = {\n  [P in keyof T]: T[P]\n} & {\n  _id: string\n  _rev: string\n  _type: string\n  _createdAt: string\n  _updatedAt: string\n  /**\n   * Present when `perspective` is set to `previewDrafts`\n   */\n  _originalId?: string\n}\n\n/** @internal */\nexport interface SanityAssetDocument extends SanityDocument {\n  url: string\n  path: string\n  size: number\n  assetId: string\n  mimeType: string\n  sha1hash: string\n  extension: string\n  uploadId?: string\n  originalFilename?: string\n}\n\n/** @internal */\nexport interface SanityImagePalette {\n  background: string\n  foreground: string\n  population: number\n  title: string\n}\n\n/** @internal */\nexport interface SanityImageAssetDocument extends SanityAssetDocument {\n  metadata: {\n    _type: 'sanity.imageMetadata'\n    hasAlpha: boolean\n    isOpaque: boolean\n    lqip?: string\n    blurHash?: string\n    dimensions: {\n      _type: 'sanity.imageDimensions'\n      aspectRatio: number\n      height: number\n      width: number\n    }\n    palette?: {\n      _type: 'sanity.imagePalette'\n      darkMuted?: SanityImagePalette\n      darkVibrant?: SanityImagePalette\n      dominant?: SanityImagePalette\n      lightMuted?: SanityImagePalette\n      lightVibrant?: SanityImagePalette\n      muted?: SanityImagePalette\n      vibrant?: SanityImagePalette\n    }\n    image?: {\n      _type: 'sanity.imageExifTags'\n      [key: string]: Any\n    }\n    exif?: {\n      _type: 'sanity.imageExifMetadata'\n      [key: string]: Any\n    }\n  }\n}\n\n/** @public */\nexport interface ErrorProps {\n  message: string\n  response: Any\n  statusCode: number\n  responseBody: Any\n  details: Any\n}\n\n/** @public */\nexport type HttpRequest = {\n  (options: RequestOptions, requester: Requester): ReturnType<Requester>\n}\n\n/** @internal */\nexport interface RequestObservableOptions extends Omit<RequestOptions, 'url'> {\n  url?: string\n  uri?: string\n  canUseCdn?: boolean\n  useCdn?: boolean\n  tag?: string\n  returnQuery?: boolean\n  resultSourceMap?: boolean | 'withKeyArraySelector'\n  perspective?: ClientPerspective\n  lastLiveEventId?: string\n  cacheMode?: 'noStale'\n}\n\n/** @public */\nexport interface ProgressEvent {\n  type: 'progress'\n  stage: 'upload' | 'download'\n  percent: number\n  total?: number\n  loaded?: number\n  lengthComputable: boolean\n}\n\n/** @public */\nexport interface ResponseEvent<T = unknown> {\n  type: 'response'\n  body: T\n  url: string\n  method: string\n  statusCode: number\n  statusMessage?: string\n  headers: Record<string, string>\n}\n\n/** @public */\nexport type HttpRequestEvent<T = unknown> = ResponseEvent<T> | ProgressEvent\n\n/** @internal */\nexport interface AuthProvider {\n  name: string\n  title: string\n  url: string\n}\n\n/** @internal */\nexport type AuthProviderResponse = {providers: AuthProvider[]}\n\n/** @public */\nexport type DatasetAclMode = 'public' | 'private' | 'custom'\n\n/** @public */\nexport type DatasetResponse = {datasetName: string; aclMode: DatasetAclMode}\n/** @public */\nexport type DatasetsResponse = {\n  name: string\n  aclMode: DatasetAclMode\n  createdAt: string\n  createdByUserId: string\n  addonFor: string | null\n  datasetProfile: string\n  features: string[]\n  tags: string[]\n}[]\n\n/** @public */\nexport interface SanityProjectMember {\n  id: string\n  role: string\n  isRobot: boolean\n  isCurrentUser: boolean\n}\n\n/** @public */\nexport interface SanityProject {\n  id: string\n  displayName: string\n  /**\n   * @deprecated Use the `/user-applications` endpoint instead, which lists all deployed studios/applications\n   * @see https://www.sanity.io/help/studio-host-user-applications\n   */\n  studioHost: string | null\n  organizationId: string | null\n  isBlocked: boolean\n  isDisabled: boolean\n  isDisabledByUser: boolean\n  createdAt: string\n  pendingInvites?: number\n  maxRetentionDays?: number\n  members: SanityProjectMember[]\n  metadata: {\n    cliInitializedAt?: string\n    color?: string\n    /**\n     * @deprecated Use the `/user-applications` endpoint instead, which lists all deployed studios/applications\n     * @see https://www.sanity.io/help/studio-host-user-applications\n     */\n    externalStudioHost?: string\n  }\n}\n\n/** @public */\nexport interface SanityUser {\n  id: string\n  projectId: string\n  displayName: string\n  familyName: string | null\n  givenName: string | null\n  middleName: string | null\n  imageUrl: string | null\n  createdAt: string\n  updatedAt: string\n  isCurrentUser: boolean\n}\n\n/** @public */\nexport interface CurrentSanityUser {\n  id: string\n  name: string\n  email: string\n  profileImage: string | null\n  role: string\n  provider: string\n}\n\n/** @public */\nexport type SanityDocumentStub<T extends Record<string, Any> = Record<string, Any>> = {\n  [P in keyof T]: T[P]\n} & {\n  _type: string\n}\n\n/** @public */\nexport type IdentifiedSanityDocumentStub<T extends Record<string, Any> = Record<string, Any>> = {\n  [P in keyof T]: T[P]\n} & {\n  _id: string\n} & SanityDocumentStub\n\n/** @internal */\nexport type InsertPatch =\n  | {before: string; items: Any[]}\n  | {after: string; items: Any[]}\n  | {replace: string; items: Any[]}\n\n// Note: this is actually incorrect/invalid, but implemented as-is for backwards compatibility\n/** @internal */\nexport interface PatchOperations {\n  set?: {[key: string]: Any}\n  setIfMissing?: {[key: string]: Any}\n  diffMatchPatch?: {[key: string]: Any}\n  unset?: string[]\n  inc?: {[key: string]: number}\n  dec?: {[key: string]: number}\n  insert?: InsertPatch\n  ifRevisionID?: string\n}\n\n/** @public */\nexport interface QueryParams {\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  [key: string]: any\n  /** @deprecated you're using a fetch option as a GROQ parameter, this is likely a mistake */\n  body?: never\n  /** @deprecated you're using a fetch option as a GROQ parameter, this is likely a mistake */\n  cache?: 'next' extends keyof RequestInit ? never : any\n  /** @deprecated you're using a fetch option as a GROQ parameter, this is likely a mistake */\n  filterResponse?: never\n  /** @deprecated you're using a fetch option as a GROQ parameter, this is likely a mistake */\n  headers?: never\n  /** @deprecated you're using a fetch option as a GROQ parameter, this is likely a mistake */\n  method?: never\n  /** @deprecated you're using a fetch option as a GROQ parameter, this is likely a mistake */\n  next?: 'next' extends keyof RequestInit ? never : any\n  /** @deprecated you're using a fetch option as a GROQ parameter, this is likely a mistake */\n  perspective?: never\n  /** @deprecated you're using a fetch option as a GROQ parameter, this is likely a mistake */\n  query?: never\n  /** @deprecated you're using a fetch option as a GROQ parameter, this is likely a mistake */\n  resultSourceMap?: never\n  /** @deprecated you're using a fetch option as a GROQ parameter, this is likely a mistake */\n  returnQuery?: never\n  /** @deprecated you're using a fetch option as a GROQ parameter, this is likely a mistake */\n  signal?: never\n  /** @deprecated you're using a fetch option as a GROQ parameter, this is likely a mistake */\n  stega?: never\n  /** @deprecated you're using a fetch option as a GROQ parameter, this is likely a mistake */\n  tag?: never\n  /** @deprecated you're using a fetch option as a GROQ parameter, this is likely a mistake */\n  timeout?: never\n  /** @deprecated you're using a fetch option as a GROQ parameter, this is likely a mistake */\n  token?: never\n  /** @deprecated you're using a fetch option as a GROQ parameter, this is likely a mistake */\n  useCdn?: never\n  /** @deprecated you're using a fetch option as a GROQ parameter, this is likely a mistake */\n  lastLiveEventId?: never\n  /** @deprecated you're using a fetch option as a GROQ parameter, this is likely a mistake */\n  cacheMode?: never\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n}\n\n/**\n * This type can be used with `client.fetch` to indicate that the query has no GROQ parameters.\n * @public\n */\nexport type QueryWithoutParams = Record<string, never> | undefined\n\n/** @internal */\nexport type MutationSelectionQueryParams = {[key: string]: Any}\n/** @internal */\nexport type MutationSelection =\n  | {query: string; params?: MutationSelectionQueryParams}\n  | {id: string | string[]}\n/** @internal */\nexport type PatchSelection = string | string[] | MutationSelection\n/** @internal */\nexport type PatchMutationOperation = PatchOperations & MutationSelection\n\n/** @public */\nexport type Mutation<R extends Record<string, Any> = Record<string, Any>> =\n  | {create: SanityDocumentStub<R>}\n  | {createOrReplace: IdentifiedSanityDocumentStub<R>}\n  | {createIfNotExists: IdentifiedSanityDocumentStub<R>}\n  | {delete: MutationSelection}\n  | {patch: PatchMutationOperation}\n\n/** @public */\nexport type ReleaseAction =\n  | CreateReleaseAction\n  | EditReleaseAction\n  | PublishReleaseAction\n  | ArchiveReleaseAction\n  | UnarchiveReleaseAction\n  | ScheduleReleaseAction\n  | UnscheduleReleaseAction\n  | DeleteReleaseAction\n  | ImportReleaseAction\n\n/** @public */\nexport type VersionAction =\n  | CreateVersionAction\n  | DiscardVersionAction\n  | ReplaceVersionAction\n  | UnpublishVersionAction\n\n/** @public */\nexport type Action =\n  | CreateAction\n  | ReplaceDraftAction\n  | EditAction\n  | DeleteAction\n  | DiscardAction\n  | PublishAction\n  | UnpublishAction\n  | VersionAction\n  | ReleaseAction\n\n/** @public */\nexport type ImportReleaseAction =\n  | {\n      actionType: 'sanity.action.release.import'\n      attributes: IdentifiedSanityDocumentStub\n      releaseId: string\n      ifExists: 'fail' | 'ignore' | 'replace'\n    }\n  | {\n      actionType: 'sanity.action.release.import'\n      document: IdentifiedSanityDocumentStub\n      releaseId: string\n      ifExists: 'fail' | 'ignore' | 'replace'\n    }\n\n/**\n * Creates a new release under the given id, with metadata.\n *\n * @public\n */\nexport interface CreateReleaseAction {\n  actionType: 'sanity.action.release.create'\n  releaseId: string\n  metadata?: Partial<ReleaseDocument['metadata']>\n}\n\n/**\n * Edits an existing release, updating the metadata.\n *\n * @public\n */\nexport interface EditReleaseAction {\n  actionType: 'sanity.action.release.edit'\n  releaseId: string\n  patch: PatchOperations\n}\n\n/**\n * Publishes all documents in a release at once.\n *\n * @public\n */\nexport interface PublishReleaseAction {\n  actionType: 'sanity.action.release.publish'\n  releaseId: string\n}\n\n/**\n * Archives an `active` release, and deletes all the release documents.\n *\n * @public\n */\nexport interface ArchiveReleaseAction {\n  actionType: 'sanity.action.release.archive'\n  releaseId: string\n}\n\n/**\n * Unarchived an `archived` release, and restores all the release documents.\n *\n * @public\n */\nexport interface UnarchiveReleaseAction {\n  actionType: 'sanity.action.release.unarchive'\n  releaseId: string\n}\n\n/**\n * Queues release for publishing at the given future time.\n *\n * @public\n */\nexport interface ScheduleReleaseAction {\n  actionType: 'sanity.action.release.schedule'\n  releaseId: string\n  publishAt: string\n}\n\n/**\n * Unschedules a `scheduled` release, stopping it from being published.\n *\n * @public\n */\nexport interface UnscheduleReleaseAction {\n  actionType: 'sanity.action.release.unschedule'\n  releaseId: string\n}\n\n/**\n * Deletes a `archived` or `published` release, and all the release documents versions.\n *\n * @public\n */\nexport interface DeleteReleaseAction {\n  actionType: 'sanity.action.release.delete'\n  releaseId: string\n}\n\n/**\n * Creates a new version of an existing document.\n *\n * If the `document` is provided, the version is created from the document\n * attached to the release as given by `document._id`\n *\n * If the `baseId` and `versionId` are provided, the version is created from the base document\n * and the version is attached to the release as given by `publishedId` and `versionId`\n *\n * @public\n */\nexport type CreateVersionAction = {\n  actionType: 'sanity.action.document.version.create'\n  publishedId: string\n} & (\n  | {\n      document: IdentifiedSanityDocumentStub\n    }\n  | {\n      baseId: string\n      versionId: string\n      ifBaseRevisionId?: string\n    }\n)\n\n/**\n * Delete a version of a document.\n *\n * @public\n */\nexport interface DiscardVersionAction {\n  actionType: 'sanity.action.document.version.discard'\n  versionId: string\n  purge?: boolean\n}\n\n/**\n * Replace an existing version of a document.\n *\n * @public\n */\nexport interface ReplaceVersionAction {\n  actionType: 'sanity.action.document.version.replace'\n  document: IdentifiedSanityDocumentStub\n}\n\n/**\n * Identify that a version of a document should be unpublished when\n * the release that version is contained within is published.\n *\n * @public\n */\nexport interface UnpublishVersionAction {\n  actionType: 'sanity.action.document.version.unpublish'\n  versionId: string\n  publishedId: string\n}\n\n/**\n * Creates a new draft document. The published version of the document must not already exist.\n * If the draft version of the document already exists the action will fail by default, but\n * this can be adjusted to instead leave the existing document in place.\n *\n * @public\n */\nexport type CreateAction = {\n  actionType: 'sanity.action.document.create'\n\n  /**\n   * ID of the published document to create a draft for.\n   */\n  publishedId: string\n\n  /**\n   * Document to create. Requires a `_type` property.\n   */\n  attributes: IdentifiedSanityDocumentStub\n\n  /**\n   * ifExists controls what to do if the draft already exists\n   */\n  ifExists: 'fail' | 'ignore'\n}\n\n/**\n * Replaces an existing draft document.\n * At least one of the draft or published versions of the document must exist.\n *\n * @public\n * @deprecated Use {@link ReplaceVersionAction} instead\n */\nexport type ReplaceDraftAction = {\n  actionType: 'sanity.action.document.replaceDraft'\n\n  /**\n   * Published document ID to create draft from, if draft does not exist\n   */\n  publishedId: string\n\n  /**\n   * Document to create if it does not already exist. Requires `_id` and `_type` properties.\n   */\n  attributes: IdentifiedSanityDocumentStub\n}\n\n/**\n * Modifies an existing draft document.\n * It applies the given patch to the document referenced by draftId.\n * If there is no such document then one is created using the current state of the published version and then that is updated accordingly.\n *\n * @public\n */\nexport type EditAction = {\n  actionType: 'sanity.action.document.edit'\n\n  /**\n   * Draft document ID to edit\n   */\n  draftId: string\n\n  /**\n   * Published document ID to create draft from, if draft does not exist\n   */\n  publishedId: string\n\n  /**\n   * Patch operations to apply\n   */\n  patch: PatchOperations\n}\n\n/**\n * Deletes the published version of a document and optionally some (likely all known) draft versions.\n * If any draft version exists that is not specified for deletion this is an error.\n * If the purge flag is set then the document history is also deleted.\n *\n * @public\n */\nexport type DeleteAction = {\n  actionType: 'sanity.action.document.delete'\n\n  /**\n   * Published document ID to delete\n   */\n  publishedId: string\n\n  /**\n   * Draft document ID to delete\n   */\n  includeDrafts: string[]\n\n  /**\n   * Delete document history\n   */\n  purge?: boolean\n}\n\n/**\n * Delete the draft version of a document.\n * It is an error if it does not exist. If the purge flag is set, the document history is also deleted.\n *\n * @public\n * @deprecated Use {@link DiscardVersionAction} instead\n */\nexport type DiscardAction = {\n  actionType: 'sanity.action.document.discard'\n\n  /**\n   * Draft document ID to delete\n   */\n  draftId: string\n\n  /**\n   * Delete document history\n   */\n  purge?: boolean\n}\n\n/**\n * Publishes a draft document.\n * If a published version of the document already exists this is replaced by the current draft document.\n * In either case the draft document is deleted.\n * The optional revision id parameters can be used for optimistic locking to ensure\n * that the draft and/or published versions of the document have not been changed by another client.\n *\n * @public\n */\nexport type PublishAction = {\n  actionType: 'sanity.action.document.publish'\n\n  /**\n   * Draft document ID to publish\n   */\n  draftId: string\n\n  /**\n   * Draft revision ID to match\n   */\n  ifDraftRevisionId?: string\n\n  /**\n   * Published document ID to replace\n   */\n  publishedId: string\n\n  /**\n   * Published revision ID to match\n   */\n  ifPublishedRevisionId?: string\n}\n\n/**\n * Retract a published document.\n * If there is no draft version then this is created from the published version.\n * In either case the published version is deleted.\n *\n * @public\n */\nexport type UnpublishAction = {\n  actionType: 'sanity.action.document.unpublish'\n\n  /**\n   * Draft document ID to replace the published document with\n   */\n  draftId: string\n\n  /**\n   * Published document ID to delete\n   */\n  publishedId: string\n}\n\n/**\n * A mutation was performed. Note that when updating multiple documents in a transaction,\n * each document affected will get a separate mutation event.\n *\n * @public\n */\nexport type MutationEvent<R extends Record<string, Any> = Record<string, Any>> = {\n  type: 'mutation'\n\n  /**\n   * The ID of the document that was affected\n   */\n  documentId: string\n\n  /**\n   * A unique ID for this event\n   */\n  eventId: string\n\n  /**\n   * The user ID of the user that performed the mutation\n   */\n  identity: string\n\n  /**\n   * An array of mutations that were performed. Note that this can differ slightly from the\n   * mutations sent to the server, as the server may perform some mutations automatically.\n   */\n  mutations: Mutation[]\n\n  /**\n   * The revision ID of the document before the mutation was performed\n   */\n  previousRev?: string\n\n  /**\n   * The revision ID of the document after the mutation was performed\n   */\n  resultRev?: string\n\n  /**\n   * The document as it looked after the mutation was performed. This is only included if\n   * the listener was configured with `includeResult: true`.\n   */\n  result?: SanityDocument<R>\n\n  /**\n   * The document as it looked before the mutation was performed. This is only included if\n   * the listener was configured with `includePreviousRevision: true`.\n   */\n  previous?: SanityDocument<R> | null\n\n  /**\n   * The effects of the mutation, if the listener was configured with `effectFormat: 'mendoza'`.\n   * Object with `apply` and `revert` arrays, see {@link https://github.com/sanity-io/mendoza}.\n   */\n  effects?: {apply: unknown[]; revert: unknown[]}\n\n  /**\n   * A timestamp for when the mutation was performed\n   */\n  timestamp: string\n\n  /**\n   * The transaction ID for the mutation\n   */\n  transactionId: string\n\n  /**\n   * The type of transition the document went through.\n   *\n   * - `update` means the document was previously part of the subscribed set of documents,\n   *   and still is.\n   * - `appear` means the document was not previously part of the subscribed set of documents,\n   *   but is now. This can happen both on create or if updating to a state where it now matches\n   *   the filter provided to the listener.\n   * - `disappear` means the document was previously part of the subscribed set of documents,\n   *   but is no longer. This can happen both on delete or if updating to a state where it no\n   *   longer matches the filter provided to the listener.\n   */\n  transition: 'update' | 'appear' | 'disappear'\n\n  /**\n   * Whether the change that triggered this event is visible to queries (query) or only to\n   * subsequent transactions (transaction). The listener client can specify a preferred visibility\n   * through the `visibility` parameter on the listener, but this is only on a best-effort basis,\n   * and may yet not be accurate.\n   */\n  visibility: 'query' | 'transaction'\n\n  /**\n   * The total number of events that will be sent for this transaction.\n   * Note that this may differ from the amount of _documents_ affected by the transaction, as this\n   * number only includes the documents that matches the given filter.\n   *\n   * This can be useful if you need to perform changes to all matched documents atomically,\n   * eg you would wait for `transactionTotalEvents` events with the same `transactionId` before\n   * applying the changes locally.\n   */\n  transactionTotalEvents: number\n\n  /**\n   * The index of this event within the transaction. Note that events may be delivered out of order,\n   * and that the index is zero-based.\n   */\n  transactionCurrentEvent: number\n}\n\n/**\n * An error occurred. This is different from a network-level error (which will be emitted as 'error').\n * Possible causes are things such as malformed filters, non-existant datasets or similar.\n *\n * @public\n */\nexport type ChannelErrorEvent = {\n  type: 'channelError'\n  message: string\n}\n\n/**\n * The listener has been told to explicitly disconnect and not reconnect.\n * This is a rare situation, but may occur if the API knows reconnect attempts will fail,\n * eg in the case of a deleted dataset, a blocked project or similar events.\n *\n * Note that this is not treated as an error on the observable, but will complete the observable.\n *\n * @public\n */\nexport type DisconnectEvent = {\n  type: 'disconnect'\n  reason: string\n}\n\n/**\n * The listener has been disconnected, and a reconnect attempt is scheduled.\n *\n * @public\n */\nexport type ReconnectEvent = {\n  type: 'reconnect'\n}\n\n/**\n * The listener connection has been established\n * note: it's usually a better option to use the 'welcome' event\n * @public\n */\nexport type OpenEvent = {\n  type: 'open'\n}\n\n/**\n * The listener has been established, and will start receiving events.\n * Note that this is also emitted upon _reconnection_.\n *\n * @public\n */\nexport type WelcomeEvent = {\n  type: 'welcome'\n  listenerName: string\n}\n\n/** @public */\nexport type ListenEvent<R extends Record<string, Any>> =\n  | MutationEvent<R>\n  | ChannelErrorEvent\n  | DisconnectEvent\n  | ReconnectEvent\n  | WelcomeEvent\n  | OpenEvent\n\n/** @public */\nexport type ListenEventName =\n  /** A mutation was performed */\n  | 'mutation'\n  /** The listener has been (re)established */\n  | 'welcome'\n  /** The listener has been disconnected, and a reconnect attempt is scheduled */\n  | 'reconnect'\n\n/** @public */\nexport type ListenParams = {[key: string]: Any}\n\n/** @public */\nexport interface ListenOptions {\n  /**\n   * Whether or not to include the resulting document in addition to the mutations performed.\n   * If you do not need the actual document, set this to `false` to reduce bandwidth usage.\n   * The result will be available on the `.result` property of the events.\n   * @defaultValue `true`\n   */\n  includeResult?: boolean\n\n  /**\n   * Whether or not to include the mutations that was performed.\n   * If you do not need the mutations, set this to `false` to reduce bandwidth usage.\n   * @defaultValue `true`\n   */\n  includeMutations?: boolean\n\n  /**\n   * Whether or not to include the document as it looked before the mutation event.\n   * The previous revision will be available on the `.previous` property of the events,\n   * and may be `null` in the case of a new document.\n   * @defaultValue `false`\n   */\n  includePreviousRevision?: boolean\n\n  /*\n   * Whether to include events for drafts and versions. As of API Version >= v2025-02-19, only events\n   * for published documents will be included by default (see {@link https://www.sanity.io/changelog/676aaa9d-2da6-44fb-abe5-580f28047c10|Changelog})\n   * If you need events from drafts and versions, set this to `true`.\n   * Note: Keep in mind that additional document variants may be introduced in the future, so it's\n   * recommended to respond to events in a way that's tolerant of potential future variants, e.g. by\n   * explicitly checking whether the event is for a draft or a version.\n   * @defaultValue `false`\n   */\n  includeAllVersions?: boolean\n\n  /**\n   * Whether events should be sent as soon as a transaction has been committed (`transaction`, default),\n   * or only after they are available for queries (query). Note that this is on a best-effort basis,\n   * and listeners with `query` may in certain cases (notably with deferred transactions) receive events\n   * that are not yet visible to queries.\n   *\n   * @defaultValue `'transaction'`\n   */\n  visibility?: 'transaction' | 'query'\n\n  /**\n   * Array of event names to include in the observable. By default, only mutation events are included.\n   *\n   * @defaultValue `['mutation']`\n   */\n  events?: ListenEventName[]\n\n  /**\n   * Format of \"effects\", eg the resulting changes of a mutation.\n   * Currently only `mendoza` is supported, and (if set) will include `apply` and `revert` arrays\n   * in the mutation events under the `effects` property.\n   *\n   * See {@link https://github.com/sanity-io/mendoza | The mendoza docs} for more info\n   *\n   * @defaultValue `undefined`\n   */\n  effectFormat?: 'mendoza'\n\n  /**\n   * Optional request tag for the listener. Use to identify the request in logs.\n   *\n   * @defaultValue `undefined`\n   */\n  tag?: string\n}\n\n/** @public */\nexport interface ResponseQueryOptions extends RequestOptions {\n  perspective?: ClientPerspective\n  resultSourceMap?: boolean | 'withKeyArraySelector'\n  returnQuery?: boolean\n  useCdn?: boolean\n  stega?: boolean | StegaConfig\n  // The `cache` and `next` options are specific to the Next.js App Router integration\n  cache?: 'next' extends keyof RequestInit ? RequestInit['cache'] : never\n  next?: ('next' extends keyof RequestInit ? RequestInit : never)['next']\n  lastLiveEventId?: string | string[] | null\n\n  /**\n   * When set to `noStale`, APICDN will not return a cached response if the content is stale.\n   * Tradeoff between latency and freshness of content.\n   *\n   * Only to be used with live content queries and when useCdn is true.\n   */\n  cacheMode?: 'noStale'\n}\n\n/** @public */\nexport interface FilteredResponseQueryOptions extends ResponseQueryOptions {\n  filterResponse?: true\n}\n\n/** @public */\nexport interface UnfilteredResponseQueryOptions extends ResponseQueryOptions {\n  filterResponse: false\n\n  /**\n   * When `filterResponse` is `false`, `returnQuery` also defaults to `true` for\n   * backwards compatibility (on the client side, not from the content lake API).\n   * Can also explicitly be set to `true`.\n   */\n  returnQuery?: true\n}\n\n/**\n * When using `filterResponse: false`, but you do not wish to receive back the query from\n * the content lake API.\n *\n * @public\n */\nexport interface UnfilteredResponseWithoutQuery extends ResponseQueryOptions {\n  filterResponse: false\n  returnQuery: false\n}\n\n/** @public */\nexport type QueryOptions =\n  | FilteredResponseQueryOptions\n  | UnfilteredResponseQueryOptions\n  | UnfilteredResponseWithoutQuery\n\n/** @public */\nexport interface RawQueryResponse<R> {\n  query: string\n  ms: number\n  result: R\n  resultSourceMap?: ContentSourceMap\n  /** Requires `apiVersion` to be `2021-03-25` or later. */\n  syncTags?: SyncTag[]\n}\n\n/** @public */\nexport type RawQuerylessQueryResponse<R> = Omit<RawQueryResponse<R>, 'query'>\n\n/** @internal */\nexport type BaseMutationOptions = RequestOptions & {\n  visibility?: 'sync' | 'async' | 'deferred'\n  returnDocuments?: boolean\n  returnFirst?: boolean\n  dryRun?: boolean\n  autoGenerateArrayKeys?: boolean\n  skipCrossDatasetReferenceValidation?: boolean\n  transactionId?: string\n}\n\n/** @internal */\nexport type FirstDocumentMutationOptions = BaseMutationOptions & {\n  returnFirst?: true\n  returnDocuments?: true\n}\n\n/** @internal */\nexport type FirstDocumentIdMutationOptions = BaseMutationOptions & {\n  returnFirst?: true\n  returnDocuments: false\n}\n\n/** @internal */\nexport type AllDocumentsMutationOptions = BaseMutationOptions & {\n  returnFirst: false\n  returnDocuments?: true\n}\n\n/** @internal */\nexport type MutationOperation = 'create' | 'delete' | 'update' | 'none'\n\n/** @internal */\nexport interface SingleMutationResult {\n  transactionId: string\n  documentId: string\n  results: {id: string; operation: MutationOperation}[]\n}\n\n/** @internal */\nexport interface MultipleMutationResult {\n  transactionId: string\n  documentIds: string[]\n  results: {id: string; operation: MutationOperation}[]\n}\n\n/** @internal */\nexport type AllDocumentIdsMutationOptions = BaseMutationOptions & {\n  returnFirst: false\n  returnDocuments: false\n}\n\n/** @internal */\nexport type AttributeSet = {[key: string]: Any}\n\n/** @internal */\nexport type TransactionFirstDocumentMutationOptions = BaseMutationOptions & {\n  returnFirst: true\n  returnDocuments: true\n}\n\n/** @internal */\nexport type TransactionFirstDocumentIdMutationOptions = BaseMutationOptions & {\n  returnFirst: true\n  returnDocuments?: false\n}\n\n/** @internal */\nexport type TransactionAllDocumentsMutationOptions = BaseMutationOptions & {\n  returnFirst?: false\n  returnDocuments: true\n}\n\n/** @internal */\nexport type TransactionAllDocumentIdsMutationOptions = BaseMutationOptions & {\n  returnFirst?: false\n  returnDocuments?: false\n}\n\n/** @internal */\nexport type TransactionMutationOptions =\n  | TransactionFirstDocumentMutationOptions\n  | TransactionFirstDocumentIdMutationOptions\n  | TransactionAllDocumentsMutationOptions\n  | TransactionAllDocumentIdsMutationOptions\n\n/** @internal */\nexport type BaseActionOptions = RequestOptions & {\n  transactionId?: string\n  skipCrossDatasetReferenceValidation?: boolean\n  dryRun?: boolean\n}\n\n/** @internal */\nexport interface SingleActionResult {\n  transactionId: string\n}\n\n/** @internal */\nexport interface MultipleActionResult {\n  transactionId: string\n}\n\n/** @internal */\nexport interface RawRequestOptions {\n  url?: string\n  uri?: string\n  method?: string\n  token?: string\n  json?: boolean\n  tag?: string\n  useGlobalApi?: boolean\n  withCredentials?: boolean\n  query?: {[key: string]: string | string[]}\n  headers?: {[key: string]: string}\n  timeout?: number\n  proxy?: string\n  body?: Any\n  maxRedirects?: number\n  signal?: AbortSignal\n}\n\n/** @internal */\nexport interface ApiError {\n  error: string\n  message: string\n  statusCode: number\n}\n\n/** @internal */\nexport interface MutationError {\n  type: 'mutationError'\n  description: string\n  items?: MutationErrorItem[]\n}\n\n/**\n * Returned from the Content Lake API when a query is malformed, usually with a start\n * and end column to indicate where the error occurred, but not always. Can we used to\n * provide a more structured error message to the user.\n *\n * This will be located under the response `error` property.\n *\n * @public\n */\nexport interface QueryParseError {\n  type: 'queryParseError'\n  description: string\n  start?: number\n  end?: number\n  query?: string\n}\n\n/** @internal */\nexport interface MutationErrorItem {\n  error: {\n    type: string\n    description: string\n    value?: unknown\n  }\n}\n\n/** @internal */\nexport interface ActionError {\n  type: 'actionError'\n  description: string\n  items?: ActionErrorItem[]\n}\n\n/** @internal */\nexport interface ActionErrorItem {\n  error: {\n    type: string\n    description: string\n    value?: unknown\n  }\n  index: number\n}\n\n/** @internal */\nexport type PartialExcept<T, K extends keyof T> = Pick<T, K> & Partial<Omit<T, K>>\n\n/** @beta */\nexport type ReleaseState =\n  | 'active'\n  | 'archiving'\n  | 'unarchiving'\n  | 'archived'\n  | 'published'\n  | 'publishing'\n  | 'scheduled'\n  | 'scheduling'\n\n/** @internal */\nexport type ReleaseType = 'asap' | 'scheduled' | 'undecided'\n\n/** @public */\nexport type ReleaseCardinality = 'many' | 'one' | undefined\n\n/** @internal */\nexport interface ReleaseDocument extends SanityDocument {\n  /**\n   * typically\n   * `_.releases.<name>`\n   */\n  _id: string\n  /**\n   * where a release has _id `_.releases.foo`, the name is `foo`\n   */\n  name: string\n  _type: 'system.release'\n  _createdAt: string\n  _updatedAt: string\n  _rev: string\n  state: ReleaseState\n  error?: {\n    message: string\n  }\n  finalDocumentStates?: {\n    /** Document ID */\n    id: string\n  }[]\n  /**\n   * If defined, it takes precedence over the intendedPublishAt, the state should be 'scheduled'\n   */\n  publishAt?: string\n  /**\n   * If defined, it provides the time the release was actually published\n   */\n  publishedAt?: string\n  metadata: {\n    title?: string\n    description?: string\n    intendedPublishAt?: string\n    releaseType: ReleaseType\n    cardinality?: ReleaseCardinality\n  }\n}\n\n/** @internal */\nexport type EditableReleaseDocument = Omit<\n  PartialExcept<ReleaseDocument, '_id'>,\n  'metadata' | '_type'\n> & {\n  _id: string\n  metadata: Partial<ReleaseDocument['metadata']>\n}\n\n/**\n * DocumentValueSource is a path to a value within a document\n * @public\n */\nexport interface ContentSourceMapDocumentValueSource {\n  type: 'documentValue'\n  // index location of the document\n  document: number\n  // index location of the path\n  path: number\n}\n/**\n * When a value is not from a source, its a literal\n * @public\n */\nexport interface ContentSourceMapLiteralSource {\n  type: 'literal'\n}\n/**\n * When a field source is unknown\n * @public\n */\nexport interface ContentSourceMapUnknownSource {\n  type: 'unknown'\n}\n/** @public */\nexport type ContentSourceMapSource =\n  | ContentSourceMapDocumentValueSource\n  | ContentSourceMapLiteralSource\n  | ContentSourceMapUnknownSource\n/**\n * ValueMapping is a mapping when for value that is from a single source value\n * It may refer to a field within a document or a literal value\n * @public\n */\nexport interface ContentSourceMapValueMapping {\n  type: 'value'\n  // source of the value\n  source: ContentSourceMapSource\n}\n/** @public */\nexport type ContentSourceMapMapping = ContentSourceMapValueMapping\n\n/** @public */\nexport type ContentSourceMapMappings = Record<string, ContentSourceMapMapping>\n\n/** @public */\nexport interface ContentSourceMapDocumentBase {\n  _id: string\n  _type: string\n}\n\n/** @public */\nexport interface ContentSourceMapDocument extends ContentSourceMapDocumentBase {\n  _projectId?: undefined\n  _dataset?: undefined\n}\n\n/** @public */\nexport interface ContentSourceMapRemoteDocument extends ContentSourceMapDocumentBase {\n  _projectId: string\n  _dataset: string\n}\n\n/** @public */\nexport type ContentSourceMapDocuments = (\n  | ContentSourceMapDocument\n  | ContentSourceMapRemoteDocument\n)[]\n\n/** @public */\nexport type ContentSourceMapPaths = string[]\n\n/** @public */\nexport interface ContentSourceMap {\n  mappings: ContentSourceMapMappings\n  documents: ContentSourceMapDocuments\n  paths: ContentSourceMapPaths\n}\n\n/** @public */\nexport type SyncTag = `s1:${string}`\n/** @public */\nexport interface LiveEventRestart {\n  type: 'restart'\n  id: string\n}\n/** @public */\nexport interface LiveEventReconnect {\n  type: 'reconnect'\n}\n/** @public */\nexport interface LiveEventMessage {\n  type: 'message'\n  id: string\n  tags: SyncTag[]\n}\n/** @public */\nexport interface LiveEventWelcome {\n  type: 'welcome'\n}\n/**\n * The `id` field is the position at which the connection was rejected or closed.\n * The `reason` field will specify why the connection rejected/closed.\n * @public\n */\nexport interface LiveEventGoAway {\n  type: 'goaway'\n  id: string\n  reason: string\n}\n/** @public */\nexport type LiveEvent =\n  | LiveEventRestart\n  | LiveEventReconnect\n  | LiveEventMessage\n  | LiveEventWelcome\n  | LiveEventGoAway\n\n/** @public */\nexport interface SanityQueries {}\n\n/** @public */\nexport type ClientReturn<\n  GroqString extends string,\n  Fallback = Any,\n> = GroqString extends keyof SanityQueries ? SanityQueries[GroqString] : Fallback\n\nexport type {\n  AgentActionParam,\n  AgentActionParams,\n  AgentActionPath,\n  AgentActionPathSegment,\n  AgentActionTarget,\n  ConstantAgentActionParam,\n  DocumentAgentActionParam,\n  FieldAgentActionParam,\n  GroqAgentActionParam,\n} from './agent/actions/commonTypes'\nexport type {\n  GenerateInstruction,\n  GenerateOperation,\n  GenerateTarget,\n  GenerateTargetDocument,\n  GenerateTargetInclude,\n} from './agent/actions/generate'\nexport type {PatchDocument, PatchOperation, PatchTarget} from './agent/actions/patch'\nexport type {PromptRequest} from './agent/actions/prompt'\nexport type {\n  ImageDescriptionOperation,\n  TransformDocument,\n  TransformOperation,\n  TransformTarget,\n  TransformTargetDocument,\n  TransformTargetInclude,\n} from './agent/actions/transform'\nexport type {\n  TranslateDocument,\n  TranslateTarget,\n  TranslateTargetInclude,\n} from './agent/actions/translate'\nexport type {\n  ContentSourceMapParsedPath,\n  ContentSourceMapParsedPathKeyedSegment,\n  FilterDefault,\n  InitializedStegaConfig,\n  Logger,\n  ResolveStudioUrl,\n  StegaConfig,\n  StegaConfigRequiredKeys,\n  StudioBaseRoute,\n  StudioBaseUrl,\n  StudioUrl,\n} from './stega/types'\n\n/**\n * A string constant containing the experimental API version warning message.\n * Use this with the `ignoreWarnings` option to suppress warnings when using experimental API versions.\n *\n * @example\n * ```typescript\n * import { createClient, EXPERIMENTAL_API_WARNING } from '@sanity/client'\n *\n * const client = createClient({\n *   projectId: 'your-project-id',\n *   dataset: 'production',\n *   apiVersion: 'vX', // experimental version\n *   ignoreWarnings: EXPERIMENTAL_API_WARNING\n * })\n * ```\n *\n * @public\n */\nexport const EXPERIMENTAL_API_WARNING = 'This is an experimental API version'\n\n// Media Libraries types\n/**\n * Fit / resize modes accepted for thumbnail params.\n * @public\n */\nexport type FitMode = 'preserve' | 'stretch' | 'crop' | 'smartcrop' | 'pad'\n\n/**\n * Allowed still image formats (thumbnail + storyboard).\n * @public\n */\nexport type StillImageFormat = 'jpg' | 'png' | 'webp'\n\n/**\n * Allowed animated image formats.\n * @public\n */\nexport type AnimatedImageFormat = 'gif' | 'webp'\n\n/**\n * Thumbnail rendition (single frame) options.\n * @public\n */\nexport interface ThumbnailTransformOptions {\n  /** Pixel width of the thumbnail frame. */\n  width?: number\n  /** Pixel height of the thumbnail frame. */\n  height?: number\n  /** Timestamp (seconds) from which to grab the frame. */\n  time?: number\n  /** Resize / fit mode applied to the extracted frame. */\n  fit?: FitMode\n  /** Output image format. */\n  format?: StillImageFormat\n}\n\n/**\n * Animated preview rendition options (e.g. GIF / animated WebP).\n * @public\n */\nexport interface AnimatedTransformOptions {\n  /** Pixel width of the animated output. Max 640 px. */\n  width?: number\n  /** Pixel height of the animated output. Max 640 px. */\n  height?: number\n  /** Start time in seconds (inclusive). */\n  start?: number\n  /** End time in seconds. */\n  end?: number\n  /** Frames per second (1–30). */\n  fps?: number\n  /** Output animated format. */\n  format?: AnimatedImageFormat\n}\n\n/**\n * Storyboard (contact sheet) options.\n * @public\n */\nexport interface StoryboardTransformOptions {\n  /** Output image format for the storyboard. */\n  format?: StillImageFormat\n}\n\n/**\n * Video-specific playback transformation option groups.\n * Only explicitly provided values are serialized into query parameters.\n * @public\n */\nexport interface MediaLibraryVideoPlaybackTransformations {\n  /** Static thumbnail (single frame) options. */\n  thumbnail?: ThumbnailTransformOptions\n  /** Animated preview options (GIF / animated WebP). */\n  animated?: AnimatedTransformOptions\n  /** Storyboard (contact sheet) options. */\n  storyboard?: StoryboardTransformOptions\n}\n\n/**\n * Options for requesting playback info (URLs + optional tokens) for a Media Library video asset.\n *\n * Removed: generic fallback parameters (width, height, fit, format). Supply per‑transformation values instead.\n * Animated transformations intentionally exclude any fit option (not supported by Mux).\n *\n * includeTokens is a client-side flag (not sent to the server) controlling whether\n * returned tokens should be appended to URLs when consumed.\n * @public\n */\nexport interface MediaLibraryPlaybackInfoOptions {\n  /** Explicit per-video transformation options (thumbnail, animated, storyboard). */\n  transformations?: MediaLibraryVideoPlaybackTransformations\n  /** Expiration hint for secured/signed URLs (string or number, number will be stringified). */\n  expiration?: string | number\n}\n\n/** @public */\nexport interface VideoPlaybackInfoItemPublic {\n  url: string\n}\n\n/** @public */\nexport interface VideoPlaybackInfoItemSigned extends VideoPlaybackInfoItemPublic {\n  token: string\n}\n\n/** @public */\nexport type VideoPlaybackInfoItem = VideoPlaybackInfoItemPublic | VideoPlaybackInfoItemSigned\n\n/** @public */\nexport interface VideoPlaybackInfo<T extends VideoPlaybackInfoItem = VideoPlaybackInfoItem> {\n  id: string\n  thumbnail: T\n  animated: T\n  storyboard: T\n  stream: T\n  duration: number\n  aspectRatio: number\n}\n\n/** @public */\nexport type VideoPlaybackInfoSigned = VideoPlaybackInfo<VideoPlaybackInfoItemSigned>\n\n/** @public */\nexport type VideoPlaybackInfoPublic = VideoPlaybackInfo<VideoPlaybackInfoItemPublic>\n\n/** @public */\nexport interface VideoPlaybackTokens {\n  stream?: string\n  thumbnail?: string\n  storyboard?: string\n  animated?: string\n}\n\n/** @public */\nexport type MediaLibraryAssetInstanceIdentifier = string | SanityReference\n","import type {Any} from '../types'\n\nexport function once(fn: Any) {\n  let didCall = false\n  let returnValue: Any\n  return (...args: Any[]) => {\n    if (didCall) {\n      return returnValue\n    }\n    returnValue = fn(...args)\n    didCall = true\n    return returnValue\n  }\n}\n","import {generateHelpUrl} from './generateHelpUrl'\nimport {type Any} from './types'\nimport {once} from './util/once'\n\nconst createWarningPrinter = (message: string[]) =>\n  // eslint-disable-next-line no-console\n  once((...args: Any[]) => console.warn(message.join(' '), ...args))\n\nexport const printCdnAndWithCredentialsWarning = createWarningPrinter([\n  `Because you set \\`withCredentials\\` to true, we will override your \\`useCdn\\``,\n  `setting to be false since (cookie-based) credentials are never set on the CDN`,\n])\n\nexport const printCdnWarning = createWarningPrinter([\n  `Since you haven't set a value for \\`useCdn\\`, we will deliver content using our`,\n  `global, edge-cached API-CDN. If you wish to have content delivered faster, set`,\n  `\\`useCdn: false\\` to use the Live API. Note: You may incur higher costs using the live API.`,\n])\n\nexport const printCdnPreviewDraftsWarning = createWarningPrinter([\n  `The Sanity client is configured with the \\`perspective\\` set to \\`drafts\\` or \\`previewDrafts\\`, which doesn't support the API-CDN.`,\n  `The Live API will be used instead. Set \\`useCdn: false\\` in your configuration to hide this warning.`,\n])\n\nexport const printPreviewDraftsDeprecationWarning = createWarningPrinter([\n  `The \\`previewDrafts\\` perspective has been renamed to  \\`drafts\\` and will be removed in a future API version`,\n])\n\nexport const printBrowserTokenWarning = createWarningPrinter([\n  'You have configured Sanity client to use a token in the browser. This may cause unintentional security issues.',\n  `See ${generateHelpUrl(\n    'js-client-browser-token',\n  )} for more information and how to hide this warning.`,\n])\n\nexport const printCredentialedTokenWarning = createWarningPrinter([\n  'You have configured Sanity client to use a token, but also provided `withCredentials: true`.',\n  'This is no longer supported - only token will be used - remove `withCredentials: true`.',\n])\n\nexport const printNoApiVersionSpecifiedWarning = createWarningPrinter([\n  'Using the Sanity client without specifying an API version is deprecated.',\n  `See ${generateHelpUrl('js-client-api-version')}`,\n])\n\nexport const printNoDefaultExport = createWarningPrinter([\n  'The default export of @sanity/client has been deprecated. Use the named export `createClient` instead.',\n])\n\nexport const printCreateVersionWithBaseIdWarning = createWarningPrinter([\n  'You have called `createVersion()` with a defined `document`. The recommended approach is to provide a `baseId` and `releaseId` instead.',\n])\n","import {generateHelpUrl} from './generateHelpUrl'\nimport type {ClientConfig, ClientPerspective, InitializedClientConfig} from './types'\nimport * as validate from './validators'\nimport * as warnings from './warnings'\n\nconst defaultCdnHost = 'apicdn.sanity.io'\nexport const defaultConfig = {\n  apiHost: 'https://api.sanity.io',\n  apiVersion: '1',\n  useProjectHostname: true,\n  stega: {enabled: false},\n} satisfies ClientConfig\n\nconst LOCALHOSTS = ['localhost', '127.0.0.1', '0.0.0.0']\nconst isLocal = (host: string) => LOCALHOSTS.indexOf(host) !== -1\n\nfunction validateApiVersion(apiVersion: string) {\n  if (apiVersion === '1' || apiVersion === 'X') {\n    return\n  }\n\n  const apiDate = new Date(apiVersion)\n  const apiVersionValid =\n    /^\\d{4}-\\d{2}-\\d{2}$/.test(apiVersion) && apiDate instanceof Date && apiDate.getTime() > 0\n\n  if (!apiVersionValid) {\n    throw new Error('Invalid API version string, expected `1` or date in format `YYYY-MM-DD`')\n  }\n}\n\n/**\n * @internal - it may have breaking changes in any release\n */\nexport function validateApiPerspective(\n  perspective: unknown,\n): asserts perspective is ClientPerspective {\n  if (Array.isArray(perspective) && perspective.length > 1 && perspective.includes('raw')) {\n    throw new TypeError(\n      `Invalid API perspective value: \"raw\". The raw-perspective can not be combined with other perspectives`,\n    )\n  }\n}\n\nexport const initConfig = (\n  config: Partial<ClientConfig>,\n  prevConfig: Partial<ClientConfig>,\n): InitializedClientConfig => {\n  const specifiedConfig = {\n    ...prevConfig,\n    ...config,\n    stega: {\n      ...(typeof prevConfig.stega === 'boolean'\n        ? {enabled: prevConfig.stega}\n        : prevConfig.stega || defaultConfig.stega),\n      ...(typeof config.stega === 'boolean' ? {enabled: config.stega} : config.stega || {}),\n    },\n  }\n  if (!specifiedConfig.apiVersion) {\n    warnings.printNoApiVersionSpecifiedWarning()\n  }\n\n  const newConfig = {\n    ...defaultConfig,\n    ...specifiedConfig,\n  } as InitializedClientConfig\n  const projectBased = newConfig.useProjectHostname && !newConfig['~experimental_resource']\n\n  if (typeof Promise === 'undefined') {\n    const helpUrl = generateHelpUrl('js-client-promise-polyfill')\n    throw new Error(`No native Promise-implementation found, polyfill needed - see ${helpUrl}`)\n  }\n\n  if (projectBased && !newConfig.projectId) {\n    throw new Error('Configuration must contain `projectId`')\n  }\n\n  if (newConfig['~experimental_resource']) {\n    validate.resourceConfig(newConfig)\n  }\n\n  if (typeof newConfig.perspective !== 'undefined') {\n    validateApiPerspective(newConfig.perspective)\n  }\n\n  if ('encodeSourceMap' in newConfig) {\n    throw new Error(\n      `It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMap' is not supported in '@sanity/client'. Did you mean 'stega.enabled'?`,\n    )\n  }\n  if ('encodeSourceMapAtPath' in newConfig) {\n    throw new Error(\n      `It looks like you're using options meant for '@sanity/preview-kit/client'. 'encodeSourceMapAtPath' is not supported in '@sanity/client'. Did you mean 'stega.filter'?`,\n    )\n  }\n  if (typeof newConfig.stega.enabled !== 'boolean') {\n    throw new Error(`stega.enabled must be a boolean, received ${newConfig.stega.enabled}`)\n  }\n  if (newConfig.stega.enabled && newConfig.stega.studioUrl === undefined) {\n    throw new Error(`stega.studioUrl must be defined when stega.enabled is true`)\n  }\n  if (\n    newConfig.stega.enabled &&\n    typeof newConfig.stega.studioUrl !== 'string' &&\n    typeof newConfig.stega.studioUrl !== 'function'\n  ) {\n    throw new Error(\n      `stega.studioUrl must be a string or a function, received ${newConfig.stega.studioUrl}`,\n    )\n  }\n\n  const isBrowser = typeof window !== 'undefined' && window.location && window.location.hostname\n  const isLocalhost = isBrowser && isLocal(window.location.hostname)\n\n  const hasToken = Boolean(newConfig.token)\n  if (newConfig.withCredentials && hasToken) {\n    warnings.printCredentialedTokenWarning()\n    newConfig.withCredentials = false\n  }\n\n  if (isBrowser && isLocalhost && hasToken && newConfig.ignoreBrowserTokenWarning !== true) {\n    warnings.printBrowserTokenWarning()\n  } else if (typeof newConfig.useCdn === 'undefined') {\n    warnings.printCdnWarning()\n  }\n\n  if (projectBased) {\n    validate.projectId(newConfig.projectId!)\n  }\n\n  if (newConfig.dataset) {\n    validate.dataset(newConfig.dataset)\n  }\n\n  if ('requestTagPrefix' in newConfig) {\n    // Allow setting and unsetting request tag prefix\n    newConfig.requestTagPrefix = newConfig.requestTagPrefix\n      ? validate.requestTag(newConfig.requestTagPrefix).replace(/\\.+$/, '')\n      : undefined\n  }\n\n  newConfig.apiVersion = `${newConfig.apiVersion}`.replace(/^v/, '')\n  newConfig.isDefaultApi = newConfig.apiHost === defaultConfig.apiHost\n\n  if (newConfig.useCdn === true && newConfig.withCredentials) {\n    warnings.printCdnAndWithCredentialsWarning()\n  }\n\n  // If `useCdn` is undefined, we treat it as `true`\n  newConfig.useCdn = newConfig.useCdn !== false && !newConfig.withCredentials\n\n  validateApiVersion(newConfig.apiVersion)\n\n  const hostParts = newConfig.apiHost.split('://', 2)\n  const protocol = hostParts[0]\n  const host = hostParts[1]\n  const cdnHost = newConfig.isDefaultApi ? defaultCdnHost : host\n\n  if (projectBased) {\n    newConfig.url = `${protocol}://${newConfig.projectId}.${host}/v${newConfig.apiVersion}`\n    newConfig.cdnUrl = `${protocol}://${newConfig.projectId}.${cdnHost}/v${newConfig.apiVersion}`\n  } else {\n    newConfig.url = `${newConfig.apiHost}/v${newConfig.apiVersion}`\n    newConfig.cdnUrl = newConfig.url\n  }\n\n  return newConfig\n}\n","import {defer, isObservable, mergeMap, Observable, of} from 'rxjs'\n\nimport {formatQueryParseError, isQueryParseError} from '../http/errors'\nimport {type Any} from '../types'\n\n/**\n * @public\n * Thrown if the EventSource connection could not be established.\n * Note that ConnectionFailedErrors are rare, and disconnects will normally be handled by the EventSource instance itself and emitted as `reconnect` events.\n */\nexport class ConnectionFailedError extends Error {\n  readonly name = 'ConnectionFailedError'\n}\n\n/**\n * The listener has been told to explicitly disconnect.\n *  This is a rare situation, but may occur if the API knows reconnect attempts will fail,\n *  eg in the case of a deleted dataset, a blocked project or similar events.\n * @public\n */\nexport class DisconnectError extends Error {\n  readonly name = 'DisconnectError'\n  readonly reason?: string\n  constructor(message: string, reason?: string, options: ErrorOptions = {}) {\n    super(message, options)\n    this.reason = reason\n  }\n}\n\n/**\n * @public\n * The server sent a `channelError` message. Usually indicative of a bad or malformed request\n */\nexport class ChannelError extends Error {\n  readonly name = 'ChannelError'\n  readonly data?: unknown\n  constructor(message: string, data: unknown) {\n    super(message)\n    this.data = data\n  }\n}\n\n/**\n * @public\n * The server sent an `error`-event to tell the client that an unexpected error has happened.\n */\nexport class MessageError extends Error {\n  readonly name = 'MessageError'\n  readonly data?: unknown\n  constructor(message: string, data: unknown, options: ErrorOptions = {}) {\n    super(message, options)\n    this.data = data\n  }\n}\n\n/**\n * @public\n * An error occurred while parsing the message sent by the server as JSON. Should normally not happen.\n */\nexport class MessageParseError extends Error {\n  readonly name = 'MessageParseError'\n}\n\n/**\n * @public\n */\nexport interface ServerSentEvent<Name extends string> {\n  type: Name\n  id?: string\n  data?: unknown\n}\n\n// Always listen for these events, no matter what\nconst REQUIRED_EVENTS = ['channelError', 'disconnect']\n\n/**\n * @internal\n */\nexport type EventSourceEvent<Name extends string> = ServerSentEvent<Name>\n\n/**\n * @internal\n */\nexport type EventSourceInstance = InstanceType<typeof globalThis.EventSource>\n\n/**\n * Sanity API specific EventSource handler shared between the listen and live APIs\n *\n * Since the `EventSource` API is not provided by all environments, this function enables custom initialization of the EventSource instance\n * for runtimes that requires polyfilling or custom setup logic (e.g. custom HTTP headers)\n * via the passed `initEventSource` function which must return an EventSource instance.\n *\n * Possible errors to be thrown on the returned observable are:\n * - {@link MessageError}\n * - {@link MessageParseError}\n * - {@link ChannelError}\n * - {@link DisconnectError}\n * - {@link ConnectionFailedError}\n *\n * @param initEventSource - A function that returns an EventSource instance or an Observable that resolves to an EventSource instance\n * @param events - an array of named events from the API to listen for.\n *\n * @internal\n */\nexport function connectEventSource<EventName extends string>(\n  initEventSource: () => EventSourceInstance | Observable<EventSourceInstance>,\n  events: EventName[],\n) {\n  return defer(() => {\n    const es = initEventSource()\n    return isObservable(es) ? es : of(es)\n  }).pipe(mergeMap((es) => connectWithESInstance(es, events))) as Observable<\n    ServerSentEvent<EventName>\n  >\n}\n\n/**\n * Provides an observable from the passed EventSource instance, subscribing to the passed list of names of events types to listen for\n * Handles connection logic, adding/removing event listeners, payload parsing, error propagation, etc.\n *\n * @param es - The EventSource instance\n * @param events - List of event names to listen for\n */\nfunction connectWithESInstance<EventTypeName extends string>(\n  es: EventSourceInstance,\n  events: EventTypeName[],\n) {\n  return new Observable<EventSourceEvent<EventTypeName>>((observer) => {\n    const emitOpen = (events as string[]).includes('open')\n    const emitReconnect = (events as string[]).includes('reconnect')\n\n    // EventSource will emit a regular Event if it fails to connect, however the API may also emit an `error` MessageEvent\n    // So we need to handle both cases\n    function onError(evt: MessageEvent | Event) {\n      // If the event has a `data` property, then it`s a MessageEvent emitted by the API and we should forward the error\n      if ('data' in evt) {\n        const [parseError, event] = parseEvent(evt as MessageEvent)\n        observer.error(\n          parseError\n            ? new MessageParseError('Unable to parse EventSource error message', {cause: event})\n            : new MessageError((event?.data as {message: string}).message, event),\n        )\n        return\n      }\n\n      // We should never be in a disconnected state. By default, EventSource will reconnect\n      // automatically, but in some cases (like when a laptop lid is closed), it will trigger onError\n      // if it can't reconnect.\n      // see https://html.spec.whatwg.org/multipage/server-sent-events.html#sse-processing-model\n      if (es.readyState === es.CLOSED) {\n        // In these cases we'll signal to consumers (via the error path) that a retry/reconnect is needed.\n        observer.error(new ConnectionFailedError('EventSource connection failed'))\n      } else if (emitReconnect) {\n        observer.next({type: 'reconnect' as EventTypeName})\n      }\n    }\n\n    function onOpen() {\n      // The open event of the EventSource API is fired when a connection with an event source is opened.\n      observer.next({type: 'open' as EventTypeName})\n    }\n\n    function onMessage(message: MessageEvent) {\n      const [parseError, event] = parseEvent(message)\n      if (parseError) {\n        observer.error(\n          new MessageParseError('Unable to parse EventSource message', {cause: parseError}),\n        )\n        return\n      }\n      if (message.type === 'channelError') {\n        // An error occurred. This is different from a network-level error (which will be emitted as 'error').\n        // Possible causes are things such as malformed filters, non-existant datasets\n        // or similar.\n        const tag = new URL(es.url).searchParams.get('tag')\n        observer.error(new ChannelError(extractErrorMessage(event?.data, tag), event.data))\n        return\n      }\n      if (message.type === 'disconnect') {\n        // The listener has been told to explicitly disconnect and not reconnect.\n        // This is a rare situation, but may occur if the API knows reconnect attempts will fail,\n        // eg in the case of a deleted dataset, a blocked project or similar events.\n        observer.error(\n          new DisconnectError(\n            `Server disconnected client: ${\n              (event.data as {reason?: string})?.reason || 'unknown error'\n            }`,\n          ),\n        )\n        return\n      }\n      observer.next({\n        type: message.type as EventTypeName,\n        id: message.lastEventId,\n        ...(event.data ? {data: event.data} : {}),\n      })\n    }\n\n    es.addEventListener('error', onError)\n\n    if (emitOpen) {\n      es.addEventListener('open', onOpen)\n    }\n\n    // Make sure we have a unique list of events types to avoid listening multiple times,\n    const cleanedEvents = [...new Set([...REQUIRED_EVENTS, ...events])]\n      // filter out events that are handled separately\n      .filter((type) => type !== 'error' && type !== 'open' && type !== 'reconnect')\n\n    cleanedEvents.forEach((type: string) => es.addEventListener(type, onMessage))\n\n    return () => {\n      es.removeEventListener('error', onError)\n      if (emitOpen) {\n        es.removeEventListener('open', onOpen)\n      }\n      cleanedEvents.forEach((type: string) => es.removeEventListener(type, onMessage))\n      es.close()\n    }\n  })\n}\n\nfunction parseEvent(\n  message: MessageEvent,\n): [null, {type: string; id: string; data?: unknown}] | [Error, null] {\n  try {\n    const data = typeof message.data === 'string' && JSON.parse(message.data)\n    return [\n      null,\n      {\n        type: message.type,\n        id: message.lastEventId,\n        ...(isEmptyObject(data) ? {} : {data}),\n      },\n    ]\n  } catch (err) {\n    return [err as Error, null]\n  }\n}\n\nfunction extractErrorMessage(err: Any, tag?: string | null) {\n  const error = err.error\n\n  if (!error) {\n    return err.message || 'Unknown listener error'\n  }\n\n  if (isQueryParseError(error)) {\n    return formatQueryParseError(error, tag)\n  }\n\n  if (error.description) {\n    return error.description\n  }\n\n  return typeof error === 'string' ? error : JSON.stringify(error, null, 2)\n}\n\nfunction isEmptyObject(data: object) {\n  for (const _ in data) {\n    return false\n  }\n  return true\n}\n","import type {MutationSelection} from '../types'\n\nexport function getSelection(sel: unknown): MutationSelection {\n  if (typeof sel === 'string') {\n    return {id: sel}\n  }\n\n  if (Array.isArray(sel)) {\n    return {query: '*[_id in $ids]', params: {ids: sel}}\n  }\n\n  if (typeof sel === 'object' && sel !== null && 'query' in sel && typeof sel.query === 'string') {\n    return 'params' in sel && typeof sel.params === 'object' && sel.params !== null\n      ? {query: sel.query, params: sel.params}\n      : {query: sel.query}\n  }\n\n  const selectionOpts = [\n    '* Document ID (<docId>)',\n    '* Array of document IDs',\n    '* Object containing `query`',\n  ].join('\\n')\n\n  throw new Error(`Unknown selection - must be one of:\\n\\n${selectionOpts}`)\n}\n","import {type Observable} from 'rxjs'\n\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {\n  AllDocumentIdsMutationOptions,\n  AllDocumentsMutationOptions,\n  Any,\n  AttributeSet,\n  BaseMutationOptions,\n  FirstDocumentIdMutationOptions,\n  FirstDocumentMutationOptions,\n  MultipleMutationResult,\n  PatchMutationOperation,\n  PatchOperations,\n  PatchSelection,\n  SanityDocument,\n  SingleMutationResult,\n} from '../types'\nimport {getSelection} from '../util/getSelection'\nimport {validateInsert, validateObject} from '../validators'\n\n/** @internal */\nexport class BasePatch {\n  protected selection: PatchSelection\n  protected operations: PatchOperations\n  constructor(selection: PatchSelection, operations: PatchOperations = {}) {\n    this.selection = selection\n    this.operations = operations\n  }\n\n  /**\n   * Sets the given attributes to the document. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  set(attrs: AttributeSet): this {\n    return this._assign('set', attrs)\n  }\n\n  /**\n   * Sets the given attributes to the document if they are not currently set. Does NOT merge objects.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to set. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"value\"\\}\n   */\n  setIfMissing(attrs: AttributeSet): this {\n    return this._assign('setIfMissing', attrs)\n  }\n\n  /**\n   * Performs a \"diff-match-patch\" operation on the string attributes provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attributes to perform operation on. To set a deep attribute, use JSONMatch, eg: \\{\"nested.prop\": \"dmp\"\\}\n   */\n  diffMatchPatch(attrs: AttributeSet): this {\n    validateObject('diffMatchPatch', attrs)\n    return this._assign('diffMatchPatch', attrs)\n  }\n\n  /**\n   * Unsets the attribute paths provided.\n   * The operation is added to the current patch, ready to be commited by `commit()`\n   *\n   * @param attrs - Attribute paths to unset.\n   */\n  unset(attrs: string[]): this {\n    if (!Array.isArray(attrs)) {\n      throw new Error('unset(attrs) takes an array of attributes to unset, non-array given')\n    }\n\n    this.operations = Object.assign({}, this.operations, {unset: attrs})\n    return this\n  }\n\n  /**\n   * Increment a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to increment, values representing the number to increment by.\n   */\n  inc(attrs: {[key: string]: number}): this {\n    return this._assign('inc', attrs)\n  }\n\n  /**\n   * Decrement a numeric value. Each entry in the argument is either an attribute or a JSON path. The value may be a positive or negative integer or floating-point value. The operation will fail if target value is not a numeric value, or doesn't exist.\n   *\n   * @param attrs - Object of attribute paths to decrement, values representing the number to decrement by.\n   */\n  dec(attrs: {[key: string]: number}): this {\n    return this._assign('dec', attrs)\n  }\n\n  /**\n   * Provides methods for modifying arrays, by inserting, appending and replacing elements via a JSONPath expression.\n   *\n   * @param at - Location to insert at, relative to the given selector, or 'replace' the matched path\n   * @param selector - JSONPath expression, eg `comments[-1]` or `blocks[_key==\"abc123\"]`\n   * @param items - Array of items to insert/replace\n   */\n  insert(at: 'before' | 'after' | 'replace', selector: string, items: Any[]): this {\n    validateInsert(at, selector, items)\n    return this._assign('insert', {[at]: selector, items})\n  }\n\n  /**\n   * Append the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to append to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to append to the array\n   */\n  append(selector: string, items: Any[]): this {\n    return this.insert('after', `${selector}[-1]`, items)\n  }\n\n  /**\n   * Prepend the given items to the array at the given JSONPath\n   *\n   * @param selector - Attribute/path to prepend to, eg `comments` or `person.hobbies`\n   * @param items - Array of items to prepend to the array\n   */\n  prepend(selector: string, items: Any[]): this {\n    return this.insert('before', `${selector}[0]`, items)\n  }\n\n  /**\n   * Change the contents of an array by removing existing elements and/or adding new elements.\n   *\n   * @param selector - Attribute or JSONPath expression for array\n   * @param start - Index at which to start changing the array (with origin 0). If greater than the length of the array, actual starting index will be set to the length of the array. If negative, will begin that many elements from the end of the array (with origin -1) and will be set to 0 if absolute value is greater than the length of the array.x\n   * @param deleteCount - An integer indicating the number of old array elements to remove.\n   * @param items - The elements to add to the array, beginning at the start index. If you don't specify any elements, splice() will only remove elements from the array.\n   */\n  splice(selector: string, start: number, deleteCount?: number, items?: Any[]): this {\n    // Negative indexes doesn't mean the same in Sanity as they do in JS;\n    // -1 means \"actually at the end of the array\", which allows inserting\n    // at the end of the array without knowing its length. We therefore have\n    // to substract negative indexes by one to match JS. If you want Sanity-\n    // behaviour, just use `insert('replace', selector, items)` directly\n    const delAll = typeof deleteCount === 'undefined' || deleteCount === -1\n    const startIndex = start < 0 ? start - 1 : start\n    const delCount = delAll ? -1 : Math.max(0, start + deleteCount)\n    const delRange = startIndex < 0 && delCount >= 0 ? '' : delCount\n    const rangeSelector = `${selector}[${startIndex}:${delRange}]`\n    return this.insert('replace', rangeSelector, items || [])\n  }\n\n  /**\n   * Adds a revision clause, preventing the document from being patched if the `_rev` property does not match the given value\n   *\n   * @param rev - Revision to lock the patch to\n   */\n  ifRevisionId(rev: string): this {\n    this.operations.ifRevisionID = rev\n    return this\n  }\n\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  serialize(): PatchMutationOperation {\n    return {...getSelection(this.selection), ...this.operations}\n  }\n\n  /**\n   * Return a plain JSON representation of the patch\n   */\n  toJSON(): PatchMutationOperation {\n    return this.serialize()\n  }\n\n  /**\n   * Clears the patch of all operations\n   */\n  reset(): this {\n    this.operations = {}\n    return this\n  }\n\n  protected _assign(op: keyof PatchOperations, props: Any, merge = true): this {\n    validateObject(op, props)\n    this.operations = Object.assign({}, this.operations, {\n      [op]: Object.assign({}, (merge && this.operations[op]) || {}, props),\n    })\n    return this\n  }\n\n  protected _set(op: keyof PatchOperations, props: Any): this {\n    return this._assign(op, props, false)\n  }\n}\n\n/** @public */\nexport class ObservablePatch extends BasePatch {\n  #client?: ObservableSanityClient\n\n  constructor(\n    selection: PatchSelection,\n    operations?: PatchOperations,\n    client?: ObservableSanityClient,\n  ) {\n    super(selection, operations)\n    this.#client = client\n  }\n\n  /**\n   * Clones the patch\n   */\n  clone(): ObservablePatch {\n    return new ObservablePatch(this.selection, {...this.operations}, this.#client)\n  }\n\n  /**\n   * Commit the patch, returning an observable that produces the first patched document\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options: FirstDocumentMutationOptions,\n  ): Observable<SanityDocument<R>>\n  /**\n   * Commit the patch, returning an observable that produces an array of the mutated documents\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options: AllDocumentsMutationOptions,\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Commit the patch, returning an observable that produces a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: FirstDocumentIdMutationOptions): Observable<SingleMutationResult>\n  /**\n   * Commit the patch, returning an observable that produces a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: AllDocumentIdsMutationOptions): Observable<MultipleMutationResult>\n  /**\n   * Commit the patch, returning an observable that produces the first patched document\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options?: BaseMutationOptions,\n  ): Observable<SanityDocument<R>>\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options?:\n      | FirstDocumentMutationOptions\n      | AllDocumentsMutationOptions\n      | FirstDocumentIdMutationOptions\n      | AllDocumentIdsMutationOptions\n      | BaseMutationOptions,\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    if (!this.#client) {\n      throw new Error(\n        'No `client` passed to patch, either provide one or pass the ' +\n          'patch to a clients `mutate()` method',\n      )\n    }\n\n    const returnFirst = typeof this.selection === 'string'\n    const opts = Object.assign({returnFirst, returnDocuments: true}, options)\n    return this.#client.mutate<R>({patch: this.serialize()} as Any, opts)\n  }\n}\n\n/** @public */\nexport class Patch extends BasePatch {\n  #client?: SanityClient\n  constructor(selection: PatchSelection, operations?: PatchOperations, client?: SanityClient) {\n    super(selection, operations)\n    this.#client = client\n  }\n\n  /**\n   * Clones the patch\n   */\n  clone(): Patch {\n    return new Patch(this.selection, {...this.operations}, this.#client)\n  }\n\n  /**\n   * Commit the patch, returning a promise that resolves to the first patched document\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options: FirstDocumentMutationOptions,\n  ): Promise<SanityDocument<R>>\n  /**\n   * Commit the patch, returning a promise that resolves to an array of the mutated documents\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options: AllDocumentsMutationOptions,\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Commit the patch, returning a promise that resolves to a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: FirstDocumentIdMutationOptions): Promise<SingleMutationResult>\n  /**\n   * Commit the patch, returning a promise that resolves to a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: AllDocumentIdsMutationOptions): Promise<MultipleMutationResult>\n  /**\n   * Commit the patch, returning a promise that resolves to the first patched document\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options?: BaseMutationOptions,\n  ): Promise<SanityDocument<R>>\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options?:\n      | FirstDocumentMutationOptions\n      | AllDocumentsMutationOptions\n      | FirstDocumentIdMutationOptions\n      | AllDocumentIdsMutationOptions\n      | BaseMutationOptions,\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    if (!this.#client) {\n      throw new Error(\n        'No `client` passed to patch, either provide one or pass the ' +\n          'patch to a clients `mutate()` method',\n      )\n    }\n\n    const returnFirst = typeof this.selection === 'string'\n    const opts = Object.assign({returnFirst, returnDocuments: true}, options)\n    return this.#client.mutate<R>({patch: this.serialize()} as Any, opts)\n  }\n}\n","import type {Observable} from 'rxjs'\n\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {\n  Any,\n  BaseMutationOptions,\n  IdentifiedSanityDocumentStub,\n  MultipleMutationResult,\n  Mutation,\n  MutationSelection,\n  PatchOperations,\n  SanityDocument,\n  SanityDocumentStub,\n  SingleMutationResult,\n  TransactionAllDocumentIdsMutationOptions,\n  TransactionAllDocumentsMutationOptions,\n  TransactionFirstDocumentIdMutationOptions,\n  TransactionFirstDocumentMutationOptions,\n} from '../types'\nimport * as validators from '../validators'\nimport {ObservablePatch, Patch} from './patch'\n\n/** @public */\nexport type PatchBuilder = (patch: Patch) => Patch\n/** @public */\nexport type ObservablePatchBuilder = (patch: ObservablePatch) => ObservablePatch\n\nconst defaultMutateOptions = {returnDocuments: false}\n\n/** @internal */\nexport class BaseTransaction {\n  protected operations: Mutation[]\n  protected trxId?: string\n  constructor(operations: Mutation[] = [], transactionId?: string) {\n    this.operations = operations\n    this.trxId = transactionId\n  }\n  /**\n   * Creates a new Sanity document. If `_id` is provided and already exists, the mutation will fail. If no `_id` is given, one will automatically be generated by the database.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create. Requires a `_type` property.\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(doc: SanityDocumentStub<R>): this {\n    validators.validateObject('create', doc)\n    return this._add({create: doc})\n  }\n\n  /**\n   * Creates a new Sanity document. If a document with the same `_id` already exists, the create operation will be ignored.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create if it does not already exist. Requires `_id` and `_type` properties.\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    doc: IdentifiedSanityDocumentStub<R>,\n  ): this {\n    const op = 'createIfNotExists'\n    validators.validateObject(op, doc)\n    validators.requireDocumentId(op, doc)\n    return this._add({[op]: doc})\n  }\n\n  /**\n   * Creates a new Sanity document, or replaces an existing one if the same `_id` is already used.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param doc - Document to create or replace. Requires `_id` and `_type` properties.\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    doc: IdentifiedSanityDocumentStub<R>,\n  ): this {\n    const op = 'createOrReplace'\n    validators.validateObject(op, doc)\n    validators.requireDocumentId(op, doc)\n    return this._add({[op]: doc})\n  }\n\n  /**\n   * Deletes the document with the given document ID\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param documentId - Document ID to delete\n   */\n  delete(documentId: string): this {\n    validators.validateDocumentId('delete', documentId)\n    return this._add({delete: {id: documentId}})\n  }\n\n  /**\n   * Gets the current transaction ID, if any\n   */\n  transactionId(): string | undefined\n  /**\n   * Set the ID of this transaction.\n   *\n   * @param id - Transaction ID\n   */\n  transactionId(id: string): this\n  transactionId(id?: string): this | string | undefined {\n    if (!id) {\n      return this.trxId\n    }\n\n    this.trxId = id\n    return this\n  }\n\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  serialize(): Mutation[] {\n    return [...this.operations]\n  }\n\n  /**\n   * Return a plain JSON representation of the transaction\n   */\n  toJSON(): Mutation[] {\n    return this.serialize()\n  }\n\n  /**\n   * Clears the transaction of all operations\n   */\n  reset(): this {\n    this.operations = []\n    return this\n  }\n\n  protected _add(mut: Mutation): this {\n    this.operations.push(mut)\n    return this\n  }\n}\n\n/** @public */\nexport class Transaction extends BaseTransaction {\n  #client?: SanityClient\n  constructor(operations?: Mutation[], client?: SanityClient, transactionId?: string) {\n    super(operations, transactionId)\n    this.#client = client\n  }\n\n  /**\n   * Clones the transaction\n   */\n  clone(): Transaction {\n    return new Transaction([...this.operations], this.#client, this.trxId)\n  }\n\n  /**\n   * Commit the transaction, returning a promise that resolves to the first mutated document\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any>>(\n    options: TransactionFirstDocumentMutationOptions,\n  ): Promise<SanityDocument<R>>\n  /**\n   * Commit the transaction, returning a promise that resolves to an array of the mutated documents\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any>>(\n    options: TransactionAllDocumentsMutationOptions,\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Commit the transaction, returning a promise that resolves to a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: TransactionFirstDocumentIdMutationOptions): Promise<SingleMutationResult>\n  /**\n   * Commit the transaction, returning a promise that resolves to a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: TransactionAllDocumentIdsMutationOptions): Promise<MultipleMutationResult>\n  /**\n   * Commit the transaction, returning a promise that resolves to a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options?: BaseMutationOptions): Promise<MultipleMutationResult>\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options?:\n      | TransactionFirstDocumentMutationOptions\n      | TransactionAllDocumentsMutationOptions\n      | TransactionFirstDocumentIdMutationOptions\n      | TransactionAllDocumentIdsMutationOptions\n      | BaseMutationOptions,\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    if (!this.#client) {\n      throw new Error(\n        'No `client` passed to transaction, either provide one or pass the ' +\n          'transaction to a clients `mutate()` method',\n      )\n    }\n\n    return this.#client.mutate<R>(\n      this.serialize() as Any,\n      Object.assign({transactionId: this.trxId}, defaultMutateOptions, options || {}),\n    )\n  }\n\n  /**\n   * Performs a patch on the given document ID. Can either be a builder function or an object of patch operations.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param documentId - Document ID to perform the patch operation on\n   * @param patchOps - Operations to perform, or a builder function\n   */\n  patch(documentId: string, patchOps?: PatchBuilder | PatchOperations): this\n  /**\n   * Performs a patch on the given selection. Can either be a builder function or an object of patch operations.\n   *\n   * @param selection - An object with `query` and optional `params`, defining which document(s) to patch\n   * @param patchOps - Operations to perform, or a builder function\n   */\n  patch(patch: MutationSelection, patchOps?: PatchBuilder | PatchOperations): this\n  /**\n   * Adds the given patch instance to the transaction.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param patch - Patch to execute\n   */\n  patch(patch: Patch): this\n  patch(\n    patchOrDocumentId: Patch | MutationSelection | string,\n    patchOps?: PatchBuilder | PatchOperations,\n  ): this {\n    const isBuilder = typeof patchOps === 'function'\n    const isPatch = typeof patchOrDocumentId !== 'string' && patchOrDocumentId instanceof Patch\n    const isMutationSelection =\n      typeof patchOrDocumentId === 'object' &&\n      ('query' in patchOrDocumentId || 'id' in patchOrDocumentId)\n\n    // transaction.patch(client.patch('documentId').inc({visits: 1}))\n    if (isPatch) {\n      return this._add({patch: patchOrDocumentId.serialize()})\n    }\n\n    // patch => patch.inc({visits: 1}).set({foo: 'bar'})\n    if (isBuilder) {\n      const patch = patchOps(new Patch(patchOrDocumentId, {}, this.#client))\n      if (!(patch instanceof Patch)) {\n        throw new Error('function passed to `patch()` must return the patch')\n      }\n\n      return this._add({patch: patch.serialize()})\n    }\n\n    /*\n     * transaction.patch(\n     *   {query: \"*[_type == 'person' && points >= $threshold]\", params: { threshold: 100 }},\n     *   {dec: { points: 100 }, inc: { bonuses: 1 }}\n     * )\n     */\n    if (isMutationSelection) {\n      const patch = new Patch(patchOrDocumentId, patchOps || {}, this.#client)\n      return this._add({patch: patch.serialize()})\n    }\n\n    return this._add({patch: {id: patchOrDocumentId, ...patchOps}})\n  }\n}\n\n/** @public */\nexport class ObservableTransaction extends BaseTransaction {\n  #client?: ObservableSanityClient\n  constructor(operations?: Mutation[], client?: ObservableSanityClient, transactionId?: string) {\n    super(operations, transactionId)\n    this.#client = client\n  }\n\n  /**\n   * Clones the transaction\n   */\n  clone(): ObservableTransaction {\n    return new ObservableTransaction([...this.operations], this.#client, this.trxId)\n  }\n\n  /**\n   * Commit the transaction, returning an observable that produces the first mutated document\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any>>(\n    options: TransactionFirstDocumentMutationOptions,\n  ): Observable<SanityDocument<R>>\n  /**\n   * Commit the transaction, returning an observable that produces an array of the mutated documents\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit<R extends Record<string, Any>>(\n    options: TransactionAllDocumentsMutationOptions,\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Commit the transaction, returning an observable that produces a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: TransactionFirstDocumentIdMutationOptions): Observable<SingleMutationResult>\n  /**\n   * Commit the transaction, returning an observable that produces a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options: TransactionAllDocumentIdsMutationOptions): Observable<MultipleMutationResult>\n  /**\n   * Commit the transaction, returning an observable that produces a mutation result object\n   *\n   * @param options - Options for the mutation operation\n   */\n  commit(options?: BaseMutationOptions): Observable<MultipleMutationResult>\n  commit<R extends Record<string, Any> = Record<string, Any>>(\n    options?:\n      | TransactionFirstDocumentMutationOptions\n      | TransactionAllDocumentsMutationOptions\n      | TransactionFirstDocumentIdMutationOptions\n      | TransactionAllDocumentIdsMutationOptions\n      | BaseMutationOptions,\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    if (!this.#client) {\n      throw new Error(\n        'No `client` passed to transaction, either provide one or pass the ' +\n          'transaction to a clients `mutate()` method',\n      )\n    }\n\n    return this.#client.mutate<R>(\n      this.serialize() as Any,\n      Object.assign({transactionId: this.trxId}, defaultMutateOptions, options || {}),\n    )\n  }\n\n  /**\n   * Performs a patch on the given document ID. Can either be a builder function or an object of patch operations.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param documentId - Document ID to perform the patch operation on\n   * @param patchOps - Operations to perform, or a builder function\n   */\n  patch(documentId: string, patchOps?: ObservablePatchBuilder | PatchOperations): this\n  /**\n   * Adds the given patch instance to the transaction.\n   * The operation is added to the current transaction, ready to be commited by `commit()`\n   *\n   * @param patch - ObservablePatch to execute\n   */\n  patch(patch: ObservablePatch): this\n  patch(\n    patchOrDocumentId: ObservablePatch | string,\n    patchOps?: ObservablePatchBuilder | PatchOperations,\n  ): this {\n    const isBuilder = typeof patchOps === 'function'\n    const isPatch =\n      typeof patchOrDocumentId !== 'string' && patchOrDocumentId instanceof ObservablePatch\n\n    // transaction.patch(client.patch('documentId').inc({visits: 1}))\n    if (isPatch) {\n      return this._add({patch: patchOrDocumentId.serialize()})\n    }\n\n    // patch => patch.inc({visits: 1}).set({foo: 'bar'})\n    if (isBuilder) {\n      const patch = patchOps(new ObservablePatch(patchOrDocumentId, {}, this.#client))\n      if (!(patch instanceof ObservablePatch)) {\n        throw new Error('function passed to `patch()` must return the patch')\n      }\n\n      return this._add({patch: patch.serialize()})\n    }\n\n    return this._add({patch: {id: patchOrDocumentId, ...patchOps}})\n  }\n}\n","import type {RequestOptions} from 'get-it'\n\nimport type {Any} from '../types'\n\nconst projectHeader = 'X-Sanity-Project-ID'\n\nexport function requestOptions(config: Any, overrides: Any = {}): Omit<RequestOptions, 'url'> {\n  const headers: Any = {}\n\n  if (config.headers) {\n    Object.assign(headers, config.headers)\n  }\n\n  const token = overrides.token || config.token\n  if (token) {\n    headers.Authorization = `Bearer ${token}`\n  }\n\n  if (!overrides.useGlobalApi && !config.useProjectHostname && config.projectId) {\n    headers[projectHeader] = config.projectId\n  }\n\n  const withCredentials = Boolean(\n    typeof overrides.withCredentials === 'undefined'\n      ? config.withCredentials\n      : overrides.withCredentials,\n  )\n\n  const timeout = typeof overrides.timeout === 'undefined' ? config.timeout : overrides.timeout\n  return Object.assign({}, overrides, {\n    headers: Object.assign({}, headers, overrides.headers || {}),\n    timeout: typeof timeout === 'undefined' ? 5 * 60 * 1000 : timeout,\n    proxy: overrides.proxy || config.proxy,\n    json: true,\n    withCredentials,\n    fetch:\n      typeof overrides.fetch === 'object' && typeof config.fetch === 'object'\n        ? {...config.fetch, ...overrides.fetch}\n        : overrides.fetch || config.fetch,\n  })\n}\n","import type {Any, ListenParams, QueryParams} from '../types'\n\nexport const encodeQueryString = ({\n  query,\n  params = {},\n  options = {},\n}: {\n  query: string\n  params?: ListenParams | QueryParams\n  options?: Any\n}) => {\n  const searchParams = new URLSearchParams()\n  // We generally want tag at the start of the query string\n  const {tag, includeMutations, returnQuery, ...opts} = options\n  // We're using `append` instead of `set` to support React Native: https://github.com/facebook/react-native/blob/1982c4722fcc51aa87e34cf562672ee4aff540f1/packages/react-native/Libraries/Blob/URL.js#L86-L88\n  if (tag) searchParams.append('tag', tag)\n  searchParams.append('query', query)\n\n  // Iterate params, the keys are prefixed with `$` and their values JSON stringified\n  for (const [key, value] of Object.entries(params)) {\n    if (value !== undefined) searchParams.append(`$${key}`, JSON.stringify(value))\n  }\n  // Options are passed as-is\n  for (const [key, value] of Object.entries(opts)) {\n    // Skip falsy values\n    if (value) searchParams.append(key, `${value}`)\n  }\n\n  // `returnQuery` is default `true`, so needs an explicit `false` handling\n  if (returnQuery === false) searchParams.append('returnQuery', 'false')\n\n  // `includeMutations` is default `true`, so needs an explicit `false` handling\n  if (includeMutations === false) searchParams.append('includeMutations', 'false')\n\n  return `?${searchParams}`\n}\n","import {getDraftId, getVersionFromId, getVersionId, isDraftId} from '@sanity/client/csm'\nimport {from, type MonoTypeOperatorFunction, Observable} from 'rxjs'\nimport {combineLatestWith, filter, map} from 'rxjs/operators'\n\nimport {validateApiPerspective} from '../config'\nimport {requestOptions} from '../http/requestOptions'\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport {stegaClean} from '../stega/stegaClean'\nimport type {\n  Action,\n  AllDocumentIdsMutationOptions,\n  AllDocumentsMutationOptions,\n  Any,\n  BaseActionOptions,\n  BaseMutationOptions,\n  CreateVersionAction,\n  DiscardVersionAction,\n  FirstDocumentIdMutationOptions,\n  FirstDocumentMutationOptions,\n  HttpRequest,\n  HttpRequestEvent,\n  IdentifiedSanityDocumentStub,\n  InitializedClientConfig,\n  InitializedStegaConfig,\n  MultipleActionResult,\n  MultipleMutationResult,\n  Mutation,\n  MutationSelection,\n  QueryOptions,\n  RawQueryResponse,\n  ReplaceVersionAction,\n  RequestObservableOptions,\n  RequestOptions,\n  SanityDocument,\n  SingleActionResult,\n  SingleMutationResult,\n  UnpublishVersionAction,\n} from '../types'\nimport {getSelection} from '../util/getSelection'\nimport * as validate from '../validators'\nimport * as validators from '../validators'\nimport {\n  printCdnPreviewDraftsWarning,\n  printCreateVersionWithBaseIdWarning,\n  printPreviewDraftsDeprecationWarning,\n} from '../warnings'\nimport {encodeQueryString} from './encodeQueryString'\nimport {ObservablePatch, Patch} from './patch'\nimport {ObservableTransaction, Transaction} from './transaction'\n\ntype Client = SanityClient | ObservableSanityClient\n\nconst excludeFalsey = (param: Any, defValue: Any) => {\n  const value = typeof param === 'undefined' ? defValue : param\n  return param === false ? undefined : value\n}\n\nconst getMutationQuery = (options: BaseMutationOptions = {}) => {\n  return {\n    dryRun: options.dryRun,\n    returnIds: true,\n    returnDocuments: excludeFalsey(options.returnDocuments, true),\n    visibility: options.visibility || 'sync',\n    autoGenerateArrayKeys: options.autoGenerateArrayKeys,\n    skipCrossDatasetReferenceValidation: options.skipCrossDatasetReferenceValidation,\n  }\n}\n\nconst isResponse = (event: Any) => event.type === 'response'\nconst getBody = (event: Any) => event.body\n\nconst indexBy = (docs: Any[], attr: Any) =>\n  docs.reduce((indexed, doc) => {\n    indexed[attr(doc)] = doc\n    return indexed\n  }, Object.create(null))\n\nconst getQuerySizeLimit = 11264\n\n/** @internal */\nexport function _fetch<R, Q>(\n  client: Client,\n  httpRequest: HttpRequest,\n  _stega: InitializedStegaConfig,\n  query: string,\n  _params: Q = {} as Q,\n  options: QueryOptions = {},\n): Observable<RawQueryResponse<R> | R> {\n  const stega =\n    'stega' in options\n      ? {\n          ...(_stega || {}),\n          ...(typeof options.stega === 'boolean' ? {enabled: options.stega} : options.stega || {}),\n        }\n      : _stega\n  const params = stega.enabled ? stegaClean(_params) : _params\n  const mapResponse =\n    options.filterResponse === false ? (res: Any) => res : (res: Any) => res.result\n\n  const {cache, next, ...opts} = {\n    // Opt out of setting a `signal` on an internal `fetch` if one isn't provided.\n    // This is necessary in React Server Components to avoid opting out of Request Memoization.\n    useAbortSignal: typeof options.signal !== 'undefined',\n    // Set `resultSourceMap' when stega is enabled, as it's required for encoding.\n    resultSourceMap: stega.enabled ? 'withKeyArraySelector' : options.resultSourceMap,\n    ...options,\n    // Default to not returning the query, unless `filterResponse` is `false`,\n    // or `returnQuery` is explicitly set. `true` is the default in Content Lake, so skip if truthy\n    returnQuery: options.filterResponse === false && options.returnQuery !== false,\n  }\n  const reqOpts =\n    typeof cache !== 'undefined' || typeof next !== 'undefined'\n      ? {...opts, fetch: {cache, next}}\n      : opts\n\n  const $request = _dataRequest(client, httpRequest, 'query', {query, params}, reqOpts)\n  return stega.enabled\n    ? $request.pipe(\n        combineLatestWith(\n          from(\n            import('../stega/stegaEncodeSourceMap').then(\n              ({stegaEncodeSourceMap}) => stegaEncodeSourceMap,\n            ),\n          ),\n        ),\n        map(\n          ([res, stegaEncodeSourceMap]: [\n            Any,\n            (typeof import('../stega/stegaEncodeSourceMap'))['stegaEncodeSourceMap'],\n          ]) => {\n            const result = stegaEncodeSourceMap(res.result, res.resultSourceMap, stega)\n            return mapResponse({...res, result})\n          },\n        ),\n      )\n    : $request.pipe(map(mapResponse))\n}\n\n/** @internal */\nexport function _getDocument<R extends Record<string, Any>>(\n  client: Client,\n  httpRequest: HttpRequest,\n  id: string,\n  opts: {signal?: AbortSignal; tag?: string; releaseId?: string; includeAllVersions: true},\n): Observable<SanityDocument<R>[]>\n/** @internal */\nexport function _getDocument<R extends Record<string, Any>>(\n  client: Client,\n  httpRequest: HttpRequest,\n  id: string,\n  opts?: {signal?: AbortSignal; tag?: string; releaseId?: string; includeAllVersions?: false},\n): Observable<SanityDocument<R> | undefined>\n/** @internal */\nexport function _getDocument<R extends Record<string, Any>>(\n  client: Client,\n  httpRequest: HttpRequest,\n  id: string,\n  opts: {signal?: AbortSignal; tag?: string; releaseId?: string; includeAllVersions?: boolean} = {},\n): Observable<SanityDocument<R> | undefined | SanityDocument<R>[]> {\n  const getDocId = () => {\n    if (!opts.releaseId) {\n      return id\n    }\n\n    const versionId = getVersionFromId(id)\n    if (!versionId) {\n      if (isDraftId(id)) {\n        throw new Error(\n          `The document ID (\\`${id}\\`) is a draft, but \\`options.releaseId\\` is set as \\`${opts.releaseId}\\``,\n        )\n      }\n\n      return getVersionId(id, opts.releaseId)\n    }\n\n    if (versionId !== opts.releaseId) {\n      throw new Error(\n        `The document ID (\\`${id}\\`) is already a version of \\`${versionId}\\` release, but this does not match the provided \\`options.releaseId\\` (\\`${opts.releaseId}\\`)`,\n      )\n    }\n\n    return id\n  }\n  const docId = getDocId()\n\n  const options = {\n    uri: _getDataUrl(client, 'doc', docId),\n    json: true,\n    tag: opts.tag,\n    signal: opts.signal,\n    query:\n      opts.includeAllVersions !== undefined\n        ? {includeAllVersions: opts.includeAllVersions}\n        : undefined,\n  }\n  return _requestObservable<SanityDocument<R> | undefined | SanityDocument<R>[]>(\n    client,\n    httpRequest,\n    options,\n  ).pipe(\n    filter(isResponse),\n    map((event) => {\n      const documents = event.body.documents\n      if (!documents) {\n        return opts.includeAllVersions ? [] : undefined\n      }\n      return opts.includeAllVersions ? documents : documents[0]\n    }),\n  )\n}\n\n/** @internal */\nexport function _getDocuments<R extends Record<string, Any>>(\n  client: Client,\n  httpRequest: HttpRequest,\n  ids: string[],\n  opts: {signal?: AbortSignal; tag?: string} = {},\n): Observable<(SanityDocument<R> | null)[]> {\n  const options = {\n    uri: _getDataUrl(client, 'doc', ids.join(',')),\n    json: true,\n    tag: opts.tag,\n    signal: opts.signal,\n  }\n  return _requestObservable<(SanityDocument<R> | null)[]>(client, httpRequest, options).pipe(\n    filter(isResponse),\n    map((event: Any) => {\n      const indexed = indexBy(event.body.documents || [], (doc: Any) => doc._id)\n      return ids.map((id) => indexed[id] || null)\n    }),\n  )\n}\n\n/** @internal */\nexport function _getReleaseDocuments<R extends Record<string, Any>>(\n  client: ObservableSanityClient | SanityClient,\n  httpRequest: HttpRequest,\n  releaseId: string,\n  opts: BaseMutationOptions = {},\n): Observable<RawQueryResponse<SanityDocument<R>[]>> {\n  return _dataRequest(\n    client,\n    httpRequest,\n    'query',\n    {\n      query: '*[sanity::partOfRelease($releaseId)]',\n      params: {\n        releaseId,\n      },\n    },\n    opts,\n  )\n}\n\n/** @internal */\nexport function _createIfNotExists<R extends Record<string, Any>>(\n  client: Client,\n  httpRequest: HttpRequest,\n  doc: IdentifiedSanityDocumentStub<R>,\n  options?:\n    | AllDocumentIdsMutationOptions\n    | AllDocumentsMutationOptions\n    | BaseMutationOptions\n    | FirstDocumentIdMutationOptions\n    | FirstDocumentMutationOptions,\n): Observable<\n  SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n> {\n  validators.requireDocumentId('createIfNotExists', doc)\n  return _create<R>(client, httpRequest, doc, 'createIfNotExists', options)\n}\n\n/** @internal */\nexport function _createOrReplace<R extends Record<string, Any>>(\n  client: Client,\n  httpRequest: HttpRequest,\n  doc: IdentifiedSanityDocumentStub<R>,\n  options?:\n    | AllDocumentIdsMutationOptions\n    | AllDocumentsMutationOptions\n    | BaseMutationOptions\n    | FirstDocumentIdMutationOptions\n    | FirstDocumentMutationOptions,\n): Observable<\n  SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n> {\n  validators.requireDocumentId('createOrReplace', doc)\n  return _create<R>(client, httpRequest, doc, 'createOrReplace', options)\n}\n\n/** @internal */\nexport function _createVersion<R extends Record<string, Any>>(\n  client: ObservableSanityClient | SanityClient,\n  httpRequest: HttpRequest,\n  doc: IdentifiedSanityDocumentStub<R>,\n  publishedId: string,\n  options?: BaseActionOptions,\n): Observable<SingleActionResult> {\n  validators.requireDocumentId('createVersion', doc)\n  validators.requireDocumentType('createVersion', doc)\n  printCreateVersionWithBaseIdWarning()\n\n  const createVersionAction: CreateVersionAction = {\n    actionType: 'sanity.action.document.version.create',\n    publishedId,\n    document: doc,\n  }\n\n  return _action(client, httpRequest, createVersionAction, options)\n}\n\n/** @internal */\nexport function _createVersionFromBase(\n  client: ObservableSanityClient | SanityClient,\n  httpRequest: HttpRequest,\n  publishedId?: string,\n  baseId?: string,\n  releaseId?: string,\n  ifBaseRevisionId?: string,\n  options?: BaseActionOptions,\n): Observable<SingleActionResult> {\n  if (!baseId) {\n    throw new Error('`createVersion()` requires `baseId` when no `document` is provided')\n  }\n\n  if (!publishedId) {\n    throw new Error('`createVersion()` requires `publishedId` when `baseId` is provided')\n  }\n\n  validators.validateDocumentId('createVersion', baseId)\n  validators.validateDocumentId('createVersion', publishedId)\n\n  const createVersionAction: CreateVersionAction = {\n    actionType: 'sanity.action.document.version.create',\n    publishedId,\n    baseId,\n    versionId: releaseId ? getVersionId(publishedId, releaseId) : getDraftId(publishedId),\n    ifBaseRevisionId,\n  }\n\n  return _action(client, httpRequest, createVersionAction, options)\n}\n\n/** @internal */\nexport function _delete<R extends Record<string, Any>>(\n  client: Client,\n  httpRequest: HttpRequest,\n  selection: string | MutationSelection,\n  options?:\n    | AllDocumentIdsMutationOptions\n    | AllDocumentsMutationOptions\n    | BaseMutationOptions\n    | FirstDocumentIdMutationOptions\n    | FirstDocumentMutationOptions,\n): Observable<\n  SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n> {\n  return _dataRequest(\n    client,\n    httpRequest,\n    'mutate',\n    {mutations: [{delete: getSelection(selection)}]},\n    options,\n  )\n}\n\n/** @internal */\nexport function _discardVersion(\n  client: ObservableSanityClient | SanityClient,\n  httpRequest: HttpRequest,\n  versionId: string,\n  purge: boolean = false,\n  options?: BaseActionOptions,\n): Observable<SingleActionResult> {\n  const discardVersionAction: DiscardVersionAction = {\n    actionType: 'sanity.action.document.version.discard',\n    versionId,\n    purge,\n  }\n\n  return _action(client, httpRequest, discardVersionAction, options)\n}\n\n/** @internal */\nexport function _replaceVersion<R extends Record<string, Any>>(\n  client: ObservableSanityClient | SanityClient,\n  httpRequest: HttpRequest,\n  doc: IdentifiedSanityDocumentStub<R>,\n  options?: BaseActionOptions,\n): Observable<SingleActionResult> {\n  validators.requireDocumentId('replaceVersion', doc)\n  validators.requireDocumentType('replaceVersion', doc)\n\n  const replaceVersionAction: ReplaceVersionAction = {\n    actionType: 'sanity.action.document.version.replace',\n    document: doc,\n  }\n\n  return _action(client, httpRequest, replaceVersionAction, options)\n}\n\n/** @internal */\nexport function _unpublishVersion(\n  client: ObservableSanityClient | SanityClient,\n  httpRequest: HttpRequest,\n  versionId: string,\n  publishedId: string,\n  options?: BaseActionOptions,\n): Observable<SingleActionResult> {\n  const unpublishVersionAction: UnpublishVersionAction = {\n    actionType: 'sanity.action.document.version.unpublish',\n    versionId,\n    publishedId,\n  }\n\n  return _action(client, httpRequest, unpublishVersionAction, options)\n}\n\n/** @internal */\nexport function _mutate<R extends Record<string, Any>>(\n  client: Client,\n  httpRequest: HttpRequest,\n  mutations: Mutation<R>[] | Patch | ObservablePatch | Transaction | ObservableTransaction,\n  options?:\n    | AllDocumentIdsMutationOptions\n    | AllDocumentsMutationOptions\n    | BaseMutationOptions\n    | FirstDocumentIdMutationOptions\n    | FirstDocumentMutationOptions,\n): Observable<\n  SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n> {\n  let mut: Mutation | Mutation[]\n  if (mutations instanceof Patch || mutations instanceof ObservablePatch) {\n    mut = {patch: mutations.serialize()}\n  } else if (mutations instanceof Transaction || mutations instanceof ObservableTransaction) {\n    mut = mutations.serialize()\n  } else {\n    mut = mutations\n  }\n\n  const muts = Array.isArray(mut) ? mut : [mut]\n  const transactionId = (options && options.transactionId) || undefined\n  return _dataRequest(client, httpRequest, 'mutate', {mutations: muts, transactionId}, options)\n}\n\n/**\n * @internal\n */\nexport function _action(\n  client: Client,\n  httpRequest: HttpRequest,\n  actions: Action | Action[],\n  options?: BaseActionOptions,\n): Observable<SingleActionResult | MultipleActionResult> {\n  const acts = Array.isArray(actions) ? actions : [actions]\n  const transactionId = (options && options.transactionId) || undefined\n  const skipCrossDatasetReferenceValidation =\n    (options && options.skipCrossDatasetReferenceValidation) || undefined\n  const dryRun = (options && options.dryRun) || undefined\n\n  return _dataRequest(\n    client,\n    httpRequest,\n    'actions',\n    {actions: acts, transactionId, skipCrossDatasetReferenceValidation, dryRun},\n    options,\n  )\n}\n\n/**\n * @internal\n */\nexport function _dataRequest(\n  client: Client,\n  httpRequest: HttpRequest,\n  endpoint: string,\n  body: Any,\n  options: Any = {},\n): Any {\n  const isMutation = endpoint === 'mutate'\n  const isAction = endpoint === 'actions'\n  const isQuery = endpoint === 'query'\n\n  // Check if the query string is within a configured threshold,\n  // in which case we can use GET. Otherwise, use POST.\n  const strQuery = isMutation || isAction ? '' : encodeQueryString(body)\n  const useGet = !isMutation && !isAction && strQuery.length < getQuerySizeLimit\n  const stringQuery = useGet ? strQuery : ''\n  const returnFirst = options.returnFirst\n  const {timeout, token, tag, headers, returnQuery, lastLiveEventId, cacheMode} = options\n\n  const uri = _getDataUrl(client, endpoint, stringQuery)\n\n  const reqOptions = {\n    method: useGet ? 'GET' : 'POST',\n    uri: uri,\n    json: true,\n    body: useGet ? undefined : body,\n    query: isMutation && getMutationQuery(options),\n    timeout,\n    headers,\n    token,\n    tag,\n    returnQuery,\n    perspective: options.perspective,\n    resultSourceMap: options.resultSourceMap,\n    lastLiveEventId: Array.isArray(lastLiveEventId) ? lastLiveEventId[0] : lastLiveEventId,\n    cacheMode: cacheMode,\n    canUseCdn: isQuery,\n    signal: options.signal,\n    fetch: options.fetch,\n    useAbortSignal: options.useAbortSignal,\n    useCdn: options.useCdn,\n  }\n\n  return _requestObservable(client, httpRequest, reqOptions).pipe(\n    filter(isResponse),\n    map(getBody),\n    map((res) => {\n      if (!isMutation) {\n        return res\n      }\n\n      // Should we return documents?\n      const results = res.results || []\n      if (options.returnDocuments) {\n        return returnFirst\n          ? results[0] && results[0].document\n          : results.map((mut: Any) => mut.document)\n      }\n\n      // Return a reduced subset\n      const key = returnFirst ? 'documentId' : 'documentIds'\n      const ids = returnFirst ? results[0] && results[0].id : results.map((mut: Any) => mut.id)\n      return {\n        transactionId: res.transactionId,\n        results: results,\n        [key]: ids,\n      }\n    }),\n  )\n}\n\n/**\n * @internal\n */\nexport function _create<R extends Record<string, Any>>(\n  client: Client,\n  httpRequest: HttpRequest,\n  doc: Any,\n  op: Any,\n  options: Any = {},\n): Observable<\n  SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n> {\n  const mutation = {[op]: doc}\n  const opts = Object.assign({returnFirst: true, returnDocuments: true}, options)\n  return _dataRequest(client, httpRequest, 'mutate', {mutations: [mutation]}, opts)\n}\n\nconst hasDataConfig = (client: Client) =>\n  (client.config().dataset !== undefined && client.config().projectId !== undefined) ||\n  client.config()['~experimental_resource'] !== undefined\n\nconst isQuery = (client: Client, uri: string) =>\n  hasDataConfig(client) && uri.startsWith(_getDataUrl(client, 'query'))\n\nconst isMutate = (client: Client, uri: string) =>\n  hasDataConfig(client) && uri.startsWith(_getDataUrl(client, 'mutate'))\n\nconst isDoc = (client: Client, uri: string) =>\n  hasDataConfig(client) && uri.startsWith(_getDataUrl(client, 'doc', ''))\n\nconst isListener = (client: Client, uri: string) =>\n  hasDataConfig(client) && uri.startsWith(_getDataUrl(client, 'listen'))\n\nconst isHistory = (client: Client, uri: string) =>\n  hasDataConfig(client) && uri.startsWith(_getDataUrl(client, 'history', ''))\n\nconst isData = (client: Client, uri: string) =>\n  uri.startsWith('/data/') ||\n  isQuery(client, uri) ||\n  isMutate(client, uri) ||\n  isDoc(client, uri) ||\n  isListener(client, uri) ||\n  isHistory(client, uri)\n\n/**\n * @internal\n */\nexport function _requestObservable<R>(\n  client: Client,\n  httpRequest: HttpRequest,\n  options: RequestObservableOptions,\n): Observable<HttpRequestEvent<R>> {\n  const uri = options.url || (options.uri as string)\n  const config = client.config()\n\n  // If the `canUseCdn`-option is not set we detect it automatically based on the method + URL.\n  // Only the /data endpoint is currently available through API-CDN.\n  const canUseCdn =\n    typeof options.canUseCdn === 'undefined'\n      ? ['GET', 'HEAD'].indexOf(options.method || 'GET') >= 0 && isData(client, uri)\n      : options.canUseCdn\n\n  let useCdn = (options.useCdn ?? config.useCdn) && canUseCdn\n\n  const tag =\n    options.tag && config.requestTagPrefix\n      ? [config.requestTagPrefix, options.tag].join('.')\n      : options.tag || config.requestTagPrefix\n\n  if (tag && options.tag !== null) {\n    options.query = {tag: validate.requestTag(tag), ...options.query}\n  }\n\n  // GROQ query-only parameters\n  if (['GET', 'HEAD', 'POST'].indexOf(options.method || 'GET') >= 0 && isQuery(client, uri)) {\n    const resultSourceMap = options.resultSourceMap ?? config.resultSourceMap\n    if (resultSourceMap !== undefined && resultSourceMap !== false) {\n      options.query = {resultSourceMap, ...options.query}\n    }\n    const perspectiveOption = options.perspective || config.perspective\n    if (typeof perspectiveOption !== 'undefined') {\n      if (perspectiveOption === 'previewDrafts') {\n        printPreviewDraftsDeprecationWarning()\n      }\n      validateApiPerspective(perspectiveOption)\n      options.query = {\n        perspective: Array.isArray(perspectiveOption)\n          ? perspectiveOption.join(',')\n          : perspectiveOption,\n        ...options.query,\n      }\n      // If the perspective is set to `drafts` or multiple perspectives we can't use the CDN, the API will throw\n      if (\n        ((Array.isArray(perspectiveOption) && perspectiveOption.length > 0) ||\n          // previewDrafts was renamed to drafts, but keep for backwards compat\n          perspectiveOption === 'previewDrafts' ||\n          perspectiveOption === 'drafts') &&\n        useCdn\n      ) {\n        useCdn = false\n        printCdnPreviewDraftsWarning()\n      }\n    }\n\n    if (options.lastLiveEventId) {\n      options.query = {...options.query, lastLiveEventId: options.lastLiveEventId}\n    }\n\n    if (options.returnQuery === false) {\n      options.query = {returnQuery: 'false', ...options.query}\n    }\n\n    if (useCdn && options.cacheMode == 'noStale') {\n      options.query = {cacheMode: 'noStale', ...options.query}\n    }\n  }\n\n  const reqOptions = requestOptions(\n    config,\n    Object.assign({}, options, {\n      url: _getUrl(client, uri, useCdn),\n    }),\n  ) as RequestOptions\n\n  const request = new Observable<HttpRequestEvent<R>>((subscriber) =>\n    httpRequest(reqOptions, config.requester!).subscribe(subscriber),\n  )\n\n  return options.signal ? request.pipe(_withAbortSignal(options.signal)) : request\n}\n\n/**\n * @internal\n */\nexport function _request<R>(client: Client, httpRequest: HttpRequest, options: Any): Observable<R> {\n  const observable = _requestObservable<R>(client, httpRequest, options).pipe(\n    filter((event: Any) => event.type === 'response'),\n    map((event: Any) => event.body),\n  )\n\n  return observable\n}\n\n/**\n * @internal\n */\nexport function _getDataUrl(client: Client, operation: string, path?: string): string {\n  const config = client.config()\n  if (config['~experimental_resource']) {\n    validators.resourceConfig(config)\n    const resourceBase = resourceDataBase(config)\n    const uri = path !== undefined ? `${operation}/${path}` : operation\n    return `${resourceBase}/${uri}`.replace(/\\/($|\\?)/, '$1')\n  }\n  const catalog = validators.hasDataset(config)\n  const baseUri = `/${operation}/${catalog}`\n  const uri = path !== undefined ? `${baseUri}/${path}` : baseUri\n  return `/data${uri}`.replace(/\\/($|\\?)/, '$1')\n}\n\n/**\n * @internal\n */\nexport function _getUrl(client: Client, uri: string, canUseCdn = false): string {\n  const {url, cdnUrl} = client.config()\n  const base = canUseCdn ? cdnUrl : url\n  return `${base}/${uri.replace(/^\\//, '')}`\n}\n\n/**\n * @internal\n */\nfunction _withAbortSignal<T>(signal: AbortSignal): MonoTypeOperatorFunction<T> {\n  return (input) => {\n    return new Observable((observer) => {\n      const abort = () => observer.error(_createAbortError(signal))\n\n      if (signal && signal.aborted) {\n        abort()\n        return\n      }\n      const subscription = input.subscribe(observer)\n      signal.addEventListener('abort', abort)\n      return () => {\n        signal.removeEventListener('abort', abort)\n        subscription.unsubscribe()\n      }\n    })\n  }\n}\n// DOMException is supported on most modern browsers and Node.js 18+.\n// @see https://developer.mozilla.org/en-US/docs/Web/API/DOMException#browser_compatibility\nconst isDomExceptionSupported = Boolean(globalThis.DOMException)\n\n/**\n * @internal\n * @param signal - The abort signal to use.\n * Original source copied from https://github.com/sindresorhus/ky/blob/740732c78aad97e9aec199e9871bdbf0ae29b805/source/errors/DOMException.ts\n * TODO: When targeting Node.js 18, use `signal.throwIfAborted()` (https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal/throwIfAborted)\n */\nfunction _createAbortError(signal?: AbortSignal) {\n  /*\n  NOTE: Use DomException with AbortError name as specified in MDN docs (https://developer.mozilla.org/en-US/docs/Web/API/AbortController/abort)\n  > When abort() is called, the fetch() promise rejects with an Error of type DOMException, with name AbortError.\n  */\n  if (isDomExceptionSupported) {\n    return new DOMException(signal?.reason ?? 'The operation was aborted.', 'AbortError')\n  }\n\n  // DOMException not supported. Fall back to use of error and override name.\n  const error = new Error(signal?.reason ?? 'The operation was aborted.')\n  error.name = 'AbortError'\n\n  return error\n}\n\nconst resourceDataBase = (config: InitializedClientConfig): string => {\n  if (!config['~experimental_resource']) {\n    throw new Error('`resource` must be provided to perform resource queries')\n  }\n  const {type, id} = config['~experimental_resource']\n\n  switch (type) {\n    case 'dataset': {\n      const segments = id.split('.')\n      if (segments.length !== 2) {\n        throw new Error('Dataset ID must be in the format \"project.dataset\"')\n      }\n      return `/projects/${segments[0]}/datasets/${segments[1]}`\n    }\n    case 'canvas': {\n      return `/canvases/${id}`\n    }\n    case 'media-library': {\n      return `/media-libraries/${id}`\n    }\n    case 'dashboard': {\n      return `/dashboards/${id}`\n    }\n    default:\n      // @ts-expect-error - handle all supported resource types\n      throw new Error(`Unsupported resource type: ${type.toString()}`)\n  }\n}\n","import {type Observable} from 'rxjs'\n\nimport {_request} from '../../data/dataMethods'\nimport type {ObservableSanityClient, SanityClient} from '../../SanityClient'\nimport type {AgentActionParams, Any, HttpRequest, IdentifiedSanityDocumentStub} from '../../types'\nimport {hasDataset} from '../../validators'\nimport type {\n  AgentActionAsync,\n  AgentActionPathSegment,\n  AgentActionRequestBase,\n  AgentActionSync,\n  AgentActionTarget,\n  AgentActionTargetInclude,\n} from './commonTypes'\n\n/**  @beta */\nexport type GenerateOperation = 'set' | 'append' | 'mixed'\n\n/**  @beta */\nexport interface GenerateRequestBase extends AgentActionRequestBase {\n  /** schemaId as reported by sanity deploy / sanity schema store */\n  schemaId: string\n  /**\n   * Instruct the LLM how it should generate content. Be as specific and detailed as needed.\n   *\n   * The LLM only has access to information in the instruction, plus the target schema.\n   *\n   * String template with support for $variable from `instructionParams`.\n   * */\n  instruction: string\n  /**\n   * param values for the string template, keys are the variable name, ie if the template has \"$variable\", one key must be \"variable\"\n   *\n   * ### Examples\n   *\n   * #### Constant\n   *\n   * ##### Shorthand\n   * ```ts\n   * client.agent.action.generate({\n   *   schemaId,\n   *   documentId,\n   *   instruction: 'Give the following topic:\\n $topic \\n ---\\nGenerate the full article.',\n   *   instructionParams: {\n   *     topic: 'Grapefruit'\n   *   },\n   * })\n   * ```\n   * ##### Object-form\n   *\n   * ```ts\n   * client.agent.action.generate({\n   *   schemaId,\n   *   documentId,\n   *   instruction: 'Give the following topic:\\n $topic \\n ---\\nGenerate the full article.',\n   *   instructionParams: {\n   *     topic: {\n   *       type: 'constant',\n   *       value: 'Grapefruit'\n   *     },\n   *   },\n   * })\n   * ```\n   * #### Field\n   * ```ts\n   * client.agent.action.generate({\n   *   schemaId,\n   *   documentId,\n   *   instruction: 'Give the following field value:\\n $pte \\n ---\\nGenerate keywords.',\n   *   instructionParams: {\n   *     pte: {\n   *       type: 'field',\n   *       path: ['pteField'],\n   *     },\n   *   },\n   *   target: {path: 'keywords' }\n   * })\n   * ```\n   * #### Document\n   * ```ts\n   * client.agent.action.generate({\n   *   schemaId,\n   *   documentId,\n   *   instruction: 'Give the following document value:\\n $document \\n ---\\nGenerate keywords.',\n   *   instructionParams: {\n   *     document: {\n   *       type: 'document',\n   *     },\n   *   },\n   *   target: {path: 'keywords' }\n   * })\n   * ```\n   *\n   * #### GROQ\n   * ```ts\n   * client.agent.action.generate({\n   *   schemaId,\n   *   documentId,\n   *   instruction: 'Give the following list of titles:\\n $list \\n ---\\nGenerate a similar title.',\n   *   instructionParams: {\n   *     list: {\n   *       type: 'groq',\n   *       query: '* [_type==$type].title',\n   *       params: {type: 'article'}\n   *     },\n   *   },\n   *   target: {path: 'title' }\n   * })\n   * ```\n   * */\n  instructionParams?: AgentActionParams\n\n  /**\n   * Target defines which parts of the document will be affected by the instruction.\n   * It can be an array, so multiple parts of the document can be separately configured in detail.\n   *\n   * Omitting target implies that the document itself is the root.\n   *\n   * Notes:\n   * - instruction can only affect fields up to `maxPathDepth`\n   * - when multiple targets are provided, they will be coalesced into a single target sharing a common target root.\n   * It is therefor an error to provide conflicting include/exclude across targets (ie, include title in one, and exclude it in another)\n   *\n   * ## Generating images\n   *\n   * Generate will generate images the same was as AI Assist, for images that have been configured using\n   * [AI Assist schema options](https://github.com/sanity-io/assist/tree/main/plugin#image-generation).\n   *\n   * To generate images _without_ changing the schema, directly target an image asset path.\n   *\n   * For example, all the following will generate an image into the provided asset:\n   * * `target: {path: ['image', 'asset'] }`\n   * * `target: {path: 'image', include: ['asset'] }`\n   *\n   * Image generation can be combined with regular content targets:\n   * * `target: [{path: ['image', 'asset'] }, {include: ['title', 'description']}]`\n   *\n   * Since Generate happens in a single LLM pass, the image will be contextually related to other generated content.\n   * @see AgentActionRequestBase#conditionalPaths\n   */\n  target?: GenerateTarget | GenerateTarget[]\n}\n\n/**  @beta */\nexport interface GenerateTargetInclude extends AgentActionTargetInclude {\n  /**\n   * Sets the operation for this path, and all its children.\n   * This overrides any operation set parents or the root target.\n   * @see #GenerateTarget.operation\n   * @see #include\n   */\n  operation?: GenerateOperation\n\n  /**\n   * By default, all children up to `target.maxPathDepth` are included.\n   *\n   * When `include` is specified, only segments explicitly listed will be included.\n   *\n   * Fields or array items not on the include list, are implicitly excluded.\n   */\n  include?: (AgentActionPathSegment | GenerateTargetInclude)[]\n}\n\n/**  @beta */\nexport interface GenerateTarget extends AgentActionTarget {\n  /**\n   * Sets the default operation for all paths in the target.\n   * Generate runs in `'mixed'` operation mode by default:\n   * Changes are set in all non-array fields, and append to all array fields.\n   *\n   * ### Operation types\n   * - `'set'` – an *overwriting* operation, and replaces the full field value.\n   * - `'append'`:\n   *    – array fields: appends new items to the end of the array,\n   *    - string fields: '\"existing content\" \"new content\"'\n   *    - text fields: '\"existing content\"\\\\n\"new content\"'\n   *    - number fields: existing + new\n   *    - other field types not mentioned will set instead (dates, url)\n   * - `'mixed'` – (default) sets non-array fields, and appends to array fields\n   *\n   * The default operation can be overridden on a per-path basis using `include`.\n   *\n   * Nested fields inherit the operation specified by their parent and falls back to the\n   * top level target operation if not otherwise specified.\n   *\n   * Use `include` to change the `operation` of individual fields or items.\n   *\n   * #### Appending in the middle of arrays\n   * `target: {path: ['array'], operation: 'append'}` will append the output of the instruction to the end of the array.\n   *\n   * To insert in the middle of the array, use `target: {path: ['array', {_key: 'appendAfterKey'}], operation: 'append'}`.\n   * Here, the output of the instruction will be appended after the array item with key `'appendAfterKey'`.\n   *\n   * @see #AgentActionTargetInclude.operation\n   * @see #include\n   * @see #AgentActionTargetInclude.include\n   * @see #AgentActionSchema.forcePublishedWrite\n   */\n  operation?: GenerateOperation\n\n  /**\n   * By default, all children up to `target.maxPathDepth` are included.\n   *\n   * When `include` is specified, only segments explicitly listed will be included.\n   *\n   * Fields or array items not on the include list, are implicitly excluded.\n   */\n  include?: (AgentActionPathSegment | GenerateTargetInclude)[]\n}\n\n/**  @beta */\nexport type GenerateTargetDocument<T extends Record<string, Any> = Record<string, Any>> =\n  | {\n      operation: 'edit'\n      /**\n       * @see #AgentActionSchema.forcePublishedWrite\n       */\n      _id: string\n    }\n  | {\n      operation: 'create'\n      /**\n       * @see #AgentActionSchema.forcePublishedWrite\n       */\n      _id?: string\n      _type: string\n      initialValues?: T\n    }\n  | {\n      operation: 'createIfNotExists'\n      /**\n       * @see #AgentActionSchema.forcePublishedWrite\n       */\n      _id: string\n      _type: string\n      initialValues?: T\n    }\n  | {\n      operation: 'createOrReplace'\n      /**\n       * @see #AgentActionSchema.forcePublishedWrite\n       */\n      _id: string\n      _type: string\n      initialValues?: T\n    }\n\n/**\n * Instruction for an existing document.\n * @beta\n */\ninterface GenerateExistingDocumentRequest {\n  /**\n   * @see #AgentActionSchema.forcePublishedWrite\n   */\n  documentId: string\n  targetDocument?: never\n}\n\n/**\n * Instruction to create a new document\n * @beta\n */\ninterface GenerateTargetDocumentRequest<T extends Record<string, Any> = Record<string, Any>> {\n  /**\n   * @see #AgentActionSchema.forcePublishedWrite\n   */\n  targetDocument: GenerateTargetDocument<T>\n  documentId?: never\n}\n\n/** @beta */\nexport type GenerateSyncInstruction<T extends Record<string, Any> = Record<string, Any>> = (\n  | GenerateExistingDocumentRequest\n  | GenerateTargetDocumentRequest<T>\n) &\n  GenerateRequestBase &\n  AgentActionSync\n\n/** @beta */\nexport type GenerateAsyncInstruction<T extends Record<string, Any> = Record<string, Any>> = (\n  | GenerateExistingDocumentRequest\n  | GenerateTargetDocumentRequest<T>\n) &\n  GenerateRequestBase &\n  AgentActionAsync\n\n/** @beta */\nexport type GenerateInstruction<T extends Record<string, Any> = Record<string, Any>> =\n  | GenerateSyncInstruction<T>\n  | GenerateAsyncInstruction<T>\n\nexport function _generate<DocumentShape extends Record<string, Any>>(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  request: GenerateInstruction<DocumentShape>,\n): Observable<\n  (typeof request)['async'] extends true\n    ? {_id: string}\n    : IdentifiedSanityDocumentStub & DocumentShape\n> {\n  const dataset = hasDataset(client.config())\n  return _request(client, httpRequest, {\n    method: 'POST',\n    uri: `/agent/action/generate/${dataset}`,\n    body: request,\n  })\n}\n","import {type Observable} from 'rxjs'\n\nimport {_request} from '../../data/dataMethods'\nimport type {ObservableSanityClient, SanityClient} from '../../SanityClient'\nimport type {\n  AgentActionPath,\n  AgentActionPathSegment,\n  Any,\n  GenerateTargetDocument,\n  HttpRequest,\n  IdentifiedSanityDocumentStub,\n} from '../../types'\nimport {hasDataset} from '../../validators'\nimport type {AgentActionAsync, AgentActionSchema, AgentActionSync} from './commonTypes'\n\n/**  @beta */\nexport type PatchOperation = 'set' | 'append' | 'mixed' | 'unset'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyNonNullable = Exclude<any, null | undefined>\n\n/**  @beta */\nexport interface PatchRequestBase extends AgentActionSchema {\n  /**\n   * Target defines which parts of the document will be affected by the instruction.\n   * It can be an array, so multiple parts of the document can be separately configured in detail.\n   *\n   * Omitting target implies that the document itself is the root.\n   *\n   * Notes:\n   * - instruction can only affect fields up to `maxPathDepth`\n   * - when multiple targets are provided, they will be coalesced into a single target sharing a common target root.\n   * It is therefore an error to provide conflicting include/exclude across targets (ie, include title in one, and exclude it in another)\n   *\n   * @see AgentActionRequestBase#conditionalPaths\n   */\n  target: PatchTarget | PatchTarget[]\n}\n\n/**  @beta */\nexport type PatchTarget = {\n  /**\n   * Determines how the target path will be patched.\n   *\n   * ### Operation types\n   * - `'set'` – an *overwriting* operation: sets the full field value for primitive targets, and merges the provided value with existing values for objects\n   * - `'append'`:\n   *    – array fields: appends new items to the end of the array,\n   *    - string fields: '\"existing content\" \"new content\"'\n   *    - text fields: '\"existing content\"\\\\n\"new content\"'\n   *    - number fields: existing + new\n   *    - other field types not mentioned will set instead (dates, url)\n   * - `'mixed'` –  sets non-array fields, and appends to array fields\n   * - `'unset'` – removes whatever value is on the target path\n   *\n   * All operations except unset requires a `value`.\n   *\n   * #### Appending in the middle of arrays\n   * To append to an array, use the 'append' operation, and provide an array value with one or more array items.\n   *\n   * `target: {path: ['array'], operation: 'append', value: [{_type: 'item' _key: 'a'}]}` will append the items in the value to the existing array.\n   *\n   * To insert in the middle of the array, use `target: {path: ['array', {_key: 'appendAfterKey'}], operation: 'append', value: [{_type: 'item' _key: 'a'}]}`.\n   * Here, `{_type: 'item' _key: 'a'}` will be appended after the array item with key `'appendAfterKey'`\n   *\n   * It is optional to provide a _key for inserted array items; if one isn't provided, it will be generated.\n   */\n  operation: PatchOperation\n\n  path: AgentActionPathSegment | AgentActionPath\n} & (\n  | {operation: 'unset'; value?: never}\n  | {operation: Exclude<PatchOperation, 'unset'>; value: AnyNonNullable}\n)\n\n/**\n * Patches an existing document\n * @beta\n */\ninterface PatchExistingDocumentRequest {\n  /**\n   * @see #AgentActionSchema.forcePublishedWrite\n   */\n  documentId: string\n  targetDocument?: never\n}\n\n/**\n * Create a new document, then patch it\n * @beta\n */\ninterface PatchTargetDocumentRequest<T extends Record<string, Any> = Record<string, Any>> {\n  /**\n   * @see #AgentActionSchema.forcePublishedWrite\n   */\n  targetDocument: GenerateTargetDocument<T>\n  documentId?: never\n}\n\n/** @beta */\nexport type PatchDocumentSync<T extends Record<string, Any> = Record<string, Any>> = (\n  | PatchExistingDocumentRequest\n  | PatchTargetDocumentRequest<T>\n) &\n  PatchRequestBase &\n  AgentActionSync\n\n/** @beta */\nexport type PatchDocumentAsync<T extends Record<string, Any> = Record<string, Any>> = (\n  | PatchExistingDocumentRequest\n  | PatchTargetDocumentRequest<T>\n) &\n  PatchRequestBase &\n  AgentActionAsync\n\n/** @beta */\nexport type PatchDocument<T extends Record<string, Any> = Record<string, Any>> =\n  | PatchDocumentSync<T>\n  | PatchDocumentAsync<T>\n\nexport function _patch<DocumentShape extends Record<string, Any>>(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  request: PatchDocument<DocumentShape>,\n): Observable<\n  (typeof request)['async'] extends true\n    ? {_id: string}\n    : IdentifiedSanityDocumentStub & DocumentShape\n> {\n  const dataset = hasDataset(client.config())\n  return _request(client, httpRequest, {\n    method: 'POST',\n    uri: `/agent/action/patch/${dataset}`,\n    body: request,\n  })\n}\n","import {type Observable} from 'rxjs'\n\nimport {_request} from '../../data/dataMethods'\nimport type {ObservableSanityClient, SanityClient} from '../../SanityClient'\nimport type {AgentActionParams, Any, HttpRequest} from '../../types'\nimport {hasDataset} from '../../validators'\n\n/**  @beta */\nexport interface PromptRequestBase {\n  /**\n   * Instruct the LLM how it should generate content. Be as specific and detailed as needed.\n   *\n   * The LLM only has access to information in the instruction, plus the target schema.\n   *\n   * String template with support for $variable from `instructionParams`.\n   * */\n  instruction: string\n  /**\n   * param values for the string template, keys are the variable name, ie if the template has \"$variable\", one key must be \"variable\"\n   *\n   * ### Examples\n   *\n   * #### Constant\n   *\n   * ##### Shorthand\n   * ```ts\n   * client.agent.action.prompt({\n   *   instruction: 'Give the following topic:\\n $topic \\n ---\\nReturns some facts about it',\n   *   instructionParams: {\n   *     topic: 'Grapefruit'\n   *   },\n   * })\n   * ```\n   * ##### Object-form\n   *\n   * ```ts\n   * client.agent.action.prompt({\n   *   instruction: 'Give the following topic:\\n $topic \\n ---\\nReturns some facts about it.',\n   *   instructionParams: {\n   *     topic: {\n   *       type: 'constant',\n   *       value: 'Grapefruit'\n   *     },\n   *   },\n   * })\n   * ```\n   * #### Field\n   * ```ts\n   * client.agent.action.prompt({\n   *   instruction: 'Give the following field value:\\n $pte \\n ---\\nGenerate keywords.',\n   *   instructionParams: {\n   *     pte: {\n   *       type: 'field',\n   *       path: ['pteField'],\n   *       documentId: 'someSanityDocId'\n   *     },\n   *   },\n   * })\n   * ```\n   * #### Document\n   * ```ts\n   * client.agent.action.prompt({\n   *   json: true,\n   *   instruction: 'Given the following document:$document\\nCreate a JSON string[] array with keywords describing it.',\n   *   instructionParams: {\n   *     document: {\n   *       type: 'document',\n   *       documentId: 'someSanityDocId'\n   *     },\n   *   },\n   * })\n   * ```\n   *\n   * #### GROQ\n   * ```ts\n   * client.agent.action.prompt({\n   *   instruction: 'Return the best title amongst these: $titles.',\n   *   instructionParams: {\n   *     titles: {\n   *       type: 'groq',\n   *       query: '* [_type==$type].title',\n   *       params: {type: 'article'}\n   *     },\n   *   },\n   * })\n   * ```\n   * */\n  instructionParams?: AgentActionParams<{docIdRequired: true}>\n\n  /**\n   * Controls how much variance the instructions will run with.\n   *\n   * Value must be in the range [0, 1] (inclusive).\n   *\n   * Default: 0.3\n   */\n  temperature?: number\n}\n\n/**\n * @beta\n */\n// need the unused generic here to allow for optional callsite casting\n// eslint-disable-next-line unused-imports/no-unused-vars\ninterface PromptJsonResponse<T extends Record<string, Any> = Record<string, Any>> {\n  /**\n   *\n   * When format is 'json', the response will be json according to the instruction.\n   * Note: In addition to setting this to 'json',  `instruction` MUST include the word 'JSON', or 'json' for this to work.\n   */\n  format: 'json'\n}\n\ninterface PromptTextResponse {\n  /**\n   * When format is 'string', the response will be a raw text response to the instruction.\n   */\n  format?: 'string'\n}\n\n/** @beta */\nexport type PromptRequest<T extends Record<string, Any> = Record<string, Any>> = (\n  | PromptTextResponse\n  | PromptJsonResponse<T>\n) &\n  PromptRequestBase\n\nexport function _prompt<const DocumentShape extends Record<string, Any>>(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  request: PromptRequest<DocumentShape>,\n): Observable<(typeof request)['format'] extends 'json' ? DocumentShape : string> {\n  const dataset = hasDataset(client.config())\n  return _request(client, httpRequest, {\n    method: 'POST',\n    uri: `/agent/action/prompt/${dataset}`,\n    body: request,\n  })\n}\n","import {type Observable} from 'rxjs'\n\nimport {_request} from '../../data/dataMethods'\nimport type {ObservableSanityClient, SanityClient} from '../../SanityClient'\nimport type {\n  AgentActionParams,\n  AgentActionPath,\n  Any,\n  HttpRequest,\n  IdentifiedSanityDocumentStub,\n} from '../../types'\nimport {hasDataset} from '../../validators'\nimport type {\n  AgentActionAsync,\n  AgentActionPathSegment,\n  AgentActionRequestBase,\n  AgentActionSync,\n  AgentActionTarget,\n  AgentActionTargetInclude,\n} from './commonTypes'\n\n/** @beta */\nexport interface TransformRequestBase extends AgentActionRequestBase {\n  /** schemaId as reported by sanity deploy / sanity schema store */\n  schemaId: string\n\n  /**\n   * The source document the transformation will use as input.\n   *\n   * @see #AgentActionSchema.forcePublishedWrite\n   */\n  documentId: string\n\n  /**\n   * The source document's content is first copied to the target,\n   * then it is transformed according to the instruction.\n   *\n   * When omitted, the source document (documentId) is also the target document.\n   *\n   *  @see #AgentActionSchema.forcePublishedWrite\n   */\n  targetDocument?: TransformTargetDocument\n\n  /**\n   * Instruct the LLM how to transform the input to th output.\n   *\n   * String template with support for $variable from `instructionParams`.\n   *\n   * Capped to 2000 characters, after variables has been injected.\n   * */\n  instruction: string\n  /**\n   *\n   * param values for the string template, keys are the variable name, ie if the template has \"$variable\", one key must be \"variable\"\n   *\n   * ### Examples\n   *\n   * #### Constant\n   *\n   * ##### Shorthand\n   * ```ts\n   * client.agent.action.generate({\n   *   schemaId,\n   *   documentId,\n   *   instruction: 'Give the following topic:\\n $topic \\n ---\\nGenerate the full article.',\n   *   instructionParams: {\n   *     topic: 'Grapefruit'\n   *   },\n   * })\n   * ```\n   * ##### Object-form\n   *\n   * ```ts\n   * client.agent.action.transform({\n   *   schemaId,\n   *   documentId,\n   *   instruction: 'Give the following topic:\\n $topic \\n ---\\nGenerate the full article.',\n   *   instructionParams: {\n   *     topic: {\n   *       type: 'constant',\n   *       value: 'Grapefruit'\n   *     },\n   *   },\n   * })\n   * ```\n   * #### Field\n   * ```ts\n   * client.agent.action.transform({\n   *   schemaId,\n   *   documentId,\n   *   instruction: 'Give the following field value:\\n $pte \\n ---\\nGenerate keywords.',\n   *   instructionParams: {\n   *     pte: {\n   *       type: 'field',\n   *       path: ['pteField'],\n   *     },\n   *   },\n   *   target: {path: 'keywords' }\n   * })\n   * ```\n   * #### Document\n   * ```ts\n   * client.agent.action.transform({\n   *   schemaId,\n   *   documentId,\n   *   instruction: 'Give the following document value:\\n $document \\n ---\\nGenerate keywords.',\n   *   instructionParams: {\n   *     document: {\n   *       type: 'document',\n   *     },\n   *   },\n   *   target: {path: 'keywords' }\n   * })\n   * ```\n   *\n   * #### GROQ\n   * ```ts\n   * client.agent.action.transform({\n   *   schemaId,\n   *   documentId,\n   *   instruction: 'Give the following list of titles:\\n $list \\n ---\\nGenerate a similar title.',\n   *   instructionParams: {\n   *     list: {\n   *       type: 'groq',\n   *       query: '* [_type==$type].title',\n   *       params: {type: 'article'}\n   *     },\n   *   },\n   *   target: {path: 'title'}\n   * })\n   * ```\n   * */\n  instructionParams?: AgentActionParams\n\n  /**\n   * Target defines which parts of the document will be affected by the instruction.\n   * It can be an array, so multiple parts of the document can be separately configured in detail.\n   *\n   * Omitting target implies that the document itself is the root.\n   *\n   * Notes:\n   * - instruction can only affect fields up to `maxPathDepth`\n   * - when multiple targets are provided, they will be coalesced into a single target sharing a common target root.\n   * It is therefor an error to provide conflicting include/exclude across targets (ie, include title in one, and exclude it in another)\n   *\n   * Default max depth for transform: 12\n   *\n   * ## Transforming images\n   *\n   * To transform an existing image, directly target an image asset path.\n   *\n   * For example, all the following will transform the image into the provided asset:\n   * * `target: {path: ['image', 'asset'] }`\n   * * `target: {path: 'image', include: ['asset'] }`\n   *\n   * Image transform can be combined with regular content targets:\n   * * `target: [{path: ['image', 'asset'] }, {include: ['title', 'description']}]`\n   *\n   * Image transform can have per-path instructions, just like any other target paths:\n   * * `target: [{path: ['image', 'asset'], instruction: 'Make the sky blue' }`\n   *\n   * @see AgentActionRequestBase#conditionalPaths\n   */\n  target?: TransformTarget | TransformTarget[]\n}\n\n/**\n * @see #AgentActionSchema.forcePublishedWrite\n *\n * @beta\n */\nexport type TransformTargetDocument =\n  | {operation: 'edit'; _id: string}\n  | {operation: 'create'; _id?: string}\n  | {operation: 'createIfNotExists'; _id: string}\n  | {operation: 'createOrReplace'; _id: string}\n\n/**\n *\n * @see #TransformOperation\n * @beta\n */\nexport type ImageDescriptionOperation = {\n  type: 'image-description'\n  /**\n   * When omitted, parent image value will be inferred from the arget path.\n   *\n   * When specified, the `sourcePath` should be a path to an image (or image asset) field:\n   * - `['image']`\n   * - `['wrapper', 'mainImage']`\n   * - `['heroImage', 'asset'] // the asset segment is optional, but supported`\n   */\n  sourcePath?: AgentActionPath\n} & (\n  | {\n      /**\n       * When omitted, parent image value will be inferred from the target path.\n       *\n       * When specified, the `sourcePath` should be a path to an image (or image asset) field:\n       * - `['image']`\n       * - `['wrapper', 'mainImage']`\n       * - `['heroImage', 'asset'] // the asset segment is optional, but supported`\n       *\n       * Incompatible with `imageUrl`\n       *\n       */\n      sourcePath?: AgentActionPath\n      imageUrl?: never\n    }\n  | {\n      /**\n       * When specified, the image source to be described will be fetched from the URL.\n       *\n       * Incompatible with `sourcePath`\n       */\n      imageUrl?: `https://${string}`\n      sourcePath?: never\n    }\n)\n\n/**\n *\n * ## `set` by default\n * By default, Transform will change the value of every target field in place using a set operation.\n *\n * ## Image description\n *\n * ### Targeting image fields\n * Images can be transformed to a textual description by targeting a `string`, `text` or Portable Text field (`array` with `block`)\n * with `operation: {type: 'image-description'}`.\n *\n * Custom instructions for image description targets will be used to generate the description.\n *\n * Such targets must be a descendant field of an image object.\n *\n * For example:\n * - `target: {path: ['image', 'description'], operation: {type: 'image-description'} }`\n * - `target: {path: ['array', {_key: 'abc'}, 'alt'], operation: {type: 'image-description'} } //assuming the item in the array on the key-ed path is an image`\n * - `target: {path: ['image'], include: ['portableTextField'], operation: {type: 'image-description'}, instruction: 'Use formatting and headings to describe the image in great detail' }`\n *\n * ### Targeting non-image fields\n * If the target image description lives outside an image object, use the `sourcePath` option to specify the path to the image field.\n * `sourcePath` must be an image or image asset field.\n *\n * For example:\n * - `target: {path: ['description'], operation: operation: {type: 'image-description', sourcePath: ['image', 'asset'] }`\n * - `target: {path: ['wrapper', 'title'], operation: {type: 'image-description', sourcePath: ['array', {_key: 'abc'}, 'image'] }`\n * - `target: {path: ['wrapper'], include: ['portableTextField'], operation: {type: 'image-description', sourcePath: ['image', 'asset'] }, instruction: 'Use formatting and headings to describe the image in great detail' }`\n *\n * ### Targeting images outside the document (URL)\n * If the source image is available on a https URL outside the target document, it is possible to get a description for it using `imageUrl`.\n *\n * Example:\n * - `target: {path: ['description'], operation: operation: {type: 'image-description', imageUrL: 'https://www.sanity.io/static/images/favicons/android-icon-192x192.png?v=2' }`\n * @beta\n */\nexport type TransformOperation = 'set' | ImageDescriptionOperation\n\n/**\n * @see #TransformOperation\n * @beta\n * */\nexport interface TransformTargetInclude extends AgentActionTargetInclude {\n  /**\n   * Specifies a tailored instruction of this target.\n   *\n   * String template with support for $variable from `instructionParams`.  */\n  instruction?: string\n\n  /**\n   * By default, all children up to `target.maxPathDepth` are included.\n   *\n   * When `include` is specified, only segments explicitly listed will be included.\n   *\n   * Fields or array items not on the include list, are implicitly excluded.\n   */\n  include?: (AgentActionPathSegment | TransformTargetInclude)[]\n\n  /**\n   * Default: `set`\n   * @see #TransformOperation\n   */\n  operation?: TransformOperation\n}\n\n/**\n * @see #TransformOperation\n * @beta\n * */\nexport interface TransformTarget extends AgentActionTarget {\n  /**\n   * Specifies a tailored instruction of this target.\n   *\n   * String template with support for $variable from `instructionParams`.\n   * */\n  instruction?: string\n\n  /**\n   * By default, all children up to `target.maxPathDepth` are included.\n   *\n   * When `include` is specified, only segments explicitly listed will be included.\n   *\n   * Fields or array items not on the include list, are implicitly excluded.\n   */\n  include?: (AgentActionPathSegment | TransformTargetInclude)[]\n\n  /**\n   * Default: `set`\n   * @see #TransformOperation\n   */\n  operation?: TransformOperation\n}\n\n/** @beta */\n// need the generics to hold optional call-site response generics\n// eslint-disable-next-line unused-imports/no-unused-vars\nexport type TransformDocumentSync<T extends Record<string, Any> = Record<string, Any>> =\n  TransformRequestBase & AgentActionSync\n\n/** @beta */\nexport type TransformDocumentAsync = TransformRequestBase & AgentActionAsync\n\n/** @beta */\nexport type TransformDocument<T extends Record<string, Any> = Record<string, Any>> =\n  | TransformDocumentSync<T>\n  | TransformDocumentAsync\n\nexport function _transform<DocumentShape extends Record<string, Any>>(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  request: TransformDocument<DocumentShape>,\n): Observable<\n  (typeof request)['async'] extends true\n    ? {_id: string}\n    : IdentifiedSanityDocumentStub & DocumentShape\n> {\n  const dataset = hasDataset(client.config())\n  return _request(client, httpRequest, {\n    method: 'POST',\n    uri: `/agent/action/transform/${dataset}`,\n    body: request,\n  })\n}\n","import {type Observable} from 'rxjs'\n\nimport {_request} from '../../data/dataMethods'\nimport type {ObservableSanityClient, SanityClient} from '../../SanityClient'\nimport type {\n  AgentActionParams,\n  AgentActionPathSegment,\n  AgentActionTarget,\n  Any,\n  HttpRequest,\n  IdentifiedSanityDocumentStub,\n} from '../../types'\nimport {hasDataset} from '../../validators'\nimport type {\n  AgentActionAsync,\n  AgentActionPath,\n  AgentActionRequestBase,\n  AgentActionSync,\n  AgentActionTargetInclude,\n} from './commonTypes'\nimport type {TransformTargetDocument} from './transform'\n\n/**  @beta */\nexport interface TranslateRequestBase extends AgentActionRequestBase {\n  /** schemaId as reported by sanity deploy / sanity schema store */\n  schemaId: string\n\n  /**\n   * The source document the transformation will use as input.\n   * @see #AgentActionSchema.forcePublishedWrite\n   */\n  documentId: string\n\n  /**\n   * The target document will first get content copied over from the source,\n   * then it is translated according to the instruction.\n   *\n   * When omitted, the source document (documentId) is also the target document.\n   *\n   * @see #AgentActionSchema.forcePublishedWrite\n   */\n  targetDocument?: TransformTargetDocument\n\n  /**\n   * While optional, it is recommended\n   */\n  fromLanguage?: TranslateLanguage\n  toLanguage: TranslateLanguage\n\n  /**\n   * `styleGuide` can be used to tailor how the translation should be preformed.\n   *\n   * String template using $variable from styleGuideParams.\n   *\n   * Capped to 2000 characters, after variables has been injected.\n   *\n   * @see #protectedPhrases\n   */\n  styleGuide?: string\n  /** param values for the string template, keys are the variable name, ie if the template has \"$variable\", one key must be \"variable\" */\n  styleGuideParams?: AgentActionParams\n\n  /**\n   * When the input string contains any phrase from `protectedPhrases`, the LLM will be instructed not\n   * to translate them.\n   *\n   * It is recommended to use `protectedPhrases` instead of `styleGuide` for deny-list words and phrases,\n   * since it keeps token cost low, resulting in faster responses, and limits how much information the LLM\n   * has to process, since only phrases that are actually in the input string will be included in the final prompt.\n   */\n  protectedPhrases?: string[]\n\n  /**\n   * When specified, the `toLanguage.id` will be stored in the specified path in the target document.\n   *\n   * The file _can_ be hidden: true (unlike other fields in the target, which will be ignored)\n   */\n  languageFieldPath?: AgentActionPathSegment | AgentActionPath\n\n  /**\n   * Target defines which parts of the document will be affected by the instruction.\n   * It can be an array, so multiple parts of the document can be separately configured in detail.\n   *\n   * Omitting target implies that the document itself is the root.\n   *\n   * Notes:\n   * - instruction can only affect fields up to `maxPathDepth`\n   * - when multiple targets are provided, they will be coalesced into a single target sharing a common target root.\n   * It is therefor an error to provide conflicting include/exclude across targets (ie, include title in one, and exclude it in another)\n   *\n   * @see AgentActionRequestBase#conditionalPaths\n   */\n  target?: TranslateTarget | TranslateTarget[]\n}\n\n/**  @beta */\nexport interface TranslateLanguage {\n  /**\n   * Language code\n   */\n  id: string\n\n  /**\n   * While optional, it is recommended to provide a language title\n   */\n  title?: string\n}\n\n/**  @beta */\nexport interface TranslateTargetInclude extends AgentActionTargetInclude {\n  /** String template using $variable from styleGuideParams.  */\n  styleGuide?: string\n\n  /**\n   * By default, all children up to `target.maxPathDepth` are included.\n   *\n   * When `include` is specified, only segments explicitly listed will be included.\n   *\n   * Fields or array items not on the include list, are implicitly excluded.\n   */\n  include?: (AgentActionPathSegment | TranslateTargetInclude)[]\n}\n\n/**  @beta */\nexport interface TranslateTarget extends AgentActionTarget {\n  /** String template using $variable from styleGuideParams.  */\n  styleGuide?: string\n\n  /**\n   * By default, all children up to `target.maxPathDepth` are included.\n   *\n   * When `include` is specified, only segments explicitly listed will be included.\n   *\n   * Fields or array items not on the include list, are implicitly excluded.\n   */\n  include?: (AgentActionPathSegment | TranslateTargetInclude)[]\n}\n\n/** @beta */\n// need the generics to hold optional call-site response generics\n// eslint-disable-next-line unused-imports/no-unused-vars\nexport type TranslateDocumentSync<T extends Record<string, Any> = Record<string, Any>> =\n  TranslateRequestBase & AgentActionSync\n\n/** @beta */\nexport type TranslateDocumentAsync = TranslateRequestBase & AgentActionAsync\n\n/** @beta */\nexport type TranslateDocument<T extends Record<string, Any> = Record<string, Any>> =\n  | TranslateDocumentSync<T>\n  | TranslateDocumentAsync\n\nexport function _translate<DocumentShape extends Record<string, Any>>(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  request: TranslateDocument<DocumentShape>,\n): Observable<\n  (typeof request)['async'] extends true\n    ? {_id: string}\n    : IdentifiedSanityDocumentStub & DocumentShape\n> {\n  const dataset = hasDataset(client.config())\n  return _request(client, httpRequest, {\n    method: 'POST',\n    uri: `/agent/action/translate/${dataset}`,\n    body: request,\n  })\n}\n","import {lastValueFrom, type Observable} from 'rxjs'\n\nimport type {ObservableSanityClient, SanityClient} from '../../SanityClient'\nimport type {Any, HttpRequest, IdentifiedSanityDocumentStub} from '../../types'\nimport {_generate, type GenerateInstruction} from './generate'\nimport {_patch, type PatchDocument} from './patch'\nimport {_prompt, type PromptRequest} from './prompt'\nimport {_transform, type TransformDocument} from './transform'\nimport {_translate, type TranslateDocument} from './translate'\n\n/** @public */\nexport class ObservableAgentsActionClient {\n  #client: ObservableSanityClient\n  #httpRequest: HttpRequest\n  constructor(client: ObservableSanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Run an instruction to generate content in a target document.\n   * @param request - instruction request\n   */\n  generate<DocumentShape extends Record<string, Any>>(\n    request: GenerateInstruction<DocumentShape>,\n  ): Observable<\n    (typeof request)['async'] extends true\n      ? {_id: string}\n      : IdentifiedSanityDocumentStub & DocumentShape\n  > {\n    return _generate(this.#client, this.#httpRequest, request)\n  }\n\n  /**\n   * Transform a target document based on a source.\n   * @param request - translation request\n   */\n  transform<DocumentShape extends Record<string, Any>>(\n    request: TransformDocument<DocumentShape>,\n  ): Observable<\n    (typeof request)['async'] extends true\n      ? {_id: string}\n      : IdentifiedSanityDocumentStub & DocumentShape\n  > {\n    return _transform(this.#client, this.#httpRequest, request)\n  }\n\n  /**\n   * Translate a target document based on a source.\n   * @param request - translation request\n   */\n  translate<DocumentShape extends Record<string, Any>>(\n    request: TranslateDocument<DocumentShape>,\n  ): Observable<\n    (typeof request)['async'] extends true\n      ? {_id: string}\n      : IdentifiedSanityDocumentStub & DocumentShape\n  > {\n    return _translate(this.#client, this.#httpRequest, request)\n  }\n}\n\n/** @public */\nexport class AgentActionsClient {\n  #client: SanityClient\n  #httpRequest: HttpRequest\n  constructor(client: SanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Run an instruction to generate content in a target document.\n   * @param request - instruction request\n   */\n  generate<DocumentShape extends Record<string, Any>>(\n    request: GenerateInstruction<DocumentShape>,\n  ): Promise<\n    (typeof request)['async'] extends true\n      ? {_id: string}\n      : IdentifiedSanityDocumentStub & DocumentShape\n  > {\n    return lastValueFrom(_generate(this.#client, this.#httpRequest, request))\n  }\n\n  /**\n   * Transform a target document based on a source.\n   * @param request - translation request\n   */\n  transform<DocumentShape extends Record<string, Any>>(\n    request: TransformDocument<DocumentShape>,\n  ): Promise<\n    (typeof request)['async'] extends true\n      ? {_id: string}\n      : IdentifiedSanityDocumentStub & DocumentShape\n  > {\n    return lastValueFrom(_transform(this.#client, this.#httpRequest, request))\n  }\n\n  /**\n   * Translate a target document based on a source.\n   * @param request - translation request\n   */\n  translate<DocumentShape extends Record<string, Any>>(\n    request: TranslateDocument<DocumentShape>,\n  ): Promise<\n    (typeof request)['async'] extends true\n      ? {_id: string}\n      : IdentifiedSanityDocumentStub & DocumentShape\n  > {\n    return lastValueFrom(_translate(this.#client, this.#httpRequest, request))\n  }\n\n  /**\n   * Run a raw instruction and return the result either as text or json\n   * @param request - prompt request\n   */\n  prompt<const DocumentShape extends Record<string, Any>>(\n    request: PromptRequest<DocumentShape>,\n  ): Promise<(typeof request)['format'] extends 'json' ? DocumentShape : string> {\n    return lastValueFrom(_prompt(this.#client, this.#httpRequest, request))\n  }\n\n  /**\n   * Patch a document using a schema aware API.\n   * Does not use an LLM, but uses the schema to ensure paths and values matches the schema.\n   * @param request - instruction request\n   */\n  patch<DocumentShape extends Record<string, Any>>(\n    request: PatchDocument<DocumentShape>,\n  ): Promise<\n    (typeof request)['async'] extends true\n      ? {_id: string}\n      : IdentifiedSanityDocumentStub & DocumentShape\n  > {\n    return lastValueFrom(_patch(this.#client, this.#httpRequest, request))\n  }\n}\n","import {lastValueFrom, type Observable} from 'rxjs'\nimport {filter, map} from 'rxjs/operators'\n\nimport {_requestObservable} from '../data/dataMethods'\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {\n  Any,\n  HttpRequest,\n  HttpRequestEvent,\n  InitializedClientConfig,\n  ResponseEvent,\n  SanityAssetDocument,\n  SanityImageAssetDocument,\n  UploadBody,\n  UploadClientConfig,\n} from '../types'\nimport * as validators from '../validators'\n\n/** @internal */\nexport class ObservableAssetsClient {\n  #client: ObservableSanityClient\n  #httpRequest: HttpRequest\n  constructor(client: ObservableSanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Uploads a file asset to the configured dataset\n   *\n   * @param assetType - Asset type (file)\n   * @param body - Asset content - can be a browser File instance, a Blob, a Node.js Buffer instance or a Node.js ReadableStream.\n   * @param options - Options to use for the upload\n   */\n  upload(\n    assetType: 'file',\n    body: UploadBody,\n    options?: UploadClientConfig,\n  ): Observable<HttpRequestEvent<{document: SanityAssetDocument}>>\n\n  /**\n   * Uploads an image asset to the configured dataset\n   *\n   * @param assetType - Asset type (image)\n   * @param body - Asset content - can be a browser File instance, a Blob, a Node.js Buffer instance or a Node.js ReadableStream.\n   * @param options - Options to use for the upload\n   */\n  upload(\n    assetType: 'image',\n    body: UploadBody,\n    options?: UploadClientConfig,\n  ): Observable<HttpRequestEvent<{document: SanityImageAssetDocument}>>\n  /**\n   * Uploads a file or an image asset to the configured dataset\n   *\n   * @param assetType - Asset type (file/image)\n   * @param body - Asset content - can be a browser File instance, a Blob, a Node.js Buffer instance or a Node.js ReadableStream.\n   * @param options - Options to use for the upload\n   */\n  upload(\n    assetType: 'file' | 'image',\n    body: UploadBody,\n    options?: UploadClientConfig,\n  ): Observable<HttpRequestEvent<{document: SanityAssetDocument | SanityImageAssetDocument}>>\n  upload(\n    assetType: 'file' | 'image',\n    body: UploadBody,\n    options?: UploadClientConfig,\n  ): Observable<HttpRequestEvent<{document: SanityAssetDocument | SanityImageAssetDocument}>> {\n    return _upload(this.#client, this.#httpRequest, assetType, body, options)\n  }\n}\n\n/** @internal */\nexport class AssetsClient {\n  #client: SanityClient\n  #httpRequest: HttpRequest\n  constructor(client: SanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Uploads a file asset to the configured dataset\n   *\n   * @param assetType - Asset type (file)\n   * @param body - Asset content - can be a browser File instance, a Blob, a Node.js Buffer instance or a Node.js ReadableStream.\n   * @param options - Options to use for the upload\n   */\n  upload(\n    assetType: 'file',\n    body: UploadBody,\n    options?: UploadClientConfig,\n  ): Promise<SanityAssetDocument>\n  /**\n   * Uploads an image asset to the configured dataset\n   *\n   * @param assetType - Asset type (image)\n   * @param body - Asset content - can be a browser File instance, a Blob, a Node.js Buffer instance or a Node.js ReadableStream.\n   * @param options - Options to use for the upload\n   */\n  upload(\n    assetType: 'image',\n    body: UploadBody,\n    options?: UploadClientConfig,\n  ): Promise<SanityImageAssetDocument>\n  /**\n   * Uploads a file or an image asset to the configured dataset\n   *\n   * @param assetType - Asset type (file/image)\n   * @param body - Asset content - can be a browser File instance, a Blob, a Node.js Buffer instance or a Node.js ReadableStream.\n   * @param options - Options to use for the upload\n   */\n  upload(\n    assetType: 'file' | 'image',\n    body: UploadBody,\n    options?: UploadClientConfig,\n  ): Promise<SanityAssetDocument | SanityImageAssetDocument>\n  upload(\n    assetType: 'file' | 'image',\n    body: UploadBody,\n    options?: UploadClientConfig,\n  ): Promise<SanityAssetDocument | SanityImageAssetDocument> {\n    const observable = _upload(this.#client, this.#httpRequest, assetType, body, options)\n    return lastValueFrom(\n      observable.pipe(\n        filter((event: Any) => event.type === 'response'),\n        map(\n          (event) =>\n            (event as ResponseEvent<{document: SanityAssetDocument | SanityImageAssetDocument}>)\n              .body.document,\n        ),\n      ),\n    )\n  }\n}\n\nfunction _upload(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  assetType: 'image' | 'file',\n  body: UploadBody,\n  opts: UploadClientConfig = {},\n): Observable<HttpRequestEvent<{document: SanityAssetDocument | SanityImageAssetDocument}>> {\n  validators.validateAssetType(assetType)\n\n  // If an empty array is given, explicitly set `none` to override API defaults\n  let meta = opts.extract || undefined\n  if (meta && !meta.length) {\n    meta = ['none']\n  }\n\n  const config = client.config()\n  const options = optionsFromFile(opts, body)\n  const {tag, label, title, description, creditLine, filename, source} = options\n  const query: Any = {\n    label,\n    title,\n    description,\n    filename,\n    meta,\n    creditLine,\n  }\n  if (source) {\n    query.sourceId = source.id\n    query.sourceName = source.name\n    query.sourceUrl = source.url\n  }\n\n  return _requestObservable(client, httpRequest, {\n    tag,\n    method: 'POST',\n    timeout: options.timeout || 0,\n    uri: buildAssetUploadUrl(config, assetType),\n    headers: options.contentType ? {'Content-Type': options.contentType} : {},\n    query,\n    body,\n  })\n}\n\nfunction buildAssetUploadUrl(config: InitializedClientConfig, assetType: 'image' | 'file'): string {\n  const assetTypeEndpoint = assetType === 'image' ? 'images' : 'files'\n\n  if (config['~experimental_resource']) {\n    const {type, id} = config['~experimental_resource']\n    switch (type) {\n      case 'dataset': {\n        throw new Error(\n          'Assets are not supported for dataset resources, yet. Configure the client with `{projectId: <projectId>, dataset: <datasetId>}` instead.',\n        )\n      }\n      case 'canvas': {\n        return `/canvases/${id}/assets/${assetTypeEndpoint}`\n      }\n      case 'media-library': {\n        return `/media-libraries/${id}/upload`\n      }\n      case 'dashboard': {\n        return `/dashboards/${id}/assets/${assetTypeEndpoint}`\n      }\n      default:\n        // @ts-expect-error - handle all supported resource types\n        throw new Error(`Unsupported resource type: ${type.toString()}`)\n    }\n  }\n\n  const dataset = validators.hasDataset(config)\n  return `assets/${assetTypeEndpoint}/${dataset}`\n}\n\nfunction optionsFromFile(opts: Record<string, Any>, file: Any) {\n  if (typeof File === 'undefined' || !(file instanceof File)) {\n    return opts\n  }\n\n  return Object.assign(\n    {\n      filename: opts.preserveFilename === false ? undefined : file.name,\n      contentType: file.type,\n    },\n    opts,\n  )\n}\n","import type {Any} from '../types'\n\nexport default (obj: Any, defaults: Any) =>\n  Object.keys(defaults)\n    .concat(Object.keys(obj))\n    .reduce((target, prop) => {\n      target[prop] = typeof obj[prop] === 'undefined' ? defaults[prop] : obj[prop]\n\n      return target\n    }, {} as Any)\n","import {type Any} from '../types'\n\nexport const pick = (obj: Any, props: Any) =>\n  props.reduce((selection: Any, prop: Any) => {\n    if (typeof obj[prop] === 'undefined') {\n      return selection\n    }\n\n    selection[prop] = obj[prop]\n    return selection\n  }, {})\n","import {defer, shareReplay} from 'rxjs'\nimport {map} from 'rxjs/operators'\n\nexport const eventSourcePolyfill = defer(() => import('@sanity/eventsource')).pipe(\n  map(({default: EventSource}) => EventSource as unknown as typeof globalThis.EventSource),\n  shareReplay(1),\n)\n","import {\n  catchError,\n  concat,\n  mergeMap,\n  Observable,\n  of,\n  type OperatorFunction,\n  throwError,\n  timer,\n} from 'rxjs'\n\nimport {ConnectionFailedError} from './eventsource'\n\n/**\n * Note: connection failure is not the same as network disconnect which may happen more frequent.\n * The EventSource instance will automatically reconnect in case of a network disconnect, however,\n * in some rare cases a ConnectionFailed Error will be thrown and this operator explicitly retries these\n */\nexport function reconnectOnConnectionFailure<T>(): OperatorFunction<T, T | {type: 'reconnect'}> {\n  return function (source: Observable<T>) {\n    return source.pipe(\n      catchError((err, caught) => {\n        if (err instanceof ConnectionFailedError) {\n          return concat(of({type: 'reconnect' as const}), timer(1000).pipe(mergeMap(() => caught)))\n        }\n        return throwError(() => err)\n      }),\n    )\n  }\n}\n","import {Observable, of, throwError} from 'rxjs'\nimport {filter, map} from 'rxjs/operators'\n\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport {\n  type Any,\n  type ListenEvent,\n  type ListenOptions,\n  type ListenParams,\n  type MutationEvent,\n} from '../types'\nimport defaults from '../util/defaults'\nimport {pick} from '../util/pick'\nimport {_getDataUrl} from './dataMethods'\nimport {encodeQueryString} from './encodeQueryString'\nimport {connectEventSource} from './eventsource'\nimport {eventSourcePolyfill} from './eventsourcePolyfill'\nimport {reconnectOnConnectionFailure} from './reconnectOnConnectionFailure'\n\n// Limit is 16K for a _request_, eg including headers. Have to account for an\n// unknown range of headers, but an average EventSource request from Chrome seems\n// to have around 700 bytes of cruft, so let us account for 1.2K to be \"safe\"\nconst MAX_URL_LENGTH = 16000 - 1200\n\nconst possibleOptions = [\n  'includePreviousRevision',\n  'includeResult',\n  'includeMutations',\n  'includeAllVersions',\n  'visibility',\n  'effectFormat',\n  'tag',\n]\n\nconst defaultOptions = {\n  includeResult: true,\n}\n\n/**\n * Set up a listener that will be notified when mutations occur on documents matching the provided query/filter.\n *\n * @param query - GROQ-filter to listen to changes for\n * @param params - Optional query parameters\n * @param options - Optional listener options\n * @public\n */\nexport function _listen<R extends Record<string, Any> = Record<string, Any>>(\n  this: SanityClient | ObservableSanityClient,\n  query: string,\n  params?: ListenParams,\n): Observable<MutationEvent<R>>\n/**\n * Set up a listener that will be notified when mutations occur on documents matching the provided query/filter.\n *\n * @param query - GROQ-filter to listen to changes for\n * @param params - Optional query parameters\n * @param options - Optional listener options\n * @public\n */\nexport function _listen<R extends Record<string, Any> = Record<string, Any>>(\n  this: SanityClient | ObservableSanityClient,\n  query: string,\n  params?: ListenParams,\n  options?: ListenOptions,\n): Observable<ListenEvent<R>>\n/** @public */\nexport function _listen<R extends Record<string, Any> = Record<string, Any>>(\n  this: SanityClient | ObservableSanityClient,\n  query: string,\n  params?: ListenParams,\n  opts: ListenOptions = {},\n): Observable<MutationEvent<R> | ListenEvent<R>> {\n  const {url, token, withCredentials, requestTagPrefix, headers: configHeaders} = this.config()\n  const tag = opts.tag && requestTagPrefix ? [requestTagPrefix, opts.tag].join('.') : opts.tag\n  const options = {...defaults(opts, defaultOptions), tag}\n  const listenOpts = pick(options, possibleOptions)\n  const qs = encodeQueryString({query, params, options: {tag, ...listenOpts}})\n\n  const uri = `${url}${_getDataUrl(this, 'listen', qs)}`\n  if (uri.length > MAX_URL_LENGTH) {\n    return throwError(() => new Error('Query too large for listener'))\n  }\n\n  const listenFor = options.events ? options.events : ['mutation']\n\n  const esOptions: EventSourceInit & {headers?: Record<string, string>} = {}\n  if (withCredentials) {\n    esOptions.withCredentials = true\n  }\n\n  if (token || configHeaders) {\n    esOptions.headers = {}\n\n    if (token) {\n      esOptions.headers.Authorization = `Bearer ${token}`\n    }\n\n    if (configHeaders) {\n      Object.assign(esOptions.headers, configHeaders)\n    }\n  }\n\n  const initEventSource = () =>\n    // use polyfill if there is no global EventSource or if we need to set headers\n    (typeof EventSource === 'undefined' || esOptions.headers\n      ? eventSourcePolyfill\n      : of(EventSource)\n    ).pipe(map((EventSource) => new EventSource(uri, esOptions)))\n\n  return connectEventSource(initEventSource, listenFor).pipe(\n    reconnectOnConnectionFailure(),\n    filter((event) => listenFor.includes(event.type)),\n    map(\n      (event) =>\n        ({\n          type: event.type,\n          ...('data' in event ? (event.data as object) : {}),\n        }) as MutationEvent<R> | ListenEvent<R>,\n    ),\n  )\n}\n","import {\n  finalize,\n  merge,\n  type MonoTypeOperatorFunction,\n  Observable,\n  share,\n  type ShareConfig,\n  tap,\n} from 'rxjs'\n\nexport type ShareReplayLatestConfig<T> = ShareConfig<T> & {predicate: (value: T) => boolean}\n\n/**\n * A variant of share that takes a predicate function to determine which value to replay to new subscribers\n * @param predicate - Predicate function to determine which value to replay\n */\nexport function shareReplayLatest<T>(predicate: (value: T) => boolean): MonoTypeOperatorFunction<T>\n\n/**\n * A variant of share that takes a predicate function to determine which value to replay to new subscribers\n * @param config - ShareConfig with additional predicate function\n */\nexport function shareReplayLatest<T>(\n  config: ShareReplayLatestConfig<T>,\n): MonoTypeOperatorFunction<T>\n\n/**\n * A variant of share that takes a predicate function to determine which value to replay to new subscribers\n * @param configOrPredicate - Predicate function to determine which value to replay\n * @param config - Optional ShareConfig\n */\nexport function shareReplayLatest<T>(\n  configOrPredicate: ShareReplayLatestConfig<T> | ShareReplayLatestConfig<T>['predicate'],\n  config?: ShareConfig<T>,\n) {\n  return _shareReplayLatest(\n    typeof configOrPredicate === 'function'\n      ? {predicate: configOrPredicate, ...config}\n      : configOrPredicate,\n  )\n}\nfunction _shareReplayLatest<T>(config: ShareReplayLatestConfig<T>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    let latest: T | undefined\n    let emitted = false\n\n    // eslint-disable-next-line unused-imports/no-unused-vars\n    const {predicate, ...shareConfig} = config\n\n    const wrapped = source.pipe(\n      tap((value) => {\n        if (config.predicate(value)) {\n          emitted = true\n          latest = value\n        }\n      }),\n      finalize(() => {\n        emitted = false\n        latest = undefined\n      }),\n      share(shareConfig),\n    )\n    const emitLatest = new Observable<T>((subscriber) => {\n      if (emitted) {\n        subscriber.next(\n          // this cast is safe because of the emitted check which asserts that we got T from the source\n          latest as T,\n        )\n      }\n      subscriber.complete()\n    })\n    return merge(wrapped, emitLatest)\n  }\n}\n","import {catchError, mergeMap, Observable, of} from 'rxjs'\nimport {finalize, map} from 'rxjs/operators'\n\nimport {CorsOriginError} from '../http/errors'\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {\n  LiveEvent,\n  LiveEventGoAway,\n  LiveEventMessage,\n  LiveEventReconnect,\n  LiveEventRestart,\n  LiveEventWelcome,\n  SyncTag,\n} from '../types'\nimport {shareReplayLatest} from '../util/shareReplayLatest'\nimport * as validate from '../validators'\nimport {_getDataUrl} from './dataMethods'\nimport {connectEventSource} from './eventsource'\nimport {eventSourcePolyfill} from './eventsourcePolyfill'\nimport {reconnectOnConnectionFailure} from './reconnectOnConnectionFailure'\n\nconst requiredApiVersion = '2021-03-25'\n\n/**\n * @public\n */\nexport class LiveClient {\n  #client: SanityClient | ObservableSanityClient\n  constructor(client: SanityClient | ObservableSanityClient) {\n    this.#client = client\n  }\n\n  /**\n   * Requires `apiVersion` to be `2021-03-25` or later.\n   */\n  events({\n    includeDrafts = false,\n    tag: _tag,\n  }: {\n    includeDrafts?: boolean\n    /**\n     * Optional request tag for the listener. Use to identify the request in logs.\n     *\n     * @defaultValue `undefined`\n     */\n    tag?: string\n  } = {}): Observable<LiveEvent> {\n    validate.resourceGuard('live', this.#client.config())\n    const {\n      projectId,\n      apiVersion: _apiVersion,\n      token,\n      withCredentials,\n      requestTagPrefix,\n      headers: configHeaders,\n    } = this.#client.config()\n    const apiVersion = _apiVersion.replace(/^v/, '')\n    if (apiVersion !== 'X' && apiVersion < requiredApiVersion) {\n      throw new Error(\n        `The live events API requires API version ${requiredApiVersion} or later. ` +\n          `The current API version is ${apiVersion}. ` +\n          `Please update your API version to use this feature.`,\n      )\n    }\n    if (includeDrafts && !token && !withCredentials) {\n      throw new Error(\n        `The live events API requires a token or withCredentials when 'includeDrafts: true'. Please update your client configuration. The token should have the lowest possible access role.`,\n      )\n    }\n    const path = _getDataUrl(this.#client, 'live/events')\n    const url = new URL(this.#client.getUrl(path, false))\n    const tag = _tag && requestTagPrefix ? [requestTagPrefix, _tag].join('.') : _tag\n    if (tag) {\n      url.searchParams.set('tag', tag)\n    }\n    if (includeDrafts) {\n      url.searchParams.set('includeDrafts', 'true')\n    }\n    const esOptions: EventSourceInit & {headers?: Record<string, string>} = {}\n    if (includeDrafts && withCredentials) {\n      esOptions.withCredentials = true\n    }\n\n    if ((includeDrafts && token) || configHeaders) {\n      esOptions.headers = {}\n\n      if (includeDrafts && token) {\n        esOptions.headers.Authorization = `Bearer ${token}`\n      }\n\n      if (configHeaders) {\n        Object.assign(esOptions.headers, configHeaders)\n      }\n    }\n\n    const key = `${url.href}::${JSON.stringify(esOptions)}`\n    const existing = eventsCache.get(key)\n\n    if (existing) {\n      return existing\n    }\n\n    const initEventSource = () =>\n      // use polyfill if there is no global EventSource or if we need to set headers\n      (typeof EventSource === 'undefined' || esOptions.headers\n        ? eventSourcePolyfill\n        : of(EventSource)\n      ).pipe(map((EventSource) => new EventSource(url.href, esOptions)))\n\n    const events = connectEventSource(initEventSource, [\n      'message',\n      'restart',\n      'welcome',\n      'reconnect',\n      'goaway',\n    ])\n\n    const checkCors = fetchObservable(url, {\n      method: 'OPTIONS',\n      mode: 'cors',\n      credentials: esOptions.withCredentials ? 'include' : 'omit',\n      headers: esOptions.headers,\n    }).pipe(\n      catchError(() => {\n        // If the request fails, then we assume it was due to CORS, and we rethrow a special error that allows special handling in userland\n        throw new CorsOriginError({projectId: projectId!})\n      }),\n    )\n\n    const observable = events\n      .pipe(\n        reconnectOnConnectionFailure(),\n        mergeMap((event) => {\n          if (event.type === 'reconnect') {\n            // Check for CORS on reconnect events (which happen on 403s)\n            return checkCors.pipe(mergeMap(() => of(event)))\n          }\n          return of(event)\n        }),\n        catchError((err) => {\n          return checkCors.pipe(\n            mergeMap(() => {\n              // rethrow the original error if checkCors passed\n              throw err\n            }),\n          )\n        }),\n        map((event) => {\n          if (event.type === 'message') {\n            const {data, ...rest} = event\n            // Splat data properties from the eventsource message onto the returned event\n            return {...rest, tags: (data as {tags: SyncTag[]}).tags} as LiveEventMessage\n          }\n          return event as LiveEventRestart | LiveEventReconnect | LiveEventWelcome | LiveEventGoAway\n        }),\n      )\n      .pipe(\n        finalize(() => eventsCache.delete(key)),\n        shareReplayLatest({\n          predicate: (event) => event.type === 'welcome',\n        }),\n      )\n    eventsCache.set(key, observable)\n    return observable\n  }\n}\n\nfunction fetchObservable(url: URL, init: RequestInit) {\n  return new Observable((observer) => {\n    const controller = new AbortController()\n    const signal = controller.signal\n    fetch(url, {...init, signal: controller.signal}).then(\n      (response) => {\n        observer.next(response)\n        observer.complete()\n      },\n      (err) => {\n        if (!signal.aborted) {\n          observer.error(err)\n        }\n      },\n    )\n    return () => controller.abort()\n  })\n}\n\nconst eventsCache = new Map<string, Observable<LiveEvent>>()\n","import {lastValueFrom, type Observable} from 'rxjs'\n\nimport {_request} from '../data/dataMethods'\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {DatasetAclMode, DatasetResponse, DatasetsResponse, HttpRequest} from '../types'\nimport * as validate from '../validators'\n\n/** @internal */\nexport class ObservableDatasetsClient {\n  #client: ObservableSanityClient\n  #httpRequest: HttpRequest\n  constructor(client: ObservableSanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name: string, options?: {aclMode?: DatasetAclMode}): Observable<DatasetResponse> {\n    return _modify<DatasetResponse>(this.#client, this.#httpRequest, 'PUT', name, options)\n  }\n\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name: string, options?: {aclMode?: DatasetAclMode}): Observable<DatasetResponse> {\n    return _modify<DatasetResponse>(this.#client, this.#httpRequest, 'PATCH', name, options)\n  }\n\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name: string): Observable<{deleted: true}> {\n    return _modify<{deleted: true}>(this.#client, this.#httpRequest, 'DELETE', name)\n  }\n\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list(): Observable<DatasetsResponse> {\n    validate.resourceGuard('dataset', this.#client.config())\n    const config = this.#client.config()\n    const projectId = config.projectId\n    let uri = '/datasets'\n    if (config.useProjectHostname === false) {\n      uri = `/projects/${projectId}/datasets`\n    }\n\n    return _request<DatasetsResponse>(this.#client, this.#httpRequest, {\n      uri,\n      tag: null,\n    })\n  }\n}\n\n/** @internal */\nexport class DatasetsClient {\n  #client: SanityClient\n  #httpRequest: HttpRequest\n  constructor(client: SanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Create a new dataset with the given name\n   *\n   * @param name - Name of the dataset to create\n   * @param options - Options for the dataset\n   */\n  create(name: string, options?: {aclMode?: DatasetAclMode}): Promise<DatasetResponse> {\n    validate.resourceGuard('dataset', this.#client.config())\n    return lastValueFrom(\n      _modify<DatasetResponse>(this.#client, this.#httpRequest, 'PUT', name, options),\n    )\n  }\n\n  /**\n   * Edit a dataset with the given name\n   *\n   * @param name - Name of the dataset to edit\n   * @param options - New options for the dataset\n   */\n  edit(name: string, options?: {aclMode?: DatasetAclMode}): Promise<DatasetResponse> {\n    validate.resourceGuard('dataset', this.#client.config())\n    return lastValueFrom(\n      _modify<DatasetResponse>(this.#client, this.#httpRequest, 'PATCH', name, options),\n    )\n  }\n\n  /**\n   * Delete a dataset with the given name\n   *\n   * @param name - Name of the dataset to delete\n   */\n  delete(name: string): Promise<{deleted: true}> {\n    validate.resourceGuard('dataset', this.#client.config())\n    return lastValueFrom(_modify<{deleted: true}>(this.#client, this.#httpRequest, 'DELETE', name))\n  }\n\n  /**\n   * Fetch a list of datasets for the configured project\n   */\n  list(): Promise<DatasetsResponse> {\n    validate.resourceGuard('dataset', this.#client.config())\n    const config = this.#client.config()\n    const projectId = config.projectId\n    let uri = '/datasets'\n    if (config.useProjectHostname === false) {\n      uri = `/projects/${projectId}/datasets`\n    }\n\n    return lastValueFrom(\n      _request<DatasetsResponse>(this.#client, this.#httpRequest, {uri, tag: null}),\n    )\n  }\n}\n\nfunction _modify<R = unknown>(\n  client: SanityClient | ObservableSanityClient,\n  httpRequest: HttpRequest,\n  method: 'DELETE' | 'PATCH' | 'PUT',\n  name: string,\n  options?: {aclMode?: DatasetAclMode},\n) {\n  validate.resourceGuard('dataset', client.config())\n  validate.dataset(name)\n\n  return _request<R>(client, httpRequest, {\n    method,\n    uri: `/datasets/${name}`,\n    body: options,\n    tag: null,\n  })\n}\n","import {lastValueFrom, type Observable} from 'rxjs'\n\nimport {_request} from '../data/dataMethods'\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {\n  HttpRequest,\n  MediaLibraryAssetInstanceIdentifier,\n  MediaLibraryPlaybackInfoOptions,\n  SanityReference,\n  VideoPlaybackInfo,\n} from '../types'\n\n/** @internal */\nexport class ObservableMediaLibraryVideoClient {\n  #client: ObservableSanityClient\n  #httpRequest: HttpRequest\n  constructor(client: ObservableSanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Get video playback information for a media library asset\n   *\n   * @param assetIdentifier - Asset instance identifier (GDR, video-prefixed ID, or container ID)\n   * @param options - Options for transformations and expiration\n   */\n  getPlaybackInfo(\n    assetIdentifier: MediaLibraryAssetInstanceIdentifier,\n    options: MediaLibraryPlaybackInfoOptions = {},\n  ): Observable<VideoPlaybackInfo> {\n    const configMediaLibraryId = this.#client.config()['~experimental_resource']?.id\n\n    const {instanceId, libraryId} = parseAssetInstanceId(assetIdentifier)\n    const effectiveLibraryId = libraryId || configMediaLibraryId\n\n    if (!effectiveLibraryId) {\n      throw new Error(\n        'Could not determine Media Library ID - you need to provide a valid Media Library ID in the client config or a Media Library GDR',\n      )\n    }\n\n    const uri = buildVideoPlaybackInfoUrl(instanceId, effectiveLibraryId)\n    const queryParams = buildQueryParams(options)\n\n    return _request<VideoPlaybackInfo>(this.#client, this.#httpRequest, {\n      method: 'GET',\n      uri,\n      query: queryParams,\n    })\n  }\n}\n\n/** @internal */\nexport class MediaLibraryVideoClient {\n  #client: SanityClient\n  #httpRequest: HttpRequest\n  constructor(client: SanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Get video playback information for a media library asset\n   *\n   * @param assetIdentifier - Asset instance identifier (GDR, video-prefixed ID, or container ID)\n   * @param options - Options for transformations and expiration\n   */\n  getPlaybackInfo(\n    assetIdentifier: MediaLibraryAssetInstanceIdentifier,\n    options: MediaLibraryPlaybackInfoOptions = {},\n  ): Promise<VideoPlaybackInfo> {\n    return lastValueFrom(\n      new ObservableMediaLibraryVideoClient(\n        this.#client.observable,\n        this.#httpRequest,\n      ).getPlaybackInfo(assetIdentifier, options),\n    )\n  }\n}\n\nconst ML_GDR_PATTERN = /^media-library:(ml[^:]+):([^:]+)$/\n\n/** @internal */\nfunction isSanityReference(\n  assetIdentifier: MediaLibraryAssetInstanceIdentifier,\n): assetIdentifier is SanityReference {\n  return typeof assetIdentifier === 'object' && '_ref' in assetIdentifier\n}\n\n/**\n * Parse the asset instance id and library id from the asset identifier\n *\n * @param assetIdentifier - The asset identifier - either a asset instance id or a Media Library GDR\n * @returns The asset instance id and library id\n */\nexport function parseAssetInstanceId(assetIdentifier: MediaLibraryAssetInstanceIdentifier): {\n  instanceId: string\n  libraryId?: string\n} {\n  const ref = isSanityReference(assetIdentifier) ? assetIdentifier._ref : assetIdentifier\n\n  const match = ML_GDR_PATTERN.exec(ref)\n  if (match) {\n    const [, libraryId, instanceId] = match\n    return {libraryId, instanceId}\n  }\n\n  // Asumes valid asset instance id\n  if (typeof assetIdentifier === 'string' && assetIdentifier.startsWith('video-')) {\n    return {instanceId: assetIdentifier}\n  }\n\n  throw new Error(\n    `Invalid video asset instance identifier \"${ref}\": must be a valid video instance id or a Global Dataset Reference (GDR) to the video asset in the Media Library`,\n  )\n}\n\nfunction buildVideoPlaybackInfoUrl(instanceId: string, libraryId: string): string {\n  return `/media-libraries/${libraryId}/video/${instanceId}/playback-info`\n}\n\nfunction buildQueryParams(options: MediaLibraryPlaybackInfoOptions): Record<string, unknown> {\n  const params: Record<string, unknown> = {}\n\n  if (options.transformations) {\n    const {thumbnail, animated, storyboard} = options.transformations\n\n    if (thumbnail) {\n      if (thumbnail.width) params.thumbnailWidth = thumbnail.width\n      if (thumbnail.height) params.thumbnailHeight = thumbnail.height\n      if (thumbnail.time !== undefined) params.thumbnailTime = thumbnail.time\n      if (thumbnail.fit) params.thumbnailFit = thumbnail.fit\n      if (thumbnail.format) params.thumbnailFormat = thumbnail.format\n    }\n\n    if (animated) {\n      if (animated.width) params.animatedWidth = animated.width\n      if (animated.height) params.animatedHeight = animated.height\n      if (animated.start !== undefined) params.animatedStart = animated.start\n      if (animated.end !== undefined) params.animatedEnd = animated.end\n      if (animated.fps) params.animatedFps = animated.fps\n      if (animated.format) params.animatedFormat = animated.format\n    }\n\n    if (storyboard) {\n      if (storyboard.format) params.storyboardFormat = storyboard.format\n    }\n  }\n\n  if (options.expiration) {\n    params.expiration = options.expiration\n  }\n\n  return params\n}\n","import {lastValueFrom, type Observable} from 'rxjs'\n\nimport {_request} from '../data/dataMethods'\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {HttpRequest, SanityProject} from '../types'\n\n/** @internal */\nexport class ObservableProjectsClient {\n  #client: ObservableSanityClient\n  #httpRequest: HttpRequest\n  constructor(client: ObservableSanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Fetch a list of projects the authenticated user has access to.\n   *\n   * @param options - Options for the list request\n   *   - `includeMembers` - Whether to include members in the response (default: true)\n   *   - `organizationId` - ID of the organization to fetch projects for\n   */\n  list(options?: {includeMembers?: true; organizationId?: string}): Observable<SanityProject[]>\n  list(options?: {\n    includeMembers?: false\n    organizationId?: string\n  }): Observable<Omit<SanityProject, 'members'>[]>\n  list(options?: {\n    includeMembers?: boolean\n    organizationId?: string\n  }): Observable<SanityProject[] | Omit<SanityProject, 'members'>[]> {\n    const query: Record<string, string> = {}\n    const uri = '/projects'\n    if (options?.includeMembers === false) {\n      query.includeMembers = 'false'\n    }\n    if (options?.organizationId) {\n      query.organizationId = options.organizationId\n    }\n\n    return _request<SanityProject[]>(this.#client, this.#httpRequest, {uri, query})\n  }\n\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId: string): Observable<SanityProject> {\n    return _request<SanityProject>(this.#client, this.#httpRequest, {uri: `/projects/${projectId}`})\n  }\n}\n\n/** @internal */\nexport class ProjectsClient {\n  #client: SanityClient\n  #httpRequest: HttpRequest\n  constructor(client: SanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Fetch a list of projects the authenticated user has access to.\n   *\n   * @param options - Options for the list request\n   *   - `includeMembers` - Whether to include members in the response (default: true)\n   *   - `organizationId` - ID of the organization to fetch projects for\n   */\n  list(options?: {includeMembers?: true; organizationId?: string}): Promise<SanityProject[]>\n  list(options?: {\n    includeMembers?: false\n    organizationId?: string\n  }): Promise<Omit<SanityProject, 'members'>[]>\n  list(options?: {\n    includeMembers?: boolean\n    organizationId?: string\n  }): Promise<SanityProject[] | Omit<SanityProject, 'members'>[]> {\n    const query: Record<string, string> = {}\n    const uri = '/projects'\n    if (options?.includeMembers === false) {\n      query.includeMembers = 'false'\n    }\n    if (options?.organizationId) {\n      query.organizationId = options.organizationId\n    }\n    return lastValueFrom(_request<SanityProject[]>(this.#client, this.#httpRequest, {uri, query}))\n  }\n\n  /**\n   * Fetch a project by project ID\n   *\n   * @param projectId - ID of the project to fetch\n   */\n  getById(projectId: string): Promise<SanityProject> {\n    return lastValueFrom(\n      _request<SanityProject>(this.#client, this.#httpRequest, {uri: `/projects/${projectId}`}),\n    )\n  }\n}\n","import {\n  getDraftId,\n  getVersionFromId,\n  getVersionId,\n  isDraftId,\n  isVersionId,\n} from '@sanity/client/csm'\nimport {customAlphabet} from 'nanoid'\n\nimport type {IdentifiedSanityDocumentStub, SanityDocumentStub} from '../types'\nimport {validateVersionIdMatch} from '../validators'\n\n/**\n * @internal\n *\n * ~24 years (or 7.54e+8 seconds) needed, in order to have a 1% probability of at least one collision if 10 ID's are generated every hour.\n */\nexport const generateReleaseId = customAlphabet(\n  'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789',\n  8,\n)\n\n/** @internal */\nexport const getDocumentVersionId = (publishedId: string, releaseId?: string) =>\n  releaseId ? getVersionId(publishedId, releaseId) : getDraftId(publishedId)\n\n/** @internal */\nexport function deriveDocumentVersionId(\n  op: string,\n  {\n    releaseId,\n    publishedId,\n    document,\n  }: {\n    releaseId?: string\n    publishedId?: string\n    document: SanityDocumentStub | IdentifiedSanityDocumentStub\n  },\n): string {\n  if (publishedId && document._id) {\n    const versionId = getDocumentVersionId(publishedId, releaseId)\n    validateVersionIdMatch(versionId, document)\n    return versionId\n  }\n\n  if (document._id) {\n    const isDraft = isDraftId(document._id)\n    const isVersion = isVersionId(document._id)\n\n    if (!isDraft && !isVersion) {\n      throw new Error(\n        `\\`${op}()\\` requires a document with an \\`_id\\` that is a version or draft ID`,\n      )\n    }\n\n    if (releaseId) {\n      if (isDraft) {\n        throw new Error(\n          `\\`${op}()\\` was called with a document ID (\\`${document._id}\\`) that is a draft ID, but a release ID (\\`${releaseId}\\`) was also provided.`,\n        )\n      }\n\n      const builtVersionId = getVersionFromId(document._id)\n      if (builtVersionId !== releaseId) {\n        throw new Error(\n          `\\`${op}()\\` was called with a document ID (\\`${document._id}\\`) that is a version ID, but the release ID (\\`${releaseId}\\`) does not match the document's version ID (\\`${builtVersionId}\\`).`,\n        )\n      }\n    }\n\n    return document._id\n  }\n\n  if (publishedId) {\n    return getDocumentVersionId(publishedId, releaseId)\n  }\n\n  throw new Error(`\\`${op}()\\` requires either a publishedId or a document with an \\`_id\\``)\n}\n","import type {BaseActionOptions, CreateReleaseAction, ReleaseDocument} from '@sanity/client'\n\nimport {generateReleaseId} from '../util/createVersionId'\n\ninterface ReleaseOrOptions extends BaseActionOptions {\n  releaseId?: string\n  metadata?: Partial<ReleaseDocument['metadata']>\n}\n\ninterface CompleteCreateReleaseAction extends CreateReleaseAction {\n  metadata: ReleaseDocument['metadata']\n}\n\nconst getArgs = (\n  releaseOrOptions?: ReleaseOrOptions,\n  maybeOptions?: BaseActionOptions,\n): [string, Partial<ReleaseDocument['metadata']>, BaseActionOptions | undefined] => {\n  const isReleaseInput =\n    typeof releaseOrOptions === 'object' &&\n    releaseOrOptions !== null &&\n    ('releaseId' in releaseOrOptions || 'metadata' in releaseOrOptions)\n\n  if (isReleaseInput) {\n    const {releaseId = generateReleaseId(), metadata = {}} = releaseOrOptions\n    return [releaseId, metadata, maybeOptions]\n  }\n\n  return [generateReleaseId(), {}, releaseOrOptions as BaseActionOptions]\n}\n\n/** @internal */\nexport const createRelease = (\n  releaseOrOptions?: ReleaseOrOptions,\n  maybeOptions?: BaseActionOptions,\n): {\n  action: CompleteCreateReleaseAction\n  options?: BaseActionOptions\n} => {\n  const [releaseId, metadata, options] = getArgs(releaseOrOptions, maybeOptions)\n\n  const finalMetadata: ReleaseDocument['metadata'] = {\n    ...metadata,\n    releaseType: metadata.releaseType || 'undecided',\n  }\n\n  const createAction: CompleteCreateReleaseAction = {\n    actionType: 'sanity.action.release.create',\n    releaseId,\n    metadata: finalMetadata,\n  }\n\n  return {action: createAction, options}\n}\n","import {lastValueFrom, map, Observable} from 'rxjs'\n\nimport {_action, _getDocument, _getReleaseDocuments} from '../data/dataMethods'\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {\n  ArchiveReleaseAction,\n  BaseActionOptions,\n  BaseMutationOptions,\n  DeleteReleaseAction,\n  EditReleaseAction,\n  HttpRequest,\n  PatchOperations,\n  PublishReleaseAction,\n  RawQueryResponse,\n  ReleaseDocument,\n  SanityDocument,\n  ScheduleReleaseAction,\n  SingleActionResult,\n  UnarchiveReleaseAction,\n  UnscheduleReleaseAction,\n} from '../types'\nimport {createRelease} from './createRelease'\n\n/** @public */\nexport class ObservableReleasesClient {\n  #client: ObservableSanityClient\n  #httpRequest: HttpRequest\n  constructor(client: ObservableSanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * @public\n   *\n   * Retrieve a release by id.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to retrieve.\n   * @param options - Additional query options including abort signal and query tag.\n   * @returns An observable that resolves to the release document {@link ReleaseDocument}.\n   *\n   * @example Retrieving a release by id\n   * ```ts\n   * client.observable.releases.get({releaseId: 'my-release'}).pipe(\n   *   tap((release) => console.log(release)),\n   *   // {\n   *   //   _id: '_.releases.my-release',\n   *   //   name: 'my-release'\n   *   //   _type: 'system.release',\n   *   //   metadata: {releaseType: 'asap'},\n   *   //   _createdAt: '2021-01-01T00:00:00.000Z',\n   *   //   ...\n   *   // }\n   * ).subscribe()\n   * ```\n   */\n  get(\n    {releaseId}: {releaseId: string},\n    options?: {signal?: AbortSignal; tag?: string},\n  ): Observable<ReleaseDocument | undefined> {\n    return _getDocument<ReleaseDocument>(\n      this.#client,\n      this.#httpRequest,\n      `_.releases.${releaseId}`,\n      options,\n    )\n  }\n\n  /**\n   * @public\n   *\n   * Creates a new release under the given id, with metadata.\n   *\n   * @remarks\n   * * If no releaseId is provided, a release id will be generated.\n   * * If no metadata is provided, then an `undecided` releaseType will be used.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to create.\n   *   - `metadata` - The metadata to associate with the release {@link ReleaseDocument}.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId` and the release id and metadata.\n   *\n   * @example Creating a release with a custom id and metadata\n   * ```ts\n   * const releaseId = 'my-release'\n   * const metadata: ReleaseDocument['metadata'] = {\n   *   releaseType: 'asap',\n   * }\n   *\n   * client.observable.releases.create({releaseId, metadata}).pipe(\n   *   tap(({transactionId, releaseId, metadata}) => console.log(transactionId, releaseId, metadata)),\n   *   // {\n   *   //   transactionId: 'transaction-id',\n   *   //   releaseId: 'my-release',\n   *   //   metadata: {releaseType: 'asap'},\n   *   // }\n   * ).subscribe()\n   * ```\n   *\n   * @example Creating a release with generated id and metadata\n   * ```ts\n   * client.observable.releases.create().pipe(\n   *   tap(({metadata}) => console.log(metadata)),\n   *   // {\n   *   //   metadata: {releaseType: 'undecided'},\n   *   // }\n   * ).subscribe()\n   * ```\n   *\n   * @example Creating a release using a custom transaction id\n   * ```ts\n   * client.observable.releases.create({transactionId: 'my-transaction-id'}).pipe(\n   *   tap(({transactionId, metadata}) => console.log(transactionId, metadata)),\n   *   // {\n   *   //   transactionId: 'my-transaction-id',\n   *   //   metadata: {releaseType: 'undecided'},\n   *   // }\n   * ).subscribe()\n   * ```\n   */\n  create(\n    options: BaseActionOptions,\n  ): Observable<SingleActionResult & {releaseId: string; metadata: ReleaseDocument['metadata']}>\n  create(\n    release: {releaseId?: string; metadata?: Partial<ReleaseDocument['metadata']>},\n    options?: BaseActionOptions,\n  ): Observable<SingleActionResult & {releaseId: string; metadata: ReleaseDocument['metadata']}>\n  create(\n    releaseOrOptions?:\n      | {releaseId?: string; metadata?: Partial<ReleaseDocument['metadata']>}\n      | BaseActionOptions,\n    maybeOptions?: BaseActionOptions,\n  ): Observable<SingleActionResult & {releaseId: string; metadata: ReleaseDocument['metadata']}> {\n    const {action, options} = createRelease(releaseOrOptions, maybeOptions)\n    const {releaseId, metadata} = action\n\n    return _action(this.#client, this.#httpRequest, action, options).pipe(\n      map((actionResult) => ({\n        ...actionResult,\n        releaseId,\n        metadata,\n      })),\n    )\n  }\n\n  /**\n   * @public\n   *\n   * Edits an existing release, updating the metadata.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to edit.\n   *   - `patch` - The patch operation to apply on the release metadata {@link PatchMutationOperation}.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  edit(\n    {releaseId, patch}: {releaseId: string; patch: PatchOperations},\n    options?: BaseActionOptions,\n  ): Observable<SingleActionResult> {\n    const editAction: EditReleaseAction = {\n      actionType: 'sanity.action.release.edit',\n      releaseId,\n      patch,\n    }\n\n    return _action(this.#client, this.#httpRequest, editAction, options)\n  }\n\n  /**\n   * @public\n   *\n   * Publishes all documents in a release at once. For larger releases the effect of the publish\n   * will be visible immediately when querying but the removal of the `versions.<releasesId>.*`\n   * documents and creation of the corresponding published documents with the new content may\n   * take some time.\n   *\n   * During this period both the source and target documents are locked and cannot be\n   * modified through any other means.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to publish.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  publish(\n    {releaseId}: {releaseId: string},\n    options?: BaseActionOptions,\n  ): Observable<SingleActionResult> {\n    const publishAction: PublishReleaseAction = {\n      actionType: 'sanity.action.release.publish',\n      releaseId,\n    }\n\n    return _action(this.#client, this.#httpRequest, publishAction, options)\n  }\n\n  /**\n   * @public\n   *\n   * An archive action removes an active release. The documents that comprise the release\n   * are deleted and therefore no longer queryable.\n   *\n   * While the documents remain in retention the last version can still be accessed using document history endpoint.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to archive.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  archive(\n    {releaseId}: {releaseId: string},\n    options?: BaseActionOptions,\n  ): Observable<SingleActionResult> {\n    const archiveAction: ArchiveReleaseAction = {\n      actionType: 'sanity.action.release.archive',\n      releaseId,\n    }\n\n    return _action(this.#client, this.#httpRequest, archiveAction, options)\n  }\n\n  /**\n   * @public\n   *\n   * An unarchive action restores an archived release and all documents\n   * with the content they had just prior to archiving.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to unarchive.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  unarchive(\n    {releaseId}: {releaseId: string},\n    options?: BaseActionOptions,\n  ): Observable<SingleActionResult> {\n    const unarchiveAction: UnarchiveReleaseAction = {\n      actionType: 'sanity.action.release.unarchive',\n      releaseId,\n    }\n\n    return _action(this.#client, this.#httpRequest, unarchiveAction, options)\n  }\n\n  /**\n   * @public\n   *\n   * A schedule action queues a release for publishing at the given future time.\n   * The release is locked such that no documents in the release can be modified and\n   * no documents that it references can be deleted as this would make the publish fail.\n   * At the given time, the same logic as for the publish action is triggered.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to schedule.\n   *   - `publishAt` - The serialised date and time to publish the release. If the `publishAt` is in the past, the release will be published immediately.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  schedule(\n    {releaseId, publishAt}: {releaseId: string; publishAt: string},\n    options?: BaseActionOptions,\n  ): Observable<SingleActionResult> {\n    const scheduleAction: ScheduleReleaseAction = {\n      actionType: 'sanity.action.release.schedule',\n      releaseId,\n      publishAt,\n    }\n\n    return _action(this.#client, this.#httpRequest, scheduleAction, options)\n  }\n\n  /**\n   * @public\n   *\n   * An unschedule action stops a release from being published.\n   * The documents in the release are considered unlocked and can be edited again.\n   * This may fail if another release is scheduled to be published after this one and\n   * has a reference to a document created by this one.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to unschedule.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  unschedule(\n    {releaseId}: {releaseId: string},\n    options?: BaseActionOptions,\n  ): Observable<SingleActionResult> {\n    const unscheduleAction: UnscheduleReleaseAction = {\n      actionType: 'sanity.action.release.unschedule',\n      releaseId,\n    }\n\n    return _action(this.#client, this.#httpRequest, unscheduleAction, options)\n  }\n\n  /**\n   * @public\n   *\n   * A delete action removes a published or archived release.\n   * The backing system document will be removed from the dataset.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to delete.\n   * @param options - Additional action options.\n   * @returns An observable that resolves to the `transactionId`.\n   */\n  delete(\n    {releaseId}: {releaseId: string},\n    options?: BaseActionOptions,\n  ): Observable<SingleActionResult> {\n    const deleteAction: DeleteReleaseAction = {\n      actionType: 'sanity.action.release.delete',\n      releaseId,\n    }\n\n    return _action(this.#client, this.#httpRequest, deleteAction, options)\n  }\n\n  /**\n   * @public\n   *\n   * Fetch the documents in a release by release id.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to fetch documents for.\n   * @param options - Additional mutation options {@link BaseMutationOptions}.\n   * @returns An observable that resolves to the documents in the release.\n   */\n  fetchDocuments(\n    {releaseId}: {releaseId: string},\n    options?: BaseMutationOptions,\n  ): Observable<RawQueryResponse<SanityDocument[]>> {\n    return _getReleaseDocuments(this.#client, this.#httpRequest, releaseId, options)\n  }\n}\n\n/** @public */\nexport class ReleasesClient {\n  #client: SanityClient\n  #httpRequest: HttpRequest\n  constructor(client: SanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * @public\n   *\n   * Retrieve a release by id.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to retrieve.\n   * @param options - Additional query options including abort signal and query tag.\n   * @returns A promise that resolves to the release document {@link ReleaseDocument}.\n   *\n   * @example Retrieving a release by id\n   * ```ts\n   * const release = await client.releases.get({releaseId: 'my-release'})\n   * console.log(release)\n   * // {\n   * //   _id: '_.releases.my-release',\n   * //   name: 'my-release'\n   * //   _type: 'system.release',\n   * //   metadata: {releaseType: 'asap'},\n   * //   _createdAt: '2021-01-01T00:00:00.000Z',\n   * //   ...\n   * // }\n   * ```\n   */\n  get(\n    {releaseId}: {releaseId: string},\n    options?: {signal?: AbortSignal; tag?: string},\n  ): Promise<ReleaseDocument | undefined> {\n    return lastValueFrom(\n      _getDocument<ReleaseDocument>(\n        this.#client,\n        this.#httpRequest,\n        `_.releases.${releaseId}`,\n        options,\n      ),\n    )\n  }\n\n  /**\n   * @public\n   *\n   * Creates a new release under the given id, with metadata.\n   *\n   * @remarks\n   * * If no releaseId is provided, a release id will be generated.\n   * * If no metadata is provided, then an `undecided` releaseType will be used.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to create.\n   *   - `metadata` - The metadata to associate with the release {@link ReleaseDocument}.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId` and the release id and metadata.\n   *\n   * @example Creating a release with a custom id and metadata\n   * ```ts\n   * const releaseId = 'my-release'\n   * const releaseMetadata: ReleaseDocument['metadata'] = {\n   *   releaseType: 'asap',\n   * }\n   *\n   * const result =\n   *   await client.releases.create({releaseId, metadata: releaseMetadata})\n   * console.log(result)\n   * // {\n   * //   transactionId: 'transaction-id',\n   * //   releaseId: 'my-release',\n   * //   metadata: {releaseType: 'asap'},\n   * // }\n   * ```\n   *\n   * @example Creating a release with generated id and metadata\n   * ```ts\n   * const {metadata} = await client.releases.create()\n   * console.log(metadata.releaseType) // 'undecided'\n   * ```\n   *\n   * @example Creating a release with a custom transaction id\n   * ```ts\n   * const {transactionId, metadata} = await client.releases.create({transactionId: 'my-transaction-id'})\n   * console.log(metadata.releaseType) // 'undecided'\n   * console.log(transactionId) // 'my-transaction-id'\n   * ```\n   */\n  async create(\n    options: BaseActionOptions,\n  ): Promise<SingleActionResult & {releaseId: string; metadata: ReleaseDocument['metadata']}>\n  async create(\n    release: {releaseId?: string; metadata?: Partial<ReleaseDocument['metadata']>},\n    options?: BaseActionOptions,\n  ): Promise<SingleActionResult & {releaseId: string; metadata: ReleaseDocument['metadata']}>\n  async create(\n    releaseOrOptions?:\n      | {releaseId?: string; metadata?: Partial<ReleaseDocument['metadata']>}\n      | BaseActionOptions,\n    maybeOptions?: BaseActionOptions,\n  ): Promise<SingleActionResult & {releaseId: string; metadata: ReleaseDocument['metadata']}> {\n    const {action, options} = createRelease(releaseOrOptions, maybeOptions)\n    const {releaseId, metadata} = action\n\n    const actionResult = await lastValueFrom(\n      _action(this.#client, this.#httpRequest, action, options),\n    )\n\n    return {...actionResult, releaseId, metadata}\n  }\n\n  /**\n   * @public\n   *\n   * Edits an existing release, updating the metadata.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to edit.\n   *   - `patch` - The patch operation to apply on the release metadata {@link PatchMutationOperation}.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  edit(\n    {releaseId, patch}: {releaseId: string; patch: PatchOperations},\n    options?: BaseActionOptions,\n  ): Promise<SingleActionResult> {\n    const editAction: EditReleaseAction = {\n      actionType: 'sanity.action.release.edit',\n      releaseId,\n      patch,\n    }\n\n    return lastValueFrom(_action(this.#client, this.#httpRequest, editAction, options))\n  }\n\n  /**\n   * @public\n   *\n   * Publishes all documents in a release at once. For larger releases the effect of the publish\n   * will be visible immediately when querying but the removal of the `versions.<releasesId>.*`\n   * documents and creation of the corresponding published documents with the new content may\n   * take some time.\n   *\n   * During this period both the source and target documents are locked and cannot be\n   * modified through any other means.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to publish.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  publish(\n    {releaseId}: {releaseId: string},\n    options?: BaseActionOptions,\n  ): Promise<SingleActionResult> {\n    const publishAction: PublishReleaseAction = {\n      actionType: 'sanity.action.release.publish',\n      releaseId,\n    }\n\n    return lastValueFrom(_action(this.#client, this.#httpRequest, publishAction, options))\n  }\n\n  /**\n   * @public\n   *\n   * An archive action removes an active release. The documents that comprise the release\n   * are deleted and therefore no longer queryable.\n   *\n   * While the documents remain in retention the last version can still be accessed using document history endpoint.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to archive.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  archive(\n    {releaseId}: {releaseId: string},\n    options?: BaseActionOptions,\n  ): Promise<SingleActionResult> {\n    const archiveAction: ArchiveReleaseAction = {\n      actionType: 'sanity.action.release.archive',\n      releaseId,\n    }\n\n    return lastValueFrom(_action(this.#client, this.#httpRequest, archiveAction, options))\n  }\n\n  /**\n   * @public\n   *\n   * An unarchive action restores an archived release and all documents\n   * with the content they had just prior to archiving.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to unarchive.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  unarchive(\n    {releaseId}: {releaseId: string},\n    options?: BaseActionOptions,\n  ): Promise<SingleActionResult> {\n    const unarchiveAction: UnarchiveReleaseAction = {\n      actionType: 'sanity.action.release.unarchive',\n      releaseId,\n    }\n\n    return lastValueFrom(_action(this.#client, this.#httpRequest, unarchiveAction, options))\n  }\n\n  /**\n   * @public\n   *\n   * A schedule action queues a release for publishing at the given future time.\n   * The release is locked such that no documents in the release can be modified and\n   * no documents that it references can be deleted as this would make the publish fail.\n   * At the given time, the same logic as for the publish action is triggered.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to schedule.\n   *   - `publishAt` - The serialised date and time to publish the release. If the `publishAt` is in the past, the release will be published immediately.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  schedule(\n    {releaseId, publishAt}: {releaseId: string; publishAt: string},\n    options?: BaseActionOptions,\n  ): Promise<SingleActionResult> {\n    const scheduleAction: ScheduleReleaseAction = {\n      actionType: 'sanity.action.release.schedule',\n      releaseId,\n      publishAt,\n    }\n\n    return lastValueFrom(_action(this.#client, this.#httpRequest, scheduleAction, options))\n  }\n\n  /**\n   * @public\n   *\n   * An unschedule action stops a release from being published.\n   * The documents in the release are considered unlocked and can be edited again.\n   * This may fail if another release is scheduled to be published after this one and\n   * has a reference to a document created by this one.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to unschedule.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  unschedule(\n    {releaseId}: {releaseId: string},\n    options?: BaseActionOptions,\n  ): Promise<SingleActionResult> {\n    const unscheduleAction: UnscheduleReleaseAction = {\n      actionType: 'sanity.action.release.unschedule',\n      releaseId,\n    }\n\n    return lastValueFrom(_action(this.#client, this.#httpRequest, unscheduleAction, options))\n  }\n\n  /**\n   * @public\n   *\n   * A delete action removes a published or archived release.\n   * The backing system document will be removed from the dataset.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to delete.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   */\n  delete(\n    {releaseId}: {releaseId: string},\n    options?: BaseActionOptions,\n  ): Promise<SingleActionResult> {\n    const deleteAction: DeleteReleaseAction = {\n      actionType: 'sanity.action.release.delete',\n      releaseId,\n    }\n\n    return lastValueFrom(_action(this.#client, this.#httpRequest, deleteAction, options))\n  }\n\n  /**\n   * @public\n   *\n   * Fetch the documents in a release by release id.\n   *\n   * @category Releases\n   *\n   * @param params - Release action parameters:\n   *   - `releaseId` - The id of the release to fetch documents for.\n   * @param options - Additional mutation options {@link BaseMutationOptions}.\n   * @returns A promise that resolves to the documents in the release.\n   */\n  fetchDocuments(\n    {releaseId}: {releaseId: string},\n    options?: BaseMutationOptions,\n  ): Promise<RawQueryResponse<SanityDocument[]>> {\n    return lastValueFrom(_getReleaseDocuments(this.#client, this.#httpRequest, releaseId, options))\n  }\n}\n","import {lastValueFrom, type Observable} from 'rxjs'\n\nimport {_request} from '../data/dataMethods'\nimport type {ObservableSanityClient, SanityClient} from '../SanityClient'\nimport type {CurrentSanityUser, HttpRequest, SanityUser} from '../types'\n\n/** @public */\nexport class ObservableUsersClient {\n  #client: ObservableSanityClient\n  #httpRequest: HttpRequest\n  constructor(client: ObservableSanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById<T extends 'me' | string>(\n    id: T,\n  ): Observable<T extends 'me' ? CurrentSanityUser : SanityUser> {\n    return _request<T extends 'me' ? CurrentSanityUser : SanityUser>(\n      this.#client,\n      this.#httpRequest,\n      {uri: `/users/${id}`},\n    )\n  }\n}\n\n/** @public */\nexport class UsersClient {\n  #client: SanityClient\n  #httpRequest: HttpRequest\n  constructor(client: SanityClient, httpRequest: HttpRequest) {\n    this.#client = client\n    this.#httpRequest = httpRequest\n  }\n\n  /**\n   * Fetch a user by user ID\n   *\n   * @param id - User ID of the user to fetch. If `me` is provided, a minimal response including the users role is returned.\n   */\n  getById<T extends 'me' | string>(\n    id: T,\n  ): Promise<T extends 'me' ? CurrentSanityUser : SanityUser> {\n    return lastValueFrom(\n      _request<T extends 'me' ? CurrentSanityUser : SanityUser>(this.#client, this.#httpRequest, {\n        uri: `/users/${id}`,\n      }),\n    )\n  }\n}\n","import {getPublishedId, getVersionId} from '@sanity/client/csm'\nimport {firstValueFrom, lastValueFrom, Observable} from 'rxjs'\n\nimport {AgentActionsClient, ObservableAgentsActionClient} from './agent/actions/AgentActionsClient'\nimport {AssetsClient, ObservableAssetsClient} from './assets/AssetsClient'\nimport {defaultConfig, initConfig} from './config'\nimport * as dataMethods from './data/dataMethods'\nimport {_listen} from './data/listen'\nimport {LiveClient} from './data/live'\nimport {ObservablePatch, Patch} from './data/patch'\nimport {ObservableTransaction, Transaction} from './data/transaction'\nimport {DatasetsClient, ObservableDatasetsClient} from './datasets/DatasetsClient'\nimport {\n  MediaLibraryVideoClient,\n  ObservableMediaLibraryVideoClient,\n} from './mediaLibrary/MediaLibraryVideoClient'\nimport {ObservableProjectsClient, ProjectsClient} from './projects/ProjectsClient'\nimport {ObservableReleasesClient, ReleasesClient} from './releases/ReleasesClient'\nimport type {\n  Action,\n  AllDocumentIdsMutationOptions,\n  AllDocumentsMutationOptions,\n  Any,\n  BaseActionOptions,\n  BaseMutationOptions,\n  ClientConfig,\n  ClientReturn,\n  FilteredResponseQueryOptions,\n  FirstDocumentIdMutationOptions,\n  FirstDocumentMutationOptions,\n  HttpRequest,\n  IdentifiedSanityDocumentStub,\n  InitializedClientConfig,\n  MultipleActionResult,\n  MultipleMutationResult,\n  Mutation,\n  MutationSelection,\n  PatchOperations,\n  PatchSelection,\n  QueryOptions,\n  QueryParams,\n  QueryWithoutParams,\n  RawQuerylessQueryResponse,\n  RawQueryResponse,\n  RawRequestOptions,\n  SanityDocument,\n  SanityDocumentStub,\n  SingleActionResult,\n  SingleMutationResult,\n  UnfilteredResponseQueryOptions,\n  UnfilteredResponseWithoutQuery,\n} from './types'\nimport {ObservableUsersClient, UsersClient} from './users/UsersClient'\nimport {deriveDocumentVersionId, getDocumentVersionId} from './util/createVersionId'\n\nexport type {\n  _listen,\n  AssetsClient,\n  DatasetsClient,\n  LiveClient,\n  MediaLibraryVideoClient,\n  ObservableAssetsClient,\n  ObservableDatasetsClient,\n  ObservableMediaLibraryVideoClient,\n  ObservableProjectsClient,\n  ObservableUsersClient,\n  ProjectsClient,\n  UsersClient,\n}\n\n/** @public */\nexport class ObservableSanityClient {\n  assets: ObservableAssetsClient\n  datasets: ObservableDatasetsClient\n  live: LiveClient\n  mediaLibrary: {\n    video: ObservableMediaLibraryVideoClient\n  }\n  projects: ObservableProjectsClient\n  users: ObservableUsersClient\n  agent: {\n    action: ObservableAgentsActionClient\n  }\n  releases: ObservableReleasesClient\n\n  /**\n   * Private properties\n   */\n  #clientConfig: InitializedClientConfig\n  #httpRequest: HttpRequest\n\n  /**\n   * Instance properties\n   */\n  listen = _listen\n\n  constructor(httpRequest: HttpRequest, config: ClientConfig = defaultConfig) {\n    this.config(config)\n\n    this.#httpRequest = httpRequest\n\n    this.assets = new ObservableAssetsClient(this, this.#httpRequest)\n    this.datasets = new ObservableDatasetsClient(this, this.#httpRequest)\n    this.live = new LiveClient(this)\n    this.mediaLibrary = {\n      video: new ObservableMediaLibraryVideoClient(this, this.#httpRequest),\n    }\n    this.projects = new ObservableProjectsClient(this, this.#httpRequest)\n    this.users = new ObservableUsersClient(this, this.#httpRequest)\n    this.agent = {\n      action: new ObservableAgentsActionClient(this, this.#httpRequest),\n    }\n    this.releases = new ObservableReleasesClient(this, this.#httpRequest)\n  }\n\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone(): ObservableSanityClient {\n    return new ObservableSanityClient(this.#httpRequest, this.config())\n  }\n\n  /**\n   * Returns the current client configuration\n   */\n  config(): InitializedClientConfig\n  /**\n   * Reconfigure the client. Note that this _mutates_ the current client.\n   */\n  config(newConfig?: Partial<ClientConfig>): this\n  config(newConfig?: Partial<ClientConfig>): ClientConfig | this {\n    if (newConfig === undefined) {\n      return {...this.#clientConfig}\n    }\n\n    if (this.#clientConfig && this.#clientConfig.allowReconfigure === false) {\n      throw new Error(\n        'Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client',\n      )\n    }\n\n    this.#clientConfig = initConfig(newConfig, this.#clientConfig || {})\n    return this\n  }\n\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig?: Partial<ClientConfig>): ObservableSanityClient {\n    const thisConfig = this.config()\n    return new ObservableSanityClient(this.#httpRequest, {\n      ...thisConfig,\n      ...newConfig,\n      stega: {\n        ...(thisConfig.stega || {}),\n        ...(typeof newConfig?.stega === 'boolean'\n          ? {enabled: newConfig.stega}\n          : newConfig?.stega || {}),\n      },\n    })\n  }\n\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   */\n  fetch<\n    R = Any,\n    Q extends QueryWithoutParams = QueryWithoutParams,\n    const G extends string = string,\n  >(query: G, params?: Q | QueryWithoutParams): Observable<ClientReturn<G, R>>\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   * @param params - Optional query parameters\n   * @param options - Optional request options\n   */\n  fetch<\n    R = Any,\n    Q extends QueryWithoutParams | QueryParams = QueryParams,\n    const G extends string = string,\n  >(\n    query: G,\n    params: Q extends QueryWithoutParams ? QueryWithoutParams : Q,\n    options?: FilteredResponseQueryOptions,\n  ): Observable<ClientReturn<G, R>>\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   * @param params - Optional query parameters\n   * @param options - Request options\n   */\n  fetch<\n    R = Any,\n    Q extends QueryWithoutParams | QueryParams = QueryParams,\n    const G extends string = string,\n  >(\n    query: string,\n    params: Q extends QueryWithoutParams ? QueryWithoutParams : Q,\n    options: UnfilteredResponseQueryOptions,\n  ): Observable<RawQueryResponse<ClientReturn<G, R>>>\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   * @param params - Optional query parameters\n   * @param options - Request options\n   */\n  fetch<\n    R = Any,\n    Q extends QueryWithoutParams | QueryParams = QueryParams,\n    const G extends string = string,\n  >(\n    query: G,\n    params: Q extends QueryWithoutParams ? QueryWithoutParams : Q,\n    options: UnfilteredResponseWithoutQuery,\n  ): Observable<RawQuerylessQueryResponse<ClientReturn<G, R>>>\n  fetch<R, Q, const G extends string>(\n    query: G,\n    params?: Q,\n    options?: QueryOptions,\n  ): Observable<RawQueryResponse<R> | R> {\n    return dataMethods._fetch<R, Q>(\n      this,\n      this.#httpRequest,\n      this.#clientConfig.stega,\n      query,\n      params,\n      options,\n    )\n  }\n\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options: {\n      signal?: AbortSignal\n      tag?: string\n      releaseId?: string\n      includeAllVersions: true\n    },\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options?: {\n      signal?: AbortSignal\n      tag?: string\n      releaseId?: string\n      includeAllVersions?: false\n    },\n  ): Observable<SanityDocument<R> | undefined>\n  getDocument<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options?: {\n      signal?: AbortSignal\n      tag?: string\n      releaseId?: string\n      includeAllVersions?: boolean\n    },\n  ): Observable<SanityDocument<R> | undefined | SanityDocument<R>[]> {\n    // Implementation needs to handle union type safely\n    if (options?.includeAllVersions === true) {\n      return dataMethods._getDocument<R>(this, this.#httpRequest, id, {\n        ...options,\n        includeAllVersions: true,\n      })\n    }\n    // When includeAllVersions is not true, pass options but only include includeAllVersions if it was explicitly set\n    const opts = {\n      signal: options?.signal,\n      tag: options?.tag,\n      releaseId: options?.releaseId,\n      ...(options && 'includeAllVersions' in options ? {includeAllVersions: false as const} : {}),\n    }\n    return dataMethods._getDocument<R>(this, this.#httpRequest, id, opts)\n  }\n\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments<R extends Record<string, Any> = Record<string, Any>>(\n    ids: string[],\n    options?: {tag?: string},\n  ): Observable<(SanityDocument<R> | null)[]> {\n    return dataMethods._getDocuments<R>(this, this.#httpRequest, ids, options)\n  }\n\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns an observable that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: FirstDocumentMutationOptions,\n  ): Observable<SanityDocument<R>>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns an observable that resolves to an array containing the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: AllDocumentsMutationOptions,\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns an observable that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: FirstDocumentIdMutationOptions,\n  ): Observable<SingleMutationResult>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns an observable that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: AllDocumentIdsMutationOptions,\n  ): Observable<MultipleMutationResult>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns an observable that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options?: BaseMutationOptions,\n  ): Observable<SanityDocument<R>>\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions,\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return dataMethods._create<R>(this, this.#httpRequest, document, 'create', options)\n  }\n\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns an observable that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentMutationOptions,\n  ): Observable<SanityDocument<R>>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns an observable that resolves to an array containing the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentsMutationOptions,\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns an observable that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentIdMutationOptions,\n  ): Observable<SingleMutationResult>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns an observable that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentIdsMutationOptions,\n  ): Observable<MultipleMutationResult>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns an observable that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?: BaseMutationOptions,\n  ): Observable<SanityDocument<R>>\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions,\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return dataMethods._createIfNotExists<R>(this, this.#httpRequest, document, options)\n  }\n\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns an observable that resolves to the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentMutationOptions,\n  ): Observable<SanityDocument<R>>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns an observable that resolves to an array containing the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentsMutationOptions,\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns an observable that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentIdMutationOptions,\n  ): Observable<SingleMutationResult>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns an observable that resolves to a mutation result object containing the created document ID.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentIdsMutationOptions,\n  ): Observable<MultipleMutationResult>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns an observable that resolves to the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?: BaseMutationOptions,\n  ): Observable<SanityDocument<R>>\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions,\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return dataMethods._createOrReplace<R>(this, this.#httpRequest, document, options)\n  }\n\n  /**\n   * @public\n   *\n   * Creates a new version of a published document.\n   *\n   * @remarks\n   * * Requires a document with a `_type` property.\n   * * Creating a version with no `releaseId` will create a new draft version of the published document.\n   * * If the `document._id` is defined, it should be a draft or release version ID that matches the version ID generated from `publishedId` and `releaseId`.\n   * * If the `document._id` is not defined, it will be generated from `publishedId` and `releaseId`.\n   * * To create a version of an unpublished document, use the `client.create` method.\n   *\n   * @category Versions\n   *\n   * @param params - Version action parameters:\n   *   - `document` - The document to create as a new version (must include `_type`).\n   *   - `publishedId` - The ID of the published document being versioned.\n   *   - `releaseId` - The ID of the release to create the version for.\n   * @param options - Additional action options.\n   * @returns an observable that resolves to the `transactionId`.\n   *\n   * @example Creating a new version of a published document with a generated version ID\n   * ```ts\n   * client.observable.createVersion({\n   *   // The document does not need to include an `_id` property since it will be generated from `publishedId` and `releaseId`\n   *   document: {_type: 'myDocument', title: 'My Document'},\n   *   publishedId: 'myDocument',\n   *   releaseId: 'myRelease',\n   * })\n   *\n   * // The following document will be created:\n   * // {\n   * //   _id: 'versions.myRelease.myDocument',\n   * //   _type: 'myDocument',\n   * //   title: 'My Document',\n   * // }\n   * ```\n   *\n   * @example Creating a new version of a published document with a specified version ID\n   * ```ts\n   * client.observable.createVersion({\n   *   document: {_type: 'myDocument', _id: 'versions.myRelease.myDocument', title: 'My Document'},\n   *   // `publishedId` and `releaseId` are not required since `document._id` has been specified\n   * })\n   *\n   * // The following document will be created:\n   * // {\n   * //   _id: 'versions.myRelease.myDocument',\n   * //   _type: 'myDocument',\n   * //   title: 'My Document',\n   * // }\n   * ```\n   *\n   * @example Creating a new draft version of a published document\n   * ```ts\n   * client.observable.createVersion({\n   *   document: {_type: 'myDocument', title: 'My Document'},\n   *   publishedId: 'myDocument',\n   * })\n   *\n   * // The following document will be created:\n   * // {\n   * //   _id: 'drafts.myDocument',\n   * //   _type: 'myDocument',\n   * //   title: 'My Document',\n   * // }\n   * ```\n   */\n  createVersion<R extends Record<string, Any>>(\n    args: {\n      document: SanityDocumentStub<R>\n      publishedId: string\n      releaseId?: string\n    },\n    options?: BaseActionOptions,\n  ): Observable<SingleActionResult | MultipleActionResult>\n  createVersion<R extends Record<string, Any>>(\n    args: {\n      document: IdentifiedSanityDocumentStub<R>\n      publishedId?: string\n      releaseId?: string\n    },\n    options?: BaseActionOptions,\n  ): Observable<SingleActionResult | MultipleActionResult>\n  createVersion(\n    args: {\n      baseId: string\n      releaseId: string\n      publishedId: string\n      ifBaseRevisionId?: string\n    },\n    options?: BaseActionOptions,\n  ): Observable<SingleActionResult | MultipleActionResult>\n  createVersion<R extends Record<string, Any>>(\n    {\n      document,\n      publishedId,\n      releaseId,\n      baseId,\n      ifBaseRevisionId,\n    }: {\n      document?: SanityDocumentStub<R> | IdentifiedSanityDocumentStub<R>\n      publishedId?: string\n      releaseId?: string\n      baseId?: string\n      ifBaseRevisionId?: string\n    },\n    options?: BaseActionOptions,\n  ): Observable<SingleActionResult | MultipleActionResult> {\n    if (!document) {\n      return dataMethods._createVersionFromBase(\n        this,\n        this.#httpRequest,\n        publishedId,\n        baseId,\n        releaseId,\n        ifBaseRevisionId,\n        options,\n      )\n    }\n\n    const documentVersionId = deriveDocumentVersionId('createVersion', {\n      document,\n      publishedId,\n      releaseId,\n    })\n\n    const documentVersion = {...document, _id: documentVersionId}\n    const versionPublishedId = publishedId || getPublishedId(document._id)\n\n    return dataMethods._createVersion<R>(\n      this,\n      this.#httpRequest,\n      documentVersion,\n      versionPublishedId,\n      options,\n    )\n  }\n\n  /**\n   * Deletes a document with the given document ID.\n   * Returns an observable that resolves to the deleted document.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options: FirstDocumentMutationOptions,\n  ): Observable<SanityDocument<R>>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns an observable that resolves to an array containing the deleted document.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options: AllDocumentsMutationOptions,\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns an observable that resolves to a mutation result object containing the deleted document ID.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete(id: string, options: FirstDocumentIdMutationOptions): Observable<SingleMutationResult>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns an observable that resolves to a mutation result object containing the deleted document ID.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete(id: string, options: AllDocumentIdsMutationOptions): Observable<MultipleMutationResult>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns an observable that resolves to the deleted document.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options?: BaseMutationOptions,\n  ): Observable<SanityDocument<R>>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns an observable that resolves to first deleted document.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: MutationSelection,\n    options: FirstDocumentMutationOptions,\n  ): Observable<SanityDocument<R>>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns an observable that resolves to an array containing the deleted documents.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: MutationSelection,\n    options: AllDocumentsMutationOptions,\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns an observable that resolves to a mutation result object containing the ID of the first deleted document.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete(\n    selection: MutationSelection,\n    options: FirstDocumentIdMutationOptions,\n  ): Observable<SingleMutationResult>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns an observable that resolves to a mutation result object containing the document IDs that were deleted.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete(\n    selection: MutationSelection,\n    options: AllDocumentIdsMutationOptions,\n  ): Observable<MultipleMutationResult>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns an observable that resolves to first deleted document.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: MutationSelection,\n    options?: BaseMutationOptions,\n  ): Observable<SanityDocument<R>>\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: string | MutationSelection,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions,\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return dataMethods._delete<R>(this, this.#httpRequest, selection, options)\n  }\n\n  /**\n   * @public\n   *\n   * Deletes the draft or release version of a document.\n   *\n   * @remarks\n   * * Discarding a version with no `releaseId` will discard the draft version of the published document.\n   * * If the draft or release version does not exist, any error will throw.\n   *\n   * @param params - Version action parameters:\n   *   - `releaseId` - The ID of the release to discard the document from.\n   *   - `publishedId` - The published ID of the document to discard.\n   * @param purge - if `true` the document history is also discarded.\n   * @param options - Additional action options.\n   * @returns an observable that resolves to the `transactionId`.\n   *\n   * @example Discarding a release version of a document\n   * ```ts\n   * client.observable.discardVersion({publishedId: 'myDocument', releaseId: 'myRelease'})\n   * // The document with the ID `versions.myRelease.myDocument` will be discarded.\n   * ```\n   *\n   * @example Discarding a draft version of a document\n   * ```ts\n   * client.observable.discardVersion({publishedId: 'myDocument'})\n   * // The document with the ID `drafts.myDocument` will be discarded.\n   * ```\n   */\n  discardVersion(\n    {releaseId, publishedId}: {releaseId?: string; publishedId: string},\n    purge?: boolean,\n    options?: BaseActionOptions,\n  ): Observable<SingleActionResult | MultipleActionResult> {\n    const documentVersionId = getDocumentVersionId(publishedId, releaseId)\n\n    return dataMethods._discardVersion(this, this.#httpRequest, documentVersionId, purge, options)\n  }\n\n  /**\n   * @public\n   *\n   * Replaces an existing version document.\n   *\n   * @remarks\n   * * Requires a document with a `_type` property.\n   * * If the `document._id` is defined, it should be a draft or release version ID that matches the version ID generated from `publishedId` and `releaseId`.\n   * * If the `document._id` is not defined, it will be generated from `publishedId` and `releaseId`.\n   * * Replacing a version with no `releaseId` will replace the draft version of the published document.\n   * * At least one of the **version** or **published** documents must exist.\n   *\n   * @param params - Version action parameters:\n   *   - `document` - The new document to replace the version with.\n   *   - `releaseId` - The ID of the release where the document version is replaced.\n   *   - `publishedId` - The ID of the published document to replace.\n   * @param options - Additional action options.\n   * @returns an observable that resolves to the `transactionId`.\n   *\n   * @example Replacing a release version of a published document with a generated version ID\n   * ```ts\n   * client.observable.replaceVersion({\n   *   document: {_type: 'myDocument', title: 'My Document'},\n   *   publishedId: 'myDocument',\n   *   releaseId: 'myRelease',\n   * })\n   *\n   * // The following document will be patched:\n   * // {\n   * //   _id: 'versions.myRelease.myDocument',\n   * //   _type: 'myDocument',\n   * //   title: 'My Document',\n   * // }\n   * ```\n   *\n   * @example Replacing a release version of a published document with a specified version ID\n   * ```ts\n   * client.observable.replaceVersion({\n   *   document: {_type: 'myDocument', _id: 'versions.myRelease.myDocument', title: 'My Document'},\n   *   // `publishedId` and `releaseId` are not required since `document._id` has been specified\n   * })\n   *\n   * // The following document will be patched:\n   * // {\n   * //   _id: 'versions.myRelease.myDocument',\n   * //   _type: 'myDocument',\n   * //   title: 'My Document',\n   * // }\n   * ```\n   *\n   * @example Replacing a draft version of a published document\n   * ```ts\n   * client.observable.replaceVersion({\n   *   document: {_type: 'myDocument', title: 'My Document'},\n   *   publishedId: 'myDocument',\n   * })\n   *\n   * // The following document will be patched:\n   * // {\n   * //   _id: 'drafts.myDocument',\n   * //   _type: 'myDocument',\n   * //   title: 'My Document',\n   * // }\n   * ```\n   */\n  replaceVersion<R extends Record<string, Any>>(\n    args: {\n      document: SanityDocumentStub<R>\n      publishedId: string\n      releaseId?: string\n    },\n    options?: BaseActionOptions,\n  ): Observable<SingleActionResult | MultipleActionResult>\n  replaceVersion<R extends Record<string, Any>>(\n    args: {\n      document: IdentifiedSanityDocumentStub<R>\n      publishedId?: string\n      releaseId?: string\n    },\n    options?: BaseActionOptions,\n  ): Observable<SingleActionResult | MultipleActionResult>\n  replaceVersion<R extends Record<string, Any>>(\n    {\n      document,\n      publishedId,\n      releaseId,\n    }: {\n      document: SanityDocumentStub<R> | IdentifiedSanityDocumentStub<R>\n      publishedId?: string\n      releaseId?: string\n    },\n    options?: BaseActionOptions,\n  ): Observable<SingleActionResult | MultipleActionResult> {\n    const documentVersionId = deriveDocumentVersionId('replaceVersion', {\n      document,\n      publishedId,\n      releaseId,\n    })\n\n    const documentVersion = {...document, _id: documentVersionId}\n\n    return dataMethods._replaceVersion<R>(this, this.#httpRequest, documentVersion, options)\n  }\n\n  /**\n   * @public\n   *\n   * Used to indicate when a document within a release should be unpublished when\n   * the release is run.\n   *\n   * @remarks\n   * * If the published document does not exist, an error will be thrown.\n   *\n   * @param params - Version action parameters:\n   *   - `releaseId` - The ID of the release to unpublish the document from.\n   *   - `publishedId` - The published ID of the document to unpublish.\n   * @param options - Additional action options.\n   * @returns an observable that resolves to the `transactionId`.\n   *\n   * @example Unpublishing a release version of a published document\n   * ```ts\n   * client.observable.unpublishVersion({publishedId: 'myDocument', releaseId: 'myRelease'})\n   * // The document with the ID `versions.myRelease.myDocument` will be unpublished. when `myRelease` is run.\n   * ```\n   */\n  unpublishVersion(\n    {releaseId, publishedId}: {releaseId: string; publishedId: string},\n    options?: BaseActionOptions,\n  ): Observable<SingleActionResult | MultipleActionResult> {\n    const versionId = getVersionId(publishedId, releaseId)\n\n    return dataMethods._unpublishVersion(this, this.#httpRequest, versionId, publishedId, options)\n  }\n\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns an observable that resolves to the first mutated document.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | ObservablePatch | ObservableTransaction,\n    options: FirstDocumentMutationOptions,\n  ): Observable<SanityDocument<R>>\n  /**\n   * Perform mutation operations against the configured dataset.\n   * Returns an observable that resolves to an array of the mutated documents.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | ObservablePatch | ObservableTransaction,\n    options: AllDocumentsMutationOptions,\n  ): Observable<SanityDocument<R>[]>\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns an observable that resolves to a mutation result object containing the document ID of the first mutated document.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | ObservablePatch | ObservableTransaction,\n    options: FirstDocumentIdMutationOptions,\n  ): Observable<SingleMutationResult>\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns an observable that resolves to a mutation result object containing the mutated document IDs.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | ObservablePatch | ObservableTransaction,\n    options: AllDocumentIdsMutationOptions,\n  ): Observable<MultipleMutationResult>\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns an observable that resolves to the first mutated document.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | ObservablePatch | ObservableTransaction,\n    options?: BaseMutationOptions,\n  ): Observable<SanityDocument<R>>\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | ObservablePatch | ObservableTransaction,\n    options?:\n      | FirstDocumentMutationOptions\n      | AllDocumentsMutationOptions\n      | FirstDocumentIdMutationOptions\n      | AllDocumentIdsMutationOptions\n      | BaseMutationOptions,\n  ): Observable<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return dataMethods._mutate<R>(this, this.#httpRequest, operations, options)\n  }\n\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param documentId - Document ID to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(documentId: string, operations?: PatchOperations): ObservablePatch\n\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param documentIds - Array of document IDs to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(documentIds: string[], operations?: PatchOperations): ObservablePatch\n\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - An object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(selection: MutationSelection, operations?: PatchOperations): ObservablePatch\n\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(selection: PatchSelection, operations?: PatchOperations): ObservablePatch {\n    return new ObservablePatch(selection, operations, this)\n  }\n\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction<R extends Record<string, Any> = Record<string, Any>>(\n    operations?: Mutation<R>[],\n  ): ObservableTransaction {\n    return new ObservableTransaction(operations, this)\n  }\n\n  /**\n   * Perform action operations against the configured dataset\n   *\n   * @param operations - Action operation(s) to execute\n   * @param options - Action options\n   */\n  action(\n    operations: Action | Action[],\n    options?: BaseActionOptions,\n  ): Observable<SingleActionResult | MultipleActionResult> {\n    return dataMethods._action(this, this.#httpRequest, operations, options)\n  }\n\n  /**\n   * Perform an HTTP request against the Sanity API\n   *\n   * @param options - Request options\n   */\n  request<R = Any>(options: RawRequestOptions): Observable<R> {\n    return dataMethods._request(this, this.#httpRequest, options)\n  }\n\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri: string, canUseCdn?: boolean): string {\n    return dataMethods._getUrl(this, uri, canUseCdn)\n  }\n\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation: string, path?: string): string {\n    return dataMethods._getDataUrl(this, operation, path)\n  }\n}\n\n/** @public */\nexport class SanityClient {\n  assets: AssetsClient\n  datasets: DatasetsClient\n  live: LiveClient\n  mediaLibrary: {\n    video: MediaLibraryVideoClient\n  }\n  projects: ProjectsClient\n  users: UsersClient\n  agent: {\n    action: AgentActionsClient\n  }\n  releases: ReleasesClient\n\n  /**\n   * Observable version of the Sanity client, with the same configuration as the promise-based one\n   */\n  observable: ObservableSanityClient\n\n  /**\n   * Private properties\n   */\n  #clientConfig: InitializedClientConfig\n  #httpRequest: HttpRequest\n\n  /**\n   * Instance properties\n   */\n  listen = _listen\n\n  constructor(httpRequest: HttpRequest, config: ClientConfig = defaultConfig) {\n    this.config(config)\n\n    this.#httpRequest = httpRequest\n\n    this.assets = new AssetsClient(this, this.#httpRequest)\n    this.datasets = new DatasetsClient(this, this.#httpRequest)\n    this.live = new LiveClient(this)\n    this.mediaLibrary = {\n      video: new MediaLibraryVideoClient(this, this.#httpRequest),\n    }\n    this.projects = new ProjectsClient(this, this.#httpRequest)\n    this.users = new UsersClient(this, this.#httpRequest)\n    this.agent = {\n      action: new AgentActionsClient(this, this.#httpRequest),\n    }\n    this.releases = new ReleasesClient(this, this.#httpRequest)\n\n    this.observable = new ObservableSanityClient(httpRequest, config)\n  }\n\n  /**\n   * Clone the client - returns a new instance\n   */\n  clone(): SanityClient {\n    return new SanityClient(this.#httpRequest, this.config())\n  }\n\n  /**\n   * Returns the current client configuration\n   */\n  config(): InitializedClientConfig\n  /**\n   * Reconfigure the client. Note that this _mutates_ the current client.\n   */\n  config(newConfig?: Partial<ClientConfig>): this\n  config(newConfig?: Partial<ClientConfig>): ClientConfig | this {\n    if (newConfig === undefined) {\n      return {...this.#clientConfig}\n    }\n\n    if (this.#clientConfig && this.#clientConfig.allowReconfigure === false) {\n      throw new Error(\n        'Existing client instance cannot be reconfigured - use `withConfig(newConfig)` to return a new client',\n      )\n    }\n\n    if (this.observable) {\n      this.observable.config(newConfig)\n    }\n\n    this.#clientConfig = initConfig(newConfig, this.#clientConfig || {})\n    return this\n  }\n\n  /**\n   * Clone the client with a new (partial) configuration.\n   *\n   * @param newConfig - New client configuration properties, shallowly merged with existing configuration\n   */\n  withConfig(newConfig?: Partial<ClientConfig>): SanityClient {\n    const thisConfig = this.config()\n    return new SanityClient(this.#httpRequest, {\n      ...thisConfig,\n      ...newConfig,\n      stega: {\n        ...(thisConfig.stega || {}),\n        ...(typeof newConfig?.stega === 'boolean'\n          ? {enabled: newConfig.stega}\n          : newConfig?.stega || {}),\n      },\n    })\n  }\n\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   */\n  fetch<\n    R = Any,\n    Q extends QueryWithoutParams = QueryWithoutParams,\n    const G extends string = string,\n  >(query: G, params?: Q | QueryWithoutParams): Promise<ClientReturn<G, R>>\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   * @param params - Optional query parameters\n   * @param options - Optional request options\n   */\n  fetch<\n    R = Any,\n    Q extends QueryWithoutParams | QueryParams = QueryParams,\n    const G extends string = string,\n  >(\n    query: G,\n    params: Q extends QueryWithoutParams ? QueryWithoutParams : Q,\n    options?: FilteredResponseQueryOptions,\n  ): Promise<ClientReturn<G, R>>\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   * @param params - Optional query parameters\n   * @param options - Request options\n   */\n  fetch<\n    R = Any,\n    Q extends QueryWithoutParams | QueryParams = QueryParams,\n    const G extends string = string,\n  >(\n    query: G,\n    params: Q extends QueryWithoutParams ? QueryWithoutParams : Q,\n    options: UnfilteredResponseQueryOptions,\n  ): Promise<RawQueryResponse<ClientReturn<G, R>>>\n  /**\n   * Perform a GROQ-query against the configured dataset.\n   *\n   * @param query - GROQ-query to perform\n   * @param params - Optional query parameters\n   * @param options - Request options\n   */\n  fetch<\n    R = Any,\n    Q extends QueryWithoutParams | QueryParams = QueryParams,\n    const G extends string = string,\n  >(\n    query: G,\n    params: Q extends QueryWithoutParams ? QueryWithoutParams : Q,\n    options: UnfilteredResponseWithoutQuery,\n  ): Promise<RawQuerylessQueryResponse<ClientReturn<G, R>>>\n  fetch<R, Q, const G extends string>(\n    query: G,\n    params?: Q,\n    options?: QueryOptions,\n  ): Promise<RawQueryResponse<ClientReturn<G, R>> | ClientReturn<G, R>> {\n    return lastValueFrom(\n      dataMethods._fetch<ClientReturn<G, R>, Q>(\n        this,\n        this.#httpRequest,\n        this.#clientConfig.stega,\n        query,\n        params,\n        options,\n      ),\n    )\n  }\n\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options: {\n      signal?: AbortSignal\n      tag?: string\n      releaseId?: string\n      includeAllVersions: true\n    },\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Fetch a single document with the given ID.\n   *\n   * @param id - Document ID to fetch\n   * @param options - Request options\n   */\n  getDocument<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options?: {\n      signal?: AbortSignal\n      tag?: string\n      releaseId?: string\n      includeAllVersions?: false\n    },\n  ): Promise<SanityDocument<R> | undefined>\n  getDocument<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options?: {\n      signal?: AbortSignal\n      tag?: string\n      releaseId?: string\n      includeAllVersions?: boolean\n    },\n  ): Promise<SanityDocument<R> | undefined | SanityDocument<R>[]> {\n    // Implementation needs to handle union type safely\n    if (options?.includeAllVersions === true) {\n      return lastValueFrom(\n        dataMethods._getDocument<R>(this, this.#httpRequest, id, {\n          ...options,\n          includeAllVersions: true,\n        }),\n      )\n    }\n    // When includeAllVersions is not true, pass options but only include includeAllVersions if it was explicitly set\n    const opts = {\n      signal: options?.signal,\n      tag: options?.tag,\n      releaseId: options?.releaseId,\n      ...(options && 'includeAllVersions' in options ? {includeAllVersions: false as const} : {}),\n    }\n    return lastValueFrom(dataMethods._getDocument<R>(this, this.#httpRequest, id, opts))\n  }\n\n  /**\n   * Fetch multiple documents in one request.\n   * Should be used sparingly - performing a query is usually a better option.\n   * The order/position of documents is preserved based on the original array of IDs.\n   * If any of the documents are missing, they will be replaced by a `null` entry in the returned array\n   *\n   * @param ids - Document IDs to fetch\n   * @param options - Request options\n   */\n  getDocuments<R extends Record<string, Any> = Record<string, Any>>(\n    ids: string[],\n    options?: {signal?: AbortSignal; tag?: string},\n  ): Promise<(SanityDocument<R> | null)[]> {\n    return lastValueFrom(dataMethods._getDocuments<R>(this, this.#httpRequest, ids, options))\n  }\n\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns a promise that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: FirstDocumentMutationOptions,\n  ): Promise<SanityDocument<R>>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns a promise that resolves to an array containing the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: AllDocumentsMutationOptions,\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns a promise that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: FirstDocumentIdMutationOptions,\n  ): Promise<SingleMutationResult>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns a promise that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options: AllDocumentIdsMutationOptions,\n  ): Promise<MultipleMutationResult>\n  /**\n   * Create a document. Requires a `_type` property. If no `_id` is provided, it will be generated by the database.\n   * Returns a promise that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options?: BaseMutationOptions,\n  ): Promise<SanityDocument<R>>\n  create<R extends Record<string, Any> = Record<string, Any>>(\n    document: SanityDocumentStub<R>,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions,\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return lastValueFrom(\n      dataMethods._create<R>(this, this.#httpRequest, document, 'create', options),\n    )\n  }\n\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns a promise that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentMutationOptions,\n  ): Promise<SanityDocument<R>>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns a promise that resolves to an array containing the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentsMutationOptions,\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns a promise that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentIdMutationOptions,\n  ): Promise<SingleMutationResult>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns a promise that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentIdsMutationOptions,\n  ): Promise<MultipleMutationResult>\n  /**\n   * Create a document if no document with the same ID already exists.\n   * Returns a promise that resolves to the created document.\n   *\n   * @param document - Document to create\n   * @param options - Mutation options\n   */\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?: BaseMutationOptions,\n  ): Promise<SanityDocument<R>>\n  createIfNotExists<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions,\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return lastValueFrom(\n      dataMethods._createIfNotExists<R>(this, this.#httpRequest, document, options),\n    )\n  }\n\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns a promise that resolves to the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentMutationOptions,\n  ): Promise<SanityDocument<R>>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns a promise that resolves to an array containing the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentsMutationOptions,\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns a promise that resolves to a mutation result object containing the ID of the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: FirstDocumentIdMutationOptions,\n  ): Promise<SingleMutationResult>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns a promise that resolves to a mutation result object containing the created document ID.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options: AllDocumentIdsMutationOptions,\n  ): Promise<MultipleMutationResult>\n  /**\n   * Create a document if it does not exist, or replace a document with the same document ID\n   * Returns a promise that resolves to the created document.\n   *\n   * @param document - Document to either create or replace\n   * @param options - Mutation options\n   */\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?: BaseMutationOptions,\n  ): Promise<SanityDocument<R>>\n  createOrReplace<R extends Record<string, Any> = Record<string, Any>>(\n    document: IdentifiedSanityDocumentStub<R>,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions,\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return lastValueFrom(\n      dataMethods._createOrReplace<R>(this, this.#httpRequest, document, options),\n    )\n  }\n\n  /**\n   * @public\n   *\n   * Creates a new version of a published document.\n   *\n   * @remarks\n   * * The preferred approach is to use `baseId` to refer to the existing published document, but it is also possible to provide a complete `document` instead.\n   * * If `document` is provided, it must have a `_type` property.\n   * * Creating a version with no `releaseId` will create a new draft version of the published document.\n   * * If the `document._id` is defined, it should be a draft or release version ID that matches the version ID generated from `publishedId` and `releaseId`.\n   * * If the `document._id` is not defined, it will be generated from `publishedId` and `releaseId`.\n   * * To create a version of an unpublished document, use the `client.create` method.\n   *\n   * @category Versions\n   *\n   * @param params - Version action parameters:\n   *   - `baseId` - The ID of the published document from which to create a new version from.\n   *   - `ifBaseRevisionId` - If `baseId` is provided, this ensures the `baseId`'s revision Id is as expected before creating the new version from it.\n   *   - `document` - The document to create as a new version (must include `_type`).\n   *   - `publishedId` - The ID of the published document being versioned.\n   *   - `releaseId` - The ID of the release to create the version for.\n   * @param options - Additional action options.\n   * @returns A promise that resolves to the `transactionId`.\n   *\n   * @example Creating a new version of a published document\n   * ```ts\n   * const transactionId = await client.createVersion({\n   *   baseId: 'myDocument',\n   *   publishedId: 'myDocument',\n   *   releaseId: 'myRelease',\n   * })\n   *\n   * // The following document will be created:\n   * // {\n   * //   _id: 'versions.myRelease.myDocument',\n   * //   _type: 'myDocument',\n   * //   title: 'My Document',\n   * // }\n   * ```\n   *\n   *\n   * @example Creating a new draft version of a published document\n   * ```ts\n   * const transactionId = await client.createVersion({\n   *   baseId: 'myDocument',\n   *   publishedId: 'myDocument',\n   * })\n   *\n   * // The following document will be created:\n   * // {\n   * //   _id: 'drafts.myDocument',\n   * //   _type: 'myDocument',\n   * //   title: 'My Document',\n   * // }\n   * ```\n   */\n  createVersion<R extends Record<string, Any>>(\n    args: {\n      document: SanityDocumentStub<R>\n      publishedId: string\n      releaseId?: string\n    },\n    options?: BaseActionOptions,\n  ): Promise<SingleActionResult | MultipleActionResult>\n  createVersion<R extends Record<string, Any>>(\n    args: {\n      document: IdentifiedSanityDocumentStub<R>\n      publishedId?: string\n      releaseId?: string\n    },\n    options?: BaseActionOptions,\n  ): Promise<SingleActionResult | MultipleActionResult>\n  createVersion(\n    args: {\n      publishedId: string\n      baseId: string\n      releaseId: string\n      ifBaseRevisionId?: string\n    },\n    options?: BaseActionOptions,\n  ): Promise<SingleActionResult | MultipleActionResult>\n  createVersion<R extends Record<string, Any>>(\n    {\n      document,\n      publishedId,\n      releaseId,\n      baseId,\n      ifBaseRevisionId,\n    }: {\n      document?: SanityDocumentStub<R> | IdentifiedSanityDocumentStub<R>\n      publishedId?: string\n      releaseId?: string\n      baseId?: string\n      ifBaseRevisionId?: string\n    },\n    options?: BaseActionOptions,\n  ): Promise<SingleActionResult | MultipleActionResult> {\n    if (!document) {\n      return firstValueFrom(\n        dataMethods._createVersionFromBase(\n          this,\n          this.#httpRequest,\n          publishedId,\n          baseId,\n          releaseId,\n          ifBaseRevisionId,\n          options,\n        ),\n      )\n    }\n\n    const documentVersionId = deriveDocumentVersionId('createVersion', {\n      document,\n      publishedId,\n      releaseId,\n    })\n\n    const documentVersion = {...document, _id: documentVersionId}\n    const versionPublishedId = publishedId || getPublishedId(document._id)\n\n    return firstValueFrom(\n      dataMethods._createVersion<R>(\n        this,\n        this.#httpRequest,\n        documentVersion,\n        versionPublishedId,\n        options,\n      ),\n    )\n  }\n\n  /**\n   * Deletes a document with the given document ID.\n   * Returns a promise that resolves to the deleted document.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options: FirstDocumentMutationOptions,\n  ): Promise<SanityDocument<R>>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns a promise that resolves to an array containing the deleted document.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options: AllDocumentsMutationOptions,\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns a promise that resolves to a mutation result object containing the deleted document ID.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete(id: string, options: FirstDocumentIdMutationOptions): Promise<SingleMutationResult>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns a promise that resolves to a mutation result object containing the deleted document ID.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete(id: string, options: AllDocumentIdsMutationOptions): Promise<MultipleMutationResult>\n  /**\n   * Deletes a document with the given document ID.\n   * Returns a promise that resolves to the deleted document.\n   *\n   * @param id - Document ID to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    id: string,\n    options?: BaseMutationOptions,\n  ): Promise<SanityDocument<R>>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns a promise that resolves to first deleted document.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: MutationSelection,\n    options: FirstDocumentMutationOptions,\n  ): Promise<SanityDocument<R>>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns a promise that resolves to an array containing the deleted documents.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: MutationSelection,\n    options: AllDocumentsMutationOptions,\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns a promise that resolves to a mutation result object containing the ID of the first deleted document.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete(\n    selection: MutationSelection,\n    options: FirstDocumentIdMutationOptions,\n  ): Promise<SingleMutationResult>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns a promise that resolves to a mutation result object containing the document IDs that were deleted.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete(\n    selection: MutationSelection,\n    options: AllDocumentIdsMutationOptions,\n  ): Promise<MultipleMutationResult>\n  /**\n   * Deletes one or more documents matching the given query or document ID.\n   * Returns a promise that resolves to first deleted document.\n   *\n   * @param selection - An object with either an `id` or `query` key defining what to delete\n   * @param options - Options for the mutation\n   */\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: MutationSelection,\n    options?: BaseMutationOptions,\n  ): Promise<SanityDocument<R>>\n  delete<R extends Record<string, Any> = Record<string, Any>>(\n    selection: string | MutationSelection,\n    options?:\n      | AllDocumentIdsMutationOptions\n      | AllDocumentsMutationOptions\n      | BaseMutationOptions\n      | FirstDocumentIdMutationOptions\n      | FirstDocumentMutationOptions,\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return lastValueFrom(dataMethods._delete<R>(this, this.#httpRequest, selection, options))\n  }\n\n  /**\n   * @public\n   *\n   * Deletes the draft or release version of a document.\n   *\n   * @remarks\n   * * Discarding a version with no `releaseId` will discard the draft version of the published document.\n   * * If the draft or release version does not exist, any error will throw.\n   *\n   * @param params - Version action parameters:\n   *   - `releaseId` - The ID of the release to discard the document from.\n   *   - `publishedId` - The published ID of the document to discard.\n   * @param purge - if `true` the document history is also discarded.\n   * @param options - Additional action options.\n   * @returns a promise that resolves to the `transactionId`.\n   *\n   * @example Discarding a release version of a document\n   * ```ts\n   * client.discardVersion({publishedId: 'myDocument', releaseId: 'myRelease'})\n   * // The document with the ID `versions.myRelease.myDocument` will be discarded.\n   * ```\n   *\n   * @example Discarding a draft version of a document\n   * ```ts\n   * client.discardVersion({publishedId: 'myDocument'})\n   * // The document with the ID `drafts.myDocument` will be discarded.\n   * ```\n   */\n  discardVersion(\n    {releaseId, publishedId}: {releaseId?: string; publishedId: string},\n    purge?: boolean,\n    options?: BaseActionOptions,\n  ): Promise<SingleActionResult | MultipleActionResult> {\n    const documentVersionId = getDocumentVersionId(publishedId, releaseId)\n\n    return lastValueFrom(\n      dataMethods._discardVersion(this, this.#httpRequest, documentVersionId, purge, options),\n    )\n  }\n\n  /**\n   * @public\n   *\n   * Replaces an existing version document.\n   *\n   * @remarks\n   * * Requires a document with a `_type` property.\n   * * If the `document._id` is defined, it should be a draft or release version ID that matches the version ID generated from `publishedId` and `releaseId`.\n   * * If the `document._id` is not defined, it will be generated from `publishedId` and `releaseId`.\n   * * Replacing a version with no `releaseId` will replace the draft version of the published document.\n   * * At least one of the **version** or **published** documents must exist.\n   *\n   * @param params - Version action parameters:\n   *   - `document` - The new document to replace the version with.\n   *   - `releaseId` - The ID of the release where the document version is replaced.\n   *   - `publishedId` - The ID of the published document to replace.\n   * @param options - Additional action options.\n   * @returns a promise that resolves to the `transactionId`.\n   *\n   * @example Replacing a release version of a published document with a generated version ID\n   * ```ts\n   * await client.replaceVersion({\n   *   document: {_type: 'myDocument', title: 'My Document'},\n   *   publishedId: 'myDocument',\n   *   releaseId: 'myRelease',\n   * })\n   *\n   * // The following document will be patched:\n   * // {\n   * //   _id: 'versions.myRelease.myDocument',\n   * //   _type: 'myDocument',\n   * //   title: 'My Document',\n   * // }\n   * ```\n   *\n   * @example Replacing a release version of a published document with a specified version ID\n   * ```ts\n   * await client.replaceVersion({\n   *   document: {_type: 'myDocument', _id: 'versions.myRelease.myDocument', title: 'My Document'},\n   *   // `publishedId` and `releaseId` are not required since `document._id` has been specified\n   * })\n   *\n   * // The following document will be patched:\n   * // {\n   * //   _id: 'versions.myRelease.myDocument',\n   * //   _type: 'myDocument',\n   * //   title: 'My Document',\n   * // }\n   * ```\n   *\n   * @example Replacing a draft version of a published document\n   * ```ts\n   * await client.replaceVersion({\n   *   document: {_type: 'myDocument', title: 'My Document'},\n   *   publishedId: 'myDocument',\n   * })\n   *\n   * // The following document will be patched:\n   * // {\n   * //   _id: 'drafts.myDocument',\n   * //   _type: 'myDocument',\n   * //   title: 'My Document',\n   * // }\n   * ```\n   */\n\n  replaceVersion<R extends Record<string, Any>>(\n    args: {\n      document: SanityDocumentStub<R>\n      publishedId: string\n      releaseId?: string\n    },\n    options?: BaseActionOptions,\n  ): Promise<SingleActionResult | MultipleActionResult>\n  replaceVersion<R extends Record<string, Any>>(\n    args: {\n      document: IdentifiedSanityDocumentStub<R>\n      publishedId?: string\n      releaseId?: string\n    },\n    options?: BaseActionOptions,\n  ): Promise<SingleActionResult | MultipleActionResult>\n  replaceVersion<R extends Record<string, Any>>(\n    {\n      document,\n      publishedId,\n      releaseId,\n    }: {\n      document: SanityDocumentStub<R> | IdentifiedSanityDocumentStub<R>\n      publishedId?: string\n      releaseId?: string\n    },\n    options?: BaseActionOptions,\n  ): Promise<SingleActionResult | MultipleActionResult> {\n    const documentVersionId = deriveDocumentVersionId('replaceVersion', {\n      document,\n      publishedId,\n      releaseId,\n    })\n\n    const documentVersion = {...document, _id: documentVersionId}\n\n    return firstValueFrom(\n      dataMethods._replaceVersion<R>(this, this.#httpRequest, documentVersion, options),\n    )\n  }\n\n  /**\n   * @public\n   *\n   * Used to indicate when a document within a release should be unpublished when\n   * the release is run.\n   *\n   * @remarks\n   * * If the published document does not exist, an error will be thrown.\n   *\n   * @param params - Version action parameters:\n   *   - `releaseId` - The ID of the release to unpublish the document from.\n   *   - `publishedId` - The published ID of the document to unpublish.\n   * @param options - Additional action options.\n   * @returns a promise that resolves to the `transactionId`.\n   *\n   * @example Unpublishing a release version of a published document\n   * ```ts\n   * await client.unpublishVersion({publishedId: 'myDocument', releaseId: 'myRelease'})\n   * // The document with the ID `versions.myRelease.myDocument` will be unpublished. when `myRelease` is run.\n   * ```\n   */\n  unpublishVersion(\n    {releaseId, publishedId}: {releaseId: string; publishedId: string},\n    options?: BaseActionOptions,\n  ): Promise<SingleActionResult | MultipleActionResult> {\n    const versionId = getVersionId(publishedId, releaseId)\n\n    return lastValueFrom(\n      dataMethods._unpublishVersion(this, this.#httpRequest, versionId, publishedId, options),\n    )\n  }\n\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns a promise that resolves to the first mutated document.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | Patch | Transaction,\n    options: FirstDocumentMutationOptions,\n  ): Promise<SanityDocument<R>>\n  /**\n   * Perform mutation operations against the configured dataset.\n   * Returns a promise that resolves to an array of the mutated documents.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | Patch | Transaction,\n    options: AllDocumentsMutationOptions,\n  ): Promise<SanityDocument<R>[]>\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns a promise that resolves to a mutation result object containing the document ID of the first mutated document.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | Patch | Transaction,\n    options: FirstDocumentIdMutationOptions,\n  ): Promise<SingleMutationResult>\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns a promise that resolves to a mutation result object containing the mutated document IDs.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | Patch | Transaction,\n    options: AllDocumentIdsMutationOptions,\n  ): Promise<MultipleMutationResult>\n  /**\n   * Perform mutation operations against the configured dataset\n   * Returns a promise that resolves to the first mutated document.\n   *\n   * @param operations - Mutation operations to execute\n   * @param options - Mutation options\n   */\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | Patch | Transaction,\n    options?: BaseMutationOptions,\n  ): Promise<SanityDocument<R>>\n  mutate<R extends Record<string, Any> = Record<string, Any>>(\n    operations: Mutation<R>[] | Patch | Transaction,\n    options?:\n      | FirstDocumentMutationOptions\n      | AllDocumentsMutationOptions\n      | FirstDocumentIdMutationOptions\n      | AllDocumentIdsMutationOptions\n      | BaseMutationOptions,\n  ): Promise<\n    SanityDocument<R> | SanityDocument<R>[] | SingleMutationResult | MultipleMutationResult\n  > {\n    return lastValueFrom(dataMethods._mutate<R>(this, this.#httpRequest, operations, options))\n  }\n\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param documentId - Document ID to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(documentId: string, operations?: PatchOperations): Patch\n\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param documentIds - Array of document IDs to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(documentIds: string[], operations?: PatchOperations): Patch\n\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - An object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(selection: MutationSelection, operations?: PatchOperations): Patch\n\n  /**\n   * Create a new buildable patch of operations to perform\n   *\n   * @param selection - Document ID, an array of document IDs, or an object with `query` and optional `params`, defining which document(s) to patch\n   * @param operations - Optional object of patch operations to initialize the patch instance with\n   * @returns Patch instance - call `.commit()` to perform the operations defined\n   */\n  patch(documentId: PatchSelection, operations?: PatchOperations): Patch {\n    return new Patch(documentId, operations, this)\n  }\n\n  /**\n   * Create a new transaction of mutations\n   *\n   * @param operations - Optional array of mutation operations to initialize the transaction instance with\n   */\n  transaction<R extends Record<string, Any> = Record<string, Any>>(\n    operations?: Mutation<R>[],\n  ): Transaction {\n    return new Transaction(operations, this)\n  }\n\n  /**\n   * Perform action operations against the configured dataset\n   * Returns a promise that resolves to the transaction result\n   *\n   * @param operations - Action operation(s) to execute\n   * @param options - Action options\n   */\n  action(\n    operations: Action | Action[],\n    options?: BaseActionOptions,\n  ): Promise<SingleActionResult | MultipleActionResult> {\n    return lastValueFrom(dataMethods._action(this, this.#httpRequest, operations, options))\n  }\n\n  /**\n   * Perform a request against the Sanity API\n   * NOTE: Only use this for Sanity API endpoints, not for your own APIs!\n   *\n   * @param options - Request options\n   * @returns Promise resolving to the response body\n   */\n  request<R = Any>(options: RawRequestOptions): Promise<R> {\n    return lastValueFrom(dataMethods._request<R>(this, this.#httpRequest, options))\n  }\n\n  /**\n   * Perform an HTTP request a `/data` sub-endpoint\n   * NOTE: Considered internal, thus marked as deprecated. Use `request` instead.\n   *\n   * @deprecated - Use `request()` or your own HTTP library instead\n   * @param endpoint - Endpoint to hit (mutate, query etc)\n   * @param body - Request body\n   * @param options - Request options\n   * @internal\n   */\n  dataRequest(endpoint: string, body: unknown, options?: BaseMutationOptions): Promise<Any> {\n    return lastValueFrom(dataMethods._dataRequest(this, this.#httpRequest, endpoint, body, options))\n  }\n\n  /**\n   * Get a Sanity API URL for the URI provided\n   *\n   * @param uri - URI/path to build URL for\n   * @param canUseCdn - Whether or not to allow using the API CDN for this route\n   */\n  getUrl(uri: string, canUseCdn?: boolean): string {\n    return dataMethods._getUrl(this, uri, canUseCdn)\n  }\n\n  /**\n   * Get a Sanity API URL for the data operation and path provided\n   *\n   * @param operation - Data operation (eg `query`, `mutate`, `listen` or similar)\n   * @param path - Path to append after the operation\n   */\n  getDataUrl(operation: string, path?: string): string {\n    return dataMethods._getDataUrl(this, operation, path)\n  }\n}\n","import type {Middlewares} from 'get-it'\n\nimport {defineHttpRequest} from './http/request'\nimport type {Any, ClientConfig, HttpRequest} from './types'\n\nexport {validateApiPerspective} from './config'\nexport {\n  ChannelError,\n  connectEventSource,\n  ConnectionFailedError,\n  DisconnectError,\n  type EventSourceEvent,\n  type EventSourceInstance,\n  MessageError,\n  MessageParseError,\n  type ServerSentEvent,\n} from './data/eventsource'\nexport * from './data/patch'\nexport * from './data/transaction'\nexport {\n  ClientError,\n  CorsOriginError,\n  formatQueryParseError,\n  type HttpError,\n  isHttpError,\n  isQueryParseError,\n  ServerError,\n} from './http/errors'\nexport * from './SanityClient'\nexport * from './types'\n\n/** @alpha */\nexport {adapter as unstable__adapter, environment as unstable__environment} from 'get-it'\n\n/**\n * Create the `requester` and `createClient` exports, that have environment specific middleware for node and browsers\n * @internal\n */\nexport default function defineCreateClientExports<\n  SanityClientType,\n  ClientConfigType extends ClientConfig,\n>(\n  envMiddleware: Middlewares,\n  ClassConstructor: new (httpRequest: HttpRequest, config: ClientConfigType) => SanityClientType,\n) {\n  // Set the http client to use for requests, and its environment specific middleware\n  const defaultRequester = defineHttpRequest(envMiddleware)\n\n  const createClient = (config: ClientConfigType) => {\n    const clientRequester = defineHttpRequest(envMiddleware, {\n      ignoreWarnings: config.ignoreWarnings,\n    })\n    return new ClassConstructor(\n      (options, requester) =>\n        (requester || clientRequester)({\n          maxRedirects: 0,\n          maxRetries: config.maxRetries,\n          retryDelay: config.retryDelay,\n          lineage: config.lineage,\n          ...options,\n        } as Any),\n      config,\n    )\n  }\n\n  return {requester: defaultRequester, createClient}\n}\n","import {printNoDefaultExport} from './warnings'\n\n/* @internal */\nexport function defineDeprecatedCreateClient<SanityClientType, ClientConfigType>(\n  createClient: (config: ClientConfigType) => SanityClientType,\n) {\n  return function deprecatedCreateClient(config: ClientConfigType) {\n    printNoDefaultExport()\n    return createClient(config)\n  }\n}\n","export default []\n","import defineCreateClientExports, {type ClientConfig, SanityClient} from './defineCreateClient'\nimport {defineDeprecatedCreateClient} from './defineDeprecatedCreateClient'\nimport envMiddleware from './http/browserMiddleware'\n\nexport * from './defineCreateClient'\n\nconst exp = defineCreateClientExports<SanityClient, ClientConfig>(envMiddleware, SanityClient)\n\n/** @public */\nexport const requester = exp.requester\n\n/** @public */\nexport const createClient = exp.createClient\n\n/**\n * @public\n * @deprecated Use the named export `createClient` instead of the `default` export\n */\nconst deprecatedCreateClient = defineDeprecatedCreateClient(createClient)\nexport default deprecatedCreateClient\n"],"names":["location","projectId","envMiddleware","isQuery","warnings.printNoApiVersionSpecifiedWarning","validate.resourceConfig","warnings.printCredentialedTokenWarning","warnings.printBrowserTokenWarning","warnings.printCdnWarning","validate.projectId","validate.dataset","validate.requestTag","warnings.printCdnAndWithCredentialsWarning","merge","validators.validateObject","validators.requireDocumentId","validators.validateDocumentId","validators.requireDocumentType","validators.resourceConfig","uri","validators.hasDataset","dataset","observable","validators.validateAssetType","defaults","EventSource","validate.resourceGuard","finalize","map","dataMethods._fetch","dataMethods._getDocument","dataMethods._getDocuments","dataMethods._create","dataMethods._createIfNotExists","dataMethods._createOrReplace","dataMethods._createVersionFromBase","dataMethods._createVersion","dataMethods._delete","dataMethods._discardVersion","dataMethods._replaceVersion","dataMethods._unpublishVersion","dataMethods._mutate","dataMethods._action","dataMethods._request","dataMethods._getUrl","dataMethods._getDataUrl","dataMethods._dataRequest","requester","createClient"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,MAAM,UAAU;AAkBA,SAAA,UAAU,KAAA,EAAeA,SAAAA,EAAwB,OAAA,EAA0B;IACzF,MAAM,QAAQ,MAAM,KAAA,CAAM,OAAO,GAC3B,MAAM;QACV,OAAO,aAAaA,UAAS,KAAA,EAAO,KAAK;QACzC,KAAKA,UAAS,GAAA,GAAM,aAAaA,UAAS,GAAA,EAAK,KAAK,IAAI,KAAA;IAGpD,GAAA,EAAC,KAAA,EAAO,GAAA,EAAK,WAAA,CAAW,CAAA,GAAI,eAAe,KAAK,KAAK,GAErD,iBAAiB,GAAG,GAAG,EAAA,CAAG,MAAA;IAEhC,OAAO,MACJ,KAAA,CAAM,SAAS,GAAG,EAClB,KAAA,CAAM,OAAO,GAAG,EAChB,GAAA,CAAI,CAAC,MAAM,UAAU;QACd,MAAA,SAAS,QAAQ,IAAI,OAErB,SAAS,CAAA,CAAA,EADM,CAAA,CAAA,EAAI,MAAM,EAAA,CAAG,KAAA,CAAM,CAAC,cAAc,CACxB,CAAA,EAAA,CAAA,EACzB,YAAY,WAAA,CAAY,MAAM,CAAA,EAC9B,iBAAiB,CAAC,WAAA,CAAY,SAAS,CAAC,CAAA;QAC9C,IAAI,CAAC,WACI,OAAA,CAAA,CAAA,EAAI,MAAM,GAAG,KAAK,MAAA,GAAS,IAAI,CAAA,CAAA,EAAI,IAAI,EAAA,GAAK,EAAE,EAAA;QAGvD,IAAI,aAAa;QACb,IAAA,MAAM,OAAA,CAAQ,SAAS,GAAG;YACtB,MAAA,gBAAgB,KAAK,KAAA,CAAM,GAAG,KAAK,GAAA,CAAI,SAAA,CAAU,CAAC,CAAA,GAAI,GAAG,CAAC,CAAC,EAAE,OAAA,CAAQ,UAAU,GAAG,GAClF,kBAAkB,SAAA,CAAU,CAAC,CAAA,IAAK;YAE3B,aAAA;gBACX,CAAA;CAAA,CAAA;gBACA,OAAO,OAAA,CAAQ,OAAO,GAAG;gBACzB;gBACA;gBACA,IAAI,MAAA,CAAO,eAAe;aAAA,CAC1B,IAAA,CAAK,EAAE,GAEL,kBAAkB,WAAA,CACpB,cAAc,MAAM,OAAA;QAAA;QAGxB,OAAO;YAAC;YAAK;YAAQ,KAAK,MAAA,GAAS,IAAI,CAAA,CAAA,EAAI,IAAI,EAAA,GAAK;YAAI,UAAU;SAAA,CAAE,IAAA,CAAK,EAAE;IAC5E,CAAA,EACA,IAAA,CAAK,CAAA;AAAA,CAAI;AACd;AAEA,SAAS,eACP,GAAA,EACA,MAAA,EAKA;IACA,MAAM,WAAqB;QAAC,GAAG,IAAI,KAAA;IAAK,GAClC,SAAmB;QAAC,GAAG,QAAA;QAAU,GAAG,IAAI,GAAA;IACxC,GAAA,aAAa,GACb,aAAa,GACb,YAAY,SAAS,IAAA,IAAQ,CAAA,GAC7B,cAAc,SAAS,MAAA,IAAU,GACjC,UAAU,OAAO,IAAA,EACjB,YAAY,OAAO,MAAA;IAEzB,IAAI,QAAQ,KAAK,GAAA,CAAI,YAAA,CAAa,aAAa,CAAA,GAAI,CAAC,GAChD,MAAM,KAAK,GAAA,CAAI,OAAO,MAAA,EAAQ,UAAU,UAAU;IAElD,cAAc,CAAA,KAAA,CAChB,QAAQ,CAAA,GAGN,YAAY,CAAA,KAAA,CACd,MAAM,OAAO,MAAA;IAGf,MAAM,WAAW,UAAU,WACrB,cAA2B,CAAC;IAE9B,IAAA,UACF,IAAA,IAAS,IAAI,GAAG,KAAK,UAAU,IAAK;QAClC,MAAM,aAAa,IAAI;QAEvB,IAAI,CAAC,aACH,WAAA,CAAY,UAAU,CAAA,GAAI,CAAA;aAAA,IACjB,MAAM,GAAG;YAClB,MAAM,eAAe,MAAA,CAAO,aAAa,CAAC,CAAA,CAAE,MAAA;YAE5C,WAAA,CAAY,UAAU,CAAA,GAAI;gBAAC;gBAAa,eAAe,cAAc,CAAC;aAAA;QAAA,OAAA,IAC7D,MAAM,UACf,WAAA,CAAY,UAAU,CAAA,GAAI;YAAC;YAAG,SAAS;SAAA;aAClC;YACL,MAAM,eAAe,MAAA,CAAO,aAAa,CAAC,CAAA,CAAE,MAAA;YAE5C,WAAA,CAAY,UAAU,CAAA,GAAI;gBAAC;gBAAG,YAAY;aAAA;QAAA;IAC5C;SAGE,gBAAgB,YACd,cACF,WAAA,CAAY,SAAS,CAAA,GAAI;QAAC;QAAa,CAAC;KAAA,GAExC,WAAA,CAAY,SAAS,CAAA,GAAI,CAAA,IAG3B,WAAA,CAAY,SAAS,CAAA,GAAI;QAAC;QAAa,YAAY,WAAW;KAAA;IAI3D,OAAA;QAAC;QAAO;QAAK;IAAW;AACjC;AAEA,SAAS,aAAa,MAAA,EAAgB,KAAA,EAA2B;IAC/D,IAAI,SAAS;IAEb,IAAA,IAAS,IAAI,GAAG,IAAI,MAAM,MAAA,EAAQ,IAAK;QACrC,MAAM,aAAa,KAAA,CAAM,CAAC,CAAA,CAAE,MAAA,GAAS;QAErC,IAAI,SAAS,aAAa,QACjB,OAAA;YACL,MAAM,IAAI;YAAA,eAAA;YACV,QAAQ,SAAS;QACnB;QAGQ,UAAA;IAAA;IAIL,OAAA;QACL,MAAM,MAAM,MAAA;QACZ,QAAQ,KAAA,CAAM,MAAM,MAAA,GAAS,CAAC,CAAA,EAAG,UAAU;IAC7C;AACF;ACvKA,MAAM,6BAA6B;AA4B5B,SAAS,YAAY,KAAA,EAAoC;IAC1D,IAAA,8KAAC,YAAA,EAAS,KAAK,GACV,OAAA,CAAA;IAGT,MAAM,WAAW,MAAM,QAAA;IASvB,OAPE,CAAA,CAAO,OAAA,MAAM,UAAA,IAAe,YAC5B,OAAO,MAAM,OAAA,IAAY,YACzB,+KAAC,WAAA,EAAS,QAAQ,KAMlB,OAAO,SAAS,IAAA,GAAS,OACzB,OAAO,SAAS,GAAA,IAAQ,YACxB,OAAO,SAAS,MAAA,IAAW,YAC3B,OAAO,SAAS,OAAA,IAAY,YAC5B,OAAO,SAAS,UAAA,IAAe,QAAA;AAMnC;AAGO,MAAM,oBAAoB,MAAM;IACrC,SAAA;IACA,aAAuC,IAAA;IACvC,aAAA;IACA,QAAA;IAEA,YAAY,GAAA,EAAU,OAAA,CAAuB;QACrC,MAAA,QAAQ,kBAAkB,KAAK,OAAO;QAC5C,KAAA,CAAM,MAAM,OAAO,GACnB,OAAO,MAAA,CAAO,IAAA,EAAM,KAAK;IAAA;AAE7B;AAGO,MAAM,oBAAoB,MAAM;IACrC,SAAA;IACA,aAAuC,IAAA;IACvC,aAAA;IACA,QAAA;IAEA,YAAY,GAAA,CAAU;QACd,MAAA,QAAQ,kBAAkB,GAAG;QACnC,KAAA,CAAM,MAAM,OAAO,GACnB,OAAO,MAAA,CAAO,IAAA,EAAM,KAAK;IAAA;AAE7B;AAEA,SAAS,kBAAkB,GAAA,EAAU,OAAA,EAAmC;IAChE,MAAA,OAAO,IAAI,IAAA,EACX,QAAQ;QACZ,UAAU;QACV,YAAY,IAAI,UAAA;QAChB,cAAc,cAAc,MAAM,GAAG;QACrC,SAAS;QACT,SAAS,KAAA;IACX;IAGI,IAAA,+KAAC,WAAA,EAAS,IAAI,GAChB,OAAA,MAAM,OAAA,GAAU,iBAAiB,KAAK,IAAI,GACnC;IAGT,MAAM,QAAQ,KAAK,KAAA;IAGnB,IAAI,OAAO,SAAU,YAAY,OAAO,KAAK,OAAA,IAAY,UACvD,OAAA,MAAM,OAAA,GAAU,GAAG,KAAK,CAAA,GAAA,EAAM,KAAK,OAAO,EAAA,EACnC;IAIL,IAAA,OAAO,SAAU,YAAY,UAAU,MACzC,OAAI,OAAO,SAAU,WACnB,MAAM,OAAA,GAAU,QACP,OAAO,KAAK,OAAA,IAAY,WACjC,MAAM,OAAA,GAAU,KAAK,OAAA,GAErB,MAAM,OAAA,GAAU,iBAAiB,KAAK,IAAI,GAErC;IAIT,IAAI,gBAAgB,KAAK,KAAK,cAAc,KAAK,GAAG;QAClD,MAAM,WAAW,MAAM,KAAA,IAAS,CAC1B,CAAA,EAAA,QAAQ,SACX,KAAA,CAAM,GAAG,0BAA0B,EACnC,GAAA,CAAI,CAAC,OAAS,KAAK,KAAA,EAAO,WAAW,EACrC,MAAA,CAAO,OAAO;QACb,IAAA,WAAW,MAAM,MAAA,GAAS,CAAA;EAAA,EAAQ,MAAM,IAAA,CAAK,CAAA;EAAA,CAAM,CAAC,EAAA,GAAK;QACzD,OAAA,SAAS,MAAA,GAAS,8BAAA,CACpB,YAAY,CAAA;OAAA,EAAY,SAAS,MAAA,GAAS,0BAA0B,CAAA,KAAA,CAAA,GAEtE,MAAM,OAAA,GAAU,GAAG,MAAM,WAAW,GAAG,QAAQ,EAAA,EAC/C,MAAM,OAAA,GAAU,KAAK,KAAA,EACd;IAAA;IAIL,IAAA,kBAAkB,KAAK,GAAG;QACtB,MAAA,MAAM,SAAS,SAAS,OAAO;QAC/B,OAAA,MAAA,OAAA,GAAU,sBAAsB,OAAO,GAAG,GAChD,MAAM,OAAA,GAAU,KAAK,KAAA,EACd;IAAA;IAGT,OAAI,iBAAiB,SAAS,OAAO,MAAM,WAAA,IAAgB,WAAA,CAEzD,MAAM,OAAA,GAAU,MAAM,WAAA,EACtB,MAAM,OAAA,GAAU,OACT,KAAA,IAAA,CAIT,MAAM,OAAA,GAAU,iBAAiB,KAAK,IAAI,GACnC,KAAA;AACT;AAEA,SAAS,gBAAgB,KAAA,EAAuC;IAE5D,OAAA,UAAU,SACV,MAAM,IAAA,KAAS,mBACf,iBAAiB,SACjB,OAAO,MAAM,WAAA,IAAgB;AAEjC;AAEA,SAAS,cAAc,KAAA,EAAqC;IAExD,OAAA,UAAU,SACV,MAAM,IAAA,KAAS,iBACf,iBAAiB,SACjB,OAAO,MAAM,WAAA,IAAgB;AAEjC;AAGO,SAAS,kBAAkB,KAAA,EAAyC;IACzE,qLACE,WAAA,EAAS,KAAK,KACd,MAAM,IAAA,KAAS,qBACf,OAAO,MAAM,KAAA,IAAU,YACvB,OAAO,MAAM,KAAA,IAAU,YACvB,OAAO,MAAM,GAAA,IAAQ;AAEzB;AAUgB,SAAA,sBAAsB,KAAA,EAAwB,GAAA,EAAqB;IACjF,MAAM,EAAC,KAAA,EAAO,KAAA,EAAO,GAAA,EAAK,WAAA,CAAe,CAAA,GAAA;IAErC,IAAA,CAAC,SAAS,OAAO,QAAU,KAC7B,OAAO,CAAA,wBAAA,EAA2B,WAAW,EAAA;IAG/C,MAAM,UAAU,MAAM,CAAA;;KAAA,EAAY,GAAG,EAAA,GAAK;IAGnC,OAAA,CAAA;AAAA,EAFQ,UAAU,OAAO;QAAC;QAAO;IAAM,GAAA,WAAW,CAEhB,GAAG,OAAO,EAAA;AACrD;AAEA,SAAS,iBAAiB,GAAA,EAAU,IAAA,EAAe;IACjD,MAAM,UAAU,OAAO,QAAS,WAAW,CAAA,EAAA,EAAK,kBAAkB,MAAM,GAAG,CAAC,CAAA,CAAA,CAAA,GAAM,IAC5E,gBAAgB,IAAI,aAAA,GAAgB,CAAA,CAAA,EAAI,IAAI,aAAa,EAAA,GAAK;IACpE,OAAO,GAAG,IAAI,MAAM,CAAA,YAAA,EAAe,IAAI,GAAG,CAAA,kBAAA,EAAqB,IAAI,UAAU,GAAG,aAAa,GAAG,OAAO,EAAA;AACzG;AAEA,SAAS,cAAc,IAAA,EAAW,GAAA,EAAU;IAG1C,OAAA,CAFqB,IAAI,OAAA,CAAQ,cAAc,CAAA,IAAK,EAAA,EAAI,WAAA,GAC7B,OAAA,CAAQ,kBAAkB,MAAM,CAAA,IAC3C,KAAK,SAAA,CAAU,MAAM,MAAM,CAAC,IAAI;AAClD;AAEA,SAAS,kBAAkB,GAAA,EAAa,GAAA,EAAa;IAC5C,OAAA,IAAI,MAAA,GAAS,MAAM,GAAG,IAAI,KAAA,CAAM,GAAG,GAAG,CAAC,CAAA,MAAA,CAAA,GAAM;AACtD;AAGO,MAAM,wBAAwB,MAAM;IACzC,UAAA;IACA,aAAA;IAEA,YAAY,EAAC,WAAAC,UAAAA,EAAAA,CAAiC;QAC5C,KAAA,CAAM,iBAAiB,GACvB,IAAA,CAAK,IAAA,GAAO,mBACZ,IAAA,CAAK,SAAA,GAAYA;QAEjB,MAAM,MAAM,IAAI,IAAI,CAAA,iCAAA,EAAoCA,UAAS,CAAA,IAAA,CAAM;QACnE,IAAA,OAAO,WAAa,KAAa;YAC7B,MAAA,EAAC,MAAA,EAAA,GAAU;YACjB,IAAI,YAAA,CAAa,GAAA,CAAI,QAAQ,KAAK,GAClC,IAAI,YAAA,CAAa,GAAA,CAAI,UAAU,MAAM,GACrC,IAAA,CAAK,YAAA,GAAe,KACpB,IAAA,CAAK,OAAA,GAAU,CAAA,mFAAA,EAAsF,GAAG,EAAA;QAC1G,OACO,IAAA,CAAA,OAAA,GAAU,CAAA,sGAAA,EAAyG,GAAG,EAAA;IAAA;AAGjI;ACjPA,MAAM,YAAY;IAChB,YAAY,CAAC,KAAU,YAAyB;QAC9C,IAAI,IAAI,UAAA,IAAc,KACd,MAAA,IAAI,YAAY,GAAG;QACpB,IAAI,IAAI,UAAA,IAAc,KACrB,MAAA,IAAI,YAAY,KAAK,OAAO;QAG7B,OAAA;IAAA;AAEX;AAEA,SAAS,cAAc,SAAsE,CAAA,CAAA,EAAI;IAC/F,MAAM,OAAgC,CAAA,GAGhC,sBAAsB,CAAC,UACvB,OAAO,cAAA,KAAmB,KAAA,IAAkB,CAAA,IAAA,CAE/B,MAAM,OAAA,CAAQ,OAAO,cAAc,IAChD,OAAO,cAAA,GACP;YAAC,OAAO,cAAc;SAAA,EAEV,IAAA,CAAK,CAAC,UAChB,OAAO,WAAY,WACd,QAAQ,QAAA,CAAS,OAAO,IACtB,mBAAmB,SACrB,QAAQ,IAAA,CAAK,OAAO,IAEtB,CAAA,CACR;IAGI,OAAA;QACL,YAAY,CAAC,QAAa;YACxB,MAAM,OAAO,IAAI,OAAA,CAAQ,kBAAkB,CAAA,EACrC,WAAW,MAAM,OAAA,CAAQ,IAAI,IAAI,OAAO;gBAAC,IAAI;aAAA;YACnD,KAAA,MAAW,OAAO,SACZ,CAAC,OAAO,IAAA,CAAK,GAAG,CAAA,IAGhB,oBAAoB,GAAG,KAAA,CAI3B,IAAA,CAAK,GAAG,CAAA,GAAI,CAAA,GACZ,QAAQ,IAAA,CAAK,GAAG,CAAA;YAEX,OAAA;QAAA;IAEX;AACF;AAOO,SAAS,kBACdC,cAAAA,EACA,SAA4B,CAAA,CAAA,EACjB;IACX,yKAAO,QAAA,EAAM;YACX,mLAAA,EAAM;YAAC;QAAA,CAAY;WAChBA;QACH,cAAc,MAAM;uLACpB,cAAA,CAAY;uLACZ,eAAA,CAAa;SACb,yLAAA,CAAS;QACT;uLACA,aAAA,EAAW;YAAC,6JAAgB,aAAA;QAAW,CAAA;KACxC;AACH;AAGA,SAAS,YAAY,GAAA,EAAU,OAAA,EAAiB,OAAA,EAAc;IAExD,IAAA,QAAQ,UAAA,KAAe,EAAU,CAAA,OAAA,CAAA;IAIrC,MAAM,SAAS,QAAQ,MAAA,KAAW,SAAS,QAAQ,MAAA,KAAW,QAExDC,WAAAA,CADM,QAAQ,GAAA,IAAO,QAAQ,GAAA,EACf,UAAA,CAAW,aAAa,GACtC,sBACJ,IAAI,QAAA,IAAA,CACH,IAAI,QAAA,CAAS,UAAA,KAAe,OAC3B,IAAI,QAAA,CAAS,UAAA,KAAe,OAC5B,IAAI,QAAA,CAAS,UAAA,KAAe,GAAA;IAW3B,OAAA,CAAA,UAAUA,QAAAA,KAAY,sBAA4B,CAAA,+KAEhD,QAAA,CAAM,WAAA,CAAY,KAAK,SAAS,OAAO;AAChD;AC7GA,MAAM,WAAW;AAEV,SAAS,gBAAgB,IAAA,EAAc;IAC5C,OAAO,WAAW;AACpB;ACFA,MAAM,oBAAoB;IAAC;IAAS,MAAM;CAAA,EACpC,yBAAyB;IAAC;IAAU;IAAS,SAAS;CAAA,EAE/C,UAAU,CAAC,SAAiB;IACnC,IAAA,CAAC,qDAAqD,IAAA,CAAK,IAAI,GACjE,MAAM,IAAI,MACR;AAGN,GAEa,YAAY,CAAC,OAAe;IACnC,IAAA,CAAC,gBAAgB,IAAA,CAAK,EAAE,GACpB,MAAA,IAAI,MAAM,uDAAuD;AAE3E,GAEa,oBAAoB,CAAC,SAAiB;IAC7C,IAAA,kBAAkB,OAAA,CAAQ,IAAI,MAAM,CAAA,GAChC,MAAA,IAAI,MAAM,CAAA,oBAAA,EAAuB,IAAI,CAAA,iBAAA,EAAoB,kBAAkB,IAAA,CAAK,IAAI,CAAC,EAAE;AAEjG,GAEa,iBAAiB,CAAC,IAAY,QAAa;IACtD,IAAI,QAAQ,QAAQ,OAAO,OAAQ,YAAY,MAAM,OAAA,CAAQ,GAAG,GAC9D,MAAM,IAAI,MAAM,GAAG,EAAE,CAAA,gCAAA,CAAkC;AAE3D,GAEa,qBAAqB,CAAC,IAAY,OAAe;IACxD,IAAA,OAAO,MAAO,YAAY,CAAC,iCAAiC,IAAA,CAAK,EAAE,KAAK,GAAG,QAAA,CAAS,IAAI,GAC1F,MAAM,IAAI,MAAM,GAAG,EAAE,CAAA,KAAA,EAAQ,EAAE,CAAA,4BAAA,CAA8B;AAEjE,GAEa,oBAAoB,CAAC,IAAY,QAA6B;IACzE,IAAI,CAAC,IAAI,GAAA,EACP,MAAM,IAAI,MAAM,GAAG,EAAE,CAAA,6DAAA,CAA+D;IAGnE,mBAAA,IAAI,IAAI,GAAG;AAChC,GAEa,uBAAuB,CAAC,IAAY,SAAiB;IAChE,IAAI,OAAO,QAAS,UAClB,MAAM,IAAI,MAAM,CAAA,EAAA,EAAK,EAAE,CAAA,QAAA,EAAW,IAAI,CAAA,+BAAA,CAAiC;AAE3E,GAEa,sBAAsB,CAAC,IAAY,QAA6B;IAC3E,IAAI,CAAC,IAAI,KAAA,EACP,MAAM,IAAI,MAAM,CAAA,EAAA,EAAK,EAAE,CAAA,oEAAA,CAAsE;IAG1E,qBAAA,IAAI,IAAI,KAAK;AACpC,GAEa,yBAAyB,CAAC,gBAAwB,aAAiC;IAC1F,IAAA,SAAS,GAAA,IAAO,SAAS,GAAA,KAAQ,gBACnC,MAAM,IAAI,MACR,CAAA,4BAAA,EAA+B,SAAS,GAAG,CAAA,+CAAA,EAAkD,cAAc,CAAA,GAAA,CAAA;AAGjH,GAEa,iBAAiB,CAAC,IAAY,UAAkB,UAAiB;IAC5E,MAAM,YAAY;IAClB,IAAI,uBAAuB,OAAA,CAAQ,EAAE,MAAM,CAAA,GAAI;QACvC,MAAA,QAAQ,uBAAuB,GAAA,CAAI,CAAC,MAAQ,CAAA,CAAA,EAAI,GAAG,CAAA,CAAA,CAAG,EAAE,IAAA,CAAK,IAAI;QACvE,MAAM,IAAI,MAAM,GAAG,SAAS,CAAA,yCAAA,EAA4C,KAAK,EAAE;IAAA;IAGjF,IAAI,OAAO,YAAa,UACtB,MAAM,IAAI,MAAM,GAAG,SAAS,CAAA,mDAAA,CAAqD;IAG/E,IAAA,CAAC,MAAM,OAAA,CAAQ,KAAK,GACtB,MAAM,IAAI,MAAM,GAAG,SAAS,CAAA,iDAAA,CAAmD;AAEnF,GAEa,aAAa,CAAC,WAA4C;IACrE,IAAI,CAAC,OAAO,OAAA,EACJ,MAAA,IAAI,MAAM,+CAA+C;IAGjE,OAAO,OAAO,OAAA,IAAW;AAC3B,GAEa,aAAa,CAAC,QAAgB;IACzC,IAAI,OAAO,OAAQ,YAAY,CAAC,uBAAuB,IAAA,CAAK,GAAG,GAC7D,MAAM,IAAI,MACR;IAIG,OAAA;AACT,GAEa,iBAAiB,CAAC,WAA0C;IACnE,IAAA,CAAC,MAAA,CAAO,wBAAwB,CAAA,EAC5B,MAAA,IAAI,MAAM,yDAAyD;IAE3E,MAAM,EAAC,IAAA,EAAM,EAAA,EAAA,GAAM,MAAA,CAAO,wBAAwB,CAAA;IAElD,OAAQ,MAAM;QACZ,KAAK;YAAW;gBAEd,IADiB,GAAG,KAAA,CAAM,GAAG,EAChB,MAAA,KAAW,GAChB,MAAA,IAAI,MAAM,6DAA6D;gBAE/E;YAAA;QAEF,KAAK;QACL,KAAK;QACL,KAAK;YACH;QAEF;YAEE,MAAM,IAAI,MAAM,CAAA,2BAAA,EAA8B,KAAK,QAAA,CAAU,CAAA,EAAE;IAAA;AAErE,GAEa,gBAAgB,CAAC,SAAiB,WAA0C;IACvF,IAAI,MAAA,CAAO,wBAAwB,CAAA,EACjC,MAAM,IAAI,MAAM,CAAA,EAAA,EAAK,OAAO,CAAA,6CAAA,CAA+C;AAE/E,GC6kDa,2BAA2B;AC7sDjC,SAAS,KAAK,EAAA,EAAS;IAC5B,IAAI,UAAU,CAAA,GACV;IACG,OAAA,CAAA,GAAI,OAAA,CACL,WAAA,CAGJ,cAAc,GAAG,GAAG,IAAI,GACxB,UAAU,CAAA,CAAA,GACH,WAAA;AAEX;ACTA,MAAM,uBAAuB,CAAC,UAAA,sCAAA;IAE5B,KAAK,CAAA,GAAI,OAAgB,QAAQ,IAAA,CAAK,QAAQ,IAAA,CAAK,GAAG,GAAG,GAAG,IAAI,CAAC,GAEtD,oCAAoC,qBAAqB;IACpE;IACA;CACD,GAEY,kBAAkB,qBAAqB;IAClD;IACA;IACA;CACD,GAEY,+BAA+B,qBAAqB;IAC/D;IACA;CACD,GAEY,uCAAuC,qBAAqB;IACvE;CACD,GAEY,2BAA2B,qBAAqB;IAC3D;IACA,CAAA,IAAA,EAAO,gBACL,2BACD,mDAAA,CAAA;CACF,GAEY,gCAAgC,qBAAqB;IAChE;IACA;CACD,GAEY,oCAAoC,qBAAqB;IACpE;IACA,CAAA,IAAA,EAAO,gBAAgB,uBAAuB,CAAC,EAAA;CAChD,GAEY,uBAAuB,qBAAqB;IACvD;CACD,GAEY,sCAAsC,qBAAqB;IACtE;CACD,GC9CK,iBAAiB,oBACV,gBAAgB;IAC3B,SAAS;IACT,YAAY;IACZ,oBAAoB,CAAA;IACpB,OAAO;QAAC,SAAS,CAAA;IAAK;AACxB,GAEM,aAAa;IAAC;IAAa;IAAa,SAAS;CAAA,EACjD,UAAU,CAAC,OAAiB,WAAW,OAAA,CAAQ,IAAI,MAAM,CAAA;AAE/D,SAAS,mBAAmB,UAAA,EAAoB;IAC1C,IAAA,eAAe,OAAO,eAAe,KACvC;IAGI,MAAA,UAAU,IAAI,KAAK,UAAU;IAI/B,IAAA,CAAA,CAFF,sBAAsB,IAAA,CAAK,UAAU,KAAK,mBAAmB,QAAQ,QAAQ,OAAA,CAAY,IAAA,CAAA,GAGnF,MAAA,IAAI,MAAM,yEAAyE;AAE7F;AAKO,SAAS,uBACd,WAAA,EAC0C;IACtC,IAAA,MAAM,OAAA,CAAQ,WAAW,KAAK,YAAY,MAAA,GAAS,KAAK,YAAY,QAAA,CAAS,KAAK,GACpF,MAAM,IAAI,UACR;AAGN;AAEa,MAAA,aAAa,CACxB,QACA,eAC4B;IAC5B,MAAM,kBAAkB;QACtB,GAAG,UAAA;QACH,GAAG,MAAA;QACH,OAAO;YACL,GAAI,OAAO,WAAW,KAAA,IAAU,YAC5B;gBAAC,SAAS,WAAW,KAAA;YAAA,IACrB,WAAW,KAAA,IAAS,cAAc,KAAA;YACtC,GAAI,OAAO,OAAO,KAAA,IAAU,YAAY;gBAAC,SAAS,OAAO,KAAA;YAAK,IAAI,OAAO,KAAA,IAAS,CAAA,CAAA;QAAC;IAEvF;IACK,gBAAgB,UAAA,IACnBC,kCAA2C;IAG7C,MAAM,YAAY;QAChB,GAAG,aAAA;QACH,GAAG,eAAA;IAAA,GAEC,eAAe,UAAU,kBAAA,IAAsB,CAAC,SAAA,CAAU,wBAAwB,CAAA;IAEpF,IAAA,OAAO,UAAY,KAAa;QAC5B,MAAA,UAAU,gBAAgB,4BAA4B;QAC5D,MAAM,IAAI,MAAM,CAAA,8DAAA,EAAiE,OAAO,EAAE;IAAA;IAGxF,IAAA,gBAAgB,CAAC,UAAU,SAAA,EACvB,MAAA,IAAI,MAAM,wCAAwC;IAW1D,IARI,SAAA,CAAU,wBAAwB,CAAA,IACpCC,eAAwB,SAAS,GAG/B,OAAO,UAAU,WAAA,GAAgB,OACnC,uBAAuB,UAAU,WAAW,GAG1C,qBAAqB,WACvB,MAAM,IAAI,MACR;IAGJ,IAAI,2BAA2B,WAC7B,MAAM,IAAI,MACR;IAGA,IAAA,OAAO,UAAU,KAAA,CAAM,OAAA,IAAY,WACrC,MAAM,IAAI,MAAM,CAAA,0CAAA,EAA6C,UAAU,KAAA,CAAM,OAAO,EAAE;IAExF,IAAI,UAAU,KAAA,CAAM,OAAA,IAAW,UAAU,KAAA,CAAM,SAAA,KAAc,KAAA,GACrD,MAAA,IAAI,MAAM,4DAA4D;IAG5E,IAAA,UAAU,KAAA,CAAM,OAAA,IAChB,OAAO,UAAU,KAAA,CAAM,SAAA,IAAc,YACrC,OAAO,UAAU,KAAA,CAAM,SAAA,IAAc,YAErC,MAAM,IAAI,MACR,CAAA,yDAAA,EAA4D,UAAU,KAAA,CAAM,SAAS,EAAA;IAIzF,MAAM,YAAY,OAAO,OAAW,OAAe,OAAO,QAAA,IAAY,OAAO,QAAA,CAAS,QAAA,EAChF,cAAc,aAAa,QAAQ,OAAO,QAAA,CAAS,QAAQ,GAE3D,WAAW,CAAA,CAAQ,UAAU,KAAA;IAC/B,UAAU,eAAA,IAAmB,YAAA,CAC/BC,8BAAuC,GACvC,UAAU,eAAA,GAAkB,CAAA,CAAA,GAG1B,aAAa,eAAe,YAAY,UAAU,yBAAA,KAA8B,CAAA,IAClFC,6BACS,OAAO,UAAU,MAAA,GAAW,OACrCC,mBAGE,gBACFC,UAAmB,UAAU,SAAU,GAGrC,UAAU,OAAA,IACZC,QAAiB,UAAU,OAAO,GAGhC,sBAAsB,aAAA,CAExB,UAAU,gBAAA,GAAmB,UAAU,gBAAA,GACnCC,WAAoB,UAAU,gBAAgB,EAAE,OAAA,CAAQ,QAAQ,EAAE,IAClE,KAAA,CAAA,GAGN,UAAU,UAAA,GAAa,GAAG,UAAU,UAAU,EAAA,CAAG,OAAA,CAAQ,MAAM,EAAE,GACjE,UAAU,YAAA,GAAe,UAAU,OAAA,KAAY,cAAc,OAAA,EAEzD,UAAU,MAAA,KAAW,CAAA,KAAQ,UAAU,eAAA,IACzCC,kCAA2C,GAI7C,UAAU,MAAA,GAAS,UAAU,MAAA,KAAW,CAAA,KAAS,CAAC,UAAU,eAAA,EAE5D,mBAAmB,UAAU,UAAU;IAEvC,MAAM,YAAY,UAAU,OAAA,CAAQ,KAAA,CAAM,OAAO,CAAC,GAC5C,WAAW,SAAA,CAAU,CAAC,CAAA,EACtB,OAAO,SAAA,CAAU,CAAC,CAAA,EAClB,UAAU,UAAU,YAAA,GAAe,iBAAiB;IAE1D,OAAI,eAAA,CACF,UAAU,GAAA,GAAM,GAAG,QAAQ,CAAA,GAAA,EAAM,UAAU,SAAS,CAAA,CAAA,EAAI,IAAI,CAAA,EAAA,EAAK,UAAU,UAAU,EAAA,EACrF,UAAU,MAAA,GAAS,GAAG,QAAQ,CAAA,GAAA,EAAM,UAAU,SAAS,CAAA,CAAA,EAAI,OAAO,CAAA,EAAA,EAAK,UAAU,UAAU,EAAA,IAAA,CAE3F,UAAU,GAAA,GAAM,GAAG,UAAU,OAAO,CAAA,EAAA,EAAK,UAAU,UAAU,EAAA,EAC7D,UAAU,MAAA,GAAS,UAAU,GAAA,GAGxB;AACT;AC5JO,MAAM,8BAA8B,MAAM;IACtC,OAAO,wBAAA;AAClB;AAQO,MAAM,wBAAwB,MAAM;IAChC,OAAO,kBAAA;IACP,OAAA;IACT,YAAY,OAAA,EAAiB,MAAA,EAAiB,UAAwB,CAAA,CAAA,CAAI;QACxE,KAAA,CAAM,SAAS,OAAO,GACtB,IAAA,CAAK,MAAA,GAAS;IAAA;AAElB;AAMO,MAAM,qBAAqB,MAAM;IAC7B,OAAO,eAAA;IACP,KAAA;IACT,YAAY,OAAA,EAAiB,IAAA,CAAe;QACpC,KAAA,CAAA,OAAO,GACb,IAAA,CAAK,IAAA,GAAO;IAAA;AAEhB;AAMO,MAAM,qBAAqB,MAAM;IAC7B,OAAO,eAAA;IACP,KAAA;IACT,YAAY,OAAA,EAAiB,IAAA,EAAe,UAAwB,CAAA,CAAA,CAAI;QACtE,KAAA,CAAM,SAAS,OAAO,GACtB,IAAA,CAAK,IAAA,GAAO;IAAA;AAEhB;AAMO,MAAM,0BAA0B,MAAM;IAClC,OAAO,oBAAA;AAClB;AAYA,MAAM,kBAAkB;IAAC;IAAgB,YAAY;CAAA;AA+BrC,SAAA,mBACd,eAAA,EACA,MAAA,EACA;IACA,wJAAO,QAAA,EAAM,MAAM;QACjB,MAAM,KAAK,gBAAgB;QAC3B,wJAAO,eAAA,EAAa,EAAE,IAAI,sJAAK,KAAA,EAAG,EAAE;IAAA,CACrC,EAAE,IAAA,CAAK,4JAAA,EAAS,CAAC,KAAO,sBAAsB,IAAI,MAAM,CAAC,CAAC;AAG7D;AASA,SAAS,sBACP,EAAA,EACA,MAAA,EACA;IACO,OAAA,iJAAI,aAAA,CAA4C,CAAC,aAAa;QAC7D,MAAA,WAAY,OAAoB,QAAA,CAAS,MAAM,GAC/C,gBAAiB,OAAoB,QAAA,CAAS,WAAW;QAI/D,SAAS,QAAQ,GAAA,EAA2B;YAE1C,IAAI,UAAU,KAAK;gBACjB,MAAM,CAAC,YAAY,KAAK,CAAA,GAAI,WAAW,GAAmB;gBACjD,SAAA,KAAA,CACP,aACI,IAAI,kBAAkB,6CAA6C;oBAAC,OAAO;gBAAA,CAAM,IACjF,IAAI,aAAA,CAAc,OAAO,IAAA,EAA2B,OAAA,EAAS,KAAK;gBAExE;YAAA;YAOE,GAAG,UAAA,KAAe,GAAG,MAAA,GAEvB,SAAS,KAAA,CAAM,IAAI,sBAAsB,+BAA+B,CAAC,IAChE,iBACT,SAAS,IAAA,CAAK;gBAAC,MAAM;YAAA,CAA6B;QAAA;QAItD,SAAS,SAAS;YAEhB,SAAS,IAAA,CAAK;gBAAC,MAAM;YAAA,CAAwB;QAAA;QAG/C,SAAS,UAAU,OAAA,EAAuB;YACxC,MAAM,CAAC,YAAY,KAAK,CAAA,GAAI,WAAW,OAAO;YAC9C,IAAI,YAAY;gBACL,SAAA,KAAA,CACP,IAAI,kBAAkB,uCAAuC;oBAAC,OAAO;gBAAW,CAAA;gBAElF;YAAA;YAEE,IAAA,QAAQ,IAAA,KAAS,gBAAgB;gBAI7B,MAAA,MAAM,IAAI,IAAI,GAAG,GAAG,EAAE,YAAA,CAAa,GAAA,CAAI,KAAK;gBACzC,SAAA,KAAA,CAAM,IAAI,aAAa,oBAAoB,OAAO,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC;gBAClF;YAAA;YAEE,IAAA,QAAQ,IAAA,KAAS,cAAc;gBAIxB,SAAA,KAAA,CACP,IAAI,gBACF,CAAA,4BAAA,EACG,MAAM,IAAA,EAA4B,UAAU,eAC/C,EAAA;gBAGJ;YAAA;YAEF,SAAS,IAAA,CAAK;gBACZ,MAAM,QAAQ,IAAA;gBACd,IAAI,QAAQ,WAAA;gBACZ,GAAI,MAAM,IAAA,GAAO;oBAAC,MAAM,MAAM,IAAA;gBAAA,IAAQ,CAAA,CAAA;YAAC,CACxC;QAAA;QAGA,GAAA,gBAAA,CAAiB,SAAS,OAAO,GAEhC,YACF,GAAG,gBAAA,CAAiB,QAAQ,MAAM;QAI9B,MAAA,gBAAgB,CAAC;eAAG,aAAA,GAAA,IAAI,IAAI,CAAC;mBAAG,iBAAiB;mBAAG,MAAM;aAAC,CAAC;SAAA,CAE/D,MAAA,CAAO,CAAC,OAAS,SAAS,WAAW,SAAS,UAAU,SAAS,WAAW;QAEjE,OAAA,cAAA,OAAA,CAAQ,CAAC,OAAiB,GAAG,gBAAA,CAAiB,MAAM,SAAS,CAAC,GAErE,MAAM;YACR,GAAA,mBAAA,CAAoB,SAAS,OAAO,GACnC,YACF,GAAG,mBAAA,CAAoB,QAAQ,MAAM,GAEvC,cAAc,OAAA,CAAQ,CAAC,OAAiB,GAAG,mBAAA,CAAoB,MAAM,SAAS,CAAC,GAC/E,GAAG,KAAA,CAAM;QACX;IAAA,CACD;AACH;AAEA,SAAS,WACP,OAAA,EACoE;IAChE,IAAA;QACI,MAAA,OAAO,OAAO,QAAQ,IAAA,IAAS,YAAY,KAAK,KAAA,CAAM,QAAQ,IAAI;QACjE,OAAA;YACL;YACA;gBACE,MAAM,QAAQ,IAAA;gBACd,IAAI,QAAQ,WAAA;gBACZ,GAAI,cAAc,IAAI,IAAI,CAAA,IAAK;oBAAC;gBAAI,CAAA;YAAA;SAExC;IAAA,EAAA,OACO,KAAK;QACL,OAAA;YAAC;YAAc,IAAI;SAAA;IAAA;AAE9B;AAEA,SAAS,oBAAoB,GAAA,EAAU,GAAA,EAAqB;IAC1D,MAAM,QAAQ,IAAI,KAAA;IAEb,OAAA,QAID,kBAAkB,KAAK,IAClB,sBAAsB,OAAO,GAAG,IAGrC,MAAM,WAAA,GACD,MAAM,WAAA,GAGR,OAAO,SAAU,WAAW,QAAQ,KAAK,SAAA,CAAU,OAAO,MAAM,CAAC,IAX/D,IAAI,OAAA,IAAW;AAY1B;AAEA,SAAS,cAAc,IAAA,EAAc;IACnC,IAAA,MAAW,KAAK,KACP,OAAA,CAAA;IAEF,OAAA,CAAA;AACT;ACrQO,SAAS,aAAa,GAAA,EAAiC;IAC5D,IAAI,OAAO,OAAQ,UACV,OAAA;QAAC,IAAI;IAAG;IAGb,IAAA,MAAM,OAAA,CAAQ,GAAG,GACnB,OAAO;QAAC,OAAO;QAAkB,QAAQ;YAAC,KAAK;QAAA;IAAI;IAGjD,IAAA,OAAO,OAAQ,YAAY,QAAQ,QAAQ,WAAW,OAAO,OAAO,IAAI,KAAA,IAAU,UAC7E,OAAA,YAAY,OAAO,OAAO,IAAI,MAAA,IAAW,YAAY,IAAI,MAAA,KAAW,OACvE;QAAC,OAAO,IAAI,KAAA;QAAO,QAAQ,IAAI,MAAA;IAAA,IAC/B;QAAC,OAAO,IAAI,KAAA;IAAK;IAGvB,MAAM,gBAAgB;QACpB;QACA;QACA;KAAA,CACA,IAAA,CAAK,CAAA;AAAA,CAAI;IAEX,MAAM,IAAI,MAAM,CAAA;;AAAA,EAA0C,aAAa,EAAE;AAC3E;ACFO,MAAM,UAAU;IACX,UAAA;IACA,WAAA;IACV,YAAY,SAAA,EAA2B,aAA8B,CAAA,CAAA,CAAI;QAClE,IAAA,CAAA,SAAA,GAAY,WACjB,IAAA,CAAK,UAAA,GAAa;IAAA;IAAA;;;;;GAAA,GASpB,IAAI,KAAA,EAA2B;QACtB,OAAA,IAAA,CAAK,OAAA,CAAQ,OAAO,KAAK;IAAA;IAAA;;;;;GAAA,GASlC,aAAa,KAAA,EAA2B;QAC/B,OAAA,IAAA,CAAK,OAAA,CAAQ,gBAAgB,KAAK;IAAA;IAAA;;;;;GAAA,GAS3C,eAAe,KAAA,EAA2B;QACxC,OAAA,eAAe,kBAAkB,KAAK,GAC/B,IAAA,CAAK,OAAA,CAAQ,kBAAkB,KAAK;IAAA;IAAA;;;;;GAAA,GAS7C,MAAM,KAAA,EAAuB;QACvB,IAAA,CAAC,MAAM,OAAA,CAAQ,KAAK,GAChB,MAAA,IAAI,MAAM,qEAAqE;QAGlF,OAAA,IAAA,CAAA,UAAA,GAAa,OAAO,MAAA,CAAO,CAAC,GAAG,IAAA,CAAK,UAAA,EAAY;YAAC,OAAO;QAAK,CAAC,GAC5D,IAAA;IAAA;IAAA;;;;GAAA,GAQT,IAAI,KAAA,EAAsC;QACjC,OAAA,IAAA,CAAK,OAAA,CAAQ,OAAO,KAAK;IAAA;IAAA;;;;GAAA,GAQlC,IAAI,KAAA,EAAsC;QACjC,OAAA,IAAA,CAAK,OAAA,CAAQ,OAAO,KAAK;IAAA;IAAA;;;;;;GAAA,GAUlC,OAAO,EAAA,EAAoC,QAAA,EAAkB,KAAA,EAAoB;QAC/E,OAAA,eAAe,IAAI,UAAU,KAAK,GAC3B,IAAA,CAAK,OAAA,CAAQ,UAAU;YAAC,CAAC,EAAE,CAAA,EAAG;YAAU;QAAA,CAAM;IAAA;IAAA;;;;;GAAA,GASvD,OAAO,QAAA,EAAkB,KAAA,EAAoB;QAC3C,OAAO,IAAA,CAAK,MAAA,CAAO,SAAS,GAAG,QAAQ,CAAA,IAAA,CAAA,EAAQ,KAAK;IAAA;IAAA;;;;;GAAA,GAStD,QAAQ,QAAA,EAAkB,KAAA,EAAoB;QAC5C,OAAO,IAAA,CAAK,MAAA,CAAO,UAAU,GAAG,QAAQ,CAAA,GAAA,CAAA,EAAO,KAAK;IAAA;IAAA;;;;;;;GAAA,GAWtD,OAAO,QAAA,EAAkB,KAAA,EAAe,WAAA,EAAsB,KAAA,EAAqB;QAMjF,MAAM,SAAS,OAAO,cAAgB,OAAe,gBAAgB,CAAA,GAC/D,aAAa,QAAQ,IAAI,QAAQ,IAAI,OACrC,WAAW,SAAS,CAAA,IAAK,KAAK,GAAA,CAAI,GAAG,QAAQ,WAAW,GACxD,WAAW,aAAa,KAAK,YAAY,IAAI,KAAK,UAClD,gBAAgB,GAAG,QAAQ,CAAA,CAAA,EAAI,UAAU,CAAA,CAAA,EAAI,QAAQ,CAAA,CAAA,CAAA;QAC3D,OAAO,IAAA,CAAK,MAAA,CAAO,WAAW,eAAe,SAAS,CAAA,CAAE;IAAA;IAAA;;;;GAAA,GAQ1D,aAAa,GAAA,EAAmB;QACzB,OAAA,IAAA,CAAA,UAAA,CAAW,YAAA,GAAe,KACxB,IAAA;IAAA;IAAA;;GAAA,GAMT,YAAoC;QAC3B,OAAA;YAAC,GAAG,aAAa,IAAA,CAAK,SAAS,CAAA;YAAG,GAAG,IAAA,CAAK,UAAA;QAAU;IAAA;IAAA;;GAAA,GAM7D,SAAiC;QAC/B,OAAO,IAAA,CAAK,SAAA,CAAU;IAAA;IAAA;;GAAA,GAMxB,QAAc;QACP,OAAA,IAAA,CAAA,UAAA,GAAa,CAAA,GACX,IAAA;IAAA;IAGC,QAAQ,EAAA,EAA2B,KAAA,EAAYC,SAAQ,CAAA,CAAA,EAAY;QAC5D,OAAA,eAAA,IAAI,KAAK,GACxB,IAAA,CAAK,UAAA,GAAa,OAAO,MAAA,CAAO,CAAA,GAAI,IAAA,CAAK,UAAA,EAAY;YACnD,CAAC,EAAE,CAAA,EAAG,OAAO,MAAA,CAAO,CAAA,GAAKA,UAAS,IAAA,CAAK,UAAA,CAAW,EAAE,CAAA,IAAM,CAAA,GAAI,KAAK;QACpE,CAAA,GACM,IAAA;IAAA;IAGC,KAAK,EAAA,EAA2B,KAAA,EAAkB;QAC1D,OAAO,IAAA,CAAK,OAAA,CAAQ,IAAI,OAAO,CAAA,CAAK;IAAA;AAExC;AAGO,MAAM,wBAAwB,UAAU;KAC7C,MAAA,CAAA;IAEA,YACE,SAAA,EACA,UAAA,EACA,MAAA,CACA;QACA,KAAA,CAAM,WAAW,UAAU,GAC3B,IAAA,EAAK,MAAA,GAAU;IAAA;IAAA;;GAAA,GAMjB,QAAyB;QAChB,OAAA,IAAI,gBAAgB,IAAA,CAAK,SAAA,EAAW;YAAC,GAAG,IAAA,CAAK,UAAA;QAAA,GAAa,IAAA,EAAK,MAAO;IAAA;IAuC/E,OACE,OAAA,EAQA;QACA,IAAI,CAAC,IAAA,EAAK,MAAA,EACR,MAAM,IAAI,MACR;QAKJ,MAAM,cAAc,OAAO,IAAA,CAAK,SAAA,IAAc,UACxC,OAAO,OAAO,MAAA,CAAO;YAAC;YAAa,iBAAiB,CAAA;QAAA,GAAO,OAAO;QACjE,OAAA,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAU;YAAC,OAAO,IAAA,CAAK,SAAA;QAAW,GAAU,IAAI;IAAA;AAExE;AAGO,MAAM,cAAc,UAAU;KACnC,MAAA,CAAA;IACA,YAAY,SAAA,EAA2B,UAAA,EAA8B,MAAA,CAAuB;QAC1F,KAAA,CAAM,WAAW,UAAU,GAC3B,IAAA,EAAK,MAAA,GAAU;IAAA;IAAA;;GAAA,GAMjB,QAAe;QACN,OAAA,IAAI,MAAM,IAAA,CAAK,SAAA,EAAW;YAAC,GAAG,IAAA,CAAK,UAAA;QAAA,GAAa,IAAA,EAAK,MAAO;IAAA;IAuCrE,OACE,OAAA,EAQA;QACA,IAAI,CAAC,IAAA,EAAK,MAAA,EACR,MAAM,IAAI,MACR;QAKJ,MAAM,cAAc,OAAO,IAAA,CAAK,SAAA,IAAc,UACxC,OAAO,OAAO,MAAA,CAAO;YAAC;YAAa,iBAAiB,CAAA;QAAA,GAAO,OAAO;QACjE,OAAA,IAAA,EAAK,MAAA,CAAQ,MAAA,CAAU;YAAC,OAAO,IAAA,CAAK,SAAA;QAAW,GAAU,IAAI;IAAA;AAExE;AC7TA,MAAM,uBAAuB;IAAC,iBAAiB,CAAA;AAAK;AAG7C,MAAM,gBAAgB;IACjB,WAAA;IACA,MAAA;IACV,YAAY,aAAyB,CAAC,CAAA,EAAG,aAAA,CAAwB;QAC1D,IAAA,CAAA,UAAA,GAAa,YAClB,IAAA,CAAK,KAAA,GAAQ;IAAA;IAAA;;;;;GAAA,GAQf,OAA4D,GAAA,EAAkC;QACjF,OAAAC,eAAe,UAAU,GAAG,GAChC,IAAA,CAAK,IAAA,CAAK;YAAC,QAAQ;QAAA,CAAI;IAAA;IAAA;;;;;GAAA,GAShC,kBACE,GAAA,EACM;QACN,MAAM,KAAK;QACX,OAAAA,eAA0B,IAAI,GAAG,GACjCC,kBAA6B,IAAI,GAAG,GAC7B,IAAA,CAAK,IAAA,CAAK;YAAC,CAAC,EAAE,CAAA,EAAG;QAAA,CAAI;IAAA;IAAA;;;;;GAAA,GAS9B,gBACE,GAAA,EACM;QACN,MAAM,KAAK;QACX,OAAAD,eAA0B,IAAI,GAAG,GACjCC,kBAA6B,IAAI,GAAG,GAC7B,IAAA,CAAK,IAAA,CAAK;YAAC,CAAC,EAAE,CAAA,EAAG;QAAA,CAAI;IAAA;IAAA;;;;;GAAA,GAS9B,OAAO,UAAA,EAA0B;QAC/B,OAAAC,mBAA8B,UAAU,UAAU,GAC3C,IAAA,CAAK,IAAA,CAAK;YAAC,QAAQ;gBAAC,IAAI;YAAU;QAAA,CAAE;IAAA;IAa7C,cAAc,EAAA,EAAwC;QACpD,OAAK,KAAA,CAIL,IAAA,CAAK,KAAA,GAAQ,IACN,IAAA,IAJE,IAAA,CAAK,KAAA;IAAA;IAAA;;GAAA,GAUhB,YAAwB;QACf,OAAA,CAAC;eAAG,IAAA,CAAK,UAAU;SAAA;IAAA;IAAA;;GAAA,GAM5B,SAAqB;QACnB,OAAO,IAAA,CAAK,SAAA,CAAU;IAAA;IAAA;;GAAA,GAMxB,QAAc;QACP,OAAA,IAAA,CAAA,UAAA,GAAa,CAAA,CAAA,EACX,IAAA;IAAA;IAGC,KAAK,GAAA,EAAqB;QAC7B,OAAA,IAAA,CAAA,UAAA,CAAW,IAAA,CAAK,GAAG,GACjB,IAAA;IAAA;AAEX;AAGO,MAAM,oBAAoB,gBAAgB;IAC/C,OAAA,CAAA;IACA,YAAY,UAAA,EAAyB,MAAA,EAAuB,aAAA,CAAwB;QAClF,KAAA,CAAM,YAAY,aAAa,GAC/B,IAAA,EAAK,MAAA,GAAU;IAAA;IAAA;;GAAA,GAMjB,QAAqB;QACZ,OAAA,IAAI,YAAY,CAAC;eAAG,IAAA,CAAK,UAAU;SAAA,EAAG,IAAA,EAAK,MAAA,EAAS,IAAA,CAAK,KAAK;IAAA;IAqCvE,OACE,OAAA,EAQA;QACA,IAAI,CAAC,IAAA,EAAK,MAAA,EACR,MAAM,IAAI,MACR;QAKJ,OAAO,IAAA,EAAK,MAAA,CAAQ,MAAA,CAClB,IAAA,CAAK,SAAA,CAAU,GACf,OAAO,MAAA,CAAO;YAAC,eAAe,IAAA,CAAK,KAAA;QAAA,GAAQ,sBAAsB,WAAW,CAAE,CAAA;IAChF;IAyBF,MACE,iBAAA,EACA,QAAA,EACM;QACN,MAAM,YAAY,OAAO,YAAa,YAChC,UAAU,OAAO,qBAAsB,YAAY,6BAA6B,OAChF,sBACJ,OAAO,qBAAsB,YAAA,CAC5B,WAAW,qBAAqB,QAAQ,iBAAA;QAGvC,IAAA,SACF,OAAO,IAAA,CAAK,IAAA,CAAK;YAAC,OAAO,kBAAkB,SAAA,CAAA;QAAA,CAAY;QAIzD,IAAI,WAAW;YACP,MAAA,QAAQ,SAAS,IAAI,MAAM,mBAAmB,CAAA,GAAI,IAAA,EAAK,MAAO,CAAC;YACrE,IAAI,CAAA,CAAE,iBAAiB,KAAA,GACf,MAAA,IAAI,MAAM,oDAAoD;YAGtE,OAAO,IAAA,CAAK,IAAA,CAAK;gBAAC,OAAO,MAAM,SAAA,CAAA;YAAA,CAAY;QAAA;QAS7C,IAAI,qBAAqB;YACjB,MAAA,QAAQ,IAAI,MAAM,mBAAmB,YAAY,CAAC,GAAG,IAAA,CAAK,OAAO;YACvE,OAAO,IAAA,CAAK,IAAA,CAAK;gBAAC,OAAO,MAAM,SAAA,CAAA;YAAA,CAAY;QAAA;QAGtC,OAAA,IAAA,CAAK,IAAA,CAAK;YAAC,OAAO;gBAAC,IAAI;gBAAmB,GAAG,QAAA;YAAQ;QAAA,CAAE;IAAA;AAElE;AAGO,MAAM,8BAA8B,gBAAgB;IACzD,OAAA,CAAA;IACA,YAAY,UAAA,EAAyB,MAAA,EAAiC,aAAA,CAAwB;QAC5F,KAAA,CAAM,YAAY,aAAa,GAC/B,IAAA,EAAK,MAAA,GAAU;IAAA;IAAA;;GAAA,GAMjB,QAA+B;QACtB,OAAA,IAAI,sBAAsB,CAAC;eAAG,IAAA,CAAK,UAAU;SAAA,EAAG,IAAA,EAAK,MAAA,EAAS,IAAA,CAAK,KAAK;IAAA;IAqCjF,OACE,OAAA,EAQA;QACA,IAAI,CAAC,IAAA,EAAK,MAAA,EACR,MAAM,IAAI,MACR;QAKJ,OAAO,IAAA,EAAK,MAAA,CAAQ,MAAA,CAClB,IAAA,CAAK,SAAA,CAAU,GACf,OAAO,MAAA,CAAO;YAAC,eAAe,IAAA,CAAK,KAAA;QAAA,GAAQ,sBAAsB,WAAW,CAAE,CAAA;IAChF;IAkBF,MACE,iBAAA,EACA,QAAA,EACM;QACA,MAAA,YAAY,OAAO,YAAa;QAEpC,IAAA,OAAO,qBAAsB,YAAY,6BAA6B,iBAItE,OAAO,IAAA,CAAK,IAAA,CAAK;YAAC,OAAO,kBAAkB,SAAA,CAAA;QAAA,CAAY;QAIzD,IAAI,WAAW;YACP,MAAA,QAAQ,SAAS,IAAI,gBAAgB,mBAAmB,CAAA,GAAI,IAAA,EAAK,MAAO,CAAC;YAC/E,IAAI,CAAA,CAAE,iBAAiB,eAAA,GACf,MAAA,IAAI,MAAM,oDAAoD;YAGtE,OAAO,IAAA,CAAK,IAAA,CAAK;gBAAC,OAAO,MAAM,SAAA,CAAA;YAAA,CAAY;QAAA;QAGtC,OAAA,IAAA,CAAK,IAAA,CAAK;YAAC,OAAO;gBAAC,IAAI;gBAAmB,GAAG,QAAA;YAAQ;QAAA,CAAE;IAAA;AAElE;AC1XA,MAAM,gBAAgB;AAEf,SAAS,eAAe,MAAA,EAAa,YAAiB,CAAA,CAAA,EAAiC;IAC5F,MAAM,UAAe,CAAC;IAElB,OAAO,OAAA,IACT,OAAO,MAAA,CAAO,SAAS,OAAO,OAAO;IAGjC,MAAA,QAAQ,UAAU,KAAA,IAAS,OAAO,KAAA;IACpC,SAAA,CACF,QAAQ,aAAA,GAAgB,CAAA,OAAA,EAAU,KAAK,EAAA,GAGrC,CAAC,UAAU,YAAA,IAAgB,CAAC,OAAO,kBAAA,IAAsB,OAAO,SAAA,IAAA,CAClE,OAAA,CAAQ,aAAa,CAAA,GAAI,OAAO,SAAA;IAGlC,MAAM,kBAAkB,CACtB,CAAA,CAAA,OAAO,UAAU,eAAA,GAAoB,MACjC,OAAO,eAAA,GACP,UAAU,eAAA,GAGV,UAAU,OAAO,UAAU,OAAA,GAAY,MAAc,OAAO,OAAA,GAAU,UAAU,OAAA;IACtF,OAAO,OAAO,MAAA,CAAO,CAAC,GAAG,WAAW;QAClC,SAAS,OAAO,MAAA,CAAO,CAAA,GAAI,SAAS,UAAU,OAAA,IAAW,CAAA,CAAE;QAC3D,SAAS,OAAO,UAAY,MAAc,IAAI,KAAK,MAAO;QAC1D,OAAO,UAAU,KAAA,IAAS,OAAO,KAAA;QACjC,MAAM,CAAA;QACN;QACA,OACE,OAAO,UAAU,KAAA,IAAU,YAAY,OAAO,OAAO,KAAA,IAAU,WAC3D;YAAC,GAAG,OAAO,KAAA;YAAO,GAAG,UAAU,KAAA;QAAA,IAC/B,UAAU,KAAA,IAAS,OAAO,KAAA;IAAA,CACjC;AACH;ACtCO,MAAM,oBAAoB,CAAC,EAChC,KAAA,EACA,SAAS,CAAC,CAAA,EACV,UAAU,CAAA,CAAA,EACZ,KAIM;IACE,MAAA,eAAe,IAAI,gBAAA,GAEnB,EAAC,GAAA,EAAK,gBAAA,EAAkB,WAAA,EAAa,GAAG,KAAA,CAAA,GAAQ;IAElD,OAAK,aAAa,MAAA,CAAO,OAAO,GAAG,GACvC,aAAa,MAAA,CAAO,SAAS,KAAK;IAGlC,KAAA,MAAW,CAAC,KAAK,KAAK,CAAA,IAAK,OAAO,OAAA,CAAQ,MAAM,EAC1C,UAAU,KAAA,KAAW,aAAa,MAAA,CAAO,CAAA,CAAA,EAAI,GAAG,EAAA,EAAI,KAAK,SAAA,CAAU,KAAK,CAAC;IAG/E,KAAA,MAAW,CAAC,KAAK,KAAK,CAAA,IAAK,OAAO,OAAA,CAAQ,IAAI,EAExC,SAAO,aAAa,MAAA,CAAO,KAAK,GAAG,KAAK,EAAE;IAIhD,OAAI,gBAAgB,CAAA,KAAO,aAAa,MAAA,CAAO,eAAe,OAAO,GAGjE,qBAAqB,CAAA,KAAO,aAAa,MAAA,CAAO,oBAAoB,OAAO,GAExE,CAAA,CAAA,EAAI,YAAY,EAAA;AACzB,GCiBM,gBAAgB,CAAC,OAAY,WAE1B,UAAU,CAAA,IAAQ,KAAA,IADX,OAAO,QAAU,MAAc,WAAW,OAIpD,mBAAmB,CAAC,UAA+B,CAAA,CAAA,GAAA,CAChD;QACL,QAAQ,QAAQ,MAAA;QAChB,WAAW,CAAA;QACX,iBAAiB,cAAc,QAAQ,eAAA,EAAiB,CAAA,CAAI;QAC5D,YAAY,QAAQ,UAAA,IAAc;QAClC,uBAAuB,QAAQ,qBAAA;QAC/B,qCAAqC,QAAQ,mCAAA;IAC/C,CAAA,GAGI,aAAa,CAAC,QAAe,MAAM,IAAA,KAAS,YAC5C,UAAU,CAAC,QAAe,MAAM,IAAA,EAEhC,UAAU,CAAC,MAAa,OAC5B,KAAK,MAAA,CAAO,CAAC,SAAS,MAAA,CACpB,OAAA,CAAQ,KAAK,GAAG,CAAC,CAAA,GAAI,KACd,OAAA,GACC,aAAA,GAAA,OAAA,MAAA,CAAO,IAAI,CAAC,GAElB,oBAAoB;AAGV,SAAA,OACd,MAAA,EACA,WAAA,EACA,MAAA,EACA,KAAA,EACA,UAAa,CAAA,CAAA,EACb,UAAwB,CAAA,CAAA,EACa;IAC/B,MAAA,QACJ,WAAW,UACP;QACE,GAAI,UAAU,CAAC,CAAA;QACf,GAAI,OAAO,QAAQ,KAAA,IAAU,YAAY;YAAC,SAAS,QAAQ,KAAA;QAAK,IAAI,QAAQ,KAAA,IAAS,CAAA,CAAA;IACvF,IACA,QACA,SAAS,MAAM,OAAA,IAAU,0LAAA,EAAW,OAAO,IAAI,SAC/C,cACJ,QAAQ,cAAA,KAAmB,CAAA,IAAQ,CAAC,MAAa,MAAM,CAAC,MAAa,IAAI,MAAA,EAErE,EAAC,KAAA,EAAO,IAAA,EAAM,GAAG,MAAA,GAAQ;QAAA,8EAAA;QAAA,2FAAA;QAG7B,gBAAgB,OAAO,QAAQ,MAAA,GAAW;QAAA,8EAAA;QAE1C,iBAAiB,MAAM,OAAA,GAAU,yBAAyB,QAAQ,eAAA;QAClE,GAAG,OAAA;QAAA,0EAAA;QAAA,+FAAA;QAGH,aAAa,QAAQ,cAAA,KAAmB,CAAA,KAAS,QAAQ,WAAA,KAAgB,CAAA;IAC3E,GACM,UACJ,OAAO,QAAU,OAAe,OAAO,OAAS,MAC5C;QAAC,GAAG,IAAA;QAAM,OAAO;YAAC;YAAO;QAAK;IAAA,IAC9B,MAEA,WAAW,aAAa,QAAQ,aAAa,SAAS;QAAC;QAAO;IAAM,GAAG,OAAO;IAC7E,OAAA,MAAM,OAAA,GACT,SAAS,IAAA,+JACP,oBAAA,MACE,oJAAA,EACE,OAAO,sCAA+B,0HAAE,IAAA,CAAA,SAAA,CAAA,EAAA;QAAA,OAAA,EAAA,sBAAA;IAAA,CAAA,EAAA,IAAA,CACtC,CAAC,EAAC,oBAAA,CAAA,CAAA,GAA0B,0BAIlC,mKAAA,EACE,CAAC,CAAC,KAAK,oBAAoB,CAAA,KAGrB;QACJ,MAAM,SAAS,qBAAqB,IAAI,MAAA,EAAQ,IAAI,eAAA,EAAiB,KAAK;QAC1E,OAAO,YAAY;YAAC,GAAG,GAAA;YAAK;QAAA,CAAO;IAAA,MAIzC,SAAS,IAAA,+JAAK,MAAA,EAAI,WAAW,CAAC;AACpC;AAiBO,SAAS,aACd,MAAA,EACA,WAAA,EACA,EAAA,EACA,OAA+F,CAAA,CAAA,EAC9B;IAyBjE,MAAM,QAAA,CAxBW,MAAM;QACrB,IAAI,CAAC,KAAK,SAAA,EACD,OAAA;QAGH,MAAA,+LAAY,mBAAA,EAAiB,EAAE;QACrC,IAAI,CAAC,WAAW;YACd,IAAI,+LAAA,EAAU,EAAE,GACd,MAAM,IAAI,MACR,CAAA,mBAAA,EAAsB,EAAE,CAAA,sDAAA,EAAyD,KAAK,SAAS,CAAA,EAAA,CAAA;YAI5F,OAAA,kMAAA,EAAa,IAAI,KAAK,SAAS;QAAA;QAGxC,IAAI,cAAc,KAAK,SAAA,EACrB,MAAM,IAAI,MACR,CAAA,mBAAA,EAAsB,EAAE,CAAA,8BAAA,EAAiC,SAAS,CAAA,0EAAA,EAA6E,KAAK,SAAS,CAAA,GAAA,CAAA;QAI1J,OAAA;IACT,CAAA,EAAA,GAGM,UAAU;QACd,KAAK,YAAY,QAAQ,OAAO,KAAK;QACrC,MAAM,CAAA;QACN,KAAK,KAAK,GAAA;QACV,QAAQ,KAAK,MAAA;QACb,OACE,KAAK,kBAAA,KAAuB,KAAA,IACxB;YAAC,oBAAoB,KAAK,kBAAA;QAAA,IAC1B,KAAA;IACR;IACO,OAAA,mBACL,QACA,aACA,SACA,IAAA,+JACA,SAAA,EAAO,UAAU,OACjB,gKAAA,EAAI,CAAC,UAAU;QACP,MAAA,YAAY,MAAM,IAAA,CAAK,SAAA;QACxB,OAAA,YAGE,KAAK,kBAAA,GAAqB,YAAY,SAAA,CAAU,CAAC,CAAA,GAF/C,KAAK,kBAAA,GAAqB,CAAA,CAAA,GAAK,KAAA;IAGzC,CAAA;AAEL;AAGO,SAAS,cACd,MAAA,EACA,WAAA,EACA,GAAA,EACA,OAA6C,CAAA,CAAA,EACH;IAC1C,MAAM,UAAU;QACd,KAAK,YAAY,QAAQ,OAAO,IAAI,IAAA,CAAK,GAAG,CAAC;QAC7C,MAAM,CAAA;QACN,KAAK,KAAK,GAAA;QACV,QAAQ,KAAK,MAAA;IACf;IACA,OAAO,mBAAiD,QAAQ,aAAa,OAAO,EAAE,IAAA,+JACpF,SAAA,EAAO,UAAU,iKACjB,MAAA,EAAI,CAAC,UAAe;QACZ,MAAA,UAAU,QAAQ,MAAM,IAAA,CAAK,SAAA,IAAa,CAAA,CAAA,EAAI,CAAC,MAAa,IAAI,GAAG;QACzE,OAAO,IAAI,GAAA,CAAI,CAAC,KAAO,OAAA,CAAQ,EAAE,CAAA,IAAK,IAAI;IAC3C,CAAA;AAEL;AAGO,SAAS,qBACd,MAAA,EACA,WAAA,EACA,SAAA,EACA,OAA4B,CAAA,CAAA,EACuB;IAC5C,OAAA,aACL,QACA,aACA,SACA;QACE,OAAO;QACP,QAAQ;YACN;QAAA;IAEJ,GACA;AAEJ;AAGO,SAAS,mBACd,MAAA,EACA,WAAA,EACA,GAAA,EACA,OAAA,EAQA;IACW,OAAAD,kBAAkB,qBAAqB,GAAG,GAC9C,QAAW,QAAQ,aAAa,KAAK,qBAAqB,OAAO;AAC1E;AAGO,SAAS,iBACd,MAAA,EACA,WAAA,EACA,GAAA,EACA,OAAA,EAQA;IACW,OAAAA,kBAAkB,mBAAmB,GAAG,GAC5C,QAAW,QAAQ,aAAa,KAAK,mBAAmB,OAAO;AACxE;AAGO,SAAS,eACd,MAAA,EACA,WAAA,EACA,GAAA,EACA,WAAA,EACA,OAAA,EACgC;IAChC,OAAAA,kBAA6B,iBAAiB,GAAG,GACjDE,oBAA+B,iBAAiB,GAAG,GACnD,oCAQO,GAAA,QAAQ,QAAQ,aAN0B;QAC/C,YAAY;QACZ;QACA,UAAU;IAAA,GAG6C,OAAO;AAClE;AAGO,SAAS,uBACd,MAAA,EACA,WAAA,EACA,WAAA,EACA,MAAA,EACA,SAAA,EACA,gBAAA,EACA,OAAA,EACgC;IAChC,IAAI,CAAC,QACG,MAAA,IAAI,MAAM,oEAAoE;IAGtF,IAAI,CAAC,aACG,MAAA,IAAI,MAAM,oEAAoE;IAGtFD,mBAA8B,iBAAiB,MAAM,GACrDA,mBAA8B,iBAAiB,WAAW;IAE1D,MAAM,sBAA2C;QAC/C,YAAY;QACZ;QACA;QACA,WAAW,+LAAY,eAAA,EAAa,aAAa,SAAS,uLAAI,aAAA,EAAW,WAAW;QACpF;IACF;IAEA,OAAO,QAAQ,QAAQ,aAAa,qBAAqB,OAAO;AAClE;AAGO,SAAS,QACd,MAAA,EACA,WAAA,EACA,SAAA,EACA,OAAA,EAQA;IACO,OAAA,aACL,QACA,aACA,UACA;QAAC,WAAW;YAAC;gBAAC,QAAQ,aAAa,SAAS;YAAC,CAAC;SAAA;IAAC,GAC/C;AAEJ;AAGO,SAAS,gBACd,MAAA,EACA,WAAA,EACA,SAAA,EACA,QAAiB,CAAA,CAAA,EACjB,OAAA,EACgC;IAOzB,OAAA,QAAQ,QAAQ,aAN4B;QACjD,YAAY;QACZ;QACA;IAAA,GAGwD,OAAO;AACnE;AAGO,SAAS,gBACd,MAAA,EACA,WAAA,EACA,GAAA,EACA,OAAA,EACgC;IACrB,OAAAD,kBAAkB,kBAAkB,GAAG,GAClDE,oBAA+B,kBAAkB,GAAG,GAO7C,QAAQ,QAAQ,aAL4B;QACjD,YAAY;QACZ,UAAU;IAAA,GAG8C,OAAO;AACnE;AAGO,SAAS,kBACd,MAAA,EACA,WAAA,EACA,SAAA,EACA,WAAA,EACA,OAAA,EACgC;IAOzB,OAAA,QAAQ,QAAQ,aANgC;QACrD,YAAY;QACZ;QACA;IAAA,GAG0D,OAAO;AACrE;AAGO,SAAS,QACd,MAAA,EACA,WAAA,EACA,SAAA,EACA,OAAA,EAQA;IACI,IAAA;IACA,qBAAqB,SAAS,qBAAqB,kBACrD,MAAM;QAAC,OAAO,UAAU,SAAA;IAAA,IACf,qBAAqB,eAAe,qBAAqB,wBAClE,MAAM,UAAU,SAAA,CAAA,IAEhB,MAAM;IAGR,MAAM,OAAO,MAAM,OAAA,CAAQ,GAAG,IAAI,MAAM;QAAC,GAAG;KAAA,EACtC,gBAAiB,WAAW,QAAQ,aAAA,IAAkB,KAAA;IACrD,OAAA,aAAa,QAAQ,aAAa,UAAU;QAAC,WAAW;QAAM;IAAa,GAAG,OAAO;AAC9F;AAKO,SAAS,QACd,MAAA,EACA,WAAA,EACA,OAAA,EACA,OAAA,EACuD;IACjD,MAAA,OAAO,MAAM,OAAA,CAAQ,OAAO,IAAI,UAAU;QAAC,OAAO;KAAA,EAClD,gBAAiB,WAAW,QAAQ,aAAA,IAAkB,KAAA,GACtD,sCACH,WAAW,QAAQ,mCAAA,IAAwC,KAAA,GACxD,SAAU,WAAW,QAAQ,MAAA,IAAW,KAAA;IAEvC,OAAA,aACL,QACA,aACA,WACA;QAAC,SAAS;QAAM;QAAe;QAAqC;IAAM,GAC1E;AAEJ;AAKO,SAAS,aACd,MAAA,EACA,WAAA,EACA,QAAA,EACA,IAAA,EACA,UAAe,CAAA,CAAA,EACV;IACC,MAAA,aAAa,aAAa,UAC1B,WAAW,aAAa,WACxBd,WAAU,aAAa,SAIvB,WAAW,cAAc,WAAW,KAAK,kBAAkB,IAAI,GAC/D,SAAS,CAAC,cAAc,CAAC,YAAY,SAAS,MAAA,GAAS,mBACvD,cAAc,SAAS,WAAW,IAClC,cAAc,QAAQ,WAAA,EACtB,EAAC,OAAA,EAAS,KAAA,EAAO,GAAA,EAAK,OAAA,EAAS,WAAA,EAAa,eAAA,EAAiB,SAAA,EAAA,GAAa,SAE1E,MAAM,YAAY,QAAQ,UAAU,WAAW,GAE/C,aAAa;QACjB,QAAQ,SAAS,QAAQ;QACzB;QACA,MAAM,CAAA;QACN,MAAM,SAAS,KAAA,IAAY;QAC3B,OAAO,cAAc,iBAAiB,OAAO;QAC7C;QACA;QACA;QACA;QACA;QACA,aAAa,QAAQ,WAAA;QACrB,iBAAiB,QAAQ,eAAA;QACzB,iBAAiB,MAAM,OAAA,CAAQ,eAAe,IAAI,eAAA,CAAgB,CAAC,CAAA,GAAI;QACvE;QACA,WAAWA;QACX,QAAQ,QAAQ,MAAA;QAChB,OAAO,QAAQ,KAAA;QACf,gBAAgB,QAAQ,cAAA;QACxB,QAAQ,QAAQ,MAAA;IAClB;IAEA,OAAO,mBAAmB,QAAQ,aAAa,UAAU,EAAE,IAAA,8JACzD,UAAA,EAAO,UAAU,iKACjB,MAAA,EAAI,OAAO,iKACX,MAAA,EAAI,CAAC,QAAQ;QACX,IAAI,CAAC,YACI,OAAA;QAIH,MAAA,UAAU,IAAI,OAAA,IAAW,CAAC,CAAA;QAChC,IAAI,QAAQ,eAAA,EACV,OAAO,cACH,OAAA,CAAQ,CAAC,CAAA,IAAK,OAAA,CAAQ,CAAC,CAAA,CAAE,QAAA,GACzB,QAAQ,GAAA,CAAI,CAAC,MAAa,IAAI,QAAQ;QAI5C,MAAM,MAAM,cAAc,eAAe,eACnC,MAAM,cAAc,OAAA,CAAQ,CAAC,CAAA,IAAK,OAAA,CAAQ,CAAC,CAAA,CAAE,EAAA,GAAK,QAAQ,GAAA,CAAI,CAAC,MAAa,IAAI,EAAE;QACjF,OAAA;YACL,eAAe,IAAI,aAAA;YACnB;YACA,CAAC,GAAG,CAAA,EAAG;QACT;IACD,CAAA;AAEL;AAKO,SAAS,QACd,MAAA,EACA,WAAA,EACA,GAAA,EACA,EAAA,EACA,UAAe,CAAA,CAAA,EAGf;IACA,MAAM,WAAW;QAAC,CAAC,EAAE,CAAA,EAAG;IAAA,GAClB,OAAO,OAAO,MAAA,CAAO;QAAC,aAAa,CAAA;QAAM,iBAAiB,CAAA;IAAA,GAAO,OAAO;IACvE,OAAA,aAAa,QAAQ,aAAa,UAAU;QAAC,WAAW;YAAC,QAAQ;SAAA;IAAC,GAAG,IAAI;AAClF;AAEA,MAAM,gBAAgB,CAAC,SACpB,OAAO,MAAA,CAAA,EAAS,OAAA,KAAY,KAAA,KAAa,OAAO,MAAA,GAAS,SAAA,KAAc,KAAA,KACxE,OAAO,MAAA,CAAO,CAAA,CAAE,wBAAwB,CAAA,KAAM,KAAA,GAE1C,UAAU,CAAC,QAAgB,MAC/B,cAAc,MAAM,KAAK,IAAI,UAAA,CAAW,YAAY,QAAQ,OAAO,CAAC,GAEhE,WAAW,CAAC,QAAgB,MAChC,cAAc,MAAM,KAAK,IAAI,UAAA,CAAW,YAAY,QAAQ,QAAQ,CAAC,GAEjE,QAAQ,CAAC,QAAgB,MAC7B,cAAc,MAAM,KAAK,IAAI,UAAA,CAAW,YAAY,QAAQ,OAAO,EAAE,CAAC,GAElE,aAAa,CAAC,QAAgB,MAClC,cAAc,MAAM,KAAK,IAAI,UAAA,CAAW,YAAY,QAAQ,QAAQ,CAAC,GAEjE,YAAY,CAAC,QAAgB,MACjC,cAAc,MAAM,KAAK,IAAI,UAAA,CAAW,YAAY,QAAQ,WAAW,EAAE,CAAC,GAEtE,SAAS,CAAC,QAAgB,MAC9B,IAAI,UAAA,CAAW,QAAQ,KACvB,QAAQ,QAAQ,GAAG,KACnB,SAAS,QAAQ,GAAG,KACpB,MAAM,QAAQ,GAAG,KACjB,WAAW,QAAQ,GAAG,KACtB,UAAU,QAAQ,GAAG;AAKP,SAAA,mBACd,MAAA,EACA,WAAA,EACA,OAAA,EACiC;IACjC,MAAM,MAAM,QAAQ,GAAA,IAAQ,QAAQ,GAAA,EAC9B,SAAS,OAAO,MAAA,CAAA,GAIhB,YACJ,OAAO,QAAQ,SAAA,GAAc,MACzB;QAAC;QAAO,MAAM;KAAA,CAAE,OAAA,CAAQ,QAAQ,MAAA,IAAU,KAAK,KAAK,KAAK,OAAO,QAAQ,GAAG,IAC3E,QAAQ,SAAA;IAEd,IAAI,SAAA,CAAU,QAAQ,MAAA,IAAU,OAAO,MAAA,KAAW;IAElD,MAAM,MACJ,QAAQ,GAAA,IAAO,OAAO,gBAAA,GAClB;QAAC,OAAO,gBAAA;QAAkB,QAAQ,GAAG;KAAA,CAAE,IAAA,CAAK,GAAG,IAC/C,QAAQ,GAAA,IAAO,OAAO,gBAAA;IAO5B,IALI,OAAO,QAAQ,GAAA,KAAQ,QAAA,CACzB,QAAQ,KAAA,GAAQ;QAAC,KAAKQ,WAAoB,GAAG;QAAG,GAAG,QAAQ,KAAA;IAAA,CAAA,GAIzD;QAAC;QAAO;QAAQ,MAAM;KAAA,CAAE,OAAA,CAAQ,QAAQ,MAAA,IAAU,KAAK,KAAK,KAAK,QAAQ,QAAQ,GAAG,GAAG;QACnF,MAAA,kBAAkB,QAAQ,eAAA,IAAmB,OAAO,eAAA;QACtD,oBAAoB,KAAA,KAAa,oBAAoB,CAAA,KAAA,CACvD,QAAQ,KAAA,GAAQ;YAAC;YAAiB,GAAG,QAAQ,KAAA;QAAA,CAAA;QAEzC,MAAA,oBAAoB,QAAQ,WAAA,IAAe,OAAO,WAAA;QACpD,OAAO,oBAAsB,OAAA,CAC3B,sBAAsB,mBACxB,wCAEF,uBAAuB,iBAAiB,GACxC,QAAQ,KAAA,GAAQ;YACd,aAAa,MAAM,OAAA,CAAQ,iBAAiB,IACxC,kBAAkB,IAAA,CAAK,GAAG,IAC1B;YACJ,GAAG,QAAQ,KAAA;QAAA,GAAA,CAIT,MAAM,OAAA,CAAQ,iBAAiB,KAAK,kBAAkB,MAAA,GAAS,KAAA,qEAAA;QAE/D,sBAAsB,mBACtB,sBAAsB,QAAA,KACxB,UAAA,CAEA,SAAS,CAAA,GACT,6BAIA,CAAA,CAAA,GAAA,QAAQ,eAAA,IAAA,CACV,QAAQ,KAAA,GAAQ;YAAC,GAAG,QAAQ,KAAA;YAAO,iBAAiB,QAAQ,eAAA;QAAA,CAAA,GAG1D,QAAQ,WAAA,KAAgB,CAAA,KAAA,CAC1B,QAAQ,KAAA,GAAQ;YAAC,aAAa;YAAS,GAAG,QAAQ,KAAA;QAAA,CAAA,GAGhD,UAAU,QAAQ,SAAA,IAAa,aAAA,CACjC,QAAQ,KAAA,GAAQ;YAAC,WAAW;YAAW,GAAG,QAAQ,KAAA;QAAA,CAAA;IAAK;IAI3D,MAAM,aAAa,eACjB,QACA,OAAO,MAAA,CAAO,CAAC,GAAG,SAAS;QACzB,KAAK,QAAQ,QAAQ,KAAK,MAAM;IACjC,CAAA,IAGG,UAAU,iJAAI,aAAA,CAAgC,CAAC,aACnD,YAAY,YAAY,OAAO,SAAU,EAAE,SAAA,CAAU,UAAU;IAG1D,OAAA,QAAQ,MAAA,GAAS,QAAQ,IAAA,CAAK,iBAAiB,QAAQ,MAAM,CAAC,IAAI;AAC3E;AAKgB,SAAA,SAAY,MAAA,EAAgB,WAAA,EAA0B,OAAA,EAA6B;IAMjG,OALmB,mBAAsB,QAAQ,aAAa,OAAO,EAAE,IAAA,+JACrE,SAAA,EAAO,CAAC,QAAe,MAAM,IAAA,KAAS,UAAU,iKAChD,MAAA,EAAI,CAAC,QAAe,MAAM,IAAI;AAIlC;AAKgB,SAAA,YAAY,MAAA,EAAgB,SAAA,EAAmB,IAAA,EAAuB;IAC9E,MAAA,SAAS,OAAO,MAAA,CAAO;IACzB,IAAA,MAAA,CAAO,wBAAwB,CAAA,EAAG;QACpCO,eAA0B,MAAM;QAC1B,MAAA,eAAe,iBAAiB,MAAM,GACtCC,OAAM,SAAS,KAAA,IAAY,GAAG,SAAS,CAAA,CAAA,EAAI,IAAI,EAAA,GAAK;QAC1D,OAAO,GAAG,YAAY,CAAA,CAAA,EAAIA,IAAG,EAAA,CAAG,OAAA,CAAQ,YAAY,IAAI;IAAA;IAEpD,MAAA,UAAUC,WAAsB,MAAM,GACtC,UAAU,CAAA,CAAA,EAAI,SAAS,CAAA,CAAA,EAAI,OAAO,EAAA;IAExC,OAAO,CAAA,KAAA,EADK,SAAS,KAAA,IAAY,GAAG,OAAO,CAAA,CAAA,EAAI,IAAI,EAAA,GAAK,OACtC,EAAA,CAAG,OAAA,CAAQ,YAAY,IAAI;AAC/C;AAKO,SAAS,QAAQ,MAAA,EAAgB,GAAA,EAAa,YAAY,CAAA,CAAA,EAAe;IAC9E,MAAM,EAAC,GAAA,EAAK,MAAA,EAAA,GAAU,OAAO,MAAA,CAAO;IAE7B,OAAA,GADM,YAAY,SAAS,GACpB,CAAA,CAAA,EAAI,IAAI,OAAA,CAAQ,OAAO,EAAE,CAAC,EAAA;AAC1C;AAKA,SAAS,iBAAoB,MAAA,EAAkD;IAC7E,OAAO,CAAC,QACC,iJAAI,aAAA,CAAW,CAAC,aAAa;YAClC,MAAM,QAAQ,IAAM,SAAS,KAAA,CAAM,kBAAkB,MAAM,CAAC;YAExD,IAAA,UAAU,OAAO,OAAA,EAAS;gBACtB,MAAA;gBACN;YAAA;YAEI,MAAA,eAAe,MAAM,SAAA,CAAU,QAAQ;YAC7C,OAAA,OAAO,gBAAA,CAAiB,SAAS,KAAK,GAC/B,MAAM;gBACX,OAAO,mBAAA,CAAoB,SAAS,KAAK,GACzC,aAAa,WAAA,CAAY;YAC3B;QAAA,CACD;AAEL;AAGA,MAAM,0BAA0B,CAAA,CAAQ,WAAW,YAAA;AAQnD,SAAS,kBAAkB,MAAA,EAAsB;IAK3C,IAAA,yBACF,OAAO,IAAI,aAAa,QAAQ,UAAU,8BAA8B,YAAY;IAItF,MAAM,QAAQ,IAAI,MAAM,QAAQ,UAAU,4BAA4B;IACtE,OAAA,MAAM,IAAA,GAAO,cAEN;AACT;AAEA,MAAM,mBAAmB,CAAC,WAA4C;IAChE,IAAA,CAAC,MAAA,CAAO,wBAAwB,CAAA,EAC5B,MAAA,IAAI,MAAM,yDAAyD;IAE3E,MAAM,EAAC,IAAA,EAAM,EAAA,EAAA,GAAM,MAAA,CAAO,wBAAwB,CAAA;IAElD,OAAQ,MAAM;QACZ,KAAK;YAAW;gBACR,MAAA,WAAW,GAAG,KAAA,CAAM,GAAG;gBAC7B,IAAI,SAAS,MAAA,KAAW,GAChB,MAAA,IAAI,MAAM,oDAAoD;gBAEtE,OAAO,CAAA,UAAA,EAAa,QAAA,CAAS,CAAC,CAAC,CAAA,UAAA,EAAa,QAAA,CAAS,CAAC,CAAC,EAAA;YAAA;QAEzD,KAAK;YACH,OAAO,CAAA,UAAA,EAAa,EAAE,EAAA;QAExB,KAAK;YACH,OAAO,CAAA,iBAAA,EAAoB,EAAE,EAAA;QAE/B,KAAK;YACH,OAAO,CAAA,YAAA,EAAe,EAAE,EAAA;QAE1B;YAEE,MAAM,IAAI,MAAM,CAAA,2BAAA,EAA8B,KAAK,QAAA,CAAU,CAAA,EAAE;IAAA;AAErE;AC/egB,SAAA,UACd,MAAA,EACA,WAAA,EACA,OAAA,EAKA;IACA,MAAMC,WAAU,WAAW,OAAO,MAAA,CAAA,CAAQ;IACnC,OAAA,SAAS,QAAQ,aAAa;QACnC,QAAQ;QACR,KAAK,CAAA,uBAAA,EAA0BA,QAAO,EAAA;QACtC,MAAM;IAAA,CACP;AACH;AC3LgB,SAAA,OACd,MAAA,EACA,WAAA,EACA,OAAA,EAKA;IACA,MAAMA,WAAU,WAAW,OAAO,MAAA,CAAA,CAAQ;IACnC,OAAA,SAAS,QAAQ,aAAa;QACnC,QAAQ;QACR,KAAK,CAAA,oBAAA,EAAuBA,QAAO,EAAA;QACnC,MAAM;IAAA,CACP;AACH;ACRgB,SAAA,QACd,MAAA,EACA,WAAA,EACA,OAAA,EACgF;IAChF,MAAMA,WAAU,WAAW,OAAO,MAAA,CAAA,CAAQ;IACnC,OAAA,SAAS,QAAQ,aAAa;QACnC,QAAQ;QACR,KAAK,CAAA,qBAAA,EAAwBA,QAAO,EAAA;QACpC,MAAM;IAAA,CACP;AACH;AC6LgB,SAAA,WACd,MAAA,EACA,WAAA,EACA,OAAA,EAKA;IACA,MAAMA,WAAU,WAAW,OAAO,MAAA,CAAA,CAAQ;IACnC,OAAA,SAAS,QAAQ,aAAa;QACnC,QAAQ;QACR,KAAK,CAAA,wBAAA,EAA2BA,QAAO,EAAA;QACvC,MAAM;IAAA,CACP;AACH;AC9LgB,SAAA,WACd,MAAA,EACA,WAAA,EACA,OAAA,EAKA;IACA,MAAMA,WAAU,WAAW,OAAO,MAAA,CAAA,CAAQ;IACnC,OAAA,SAAS,QAAQ,aAAa;QACnC,QAAQ;QACR,KAAK,CAAA,wBAAA,EAA2BA,QAAO,EAAA;QACvC,MAAM;IAAA,CACP;AACH;AC5JO,MAAM,6BAA6B;KACxC,MAAA,CAAA;KACA,WAAA,CAAA;IACA,YAAY,MAAA,EAAgC,WAAA,CAA0B;QAC/D,IAAA,CAAA,OAAA,GAAU,QACf,IAAA,EAAK,WAAA,GAAe;IAAA;IAAA;;;GAAA,GAOtB,SACE,OAAA,EAKA;QACA,OAAO,UAAU,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,OAAO;IAAA;IAAA;;;GAAA,GAO3D,UACE,OAAA,EAKA;QACA,OAAO,WAAW,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,OAAO;IAAA;IAAA;;;GAAA,GAO5D,UACE,OAAA,EAKA;QACA,OAAO,WAAW,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,OAAO;IAAA;AAE9D;AAGO,MAAM,mBAAmB;KAC9B,MAAA,CAAA;KACA,WAAA,CAAA;IACA,YAAY,MAAA,EAAsB,WAAA,CAA0B;QACrD,IAAA,EAAA,MAAA,GAAU,QACf,IAAA,EAAK,WAAA,GAAe;IAAA;IAAA;;;GAAA,GAOtB,SACE,OAAA,EAKA;QACA,wJAAO,gBAAA,EAAc,UAAU,IAAA,CAAK,OAAA,EAAS,IAAA,EAAK,WAAA,EAAc,OAAO,CAAC;IAAA;IAAA;;;GAAA,GAO1E,UACE,OAAA,EAKA;QACA,wJAAO,gBAAA,EAAc,WAAW,IAAA,CAAK,OAAA,EAAS,IAAA,EAAK,WAAA,EAAc,OAAO,CAAC;IAAA;IAAA;;;GAAA,GAO3E,UACE,OAAA,EAKA;QACA,OAAO,iKAAA,EAAc,WAAW,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,OAAO,CAAC;IAAA;IAAA;;;GAAA,GAO3E,OACE,OAAA,EAC6E;QAC7E,wJAAO,gBAAA,EAAc,QAAQ,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,OAAO,CAAC;IAAA;IAAA;;;;GAAA,GAQxE,MACE,OAAA,EAKA;QACA,wJAAO,gBAAA,EAAc,OAAO,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,OAAO,CAAC;IAAA;AAEzE;ACtHO,MAAM,uBAAuB;KAClC,MAAA,CAAA;KACA,WAAA,CAAA;IACA,YAAY,MAAA,EAAgC,WAAA,CAA0B;QAC/D,IAAA,CAAA,OAAA,GAAU,QACf,IAAA,EAAK,WAAA,GAAe;IAAA;IAwCtB,OACE,SAAA,EACA,IAAA,EACA,OAAA,EAC0F;QAC1F,OAAO,QAAQ,IAAA,EAAK,MAAA,EAAS,IAAA,CAAK,YAAA,EAAc,WAAW,MAAM,OAAO;IAAA;AAE5E;AAGO,MAAM,aAAa;KACxB,MAAA,CAAA;KACA,WAAA,CAAA;IACA,YAAY,MAAA,EAAsB,WAAA,CAA0B;QACrD,IAAA,EAAA,MAAA,GAAU,QACf,IAAA,EAAK,WAAA,GAAe;IAAA;IAuCtB,OACE,SAAA,EACA,IAAA,EACA,OAAA,EACyD;QACnD,MAAAC,cAAa,QAAQ,IAAA,EAAK,MAAA,EAAS,IAAA,CAAK,YAAA,EAAc,WAAW,MAAM,OAAO;QAC7E,wJAAA,gBAAA,EACLA,YAAW,IAAA,+JACT,SAAA,EAAO,CAAC,QAAe,MAAM,IAAA,KAAS,UAAU,GAChD,oKAAA,EACE,CAAC,QACE,MACE,IAAA,CAAK,QAAA;IAGhB;AAEJ;AAEA,SAAS,QACP,MAAA,EACA,WAAA,EACA,SAAA,EACA,IAAA,EACA,OAA2B,CAAA,CAAA,EAC+D;IAC1FC,kBAA6B,SAAS;IAGlC,IAAA,OAAO,KAAK,OAAA,IAAW,KAAA;IACvB,QAAQ,CAAC,KAAK,MAAA,IAAA,CAChB,OAAO;QAAC,MAAM;KAAA;IAGhB,MAAM,SAAS,OAAO,MAAA,IAChB,UAAU,gBAAgB,MAAM,IAAI,GACpC,EAAC,GAAA,EAAK,KAAA,EAAO,KAAA,EAAO,WAAA,EAAa,UAAA,EAAY,QAAA,EAAU,MAAA,CAAM,CAAA,GAAI,SACjE,QAAa;QACjB;QACA;QACA;QACA;QACA;QACA;IACF;IACA,OAAI,UAAA,CACF,MAAM,QAAA,GAAW,OAAO,EAAA,EACxB,MAAM,UAAA,GAAa,OAAO,IAAA,EAC1B,MAAM,SAAA,GAAY,OAAO,GAAA,GAGpB,mBAAmB,QAAQ,aAAa;QAC7C;QACA,QAAQ;QACR,SAAS,QAAQ,OAAA,IAAW;QAC5B,KAAK,oBAAoB,QAAQ,SAAS;QAC1C,SAAS,QAAQ,WAAA,GAAc;YAAC,gBAAgB,QAAQ,WAAA;QAAA,IAAe,CAAC;QACxE;QACA;IAAA,CACD;AACH;AAEA,SAAS,oBAAoB,MAAA,EAAiC,SAAA,EAAqC;IAC3F,MAAA,oBAAoB,cAAc,UAAU,WAAW;IAEzD,IAAA,MAAA,CAAO,wBAAwB,CAAA,EAAG;QACpC,MAAM,EAAC,IAAA,EAAM,EAAA,EAAA,GAAM,MAAA,CAAO,wBAAwB,CAAA;QAClD,OAAQ,MAAM;YACZ,KAAK;gBACH,MAAM,IAAI,MACR;YAGJ,KAAK;gBACI,OAAA,CAAA,UAAA,EAAa,EAAE,CAAA,QAAA,EAAW,iBAAiB,EAAA;YAEpD,KAAK;gBACH,OAAO,CAAA,iBAAA,EAAoB,EAAE,CAAA,OAAA,CAAA;YAE/B,KAAK;gBACI,OAAA,CAAA,YAAA,EAAe,EAAE,CAAA,QAAA,EAAW,iBAAiB,EAAA;YAEtD;gBAEE,MAAM,IAAI,MAAM,CAAA,2BAAA,EAA8B,KAAK,QAAA,CAAU,CAAA,EAAE;QAAA;IACnE;IAGI,MAAAF,WAAUD,WAAsB,MAAM;IACrC,OAAA,CAAA,OAAA,EAAU,iBAAiB,CAAA,CAAA,EAAIC,QAAO,EAAA;AAC/C;AAEA,SAAS,gBAAgB,IAAA,EAA2B,IAAA,EAAW;IAC7D,OAAI,OAAO,OAAS,OAAe,CAAA,CAAE,gBAAgB,IAAA,IAC5C,OAGF,OAAO,MAAA,CACZ;QACE,UAAU,KAAK,gBAAA,KAAqB,CAAA,IAAQ,KAAA,IAAY,KAAK,IAAA;QAC7D,aAAa,KAAK,IAAA;IACpB,GACA;AAEJ;AC5NA,IAAe,WAAA,CAAC,KAAUG,YACxB,OAAO,IAAA,CAAKA,SAAQ,EACjB,MAAA,CAAO,OAAO,IAAA,CAAK,GAAG,CAAC,EACvB,MAAA,CAAO,CAAC,QAAQ,OAAA,CACf,MAAA,CAAO,IAAI,CAAA,GAAI,OAAO,GAAA,CAAI,IAAI,CAAA,GAAM,MAAcA,SAAAA,CAAS,IAAI,CAAA,GAAI,GAAA,CAAI,IAAI,CAAA,EAEpE,MAAA,GACN,CAAA,CAAS;ACPH,MAAA,OAAO,CAAC,KAAU,QAC7B,MAAM,MAAA,CAAO,CAAC,WAAgB,OAAA,CACxB,OAAO,GAAA,CAAI,IAAI,CAAA,GAAM,OAAA,CAIzB,SAAA,CAAU,IAAI,CAAA,GAAI,GAAA,CAAI,IAAI,CAAA,GACnB,SAAA,GACN,CAAA,CAAE,GCPM,uKAAsB,QAAA,EAAM,MAAM,OAAO,qBAAqB,CAAC,8GAAE,IAAA,+JAC5E,MAAA,EAAI,CAAC,EAAC,SAASC,YAAAA,CAAA,CAAA,GAAiBA,YAAuD,oJACvF,cAAA,EAAY,CAAC;ACaR,SAAS,+BAAgF;IAC9F,OAAO,SAAU,MAAA,EAAuB;QACtC,OAAO,OAAO,IAAA,kJACZ,aAAA,EAAW,CAAC,KAAK,SACX,eAAe,yKACV,SAAA,mJAAO,KAAA,EAAG;gBAAC,MAAM;YAAA,CAAqB,GAAG,yJAAA,EAAM,GAAI,EAAE,IAAA,kJAAK,WAAA,EAAS,IAAM,MAAM,CAAC,CAAC,qJAEnF,aAAA,EAAW,IAAM,GAAG,CAC5B;IAEL;AACF;ACPA,MAAM,iBAAiB,OAEjB,kBAAkB;IACtB;IACA;IACA;IACA;IACA;IACA;IACA;CACF,EAEM,iBAAiB;IACrB,eAAe,CAAA;AACjB;AA8BO,SAAS,QAEd,KAAA,EACA,MAAA,EACA,OAAsB,CAAA,CAAA,EACyB;IAC/C,MAAM,EAAC,GAAA,EAAK,KAAA,EAAO,eAAA,EAAiB,gBAAA,EAAkB,SAAS,aAAA,CAAa,CAAA,GAAI,IAAA,CAAK,MAAA,IAC/E,MAAM,KAAK,GAAA,IAAO,mBAAmB;QAAC;QAAkB,KAAK,GAAG;KAAA,CAAE,IAAA,CAAK,GAAG,IAAI,KAAK,GAAA,EACnF,UAAU;QAAC,GAAG,SAAS,MAAM,cAAc,CAAA;QAAG;IAAG,GACjD,aAAa,KAAK,SAAS,eAAe,GAC1C,KAAK,kBAAkB;QAAC;QAAO;QAAQ,SAAS;YAAC;YAAK,GAAG,UAAA;QAAU;IAAA,CAAE,GAErE,MAAM,GAAG,GAAG,GAAG,YAAY,IAAA,EAAM,UAAU,EAAE,CAAC,EAAA;IACpD,IAAI,IAAI,MAAA,GAAS,gBACf,OAAO,8JAAA,EAAW,IAAM,IAAI,MAAM,8BAA8B,CAAC;IAG7D,MAAA,YAAY,QAAQ,MAAA,GAAS,QAAQ,MAAA,GAAS;QAAC,UAAU;KAAA,EAEzD,YAAkE,CAAC;IACrE,OAAA,mBAAA,CACF,UAAU,eAAA,GAAkB,CAAA,CAAA,GAAA,CAG1B,SAAS,aAAA,KAAA,CACX,UAAU,OAAA,GAAU,CAAA,GAEhB,SAAA,CACF,UAAU,OAAA,CAAQ,aAAA,GAAgB,CAAA,OAAA,EAAU,KAAK,EAAA,GAG/C,iBACF,OAAO,MAAA,CAAO,UAAU,OAAA,EAAS,aAAa,CAAA,GAW3C,mBAPiB,IAAA,8EAAA;QAAA,CAErB,OAAO,cAAgB,OAAe,UAAU,OAAA,GAC7C,uKACA,KAAA,EAAG,WAAW,CAAA,EAChB,IAAA,CAAK,oKAAA,EAAI,CAACA,eAAgB,IAAIA,aAAY,KAAK,SAAS,CAAC,CAAC,GAEnB,SAAS,EAAE,IAAA,CACpD,6BAA6B,iKAC7B,SAAA,EAAO,CAAC,QAAU,UAAU,QAAA,CAAS,MAAM,IAAI,CAAC,iKAChD,MAAA,EACE,CAAC,QAAA,CACE;YACC,MAAM,MAAM,IAAA;YACZ,GAAI,UAAU,QAAS,MAAM,IAAA,GAAkB,CAAA,CAAA;QACjD,CAAA;AAGR;ACzFgB,SAAA,kBACd,iBAAA,EACA,MAAA,EACA;IACO,OAAA,mBACL,OAAO,qBAAsB,aACzB;QAAC,WAAW;QAAmB,GAAG,MAAA;IAAA,IAClC;AAER;AACA,SAAS,mBAAsB,MAAA,EAAiE;IAC9F,OAAO,CAAC,WAA0B;QAChC,IAAI,QACA,UAAU,CAAA;QAGd,MAAM,EAAC,SAAA,EAAW,GAAG,aAAA,GAAe,QAE9B,UAAU,OAAO,IAAA,kJACrB,MAAA,EAAI,CAAC,UAAU;YACT,OAAO,SAAA,CAAU,KAAK,KAAA,CACxB,UAAU,CAAA,GACV,SAAS,KAAA;QAAA,CAEZ,oJACD,WAAA,EAAS,MAAM;YACb,UAAU,CAAA,GACV,SAAS,KAAA;QAAA,CACV,GACD,yJAAA,EAAM,WAAW,IAEb,aAAa,iJAAI,aAAA,CAAc,CAAC,eAAe;YAC/C,WACF,WAAW,IAAA,CAAA,6FAAA;YAET,SAGJ,WAAW,QAAA,CAAS;QAAA,CACrB;QACM,uJAAA,SAAA,EAAM,SAAS,UAAU;IAClC;AACF;ACpDA,MAAM,qBAAqB;AAKpB,MAAM,WAAW;KACtB,MAAA,CAAA;IACA,YAAY,MAAA,CAA+C;QACzD,IAAA,EAAK,MAAA,GAAU;IAAA;IAAA;;GAAA,GAMjB,OAAO,EACL,gBAAgB,CAAA,CAAA,EAChB,KAAK,IAAA,EACP,GAQI,CAAA,CAAA,EAA2B;QAC7BC,cAAuB,QAAQ,IAAA,CAAK,OAAA,CAAQ,MAAA,EAAQ;QAC9C,MAAA,EACJ,WAAAzB,UAAAA,EACA,YAAY,WAAA,EACZ,KAAA,EACA,eAAA,EACA,gBAAA,EACA,SAAS,aAAA,EAAA,GACP,IAAA,EAAK,MAAA,CAAQ,MAAA,IACX,aAAa,YAAY,OAAA,CAAQ,MAAM,EAAE;QAC3C,IAAA,eAAe,OAAO,aAAa,oBACrC,MAAM,IAAI,MACR,CAAA,yCAAA,EAA4C,kBAAkB,CAAA,sCAAA,EAC9B,UAAU,CAAA,qDAAA,CAAA;QAI1C,IAAA,iBAAiB,CAAC,SAAS,CAAC,iBAC9B,MAAM,IAAI,MACR;QAGE,MAAA,OAAO,YAAY,IAAA,EAAK,MAAA,EAAS,aAAa,GAC9C,MAAM,IAAI,IAAI,IAAA,EAAK,MAAA,CAAQ,MAAA,CAAO,MAAM,CAAA,CAAK,CAAC,GAC9C,MAAM,QAAQ,mBAAmB;YAAC;YAAkB,IAAI;SAAA,CAAE,IAAA,CAAK,GAAG,IAAI;QACxE,OACF,IAAI,YAAA,CAAa,GAAA,CAAI,OAAO,GAAG,GAE7B,iBACF,IAAI,YAAA,CAAa,GAAA,CAAI,iBAAiB,MAAM;QAE9C,MAAM,YAAkE,CAAC;QACrE,iBAAiB,mBAAA,CACnB,UAAU,eAAA,GAAkB,CAAA,CAAA,GAAA,CAGzB,iBAAiB,SAAU,aAAA,KAAA,CAC9B,UAAU,OAAA,GAAU,CAAA,GAEhB,iBAAiB,SAAA,CACnB,UAAU,OAAA,CAAQ,aAAA,GAAgB,CAAA,OAAA,EAAU,KAAK,EAAA,GAG/C,iBACF,OAAO,MAAA,CAAO,UAAU,OAAA,EAAS,aAAa,CAAA;QAIlD,MAAM,MAAM,GAAG,IAAI,IAAI,CAAA,EAAA,EAAK,KAAK,SAAA,CAAU,SAAS,CAAC,EAAA,EAC/C,WAAW,YAAY,GAAA,CAAI,GAAG;QAEhC,IAAA,UACK,OAAA;QAUT,MAAM,SAAS,mBAPS,IAAA,8EAAA;YAAA,CAErB,OAAO,cAAgB,OAAe,UAAU,OAAA,GAC7C,uKACA,KAAA,EAAG,WAAW,CAAA,EAChB,IAAA,+JAAK,MAAA,EAAI,CAACwB,eAAgB,IAAIA,aAAY,IAAI,IAAA,EAAM,SAAS,CAAC,CAAC,GAEhB;YACjD;YACA;YACA;YACA;YACA;SACD,GAEK,YAAY,gBAAgB,KAAK;YACrC,QAAQ;YACR,MAAM;YACN,aAAa,UAAU,eAAA,GAAkB,YAAY;YACrD,SAAS,UAAU,OAAA;QACpB,CAAA,EAAE,IAAA,kJACD,aAAA,EAAW,MAAM;YAEf,MAAM,IAAI,gBAAgB;gBAAC,WAAAxB;YAAAA,CAAsB;QAClD,CAAA,IAGGqB,cAAa,OAChB,IAAA,CACC,6BAA6B,oJAC7B,WAAA,EAAS,CAAC,QACJ,MAAM,IAAA,KAAS,cAEV,UAAU,IAAA,kJAAK,WAAA,EAAS,qJAAM,KAAA,EAAG,KAAK,CAAC,CAAC,qJAE1C,KAAA,EAAG,KAAK,CAChB,oJACD,aAAA,EAAW,CAAC,MACH,UAAU,IAAA,CACf,4JAAA,EAAS,MAAM;gBAEP,MAAA;YACP,CAAA,mKAGL,MAAA,EAAI,CAAC,UAAU;YACT,IAAA,MAAM,IAAA,KAAS,WAAW;gBAC5B,MAAM,EAAC,IAAA,EAAM,GAAG,KAAA,CAAA,GAAQ;gBAExB,OAAO;oBAAC,GAAG,IAAA;oBAAM,MAAO,KAA2B,IAAA;gBAAI;YAAA;YAElD,OAAA;QACR,CAAA,GAEF,IAAA,+JACCK,WAAAA,EAAS,IAAM,YAAY,MAAA,CAAO,GAAG,CAAC,GACtC,kBAAkB;YAChB,WAAW,CAAC,QAAU,MAAM,IAAA,KAAS;QACtC,CAAA;QAEO,OAAA,YAAA,GAAA,CAAI,KAAKL,WAAU,GACxBA;IAAA;AAEX;AAEA,SAAS,gBAAgB,GAAA,EAAU,IAAA,EAAmB;IAC7C,OAAA,iJAAI,aAAA,CAAW,CAAC,aAAa;QAClC,MAAM,aAAa,IAAI,gBAAgB,GACjC,SAAS,WAAW,MAAA;QACpB,OAAA,MAAA,KAAK;YAAC,GAAG,IAAA;YAAM,QAAQ,WAAW,MAAA;QAAO,CAAA,EAAE,IAAA,CAC/C,CAAC,aAAa;YACZ,SAAS,IAAA,CAAK,QAAQ,GACtB,SAAS,QAAA,CAAS;QACpB,GACA,CAAC,QAAQ;YACF,OAAO,OAAA,IACV,SAAS,KAAA,CAAM,GAAG;QAAA,IAIjB,IAAM,WAAW,KAAA,CAAM;IAAA,CAC/B;AACH;AAEA,MAAM,cAAA,aAAA,GAAA,IAAkB,IAAmC;AClLpD,MAAM,yBAAyB;IACpC,OAAA,CAAA;KACA,WAAA,CAAA;IACA,YAAY,MAAA,EAAgC,WAAA,CAA0B;QAC/D,IAAA,EAAA,MAAA,GAAU,QACf,IAAA,EAAK,WAAA,GAAe;IAAA;IAAA;;;;;GAAA,GAStB,OAAO,IAAA,EAAc,OAAA,EAAmE;QACtF,OAAO,QAAyB,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,OAAO,MAAM,OAAO;IAAA;IAAA;;;;;GAAA,GASvF,KAAK,IAAA,EAAc,OAAA,EAAmE;QACpF,OAAO,QAAyB,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,SAAS,MAAM,OAAO;IAAA;IAAA;;;;GAAA,GAQzF,OAAO,IAAA,EAA2C;QAChD,OAAO,QAAyB,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,UAAU,IAAI;IAAA;IAAA;;GAAA,GAMjF,OAAqC;QACnCI,cAAuB,WAAW,IAAA,EAAK,MAAA,CAAQ,MAAA,EAAQ;QACvD,MAAM,SAAS,IAAA,EAAK,MAAA,CAAQ,MAAA,CAAO,GAC7BzB,aAAY,OAAO,SAAA;QACzB,IAAI,MAAM;QACN,OAAA,OAAO,kBAAA,KAAuB,CAAA,KAAA,CAChC,MAAM,CAAA,UAAA,EAAaA,UAAS,CAAA,SAAA,CAAA,GAGvB,SAA2B,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc;YACjE;YACA,KAAK;QAAA,CACN;IAAA;AAEL;AAGO,MAAM,eAAe;KAC1B,MAAA,CAAA;IACA,YAAA,CAAA;IACA,YAAY,MAAA,EAAsB,WAAA,CAA0B;QACrD,IAAA,EAAA,MAAA,GAAU,QACf,IAAA,CAAK,YAAA,GAAe;IAAA;IAAA;;;;;GAAA,GAStB,OAAO,IAAA,EAAc,OAAA,EAAgE;QACnF,OAAAyB,cAAuB,WAAW,IAAA,EAAK,MAAA,CAAQ,MAAA,CAAQ,CAAA,OAChD,6JAAA,EACL,QAAyB,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,OAAO,MAAM,OAAO;IAChF;IAAA;;;;;GAAA,GASF,KAAK,IAAA,EAAc,OAAA,EAAgE;QACjF,OAAAA,cAAuB,WAAW,IAAA,EAAK,MAAA,CAAQ,MAAA,CAAQ,CAAA,mJAChD,iBAAA,EACL,QAAyB,IAAA,EAAK,MAAA,EAAS,IAAA,CAAK,YAAA,EAAc,SAAS,MAAM,OAAO;IAClF;IAAA;;;;GAAA,GAQF,OAAO,IAAA,EAAwC;QAC7C,OAAAA,cAAuB,WAAW,IAAA,EAAK,MAAA,CAAQ,MAAA,CAAQ,CAAA,oJAChD,gBAAA,EAAc,QAAyB,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,UAAU,IAAI,CAAC;IAAA;IAAA;;GAAA,GAMhG,OAAkC;QAChCA,cAAuB,WAAW,IAAA,CAAK,OAAA,CAAQ,MAAA,EAAQ;QACvD,MAAM,SAAS,IAAA,EAAK,MAAA,CAAQ,MAAA,CAAO,GAC7BzB,aAAY,OAAO,SAAA;QACzB,IAAI,MAAM;QACV,OAAI,OAAO,kBAAA,KAAuB,CAAA,KAAA,CAChC,MAAM,CAAA,UAAA,EAAaA,UAAS,CAAA,SAAA,CAAA,oJAGvB,gBAAA,EACL,SAA2B,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc;YAAC;YAAK,KAAK;QAAK,CAAA;IAC9E;AAEJ;AAEA,SAAS,QACP,MAAA,EACA,WAAA,EACA,MAAA,EACA,IAAA,EACA,OAAA,EACA;IACA,OAAAyB,cAAuB,WAAW,OAAO,MAAA,CAAQ,CAAA,GACjDhB,QAAiB,IAAI,GAEd,SAAY,QAAQ,aAAa;QACtC;QACA,KAAK,CAAA,UAAA,EAAa,IAAI,EAAA;QACtB,MAAM;QACN,KAAK;IAAA,CACN;AACH;AClIO,MAAM,kCAAkC;IAC7C,OAAA,CAAA;KACA,WAAA,CAAA;IACA,YAAY,MAAA,EAAgC,WAAA,CAA0B;QAC/D,IAAA,EAAA,MAAA,GAAU,QACf,IAAA,EAAK,WAAA,GAAe;IAAA;IAAA;;;;;GAAA,GAStB,gBACE,eAAA,EACA,UAA2C,CAAA,CAAA,EACZ;QAC/B,MAAM,uBAAuB,IAAA,EAAK,MAAA,CAAQ,MAAA,CAAO,CAAA,CAAE,wBAAwB,CAAA,EAAG,IAExE,EAAC,UAAA,EAAY,SAAA,CAAa,CAAA,GAAA,qBAAqB,eAAe,GAC9D,qBAAqB,aAAa;QAExC,IAAI,CAAC,oBACH,MAAM,IAAI,MACR;QAIJ,MAAM,MAAM,0BAA0B,YAAY,kBAAkB,GAC9D,cAAc,iBAAiB,OAAO;QAE5C,OAAO,SAA4B,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc;YAClE,QAAQ;YACR;YACA,OAAO;QAAA,CACR;IAAA;AAEL;AAGO,MAAM,wBAAwB;KACnC,MAAA,CAAA;KACA,WAAA,CAAA;IACA,YAAY,MAAA,EAAsB,WAAA,CAA0B;QACrD,IAAA,EAAA,MAAA,GAAU,QACf,IAAA,EAAK,WAAA,GAAe;IAAA;IAAA;;;;;GAAA,GAStB,gBACE,eAAA,EACA,UAA2C,CAAA,CAAA,EACf;QACrB,wJAAA,gBAAA,EACL,IAAI,kCACF,IAAA,EAAK,MAAA,CAAQ,UAAA,EACb,IAAA,EAAK,WAAA,EACL,eAAA,CAAgB,iBAAiB,OAAO;IAC5C;AAEJ;AAEA,MAAM,iBAAiB;AAGvB,SAAS,kBACP,eAAA,EACoC;IAC7B,OAAA,OAAO,mBAAoB,YAAY,UAAU;AAC1D;AAQO,SAAS,qBAAqB,eAAA,EAGnC;IACM,MAAA,MAAM,kBAAkB,eAAe,IAAI,gBAAgB,IAAA,GAAO,iBAElE,QAAQ,eAAe,IAAA,CAAK,GAAG;IACrC,IAAI,OAAO;QACT,MAAM,CAAG,EAAA,WAAW,UAAU,CAAA,GAAI;QAC3B,OAAA;YAAC;YAAW;QAAU;IAAA;IAI/B,IAAI,OAAO,mBAAoB,YAAY,gBAAgB,UAAA,CAAW,QAAQ,GACrE,OAAA;QAAC,YAAY;IAAe;IAGrC,MAAM,IAAI,MACR,CAAA,yCAAA,EAA4C,GAAG,CAAA,gHAAA,CAAA;AAEnD;AAEA,SAAS,0BAA0B,UAAA,EAAoB,SAAA,EAA2B;IACzE,OAAA,CAAA,iBAAA,EAAoB,SAAS,CAAA,OAAA,EAAU,UAAU,CAAA,cAAA,CAAA;AAC1D;AAEA,SAAS,iBAAiB,OAAA,EAAmE;IAC3F,MAAM,SAAkC,CAAC;IAEzC,IAAI,QAAQ,eAAA,EAAiB;QAC3B,MAAM,EAAC,SAAA,EAAW,QAAA,EAAU,UAAA,EAAA,GAAc,QAAQ,eAAA;QAE9C,aAAA,CACE,UAAU,KAAA,IAAA,CAAO,OAAO,cAAA,GAAiB,UAAU,KAAA,GACnD,UAAU,MAAA,IAAA,CAAQ,OAAO,eAAA,GAAkB,UAAU,MAAA,GACrD,UAAU,IAAA,KAAS,KAAA,KAAA,CAAW,OAAO,aAAA,GAAgB,UAAU,IAAA,GAC/D,UAAU,GAAA,IAAA,CAAK,OAAO,YAAA,GAAe,UAAU,GAAA,GAC/C,UAAU,MAAA,IAAA,CAAQ,OAAO,eAAA,GAAkB,UAAU,MAAA,CAAA,GAGvD,YAAA,CACE,SAAS,KAAA,IAAA,CAAO,OAAO,aAAA,GAAgB,SAAS,KAAA,GAChD,SAAS,MAAA,IAAA,CAAQ,OAAO,cAAA,GAAiB,SAAS,MAAA,GAClD,SAAS,KAAA,KAAU,KAAA,KAAA,CAAW,OAAO,aAAA,GAAgB,SAAS,KAAA,GAC9D,SAAS,GAAA,KAAQ,KAAA,KAAA,CAAW,OAAO,WAAA,GAAc,SAAS,GAAA,GAC1D,SAAS,GAAA,IAAA,CAAK,OAAO,WAAA,GAAc,SAAS,GAAA,GAC5C,SAAS,MAAA,IAAA,CAAQ,OAAO,cAAA,GAAiB,SAAS,MAAA,CAAA,GAGpD,cACE,WAAW,MAAA,IAAA,CAAQ,OAAO,gBAAA,GAAmB,WAAW,MAAA;IAAA;IAIhE,OAAI,QAAQ,UAAA,IAAA,CACV,OAAO,UAAA,GAAa,QAAQ,UAAA,GAGvB;AACT;ACpJO,MAAM,yBAAyB;KACpC,MAAA,CAAA;KACA,WAAA,CAAA;IACA,YAAY,MAAA,EAAgC,WAAA,CAA0B;QAC/D,IAAA,EAAA,MAAA,GAAU,QACf,IAAA,EAAK,WAAA,GAAe;IAAA;IAetB,KAAK,OAAA,EAG8D;QAC3D,MAAA,QAAgC,CAAA,GAChC,MAAM;QACR,OAAA,SAAS,mBAAmB,CAAA,KAAA,CAC9B,MAAM,cAAA,GAAiB,OAAA,GAErB,SAAS,kBAAA,CACX,MAAM,cAAA,GAAiB,QAAQ,cAAA,GAG1B,SAA0B,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc;YAAC;YAAK;QAAA,CAAM;IAAA;IAAA;;;;GAAA,GAQhF,QAAQT,UAAAA,EAA8C;QAC7C,OAAA,SAAwB,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc;YAAC,KAAK,CAAA,UAAA,EAAaA,UAAS,EAAA;QAAA,CAAG;IAAA;AAEnG;AAGO,MAAM,eAAe;KAC1B,MAAA,CAAA;KACA,WAAA,CAAA;IACA,YAAY,MAAA,EAAsB,WAAA,CAA0B;QACrD,IAAA,EAAA,MAAA,GAAU,QACf,IAAA,EAAK,WAAA,GAAe;IAAA;IAetB,KAAK,OAAA,EAG2D;QACxD,MAAA,QAAgC,CAAA,GAChC,MAAM;QACR,OAAA,SAAS,mBAAmB,CAAA,KAAA,CAC9B,MAAM,cAAA,GAAiB,OAAA,GAErB,SAAS,kBAAA,CACX,MAAM,cAAA,GAAiB,QAAQ,cAAA,OAE1B,6JAAA,EAAc,SAA0B,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc;YAAC;YAAK;QAAM,CAAA,CAAC;IAAA;IAAA;;;;GAAA,GAQ/F,QAAQA,UAAAA,EAA2C;QAC1C,wJAAA,gBAAA,EACL,SAAwB,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc;YAAC,KAAK,CAAA,UAAA,EAAaA,UAAS,EAAA;QAAG,CAAA;IAC1F;AAEJ;AClFO,MAAM,qBAAoB,oKAAA,EAC/B,kEACA,IAIW,uBAAuB,CAAC,aAAqB,YACxD,8LAAY,gBAAA,EAAa,aAAa,SAAS,uLAAI,aAAA,EAAW,WAAW;AAGpE,SAAS,wBACd,EAAA,EACA,EACE,SAAA,EACA,WAAA,EACA,QAAA,EACF,EAKQ;IACJ,IAAA,eAAe,SAAS,GAAA,EAAK;QACzB,MAAA,YAAY,qBAAqB,aAAa,SAAS;QACtC,OAAA,uBAAA,WAAW,QAAQ,GACnC;IAAA;IAGT,IAAI,SAAS,GAAA,EAAK;QACV,MAAA,6LAAU,YAAA,EAAU,SAAS,GAAG,GAChC,+LAAY,cAAA,EAAY,SAAS,GAAG;QAEtC,IAAA,CAAC,WAAW,CAAC,WACf,MAAM,IAAI,MACR,CAAA,EAAA,EAAK,EAAE,CAAA,sEAAA,CAAA;QAIX,IAAI,WAAW;YACT,IAAA,SACF,MAAM,IAAI,MACR,CAAA,EAAA,EAAK,EAAE,CAAA,sCAAA,EAAyC,SAAS,GAAG,CAAA,4CAAA,EAA+C,SAAS,CAAA,sBAAA,CAAA;YAIlH,MAAA,iBAAiB,sMAAA,EAAiB,SAAS,GAAG;YACpD,IAAI,mBAAmB,WACrB,MAAM,IAAI,MACR,CAAA,EAAA,EAAK,EAAE,CAAA,sCAAA,EAAyC,SAAS,GAAG,CAAA,gDAAA,EAAmD,SAAS,CAAA,gDAAA,EAAmD,cAAc,CAAA,IAAA,CAAA;QAC3L;QAIJ,OAAO,SAAS,GAAA;IAAA;IAGd,IAAA,aACK,OAAA,qBAAqB,aAAa,SAAS;IAGpD,MAAM,IAAI,MAAM,CAAA,EAAA,EAAK,EAAE,CAAA,gEAAA,CAAkE;AAC3F;ACjEA,MAAM,UAAU,CACd,kBACA,iBACkF;IAEhF,IAAA,OAAO,oBAAqB,YAC5B,qBAAqB,QAAA,CACpB,eAAe,oBAAoB,cAAc,gBAAA,GAEhC;QAClB,MAAM,EAAC,YAAY,kBAAA,CAAA,EAAqB,WAAW,CAAA,CAAA,CAAM,CAAA,GAAA;QAClD,OAAA;YAAC;YAAW;YAAU,YAAY;SAAA;IAAA;IAG3C,OAAO;QAAC,kBAAA;QAAqB,CAAA;QAAI,gBAAqC;KAAA;AACxE,GAGa,gBAAgB,CAC3B,kBACA,iBAIG;IACG,MAAA,CAAC,WAAW,UAAU,OAAO,CAAA,GAAI,QAAQ,kBAAkB,YAAY,GAEvE,gBAA6C;QACjD,GAAG,QAAA;QACH,aAAa,SAAS,WAAA,IAAe;IACvC;IAQA,OAAO;QAAC,QAN0C;YAChD,YAAY;YACZ;YACA,UAAU;QAAA;QAGkB;IAAO;AACvC;AC5BO,MAAM,yBAAyB;KACpC,MAAA,CAAA;KACA,WAAA,CAAA;IACA,YAAY,MAAA,EAAgC,WAAA,CAA0B;QAC/D,IAAA,CAAA,OAAA,GAAU,QACf,IAAA,EAAK,WAAA,GAAe;IAAA;IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,GA8BtB,IACE,EAAC,SAAA,CAAS,CAAA,EACV,OAAA,EACyC;QAClC,OAAA,aACL,IAAA,EAAK,MAAA,EACL,IAAA,EAAK,WAAA,EACL,CAAA,WAAA,EAAc,SAAS,EAAA,EACvB;IACF;IAiEF,OACE,gBAAA,EAGA,YAAA,EAC6F;QACvF,MAAA,EAAC,MAAA,EAAQ,OAAA,CAAW,CAAA,GAAA,cAAc,kBAAkB,YAAY,GAChE,EAAC,SAAA,EAAW,QAAA,CAAA,CAAA,GAAY;QAE9B,OAAO,QAAQ,IAAA,CAAK,OAAA,EAAS,IAAA,EAAK,WAAA,EAAc,QAAQ,OAAO,EAAE,IAAA,KAC/D2B,mJAAAA,EAAI,CAAC,eAAA,CAAkB;gBACrB,GAAG,YAAA;gBACH;gBACA;YAAA,CAAA,CACA;IACJ;IAAA;;;;;;;;;;;;GAAA,GAgBF,KACE,EAAC,SAAA,EAAW,KAAA,CAAA,CAAA,EACZ,OAAA,EACgC;QAChC,MAAM,aAAgC;YACpC,YAAY;YACZ;YACA;QACF;QAEA,OAAO,QAAQ,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,YAAY,OAAO;IAAA;IAAA;;;;;;;;;;;;;;;;;GAAA,GAqBrE,QACE,EAAC,SAAA,CAAS,CAAA,EACV,OAAA,EACgC;QAChC,MAAM,gBAAsC;YAC1C,YAAY;YACZ;QACF;QAEA,OAAO,QAAQ,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,eAAe,OAAO;IAAA;IAAA;;;;;;;;;;;;;;GAAA,GAkBxE,QACE,EAAC,SAAA,CAAS,CAAA,EACV,OAAA,EACgC;QAChC,MAAM,gBAAsC;YAC1C,YAAY;YACZ;QACF;QAEA,OAAO,QAAQ,IAAA,EAAK,MAAA,EAAS,IAAA,CAAK,YAAA,EAAc,eAAe,OAAO;IAAA;IAAA;;;;;;;;;;;;GAAA,GAgBxE,UACE,EAAC,SAAA,CAAS,CAAA,EACV,OAAA,EACgC;QAChC,MAAM,kBAA0C;YAC9C,YAAY;YACZ;QACF;QAEA,OAAO,QAAQ,IAAA,CAAK,OAAA,EAAS,IAAA,EAAK,WAAA,EAAc,iBAAiB,OAAO;IAAA;IAAA;;;;;;;;;;;;;;;GAAA,GAmB1E,SACE,EAAC,SAAA,EAAW,SAAA,CAAA,CAAA,EACZ,OAAA,EACgC;QAChC,MAAM,iBAAwC;YAC5C,YAAY;YACZ;YACA;QACF;QAEA,OAAO,QAAQ,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,gBAAgB,OAAO;IAAA;IAAA;;;;;;;;;;;;;;GAAA,GAkBzE,WACE,EAAC,SAAA,CAAS,CAAA,EACV,OAAA,EACgC;QAChC,MAAM,mBAA4C;YAChD,YAAY;YACZ;QACF;QAEA,OAAO,QAAQ,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,kBAAkB,OAAO;IAAA;IAAA;;;;;;;;;;;;GAAA,GAgB3E,OACE,EAAC,SAAA,CAAS,CAAA,EACV,OAAA,EACgC;QAChC,MAAM,eAAoC;YACxC,YAAY;YACZ;QACF;QAEA,OAAO,QAAQ,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,cAAc,OAAO;IAAA;IAAA;;;;;;;;;;;GAAA,GAevE,eACE,EAAC,SAAA,CAAS,CAAA,EACV,OAAA,EACgD;QAChD,OAAO,qBAAqB,IAAA,CAAK,OAAA,EAAS,IAAA,EAAK,WAAA,EAAc,WAAW,OAAO;IAAA;AAEnF;AAGO,MAAM,eAAe;KAC1B,MAAA,CAAA;KACA,WAAA,CAAA;IACA,YAAY,MAAA,EAAsB,WAAA,CAA0B;QACrD,IAAA,EAAA,MAAA,GAAU,QACf,IAAA,EAAK,WAAA,GAAe;IAAA;IAAA;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,GA6BtB,IACE,EAAC,SAAA,CAAS,CAAA,EACV,OAAA,EACsC;QAC/B,OAAA,iKAAA,EACL,aACE,IAAA,EAAK,MAAA,EACL,IAAA,EAAK,WAAA,EACL,CAAA,WAAA,EAAc,SAAS,EAAA,EACvB;IAEJ;IAyDF,MAAM,OACJ,gBAAA,EAGA,YAAA,EAC0F;QACpF,MAAA,EAAC,MAAA,EAAQ,OAAA,CAAW,CAAA,GAAA,cAAc,kBAAkB,YAAY,GAChE,EAAC,SAAA,EAAW,QAAA,CAAA,CAAA,GAAY;QAMvB,OAAA;YAAC,GAJa,uJAAM,gBAAA,EACzB,QAAQ,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,QAAQ,OAAO,EAAA;YAGjC;YAAW;QAAQ;IAAA;IAAA;;;;;;;;;;;;GAAA,GAgB9C,KACE,EAAC,SAAA,EAAW,KAAA,CAAA,CAAA,EACZ,OAAA,EAC6B;QAC7B,MAAM,aAAgC;YACpC,YAAY;YACZ;YACA;QACF;QAEO,wJAAA,gBAAA,EAAc,QAAQ,IAAA,CAAK,OAAA,EAAS,IAAA,EAAK,WAAA,EAAc,YAAY,OAAO,CAAC;IAAA;IAAA;;;;;;;;;;;;;;;;;GAAA,GAqBpF,QACE,EAAC,SAAA,CAAS,CAAA,EACV,OAAA,EAC6B;QAC7B,MAAM,gBAAsC;YAC1C,YAAY;YACZ;QACF;QAEO,wJAAA,gBAAA,EAAc,QAAQ,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,eAAe,OAAO,CAAC;IAAA;IAAA;;;;;;;;;;;;;;GAAA,GAkBvF,QACE,EAAC,SAAA,CAAS,CAAA,EACV,OAAA,EAC6B;QAC7B,MAAM,gBAAsC;YAC1C,YAAY;YACZ;QACF;QAEO,wJAAA,gBAAA,EAAc,QAAQ,IAAA,EAAK,MAAA,EAAS,IAAA,CAAK,YAAA,EAAc,eAAe,OAAO,CAAC;IAAA;IAAA;;;;;;;;;;;;GAAA,GAgBvF,UACE,EAAC,SAAA,CAAS,CAAA,EACV,OAAA,EAC6B;QAC7B,MAAM,kBAA0C;YAC9C,YAAY;YACZ;QACF;QAEO,OAAA,iKAAA,EAAc,QAAQ,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,iBAAiB,OAAO,CAAC;IAAA;IAAA;;;;;;;;;;;;;;;GAAA,GAmBzF,SACE,EAAC,SAAA,EAAW,SAAA,CAAA,CAAA,EACZ,OAAA,EAC6B;QAC7B,MAAM,iBAAwC;YAC5C,YAAY;YACZ;YACA;QACF;QAEO,wJAAA,gBAAA,EAAc,QAAQ,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,gBAAgB,OAAO,CAAC;IAAA;IAAA;;;;;;;;;;;;;;GAAA,GAkBxF,WACE,EAAC,SAAA,CAAS,CAAA,EACV,OAAA,EAC6B;QAC7B,MAAM,mBAA4C;YAChD,YAAY;YACZ;QACF;QAEO,wJAAA,gBAAA,EAAc,QAAQ,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,kBAAkB,OAAO,CAAC;IAAA;IAAA;;;;;;;;;;;;GAAA,GAgB1F,OACE,EAAC,SAAA,CAAS,CAAA,EACV,OAAA,EAC6B;QAC7B,MAAM,eAAoC;YACxC,YAAY;YACZ;QACF;QAEO,uJAAA,iBAAA,EAAc,QAAQ,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc,cAAc,OAAO,CAAC;IAAA;IAAA;;;;;;;;;;;GAAA,GAetF,eACE,EAAC,SAAA,CAAS,CAAA,EACV,OAAA,EAC6C;QACtC,wJAAA,gBAAA,EAAc,qBAAqB,IAAA,EAAK,MAAA,EAAS,IAAA,CAAK,YAAA,EAAc,WAAW,OAAO,CAAC;IAAA;AAElG;ACvqBO,MAAM,sBAAsB;KACjC,MAAA,CAAA;KACA,WAAA,CAAA;IACA,YAAY,MAAA,EAAgC,WAAA,CAA0B;QAC/D,IAAA,EAAA,MAAA,GAAU,QACf,IAAA,EAAK,WAAA,GAAe;IAAA;IAAA;;;;GAAA,GAQtB,QACE,EAAA,EAC6D;QACtD,OAAA,SACL,IAAA,EAAK,MAAA,EACL,IAAA,EAAK,WAAA,EACL;YAAC,KAAK,CAAA,OAAA,EAAU,EAAE,EAAA;QAAE;IACtB;AAEJ;AAGO,MAAM,YAAY;KACvB,MAAA,CAAA;IACA,YAAA,CAAA;IACA,YAAY,MAAA,EAAsB,WAAA,CAA0B;QACrD,IAAA,EAAA,MAAA,GAAU,QACf,IAAA,EAAK,WAAA,GAAe;IAAA;IAAA;;;;GAAA,GAQtB,QACE,EAAA,EAC0D;QACnD,wJAAA,gBAAA,EACL,SAA0D,IAAA,EAAK,MAAA,EAAS,IAAA,EAAK,WAAA,EAAc;YACzF,KAAK,CAAA,OAAA,EAAU,EAAE,EAAA;QAClB,CAAA;IACH;AAEJ;ACiBO,MAAM,uBAAuB;IAClC,OAAA;IACA,SAAA;IACA,KAAA;IACA,aAAA;IAGA,SAAA;IACA,MAAA;IACA,MAAA;IAGA,SAAA;IAAA;;GAAA,IAKA,YAAA,CAAA;KACA,WAAA,CAAA;IAAA;;GAAA,GAKA,SAAS,QAAA;IAET,YAAY,WAAA,EAA0B,SAAuB,aAAA,CAAe;QAC1E,IAAA,CAAK,MAAA,CAAO,MAAM,GAElB,IAAA,EAAK,WAAA,GAAe,aAEpB,IAAA,CAAK,MAAA,GAAS,IAAI,uBAAuB,IAAA,EAAM,IAAA,CAAK,YAAY,GAChE,IAAA,CAAK,QAAA,GAAW,IAAI,yBAAyB,IAAA,EAAM,IAAA,EAAK,WAAY,GACpE,IAAA,CAAK,IAAA,GAAO,IAAI,WAAW,IAAI,GAC/B,IAAA,CAAK,YAAA,GAAe;YAClB,OAAO,IAAI,kCAAkC,IAAA,EAAM,IAAA,CAAK,YAAY;QAAA,GAEtE,IAAA,CAAK,QAAA,GAAW,IAAI,yBAAyB,IAAA,EAAM,IAAA,EAAK,WAAY,GACpE,IAAA,CAAK,KAAA,GAAQ,IAAI,sBAAsB,IAAA,EAAM,IAAA,EAAK,WAAY,GAC9D,IAAA,CAAK,KAAA,GAAQ;YACX,QAAQ,IAAI,6BAA6B,IAAA,EAAM,IAAA,CAAK,YAAY;QAAA,GAElE,IAAA,CAAK,QAAA,GAAW,IAAI,yBAAyB,IAAA,EAAM,IAAA,EAAK,WAAY;IAAA;IAAA;;GAAA,GAMtE,QAAgC;QAC9B,OAAO,IAAI,uBAAuB,IAAA,EAAK,WAAA,EAAc,IAAA,CAAK,MAAA,EAAQ;IAAA;IAWpE,OAAO,SAAA,EAAwD;QAC7D,IAAI,cAAc,KAAA,GACT,OAAA;YAAC,GAAG,IAAA,EAAK,YAAA;QAAa;QAG/B,IAAI,IAAA,EAAK,YAAA,IAAiB,IAAA,EAAK,YAAA,CAAc,gBAAA,KAAqB,CAAA,GAChE,MAAM,IAAI,MACR;QAIJ,OAAA,IAAA,EAAK,YAAA,GAAgB,WAAW,WAAW,IAAA,EAAK,YAAA,IAAiB,CAAE,CAAA,GAC5D,IAAA;IAAA;IAAA;;;;GAAA,GAQT,WAAW,SAAA,EAA2D;QAC9D,MAAA,aAAa,IAAA,CAAK,MAAA,CAAO;QACxB,OAAA,IAAI,uBAAuB,IAAA,EAAK,WAAA,EAAc;YACnD,GAAG,UAAA;YACH,GAAG,SAAA;YACH,OAAO;gBACL,GAAI,WAAW,KAAA,IAAS,CAAC,CAAA;gBACzB,GAAI,OAAO,WAAW,SAAU,YAC5B;oBAAC,SAAS,UAAU,KAAA;gBAAK,IACzB,WAAW,SAAS,CAAA,CAAA;YAAC;QAC3B,CACD;IAAA;IA6DH,MACE,KAAA,EACA,MAAA,EACA,OAAA,EACqC;QACrC,OAAOC,OACL,IAAA,EACA,IAAA,EAAK,WAAA,EACL,IAAA,EAAK,YAAA,CAAc,KAAA,EACnB,OACA,QACA;IACF;IAiCF,YACE,EAAA,EACA,OAAA,EAMiE;QAEjE,IAAI,SAAS,uBAAuB,CAAA,GAClC,OAAOC,aAA4B,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,IAAI;YAC9D,GAAG,OAAA;YACH,oBAAoB,CAAA;QAAA,CACrB;QAGH,MAAM,OAAO;YACX,QAAQ,SAAS;YACjB,KAAK,SAAS;YACd,WAAW,SAAS;YACpB,GAAI,WAAW,wBAAwB,UAAU;gBAAC,oBAAoB,CAAA;YAAA,IAAkB,CAAA,CAAA;QAC1F;QACA,OAAOA,aAA4B,IAAA,EAAM,IAAA,CAAK,YAAA,EAAc,IAAI,IAAI;IAAA;IAAA;;;;;;;;GAAA,GAYtE,aACE,GAAA,EACA,OAAA,EAC0C;QAC1C,OAAOC,cAA6B,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,KAAK,OAAO;IAAA;IA0D3E,OACE,QAAA,EACA,OAAA,EAQA;QACA,OAAOC,QAAuB,IAAA,EAAM,IAAA,CAAK,YAAA,EAAc,UAAU,UAAU,OAAO;IAAA;IA0DpF,kBACE,QAAA,EACA,OAAA,EAQA;QACA,OAAOC,mBAAkC,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,UAAU,OAAO;IAAA;IA0DrF,gBACE,QAAA,EACA,OAAA,EAQA;QACA,OAAOC,iBAAgC,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,UAAU,OAAO;IAAA;IAgGnF,cACE,EACE,QAAA,EACA,WAAA,EACA,SAAA,EACA,MAAA,EACA,gBAAA,EAAA,EAQF,OAAA,EACuD;QACvD,IAAI,CAAC,UACH,OAAOC,uBACL,IAAA,EACA,IAAA,EAAK,WAAA,EACL,aACA,QACA,WACA,kBACA;QAIE,MAAA,oBAAoB,wBAAwB,iBAAiB;YACjE;YACA;YACA;QACD,CAAA,GAEK,kBAAkB;YAAC,GAAG,QAAA;YAAU,KAAK;QAAA,GACrC,qBAAqB,kMAAe,iBAAA,EAAe,SAAS,GAAG;QAErE,OAAOC,eACL,IAAA,EACA,IAAA,EAAK,WAAA,EACL,iBACA,oBACA;IACF;IA2GF,OACE,SAAA,EACA,OAAA,EAQA;QACA,OAAOC,QAAuB,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,WAAW,OAAO;IAAA;IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,GA+B3E,eACE,EAAC,SAAA,EAAW,WAAA,CAAW,CAAA,EACvB,KAAA,EACA,OAAA,EACuD;QACjD,MAAA,oBAAoB,qBAAqB,aAAa,SAAS;QAErE,OAAOC,gBAA4B,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,mBAAmB,OAAO,OAAO;IAAA;IAoF/F,eACE,EACE,QAAA,EACA,WAAA,EACA,SAAA,EAAA,EAMF,OAAA,EACuD;QACjD,MAAA,oBAAoB,wBAAwB,kBAAkB;YAClE;YACA;YACA;QACD,CAAA,GAEK,kBAAkB;YAAC,GAAG,QAAA;YAAU,KAAK;QAAiB;QAE5D,OAAOC,gBAA+B,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,iBAAiB,OAAO;IAAA;IAAA;;;;;;;;;;;;;;;;;;;;GAAA,GAwBzF,iBACE,EAAC,SAAA,EAAW,WAAA,CAAA,CAAA,EACZ,OAAA,EACuD;QACjD,MAAA,YAAY,kMAAA,EAAa,aAAa,SAAS;QAErD,OAAOC,kBAA8B,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,WAAW,aAAa,OAAO;IAAA;IA0D/F,OACE,UAAA,EACA,OAAA,EAQA;QACA,OAAOC,QAAuB,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,YAAY,OAAO;IAAA;IAAA;;;;;;GAAA,GAqC5E,MAAM,SAAA,EAA2B,UAAA,EAA+C;QAC9E,OAAO,IAAI,gBAAgB,WAAW,YAAY,IAAI;IAAA;IAAA;;;;GAAA,GAQxD,YACE,UAAA,EACuB;QAChB,OAAA,IAAI,sBAAsB,YAAY,IAAI;IAAA;IAAA;;;;;GAAA,GASnD,OACE,UAAA,EACA,OAAA,EACuD;QACvD,OAAOC,QAAoB,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,YAAY,OAAO;IAAA;IAAA;;;;GAAA,GAQzE,QAAiB,OAAA,EAA2C;QAC1D,OAAOC,SAAqB,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,OAAO;IAAA;IAAA;;;;;GAAA,GAS9D,OAAO,GAAA,EAAa,SAAA,EAA6B;QAC/C,OAAOC,QAAoB,IAAA,EAAM,KAAK,SAAS;IAAA;IAAA;;;;;GAAA,GASjD,WAAW,SAAA,EAAmB,IAAA,EAAuB;QACnD,OAAOC,YAAwB,IAAA,EAAM,WAAW,IAAI;IAAA;AAExD;AAGO,MAAM,aAAa;IACxB,OAAA;IACA,SAAA;IACA,KAAA;IACA,aAAA;IAGA,SAAA;IACA,MAAA;IACA,MAAA;IAGA,SAAA;IAAA;;GAAA,GAKA,WAAA;IAAA;;GAAA,IAKA,YAAA,CAAA;KACA,WAAA,CAAA;IAAA;;GAAA,GAKA,SAAS,QAAA;IAET,YAAY,WAAA,EAA0B,SAAuB,aAAA,CAAe;QAC1E,IAAA,CAAK,MAAA,CAAO,MAAM,GAElB,IAAA,EAAK,WAAA,GAAe,aAEpB,IAAA,CAAK,MAAA,GAAS,IAAI,aAAa,IAAA,EAAM,IAAA,CAAK,YAAY,GACtD,IAAA,CAAK,QAAA,GAAW,IAAI,eAAe,IAAA,EAAM,IAAA,EAAK,WAAY,GAC1D,IAAA,CAAK,IAAA,GAAO,IAAI,WAAW,IAAI,GAC/B,IAAA,CAAK,YAAA,GAAe;YAClB,OAAO,IAAI,wBAAwB,IAAA,EAAM,IAAA,EAAK,WAAY;QAAA,GAE5D,IAAA,CAAK,QAAA,GAAW,IAAI,eAAe,IAAA,EAAM,IAAA,EAAK,WAAY,GAC1D,IAAA,CAAK,KAAA,GAAQ,IAAI,YAAY,IAAA,EAAM,IAAA,EAAK,WAAY,GACpD,IAAA,CAAK,KAAA,GAAQ;YACX,QAAQ,IAAI,mBAAmB,IAAA,EAAM,IAAA,EAAK,WAAY;QAExD,GAAA,IAAA,CAAK,QAAA,GAAW,IAAI,eAAe,IAAA,EAAM,IAAA,EAAK,WAAY,GAE1D,IAAA,CAAK,UAAA,GAAa,IAAI,uBAAuB,aAAa,MAAM;IAAA;IAAA;;GAAA,GAMlE,QAAsB;QACpB,OAAO,IAAI,aAAa,IAAA,EAAK,WAAA,EAAc,IAAA,CAAK,MAAA,EAAQ;IAAA;IAW1D,OAAO,SAAA,EAAwD;QAC7D,IAAI,cAAc,KAAA,GACT,OAAA;YAAC,GAAG,IAAA,EAAK,YAAA;QAAa;QAG/B,IAAI,IAAA,EAAK,YAAA,IAAiB,IAAA,EAAK,YAAA,CAAc,gBAAA,KAAqB,CAAA,GAChE,MAAM,IAAI,MACR;QAIJ,OAAI,IAAA,CAAK,UAAA,IACP,IAAA,CAAK,UAAA,CAAW,MAAA,CAAO,SAAS,GAGlC,IAAA,EAAK,YAAA,GAAgB,WAAW,WAAW,IAAA,EAAK,YAAA,IAAiB,CAAE,CAAA,GAC5D,IAAA;IAAA;IAAA;;;;GAAA,GAQT,WAAW,SAAA,EAAiD;QACpD,MAAA,aAAa,IAAA,CAAK,MAAA,CAAO;QACxB,OAAA,IAAI,aAAa,IAAA,CAAK,YAAA,EAAc;YACzC,GAAG,UAAA;YACH,GAAG,SAAA;YACH,OAAO;gBACL,GAAI,WAAW,KAAA,IAAS,CAAC,CAAA;gBACzB,GAAI,OAAO,WAAW,SAAU,YAC5B;oBAAC,SAAS,UAAU,KAAA;gBAAK,IACzB,WAAW,SAAS,CAAA,CAAA;YAAC;QAC3B,CACD;IAAA;IA6DH,MACE,KAAA,EACA,MAAA,EACA,OAAA,EACoE;QAC7D,WAAA,6JAAA,EACLhB,OACE,IAAA,EACA,IAAA,EAAK,WAAA,EACL,IAAA,EAAK,YAAA,CAAc,KAAA,EACnB,OACA,QACA;IAEJ;IAiCF,YACE,EAAA,EACA,OAAA,EAM8D;QAE9D,IAAI,SAAS,uBAAuB,CAAA,GAC3B,OAAA,iKAAA,EACLC,aAA4B,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,IAAI;YACvD,GAAG,OAAA;YACH,oBAAoB,CAAA;QACrB,CAAA;QAIL,MAAM,OAAO;YACX,QAAQ,SAAS;YACjB,KAAK,SAAS;YACd,WAAW,SAAS;YACpB,GAAI,WAAW,wBAAwB,UAAU;gBAAC,oBAAoB,CAAA;YAAA,IAAkB,CAAA,CAAA;QAC1F;QACO,wJAAA,gBAAA,EAAcA,aAA4B,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,IAAI,IAAI,CAAC;IAAA;IAAA;;;;;;;;GAAA,GAYrF,aACE,GAAA,EACA,OAAA,EACuC;QAChC,wJAAA,gBAAA,EAAcC,cAA6B,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,KAAK,OAAO,CAAC;IAAA;IA0D1F,OACE,QAAA,EACA,OAAA,EAQA;QACO,QAAA,gKAAA,EACLC,QAAuB,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,UAAU,UAAU,OAAO;IAC7E;IA0DF,kBACE,QAAA,EACA,OAAA,EAQA;QACO,OAAA,iKAAA,EACLC,mBAAkC,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,UAAU,OAAO;IAC9E;IA0DF,gBACE,QAAA,EACA,OAAA,EAQA;QACO,wJAAA,gBAAA,EACLC,iBAAgC,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,UAAU,OAAO;IAC5E;IAoFF,cACE,EACE,QAAA,EACA,WAAA,EACA,SAAA,EACA,MAAA,EACA,gBAAA,EAAA,EAQF,OAAA,EACoD;QACpD,IAAI,CAAC,UACI,wJAAA,iBAAA,EACLC,uBACE,IAAA,EACA,IAAA,EAAK,WAAA,EACL,aACA,QACA,WACA,kBACA;QAKA,MAAA,oBAAoB,wBAAwB,iBAAiB;YACjE;YACA;YACA;QACD,CAAA,GAEK,kBAAkB;YAAC,GAAG,QAAA;YAAU,KAAK;QAAA,GACrC,qBAAqB,kMAAe,iBAAA,EAAe,SAAS,GAAG;QAE9D,OAAA,kKAAA,EACLC,eACE,IAAA,EACA,IAAA,EAAK,WAAA,EACL,iBACA,oBACA;IAEJ;IA2GF,OACE,SAAA,EACA,OAAA,EAQA;QACO,OAAA,iKAAA,EAAcC,QAAuB,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,WAAW,OAAO,CAAC;IAAA;IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,GA+B1F,eACE,EAAC,SAAA,EAAW,WAAA,CAAW,CAAA,EACvB,KAAA,EACA,OAAA,EACoD;QAC9C,MAAA,oBAAoB,qBAAqB,aAAa,SAAS;QAE9D,wJAAA,gBAAA,EACLC,gBAA4B,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,mBAAmB,OAAO,OAAO;IACxF;IAqFF,eACE,EACE,QAAA,EACA,WAAA,EACA,SAAA,EAAA,EAMF,OAAA,EACoD;QAC9C,MAAA,oBAAoB,wBAAwB,kBAAkB;YAClE;YACA;YACA;QACD,CAAA,GAEK,kBAAkB;YAAC,GAAG,QAAA;YAAU,KAAK;QAAiB;QAErD,wJAAA,iBAAA,EACLC,gBAA+B,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,iBAAiB,OAAO;IAClF;IAAA;;;;;;;;;;;;;;;;;;;;GAAA,GAwBF,iBACE,EAAC,SAAA,EAAW,WAAA,CAAA,CAAA,EACZ,OAAA,EACoD;QAC9C,MAAA,+LAAY,eAAA,EAAa,aAAa,SAAS;QAE9C,QAAA,gKAAA,EACLC,kBAA8B,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,WAAW,aAAa,OAAO;IACxF;IA0DF,OACE,UAAA,EACA,OAAA,EAQA;QACO,QAAA,gKAAA,EAAcC,QAAuB,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,YAAY,OAAO,CAAC;IAAA;IAAA;;;;;;GAAA,GAqC3F,MAAM,UAAA,EAA4B,UAAA,EAAqC;QACrE,OAAO,IAAI,MAAM,YAAY,YAAY,IAAI;IAAA;IAAA;;;;GAAA,GAQ/C,YACE,UAAA,EACa;QACN,OAAA,IAAI,YAAY,YAAY,IAAI;IAAA;IAAA;;;;;;GAAA,GAUzC,OACE,UAAA,EACA,OAAA,EACoD;QAC7C,OAAA,iKAAA,EAAcC,QAAoB,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,YAAY,OAAO,CAAC;IAAA;IAAA;;;;;;GAAA,GAUxF,QAAiB,OAAA,EAAwC;QACvD,wJAAO,gBAAA,EAAcC,SAAwB,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,OAAO,CAAC;IAAA;IAAA;;;;;;;;;GAAA,GAahF,YAAY,QAAA,EAAkB,IAAA,EAAe,OAAA,EAA6C;QACjF,wJAAA,gBAAA,EAAcG,aAAyB,IAAA,EAAM,IAAA,EAAK,WAAA,EAAc,UAAU,MAAM,OAAO,CAAC;IAAA;IAAA;;;;;GAAA,GASjG,OAAO,GAAA,EAAa,SAAA,EAA6B;QAC/C,OAAOF,QAAoB,IAAA,EAAM,KAAK,SAAS;IAAA;IAAA;;;;;GAAA,GASjD,WAAW,SAAA,EAAmB,IAAA,EAAuB;QACnD,OAAOC,YAAwB,IAAA,EAAM,WAAW,IAAI;IAAA;AAExD;AC3lEwB,SAAA,0BAItB3C,cAAAA,EACA,gBAAA,EACA;IAqBA,OAAO;QAAC,WAnBiB,kBAAkBA,cAAa;QAmBnB,cAjBhB,CAAC,WAA6B;YAC3C,MAAA,kBAAkB,kBAAkBA,gBAAe;gBACvD,gBAAgB,OAAO,cAAA;YAAA,CACxB;YACD,OAAO,IAAI,iBACT,CAAC,SAAS6C,aAAAA,CACPA,cAAa,eAAA,EAAiB;oBAC7B,cAAc;oBACd,YAAY,OAAO,UAAA;oBACnB,YAAY,OAAO,UAAA;oBACnB,SAAS,OAAO,OAAA;oBAChB,GAAG,OAAA;gBAAA,CACG,GACV;QACF;IAG+C;AACnD;AC/DO,SAAS,6BACdC,aAAAA,EACA;IACA,OAAO,SAAgC,MAAA,EAA0B;QAC1C,OAAA,qBAAA,GACdA,cAAa,MAAM;IAC5B;AACF;ACVA,IAAA,gBAAe,CAAC,CAAA;ACMhB,MAAM,MAAM,0BAAsD,eAAe,YAAY,GAGhF,YAAY,IAAI,SAAA,EAGhB,eAAe,IAAI,YAAA,EAM1B,yBAAyB,6BAA6B,YAAY","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"debugId":null}},
    {"offset": {"line": 15614, "column": 0}, "map": {"version":3,"file":"parseAssetId.js","sourceRoot":"","sources":["../../src/parseAssetId.ts"],"names":[],"mappings":";;;;AAAA,IAAM,OAAO,GAAG,8CAA8C,CAAA;AAE9D,SAAwB,YAAY,CAAC,GAAW;IACxC,IAAA,KAAkC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAA7C,EAAE,GAAA,EAAA,CAAA,EAAA,EAAE,eAAe,GAAA,EAAA,CAAA,EAAA,EAAE,MAAM,GAAA,EAAA,CAAA,EAAkB,CAAA;IAEtD,IAAI,CAAC,EAAE,IAAI,CAAC,eAAe,IAAI,CAAC,MAAM,EAAE;QACtC,MAAM,IAAI,KAAK,CAAC,yBAAA,MAAA,CAAyB,GAAG,EAAA,6BAAA,MAAA,CAA2B,OAAO,EAAA,MAAI,CAAC,CAAA;KACpF;IAEK,IAAA,KAA8B,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,EAAvD,WAAW,GAAA,EAAA,CAAA,EAAA,EAAE,YAAY,GAAA,EAAA,CAAA,EAA8B,CAAA;IAE9D,IAAM,KAAK,GAAG,CAAC,WAAW,CAAA;IAC1B,IAAM,MAAM,GAAG,CAAC,YAAY,CAAA;IAE5B,IAAM,cAAc,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAA;IAC1D,IAAI,CAAC,cAAc,EAAE;QACnB,MAAM,IAAI,KAAK,CAAC,yBAAA,MAAA,CAAyB,GAAG,EAAA,6BAAA,MAAA,CAA2B,OAAO,EAAA,MAAI,CAAC,CAAA;KACpF;IAED,OAAO;QAAC,EAAE,EAAA,EAAA;QAAE,KAAK,EAAA,KAAA;QAAE,MAAM,EAAA,MAAA;QAAE,MAAM,EAAA,MAAA;IAAA,CAAC,CAAA;AACpC,CAAC;AAlBD,QAAA,OAAA,GAAA,aAkBC","debugId":null}},
    {"offset": {"line": 15644, "column": 0}, "map": {"version":3,"file":"parseSource.js","sourceRoot":"","sources":["../../src/parseSource.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 15776, "column": 0}, "map": {"version":3,"file":"urlForImage.js","sourceRoot":"","sources":["../../src/urlForImage.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,iBAAA,2CAAyC;AACzC,IAAA,gBAAA,uCAA6D;AA0MrD,QAAA,WAAA,GA1MD,cAAA,OAAW,CA0MC;AA9LN,QAAA,8BAA8B,GAAG;IAC5C;QAAC,OAAO;QAAE,GAAG;KAAC;IACd;QAAC,QAAQ;QAAE,GAAG;KAAC;IACf;QAAC,QAAQ;QAAE,IAAI;KAAC;IAChB;QAAC,UAAU;QAAE,IAAI;KAAC;IAClB;QAAC,MAAM;QAAE,MAAM;KAAC;IAChB;QAAC,SAAS;QAAE,OAAO;KAAC;IACpB;QAAC,QAAQ;QAAE,QAAQ;KAAC;IACpB;QAAC,aAAa;QAAE,IAAI;KAAC;IACrB;QAAC,WAAW;QAAE,OAAO;KAAC;IACtB;QAAC,WAAW;QAAE,OAAO;KAAC;IACtB;QAAC,UAAU;QAAE,OAAO;KAAC;IACrB;QAAC,UAAU;QAAE,OAAO;KAAC;IACrB;QAAC,SAAS;QAAE,GAAG;KAAC;IAChB;QAAC,KAAK;QAAE,KAAK;KAAC;IACd;QAAC,MAAM;QAAE,MAAM;KAAC;IAChB;QAAC,YAAY;QAAE,KAAK;KAAC;IACrB;QAAC,MAAM;QAAE,MAAM;KAAC;IAChB;QAAC,KAAK;QAAE,KAAK;KAAC;IACd;QAAC,KAAK;QAAE,KAAK;KAAC;IACd;QAAC,OAAO;QAAE,OAAO;KAAC;CACnB,CAAA;AAED,SAAwB,WAAW,CAAC,OAA+B;IACjE,IAAI,IAAI,GAAA,SAAA,CAAA,GAAO,AAAC,OAAO,IAAI,CAAA,CAAE,CAAC,CAAC,CAAA;IAC/B,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;IAC1B,OAAO,IAAI,CAAC,MAAM,CAAA;IAElB,IAAM,KAAK,GAAG,CAAA,GAAA,cAAA,OAAW,EAAC,MAAM,CAAC,CAAA;IACjC,IAAI,CAAC,KAAK,EAAE;QACV,IAAI,MAAM,IAAI,CAAA,GAAA,cAAA,kBAAkB,EAAC,MAAM,CAAC,EAAE;YACxC,sGAAsG;YACtG,sCAAsC;YACtC,OAAO,oHAAoH,CAAA;SAC5H;QACD,MAAM,IAAI,KAAK,CAAC,4CAAA,MAAA,CAA4C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAA,IAAG,CAAC,CAAA;KACvF;IAED,IAAM,EAAE,GAAI,KAAK,CAAC,KAAyB,CAAC,IAAI,IAAK,KAAK,CAAC,KAAqB,CAAC,GAAG,IAAI,EAAE,CAAA;IAC1F,IAAM,KAAK,GAAG,CAAA,GAAA,eAAA,OAAY,EAAC,EAAE,CAAC,CAAA;IAE9B,0EAA0E;IAC1E,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAA;IAC1D,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAA;IACzD,IAAM,IAAI,GAAG;QACX,IAAI,EAAE,QAAQ;QACd,GAAG,EAAE,OAAO;QACZ,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC1E,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;KAC9E,CAAA;IAED,sDAAsD;IACtD,IAAM,qBAAqB,GAAG,AAAC,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,EAAG,CAAC,CAAA;IACvE,IAAM,uBAAuB,GAAG,AAAC,KAAK,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,EAAG,CAAC,CAAA;IACvE,IAAM,cAAc,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAA;IACpD,IAAM,cAAc,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAA;IACrD,IAAM,OAAO,GAAG;QACd,IAAI,EAAE,cAAc,GAAG,uBAAuB;QAC9C,GAAG,EAAE,cAAc,GAAG,qBAAqB;QAC3C,KAAK,EAAE,cAAc,GAAG,uBAAuB;QAC/C,MAAM,EAAE,cAAc,GAAG,qBAAqB;KAC/C,CAAA;IAED,4EAA4E;IAC5E,oBAAoB;IACpB,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;QAC1E,IAAI,GAAA,SAAA,SAAA,CAAA,GAAO,IAAI,GAAK,GAAG,CAAC;YAAC,IAAI,EAAA,IAAA;YAAE,OAAO,EAAA,OAAA;QAAA,CAAC,EAAE,IAAI,CAAC,CAAC,CAAA;KAChD;IAED,OAAO,cAAc,CAAA,SAAA,SAAA,CAAA,GAAK,IAAI,GAAA;QAAE,KAAK,EAAA,KAAA;IAAA,GAAE,CAAA;AACzC,CAAC;AA/CD,QAAA,OAAA,GAAA,YA+CC;AAED,sCAAsC;AACtC,SAAS,cAAc,CAAC,IAAqC;IAC3D,IAAM,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,IAAI,uBAAuB,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAA;IAC5E,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAA,MAAA,CAAI,IAAI,CAAC,UAAU,CAAE,CAAC,CAAC,CAAC,EAAE,CAAA;IAC/D,IAAM,QAAQ,GAAG,GAAA,MAAA,CAAG,IAAI,CAAC,KAAK,CAAC,EAAE,EAAA,KAAA,MAAA,CAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAA,KAAA,MAAA,CAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAA,KAAA,MAAA,CAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAA,MAAA,CAAG,UAAU,CAAE,CAAA;IAC9G,IAAM,OAAO,GAAG,GAAA,MAAA,CAAG,MAAM,EAAA,YAAA,MAAA,CAAW,IAAI,CAAC,SAAS,EAAA,KAAA,MAAA,CAAI,IAAI,CAAC,OAAO,EAAA,KAAA,MAAA,CAAI,QAAQ,CAAE,CAAA;IAEhF,IAAM,MAAM,GAAG,EAAE,CAAA;IAEjB,IAAI,IAAI,CAAC,IAAI,EAAE;QACb,4DAA4D;QACtD,IAAA,KAA6B,IAAI,CAAC,IAAI,EAArC,IAAI,GAAA,GAAA,IAAA,EAAE,KAAG,GAAA,GAAA,GAAA,EAAE,KAAK,GAAA,GAAA,KAAA,EAAE,MAAM,GAAA,GAAA,MAAa,CAAA;QAC5C,IAAM,eAAe,GACnB,IAAI,KAAK,CAAC,IAAI,KAAG,KAAK,CAAC,IAAI,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAA;QAEvF,IAAI,eAAe,EAAE;YACnB,MAAM,CAAC,IAAI,CAAC,QAAA,MAAA,CAAQ,IAAI,EAAA,KAAA,MAAA,CAAI,KAAG,EAAA,KAAA,MAAA,CAAI,KAAK,EAAA,KAAA,MAAA,CAAI,MAAM,CAAE,CAAC,CAAA;SACtD;KACF;IAED,IAAI,IAAI,CAAC,EAAE,EAAE;QACX,MAAM,CAAC,IAAI,CAAC,MAAA,MAAA,CAAM,IAAI,CAAC,EAAE,CAAE,CAAC,CAAA;KAC7B;IAED,IAAI,IAAI,CAAC,UAAU,EAAE;QACnB,MAAM,CAAC,IAAI,CAAC,QAAA,MAAA,CAAQ,IAAI,CAAC,UAAU,CAAC,CAAC,CAAE,CAAC,CAAA;QACxC,MAAM,CAAC,IAAI,CAAC,QAAA,MAAA,CAAQ,IAAI,CAAC,UAAU,CAAC,CAAC,CAAE,CAAC,CAAA;KACzC;IAED,IAAM,IAAI,GAAG;QAAC,IAAI,CAAC,cAAc,IAAI,GAAG;QAAE,IAAI,CAAC,YAAY,IAAI,GAAG;KAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;IAC5F,IAAI,IAAI,EAAE;QACR,MAAM,CAAC,IAAI,CAAC,QAAA,MAAA,CAAQ,IAAI,CAAE,CAAC,CAAA;KAC5B;IAED,gGAAgG;IAChG,QAAA,8BAA8B,CAAC,OAAO,CAAC,SAAC,OAAO;QACtC,IAAA,QAAQ,GAAW,OAAO,CAAA,EAAlB,EAAE,KAAK,GAAI,OAAO,CAAA,EAAX,CAAW;QACjC,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,WAAW,EAAE;YACzC,MAAM,CAAC,IAAI,CAAC,GAAA,MAAA,CAAG,KAAK,EAAA,KAAA,MAAA,CAAI,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAA;SAC9D,MAAM,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,WAAW,EAAE;YAC7C,MAAM,CAAC,IAAI,CAAC,GAAA,MAAA,CAAG,KAAK,EAAA,KAAA,MAAA,CAAI,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAE,CAAC,CAAA;SAC3D;IACH,CAAC,CAAC,CAAA;IAEF,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;QACvB,OAAO,OAAO,CAAA;KACf;IAED,OAAO,GAAA,MAAA,CAAG,OAAO,EAAA,KAAA,MAAA,CAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAE,CAAA;AACzC,CAAC;AAED,SAAS,GAAG,CACV,MAA8C,EAC9C,IAA4B;IAE5B,IAAI,QAAyB,CAAA;IAE7B,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAA;IAC3B,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAA;IAE7B,6EAA6E;IAC7E,IAAI,CAAC,CAAC,QAAQ,IAAI,SAAS,CAAC,EAAE;QAC5B,OAAO;YAAC,KAAK,EAAE,QAAQ;YAAE,MAAM,EAAE,SAAS;YAAE,IAAI,EAAE,MAAM,CAAC,IAAI;QAAA,CAAC,CAAA;KAC/D;IAED,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAA;IACxB,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAA;IAE9B,qFAAqF;IACrF,IAAM,kBAAkB,GAAG,QAAQ,GAAG,SAAS,CAAA;IAC/C,IAAM,eAAe,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAA;IAEhD,IAAI,eAAe,GAAG,kBAAkB,EAAE;QACxC,4FAA4F;QAC5F,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACtC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,kBAAkB,CAAC,CAAA;QACrD,IAAM,KAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;QAE7C,0CAA0C;QAC1C,IAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;QACpF,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAA;QAE9D,0BAA0B;QAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE;YACpB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;SACjB,MAAM,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE;YAChD,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;SACtC;QAED,QAAQ,GAAG;YAAC,IAAI,EAAA,IAAA;YAAE,GAAG,EAAA,KAAA;YAAE,KAAK,EAAA,KAAA;YAAE,MAAM,EAAA,MAAA;QAAA,CAAC,CAAA;KACtC,MAAM;QACL,gFAAgF;QAChF,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;QACxB,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,kBAAkB,CAAC,CAAA;QACrD,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;QAE/C,wCAAwC;QACxC,IAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAA;QACnF,IAAI,KAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAA;QAE9D,+BAA+B;QAC/B,IAAI,KAAG,GAAG,IAAI,CAAC,GAAG,EAAE;YAClB,KAAG,GAAG,IAAI,CAAC,GAAG,CAAA;SACf,MAAM,IAAI,KAAG,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE;YAChD,KAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;SACtC;QAED,QAAQ,GAAG;YAAC,IAAI,EAAA,IAAA;YAAE,GAAG,EAAA,KAAA;YAAE,KAAK,EAAA,KAAA;YAAE,MAAM,EAAA,MAAA;QAAA,CAAC,CAAA;KACtC;IAED,OAAO;QACL,KAAK,EAAE,QAAQ;QACf,MAAM,EAAE,SAAS;QACjB,IAAI,EAAE,QAAQ;KACf,CAAA;AACH,CAAC","debugId":null}},
    {"offset": {"line": 16074, "column": 0}, "map": {"version":3,"file":"builder.js","sourceRoot":"","sources":["../../src/builder.ts"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 16423, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,YAAA,sCAA+B;AAE/B,OAAA,OAAA,GAAS,UAAA,OAAO,CAAA","debugId":null}},
    {"offset": {"line": 16436, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/dist/client/app-dir/link.js/proxy.cjs"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/app-dir/link.js <module evaluation>\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE;AAEjC,sBAAsB,CAAC,CAAC,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16443, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/dist/client/app-dir/link.js/proxy.cjs"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/app-dir/link.js\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE;AAEjC,sBAAsB,CAAC,CAAC,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16451, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/client/app-dir/link.tsx"],"sourcesContent":["'use client'\n\nimport React, { createContext, useContext, useOptimistic, useRef } from 'react'\nimport type { UrlObject } from 'url'\nimport { formatUrl } from '../../shared/lib/router/utils/format-url'\nimport { AppRouterContext } from '../../shared/lib/app-router-context.shared-runtime'\nimport { PrefetchKind } from '../components/router-reducer/router-reducer-types'\nimport { useMergedRef } from '../use-merged-ref'\nimport { isAbsoluteUrl } from '../../shared/lib/utils'\nimport { addBasePath } from '../add-base-path'\nimport { warnOnce } from '../../shared/lib/utils/warn-once'\nimport type { PENDING_LINK_STATUS } from '../components/links'\nimport {\n  IDLE_LINK_STATUS,\n  mountLinkInstance,\n  onNavigationIntent,\n  unmountLinkForCurrentNavigation,\n  unmountPrefetchableInstance,\n  type LinkInstance,\n} from '../components/links'\nimport { isLocalURL } from '../../shared/lib/router/utils/is-local-url'\nimport { dispatchNavigateAction } from '../components/app-router-instance'\nimport { errorOnce } from '../../shared/lib/utils/error-once'\n\ntype Url = string | UrlObject\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T]\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? K : never\n}[keyof T]\n\ntype OnNavigateEventHandler = (event: { preventDefault: () => void }) => void\n\ntype InternalLinkProps = {\n  /**\n   * **Required**. The path or URL to navigate to. It can also be an object (similar to `URL`).\n   *\n   * @example\n   * ```tsx\n   * // Navigate to /dashboard:\n   * <Link href=\"/dashboard\">Dashboard</Link>\n   *\n   * // Navigate to /about?name=test:\n   * <Link href={{ pathname: '/about', query: { name: 'test' } }}>\n   *   About\n   * </Link>\n   * ```\n   *\n   * @remarks\n   * - For external URLs, use a fully qualified URL such as `https://...`.\n   * - In the App Router, dynamic routes must not include bracketed segments in `href`.\n   */\n  href: Url\n\n  /**\n   * @deprecated v10.0.0: `href` props pointing to a dynamic route are\n   * automatically resolved and no longer require the `as` prop.\n   */\n  as?: Url\n\n  /**\n   * Replace the current `history` state instead of adding a new URL into the stack.\n   *\n   * @defaultValue `false`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/about\" replace>\n   *   About (replaces the history state)\n   * </Link>\n   * ```\n   */\n  replace?: boolean\n\n  /**\n   * Whether to override the default scroll behavior. If `true`, Next.js attempts to maintain\n   * the scroll position if the newly navigated page is still visible. If not, it scrolls to the top.\n   *\n   * If `false`, Next.js will not modify the scroll behavior at all.\n   *\n   * @defaultValue `true`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/dashboard\" scroll={false}>\n   *   No auto scroll\n   * </Link>\n   * ```\n   */\n  scroll?: boolean\n\n  /**\n   * Update the path of the current page without rerunning data fetching methods\n   * like `getStaticProps`, `getServerSideProps`, or `getInitialProps`.\n   *\n   * @remarks\n   * `shallow` only applies to the Pages Router. For the App Router, see the\n   * [following documentation](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#using-the-native-history-api).\n   *\n   * @defaultValue `false`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/blog\" shallow>\n   *   Shallow navigation\n   * </Link>\n   * ```\n   */\n  shallow?: boolean\n\n  /**\n   * Forces `Link` to pass its `href` to the child component. Useful if the child is a custom\n   * component that wraps an `<a>` tag, or if you're using certain styling libraries.\n   *\n   * @defaultValue `false`\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/dashboard\" passHref>\n   *   <MyStyledAnchor>Dashboard</MyStyledAnchor>\n   * </Link>\n   * ```\n   */\n  passHref?: boolean\n\n  /**\n   * Prefetch the page in the background.\n   * Any `<Link />` that is in the viewport (initially or through scroll) will be prefetched.\n   * Prefetch can be disabled by passing `prefetch={false}`.\n   *\n   * @remarks\n   * Prefetching is only enabled in production.\n   *\n   * - In the **App Router**:\n   *   - `null` (default): Prefetch behavior depends on static vs dynamic routes:\n   *     - Static routes: fully prefetched\n   *     - Dynamic routes: partial prefetch to the nearest segment with a `loading.js`\n   *   - `true`: Always prefetch the full route and data.\n   *   - `false`: Disable prefetching on both viewport and hover.\n   * - In the **Pages Router**:\n   *   - `true` (default): Prefetches the route and data in the background on viewport or hover.\n   *   - `false`: Prefetch only on hover, not on viewport.\n   *\n   * @defaultValue `true` (Pages Router) or `null` (App Router)\n   *\n   * @example\n   * ```tsx\n   * <Link href=\"/dashboard\" prefetch={false}>\n   *   Dashboard\n   * </Link>\n   * ```\n   */\n  prefetch?: boolean | null\n\n  /**\n   * (unstable) Switch to a dynamic prefetch on hover. Effectively the same as\n   * updating the prefetch prop to `true` in a mouse event.\n   */\n  unstable_dynamicOnHover?: boolean\n\n  /**\n   * The active locale is automatically prepended in the Pages Router. `locale` allows for providing\n   * a different locale, or can be set to `false` to opt out of automatic locale behavior.\n   *\n   * @remarks\n   * Note: locale only applies in the Pages Router and is ignored in the App Router.\n   *\n   * @example\n   * ```tsx\n   * // Use the 'fr' locale:\n   * <Link href=\"/about\" locale=\"fr\">\n   *   About (French)\n   * </Link>\n   *\n   * // Disable locale prefix:\n   * <Link href=\"/about\" locale={false}>\n   *   About (no locale prefix)\n   * </Link>\n   * ```\n   */\n  locale?: string | false\n\n  /**\n   * Enable legacy link behavior, requiring an `<a>` tag to wrap the child content\n   * if the child is a string or number.\n   *\n   * @deprecated This will be removed in v16\n   * @defaultValue `false`\n   * @see https://github.com/vercel/next.js/commit/489e65ed98544e69b0afd7e0cfc3f9f6c2b803b7\n   */\n  legacyBehavior?: boolean\n\n  /**\n   * Optional event handler for when the mouse pointer is moved onto the `<Link>`.\n   */\n  onMouseEnter?: React.MouseEventHandler<HTMLAnchorElement>\n\n  /**\n   * Optional event handler for when the `<Link>` is touched.\n   */\n  onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n\n  /**\n   * Optional event handler for when the `<Link>` is clicked.\n   */\n  onClick?: React.MouseEventHandler<HTMLAnchorElement>\n\n  /**\n   * Optional event handler for when the `<Link>` is navigated.\n   */\n  onNavigate?: OnNavigateEventHandler\n}\n\n// TODO-APP: Include the full set of Anchor props\n// adding this to the publicly exported type currently breaks existing apps\n\n// `RouteInferType` is a stub here to avoid breaking `typedRoutes` when the type\n// isn't generated yet. It will be replaced when the webpack plugin runs.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport type LinkProps<RouteInferType = any> = InternalLinkProps\ntype LinkPropsRequired = RequiredKeys<LinkProps>\ntype LinkPropsOptional = OptionalKeys<Omit<InternalLinkProps, 'locale'>>\n\nfunction isModifiedEvent(event: React.MouseEvent): boolean {\n  const eventTarget = event.currentTarget as HTMLAnchorElement | SVGAElement\n  const target = eventTarget.getAttribute('target')\n  return (\n    (target && target !== '_self') ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey || // triggers resource download\n    (event.nativeEvent && event.nativeEvent.which === 2)\n  )\n}\n\nfunction linkClicked(\n  e: React.MouseEvent,\n  href: string,\n  as: string,\n  linkInstanceRef: React.RefObject<LinkInstance | null>,\n  replace?: boolean,\n  scroll?: boolean,\n  onNavigate?: OnNavigateEventHandler\n): void {\n  const { nodeName } = e.currentTarget\n\n  // anchors inside an svg have a lowercase nodeName\n  const isAnchorNodeName = nodeName.toUpperCase() === 'A'\n\n  if (\n    (isAnchorNodeName && isModifiedEvent(e)) ||\n    e.currentTarget.hasAttribute('download')\n  ) {\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  if (!isLocalURL(href)) {\n    if (replace) {\n      // browser default behavior does not replace the history state\n      // so we need to do it manually\n      e.preventDefault()\n      location.replace(href)\n    }\n\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  e.preventDefault()\n\n  const navigate = () => {\n    if (onNavigate) {\n      let isDefaultPrevented = false\n\n      onNavigate({\n        preventDefault: () => {\n          isDefaultPrevented = true\n        },\n      })\n\n      if (isDefaultPrevented) {\n        return\n      }\n    }\n\n    dispatchNavigateAction(\n      as || href,\n      replace ? 'replace' : 'push',\n      scroll ?? true,\n      linkInstanceRef.current\n    )\n  }\n\n  React.startTransition(navigate)\n}\n\nfunction formatStringOrUrl(urlObjOrString: UrlObject | string): string {\n  if (typeof urlObjOrString === 'string') {\n    return urlObjOrString\n  }\n\n  return formatUrl(urlObjOrString)\n}\n\n/**\n * A React component that extends the HTML `<a>` element to provide\n * [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)\n * and client-side navigation. This is the primary way to navigate between routes in Next.js.\n *\n * @remarks\n * - Prefetching is only enabled in production.\n *\n * @see https://nextjs.org/docs/app/api-reference/components/link\n */\nexport default function LinkComponent(\n  props: LinkProps & {\n    children: React.ReactNode\n    ref: React.Ref<HTMLAnchorElement>\n  }\n) {\n  const [linkStatus, setOptimisticLinkStatus] = useOptimistic(IDLE_LINK_STATUS)\n\n  let children: React.ReactNode\n\n  const linkInstanceRef = useRef<LinkInstance | null>(null)\n\n  const {\n    href: hrefProp,\n    as: asProp,\n    children: childrenProp,\n    prefetch: prefetchProp = null,\n    passHref,\n    replace,\n    shallow,\n    scroll,\n    onClick,\n    onMouseEnter: onMouseEnterProp,\n    onTouchStart: onTouchStartProp,\n    legacyBehavior = false,\n    onNavigate,\n    ref: forwardedRef,\n    unstable_dynamicOnHover,\n    ...restProps\n  } = props\n\n  children = childrenProp\n\n  if (\n    legacyBehavior &&\n    (typeof children === 'string' || typeof children === 'number')\n  ) {\n    children = <a>{children}</a>\n  }\n\n  const router = React.useContext(AppRouterContext)\n\n  const prefetchEnabled = prefetchProp !== false\n  /**\n   * The possible states for prefetch are:\n   * - null: this is the default \"auto\" mode, where we will prefetch partially if the link is in the viewport\n   * - true: we will prefetch if the link is visible and prefetch the full page, not just partially\n   * - false: we will not prefetch if in the viewport at all\n   * - 'unstable_dynamicOnHover': this starts in \"auto\" mode, but switches to \"full\" when the link is hovered\n   */\n  const appPrefetchKind =\n    prefetchProp === null ? PrefetchKind.AUTO : PrefetchKind.FULL\n\n  if (process.env.NODE_ENV !== 'production') {\n    function createPropError(args: {\n      key: string\n      expected: string\n      actual: string\n    }) {\n      return new Error(\n        `Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` +\n          (typeof window !== 'undefined'\n            ? \"\\nOpen your browser's console to view the Component stack trace.\"\n            : '')\n      )\n    }\n\n    // TypeScript trick for type-guarding:\n    const requiredPropsGuard: Record<LinkPropsRequired, true> = {\n      href: true,\n    } as const\n    const requiredProps: LinkPropsRequired[] = Object.keys(\n      requiredPropsGuard\n    ) as LinkPropsRequired[]\n    requiredProps.forEach((key: LinkPropsRequired) => {\n      if (key === 'href') {\n        if (\n          props[key] == null ||\n          (typeof props[key] !== 'string' && typeof props[key] !== 'object')\n        ) {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: props[key] === null ? 'null' : typeof props[key],\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n\n    // TypeScript trick for type-guarding:\n    const optionalPropsGuard: Record<LinkPropsOptional, true> = {\n      as: true,\n      replace: true,\n      scroll: true,\n      shallow: true,\n      passHref: true,\n      prefetch: true,\n      unstable_dynamicOnHover: true,\n      onClick: true,\n      onMouseEnter: true,\n      onTouchStart: true,\n      legacyBehavior: true,\n      onNavigate: true,\n    } as const\n    const optionalProps: LinkPropsOptional[] = Object.keys(\n      optionalPropsGuard\n    ) as LinkPropsOptional[]\n    optionalProps.forEach((key: LinkPropsOptional) => {\n      const valType = typeof props[key]\n\n      if (key === 'as') {\n        if (props[key] && valType !== 'string' && valType !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: valType,\n          })\n        }\n      } else if (\n        key === 'onClick' ||\n        key === 'onMouseEnter' ||\n        key === 'onTouchStart' ||\n        key === 'onNavigate'\n      ) {\n        if (props[key] && valType !== 'function') {\n          throw createPropError({\n            key,\n            expected: '`function`',\n            actual: valType,\n          })\n        }\n      } else if (\n        key === 'replace' ||\n        key === 'scroll' ||\n        key === 'shallow' ||\n        key === 'passHref' ||\n        key === 'prefetch' ||\n        key === 'legacyBehavior' ||\n        key === 'unstable_dynamicOnHover'\n      ) {\n        if (props[key] != null && valType !== 'boolean') {\n          throw createPropError({\n            key,\n            expected: '`boolean`',\n            actual: valType,\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (props.locale) {\n      warnOnce(\n        'The `locale` prop is not supported in `next/link` while using the `app` router. Read more about app router internalization: https://nextjs.org/docs/app/building-your-application/routing/internationalization'\n      )\n    }\n    if (!asProp) {\n      let href: string | undefined\n      if (typeof hrefProp === 'string') {\n        href = hrefProp\n      } else if (\n        typeof hrefProp === 'object' &&\n        typeof hrefProp.pathname === 'string'\n      ) {\n        href = hrefProp.pathname\n      }\n\n      if (href) {\n        const hasDynamicSegment = href\n          .split('/')\n          .some((segment) => segment.startsWith('[') && segment.endsWith(']'))\n\n        if (hasDynamicSegment) {\n          throw new Error(\n            `Dynamic href \\`${href}\\` found in <Link> while using the \\`/app\\` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href`\n          )\n        }\n      }\n    }\n  }\n\n  const { href, as } = React.useMemo(() => {\n    const resolvedHref = formatStringOrUrl(hrefProp)\n    return {\n      href: resolvedHref,\n      as: asProp ? formatStringOrUrl(asProp) : resolvedHref,\n    }\n  }, [hrefProp, asProp])\n\n  // This will return the first child, if multiple are provided it will throw an error\n  let child: any\n  if (legacyBehavior) {\n    if (process.env.NODE_ENV === 'development') {\n      if (onClick) {\n        console.warn(\n          `\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`\n        )\n      }\n      if (onMouseEnterProp) {\n        console.warn(\n          `\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`\n        )\n      }\n      try {\n        child = React.Children.only(children)\n      } catch (err) {\n        if (!children) {\n          throw new Error(\n            `No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`\n          )\n        }\n        throw new Error(\n          `Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` +\n            (typeof window !== 'undefined'\n              ? \" \\nOpen your browser's console to view the Component stack trace.\"\n              : '')\n        )\n      }\n    } else {\n      child = React.Children.only(children)\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if ((children as any)?.type === 'a') {\n        throw new Error(\n          'Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'\n        )\n      }\n    }\n  }\n\n  const childRef: any = legacyBehavior\n    ? child && typeof child === 'object' && child.ref\n    : forwardedRef\n\n  // Use a callback ref to attach an IntersectionObserver to the anchor tag on\n  // mount. In the future we will also use this to keep track of all the\n  // currently mounted <Link> instances, e.g. so we can re-prefetch them after\n  // a revalidation or refresh.\n  const observeLinkVisibilityOnMount = React.useCallback(\n    (element: HTMLAnchorElement | SVGAElement) => {\n      if (router !== null) {\n        linkInstanceRef.current = mountLinkInstance(\n          element,\n          href,\n          router,\n          appPrefetchKind,\n          prefetchEnabled,\n          setOptimisticLinkStatus\n        )\n      }\n\n      return () => {\n        if (linkInstanceRef.current) {\n          unmountLinkForCurrentNavigation(linkInstanceRef.current)\n          linkInstanceRef.current = null\n        }\n        unmountPrefetchableInstance(element)\n      }\n    },\n    [prefetchEnabled, href, router, appPrefetchKind, setOptimisticLinkStatus]\n  )\n\n  const mergedRef = useMergedRef(observeLinkVisibilityOnMount, childRef)\n\n  const childProps: {\n    onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n    onMouseEnter: React.MouseEventHandler<HTMLAnchorElement>\n    onClick: React.MouseEventHandler<HTMLAnchorElement>\n    href?: string\n    ref?: any\n  } = {\n    ref: mergedRef,\n    onClick(e) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!e) {\n          throw new Error(\n            `Component rendered inside next/link has to pass click event to \"onClick\" prop.`\n          )\n        }\n      }\n\n      if (!legacyBehavior && typeof onClick === 'function') {\n        onClick(e)\n      }\n\n      if (\n        legacyBehavior &&\n        child.props &&\n        typeof child.props.onClick === 'function'\n      ) {\n        child.props.onClick(e)\n      }\n\n      if (!router) {\n        return\n      }\n\n      if (e.defaultPrevented) {\n        return\n      }\n\n      linkClicked(e, href, as, linkInstanceRef, replace, scroll, onNavigate)\n    },\n    onMouseEnter(e) {\n      if (!legacyBehavior && typeof onMouseEnterProp === 'function') {\n        onMouseEnterProp(e)\n      }\n\n      if (\n        legacyBehavior &&\n        child.props &&\n        typeof child.props.onMouseEnter === 'function'\n      ) {\n        child.props.onMouseEnter(e)\n      }\n\n      if (!router) {\n        return\n      }\n\n      if (!prefetchEnabled || process.env.NODE_ENV === 'development') {\n        return\n      }\n\n      const upgradeToDynamicPrefetch = unstable_dynamicOnHover === true\n      onNavigationIntent(\n        e.currentTarget as HTMLAnchorElement | SVGAElement,\n        upgradeToDynamicPrefetch\n      )\n    },\n    onTouchStart: process.env.__NEXT_LINK_NO_TOUCH_START\n      ? undefined\n      : function onTouchStart(e) {\n          if (!legacyBehavior && typeof onTouchStartProp === 'function') {\n            onTouchStartProp(e)\n          }\n\n          if (\n            legacyBehavior &&\n            child.props &&\n            typeof child.props.onTouchStart === 'function'\n          ) {\n            child.props.onTouchStart(e)\n          }\n\n          if (!router) {\n            return\n          }\n\n          if (!prefetchEnabled) {\n            return\n          }\n\n          const upgradeToDynamicPrefetch = unstable_dynamicOnHover === true\n          onNavigationIntent(\n            e.currentTarget as HTMLAnchorElement | SVGAElement,\n            upgradeToDynamicPrefetch\n          )\n        },\n  }\n\n  // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n  // defined, we specify the current 'href', so that repetition is not needed by the user.\n  // If the url is absolute, we can bypass the logic to prepend the basePath.\n  if (isAbsoluteUrl(as)) {\n    childProps.href = as\n  } else if (\n    !legacyBehavior ||\n    passHref ||\n    (child.type === 'a' && !('href' in child.props))\n  ) {\n    childProps.href = addBasePath(as)\n  }\n\n  let link: React.ReactNode\n\n  if (legacyBehavior) {\n    if (process.env.NODE_ENV === 'development') {\n      errorOnce(\n        '`legacyBehavior` is deprecated and will be removed in a future ' +\n          'release. A codemod is available to upgrade your components:\\n\\n' +\n          'npx @next/codemod@latest new-link .\\n\\n' +\n          'Learn more: https://nextjs.org/docs/app/building-your-application/upgrading/codemods#remove-a-tags-from-link-components'\n      )\n    }\n    link = React.cloneElement(child, childProps)\n  } else {\n    link = (\n      <a {...restProps} {...childProps}>\n        {children}\n      </a>\n    )\n  }\n\n  return (\n    <LinkStatusContext.Provider value={linkStatus}>\n      {link}\n    </LinkStatusContext.Provider>\n  )\n}\n\nconst LinkStatusContext = createContext<\n  typeof PENDING_LINK_STATUS | typeof IDLE_LINK_STATUS\n>(IDLE_LINK_STATUS)\n\nexport const useLinkStatus = () => {\n  return useContext(LinkStatusContext)\n}\n"],"names":["LinkComponent","useLinkStatus","isModifiedEvent","event","eventTarget","currentTarget","target","getAttribute","metaKey","ctrlKey","shiftKey","altKey","nativeEvent","which","linkClicked","e","href","as","linkInstanceRef","replace","scroll","onNavigate","nodeName","isAnchorNodeName","toUpperCase","hasAttribute","isLocalURL","preventDefault","location","navigate","isDefaultPrevented","dispatchNavigateAction","current","React","startTransition","formatStringOrUrl","urlObjOrString","formatUrl","props","linkStatus","setOptimisticLinkStatus","useOptimistic","IDLE_LINK_STATUS","children","useRef","hrefProp","asProp","childrenProp","prefetch","prefetchProp","passHref","shallow","onClick","onMouseEnter","onMouseEnterProp","onTouchStart","onTouchStartProp","legacyBehavior","ref","forwardedRef","unstable_dynamicOnHover","restProps","a","router","useContext","AppRouterContext","prefetchEnabled","appPrefetchKind","PrefetchKind","AUTO","FULL","process","env","NODE_ENV","createPropError","args","Error","key","expected","actual","window","requiredPropsGuard","requiredProps","Object","keys","forEach","_","optionalPropsGuard","optionalProps","valType","locale","warnOnce","pathname","hasDynamicSegment","split","some","segment","startsWith","endsWith","useMemo","resolvedHref","child","console","warn","Children","only","err","type","childRef","observeLinkVisibilityOnMount","useCallback","element","mountLinkInstance","unmountLinkForCurrentNavigation","unmountPrefetchableInstance","mergedRef","useMergedRef","childProps","defaultPrevented","upgradeToDynamicPrefetch","onNavigationIntent","__NEXT_LINK_NO_TOUCH_START","undefined","isAbsoluteUrl","addBasePath","link","errorOnce","cloneElement","LinkStatusContext","Provider","value","createContext"],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16460, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/client/components/redirect-status-code.ts"],"sourcesContent":["export enum RedirectStatusCode {\n  SeeOther = 303,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n}\n"],"names":["RedirectStatusCode"],"mappings":";;;;+BAAYA,sBAAAA;;;eAAAA;;;AAAL,IAAKA,qBAAAA,WAAAA,GAAAA,SAAAA,kBAAAA;;;;WAAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16488, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/client/components/redirect-error.ts"],"sourcesContent":["import { RedirectStatusCode } from './redirect-status-code'\n\nexport const REDIRECT_ERROR_CODE = 'NEXT_REDIRECT'\n\nexport enum RedirectType {\n  push = 'push',\n  replace = 'replace',\n}\n\nexport type RedirectError = Error & {\n  digest: `${typeof REDIRECT_ERROR_CODE};${RedirectType};${string};${RedirectStatusCode};`\n}\n\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */\nexport function isRedirectError(error: unknown): error is RedirectError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n\n  const digest = error.digest.split(';')\n  const [errorCode, type] = digest\n  const destination = digest.slice(2, -2).join(';')\n  const status = digest.at(-2)\n\n  const statusCode = Number(status)\n\n  return (\n    errorCode === REDIRECT_ERROR_CODE &&\n    (type === 'replace' || type === 'push') &&\n    typeof destination === 'string' &&\n    !isNaN(statusCode) &&\n    statusCode in RedirectStatusCode\n  )\n}\n"],"names":["REDIRECT_ERROR_CODE","RedirectType","isRedirectError","error","digest","split","errorCode","type","destination","slice","join","status","at","statusCode","Number","isNaN","RedirectStatusCode"],"mappings":";;;;;;;;;;;;;;;;IAEaA,mBAAmB,EAAA;eAAnBA;;IAEDC,YAAY,EAAA;eAAZA;;IAgBIC,eAAe,EAAA;eAAfA;;;oCApBmB;AAE5B,MAAMF,sBAAsB;AAE5B,IAAKC,eAAAA,WAAAA,GAAAA,SAAAA,YAAAA;;;WAAAA;;AAgBL,SAASC,gBAAgBC,KAAc;IAC5C,IACE,OAAOA,UAAU,YACjBA,UAAU,QACV,CAAE,CAAA,YAAYA,KAAI,KAClB,OAAOA,MAAMC,MAAM,KAAK,UACxB;QACA,OAAO;IACT;IAEA,MAAMA,SAASD,MAAMC,MAAM,CAACC,KAAK,CAAC;IAClC,MAAM,CAACC,WAAWC,KAAK,GAAGH;IAC1B,MAAMI,cAAcJ,OAAOK,KAAK,CAAC,GAAG,CAAC,GAAGC,IAAI,CAAC;IAC7C,MAAMC,SAASP,OAAOQ,EAAE,CAAC,CAAC;IAE1B,MAAMC,aAAaC,OAAOH;IAE1B,OACEL,cAAcN,uBACbO,CAAAA,SAAS,aAAaA,SAAS,MAAK,KACrC,OAAOC,gBAAgB,YACvB,CAACO,MAAMF,eACPA,cAAcG,oBAAAA,kBAAkB;AAEpC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16544, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/client/components/redirect.ts"],"sourcesContent":["import { RedirectStatusCode } from './redirect-status-code'\nimport {\n  RedirectType,\n  type RedirectError,\n  isRedirectError,\n  REDIRECT_ERROR_CODE,\n} from './redirect-error'\n\nconst actionAsyncStorage =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/action-async-storage.external') as typeof import('../../server/app-render/action-async-storage.external')\n      ).actionAsyncStorage\n    : undefined\n\nexport function getRedirectError(\n  url: string,\n  type: RedirectType,\n  statusCode: RedirectStatusCode = RedirectStatusCode.TemporaryRedirect\n): RedirectError {\n  const error = new Error(REDIRECT_ERROR_CODE) as RedirectError\n  error.digest = `${REDIRECT_ERROR_CODE};${type};${url};${statusCode};`\n  return error\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 307/303 to the caller.\n * - In a Server Action, type defaults to 'push' and 'replace' elsewhere.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function redirect(\n  /** The URL to redirect to */\n  url: string,\n  type?: RedirectType\n): never {\n  type ??= actionAsyncStorage?.getStore()?.isAction\n    ? RedirectType.push\n    : RedirectType.replace\n\n  throw getRedirectError(url, type, RedirectStatusCode.TemporaryRedirect)\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 308/303 to the caller.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function permanentRedirect(\n  /** The URL to redirect to */\n  url: string,\n  type: RedirectType = RedirectType.replace\n): never {\n  throw getRedirectError(url, type, RedirectStatusCode.PermanentRedirect)\n}\n\n/**\n * Returns the encoded URL from the error if it's a RedirectError, null\n * otherwise. Note that this does not validate the URL returned.\n *\n * @param error the error that may be a redirect error\n * @return the url if the error was a redirect error\n */\nexport function getURLFromRedirectError(error: RedirectError): string\nexport function getURLFromRedirectError(error: unknown): string | null {\n  if (!isRedirectError(error)) return null\n\n  // Slices off the beginning of the digest that contains the code and the\n  // separating ';'.\n  return error.digest.split(';').slice(2, -2).join(';')\n}\n\nexport function getRedirectTypeFromError(error: RedirectError): RedirectType {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return error.digest.split(';', 2)[1] as RedirectType\n}\n\nexport function getRedirectStatusCodeFromError(error: RedirectError): number {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return Number(error.digest.split(';').at(-2))\n}\n"],"names":["getRedirectError","getRedirectStatusCodeFromError","getRedirectTypeFromError","getURLFromRedirectError","permanentRedirect","redirect","actionAsyncStorage","window","require","undefined","url","type","statusCode","RedirectStatusCode","TemporaryRedirect","error","Error","REDIRECT_ERROR_CODE","digest","getStore","isAction","RedirectType","push","replace","PermanentRedirect","isRedirectError","split","slice","join","Number","at"],"mappings":";;;;;;;;;;;;;;;;;;;IAegBA,gBAAgB,EAAA;eAAhBA;;IA6EAC,8BAA8B,EAAA;eAA9BA;;IARAC,wBAAwB,EAAA;eAAxBA;;IARAC,uBAAuB,EAAA;eAAvBA;;IAhBAC,iBAAiB,EAAA;eAAjBA;;IAvBAC,QAAQ,EAAA;eAARA;;;oCArCmB;+BAM5B;AAEP,MAAMC,qBACJ,OAAOC,WAAW,qBAEZC,QAAQ,2KACRF,kBAAkB,GACpBG;AAEC,SAAST,iBACdU,GAAW,EACXC,IAAkB,EAClBC,UAAqE;IAArEA,IAAAA,eAAAA,KAAAA,GAAAA,aAAiCC,oBAAAA,kBAAkB,CAACC,iBAAiB;IAErE,MAAMC,QAAQ,OAAA,cAA8B,CAA9B,IAAIC,MAAMC,eAAAA,mBAAmB,GAA7B,qBAAA;eAAA;oBAAA;sBAAA;IAA6B;IAC3CF,MAAMG,MAAM,GAAMD,eAAAA,mBAAmB,GAAC,MAAGN,OAAK,MAAGD,MAAI,MAAGE,aAAW;IACnE,OAAOG;AACT;AAcO,SAASV,SACd,2BAA2B,GAC3BK,GAAW,EACXC,IAAmB;QAEVL;IAATK,QAAAA,OAAAA,OAAAA,OAASL,CAAAA,sBAAAA,OAAAA,KAAAA,IAAAA,CAAAA,+BAAAA,mBAAoBa,QAAQ,EAAA,KAAA,OAAA,KAAA,IAA5Bb,6BAAgCc,QAAQ,IAC7CC,eAAAA,YAAY,CAACC,IAAI,GACjBD,eAAAA,YAAY,CAACE,OAAO;IAExB,MAAMvB,iBAAiBU,KAAKC,MAAME,oBAAAA,kBAAkB,CAACC,iBAAiB;AACxE;AAaO,SAASV,kBACd,2BAA2B,GAC3BM,GAAW,EACXC,IAAyC;IAAzCA,IAAAA,SAAAA,KAAAA,GAAAA,OAAqBU,eAAAA,YAAY,CAACE,OAAO;IAEzC,MAAMvB,iBAAiBU,KAAKC,MAAME,oBAAAA,kBAAkB,CAACW,iBAAiB;AACxE;AAUO,SAASrB,wBAAwBY,KAAc;IACpD,IAAI,CAACU,CAAAA,GAAAA,eAAAA,eAAe,EAACV,QAAQ,OAAO;IAEpC,wEAAwE;IACxE,kBAAkB;IAClB,OAAOA,MAAMG,MAAM,CAACQ,KAAK,CAAC,KAAKC,KAAK,CAAC,GAAG,CAAC,GAAGC,IAAI,CAAC;AACnD;AAEO,SAAS1B,yBAAyBa,KAAoB;IAC3D,IAAI,CAACU,CAAAA,GAAAA,eAAAA,eAAe,EAACV,QAAQ;QAC3B,MAAM,OAAA,cAAiC,CAAjC,IAAIC,MAAM,yBAAV,qBAAA;mBAAA;wBAAA;0BAAA;QAAgC;IACxC;IAEA,OAAOD,MAAMG,MAAM,CAACQ,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE;AACtC;AAEO,SAASzB,+BAA+Bc,KAAoB;IACjE,IAAI,CAACU,CAAAA,GAAAA,eAAAA,eAAe,EAACV,QAAQ;QAC3B,MAAM,OAAA,cAAiC,CAAjC,IAAIC,MAAM,yBAAV,qBAAA;mBAAA;wBAAA;0BAAA;QAAgC;IACxC;IAEA,OAAOa,OAAOd,MAAMG,MAAM,CAACQ,KAAK,CAAC,KAAKI,EAAE,CAAC,CAAC;AAC5C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16642, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/client/components/http-access-fallback/http-access-fallback.ts"],"sourcesContent":["export const HTTPAccessErrorStatus = {\n  NOT_FOUND: 404,\n  FORBIDDEN: 403,\n  UNAUTHORIZED: 401,\n}\n\nconst ALLOWED_CODES = new Set(Object.values(HTTPAccessErrorStatus))\n\nexport const HTTP_ERROR_FALLBACK_ERROR_CODE = 'NEXT_HTTP_ERROR_FALLBACK'\n\nexport type HTTPAccessFallbackError = Error & {\n  digest: `${typeof HTTP_ERROR_FALLBACK_ERROR_CODE};${string}`\n}\n\n/**\n * Checks an error to determine if it's an error generated by\n * the HTTP navigation APIs `notFound()`, `forbidden()` or `unauthorized()`.\n *\n * @param error the error that may reference a HTTP access error\n * @returns true if the error is a HTTP access error\n */\nexport function isHTTPAccessFallbackError(\n  error: unknown\n): error is HTTPAccessFallbackError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n  const [prefix, httpStatus] = error.digest.split(';')\n\n  return (\n    prefix === HTTP_ERROR_FALLBACK_ERROR_CODE &&\n    ALLOWED_CODES.has(Number(httpStatus))\n  )\n}\n\nexport function getAccessFallbackHTTPStatus(\n  error: HTTPAccessFallbackError\n): number {\n  const httpStatus = error.digest.split(';')[1]\n  return Number(httpStatus)\n}\n\nexport function getAccessFallbackErrorTypeByStatus(\n  status: number\n): 'not-found' | 'forbidden' | 'unauthorized' | undefined {\n  switch (status) {\n    case 401:\n      return 'unauthorized'\n    case 403:\n      return 'forbidden'\n    case 404:\n      return 'not-found'\n    default:\n      return\n  }\n}\n"],"names":["HTTPAccessErrorStatus","HTTP_ERROR_FALLBACK_ERROR_CODE","getAccessFallbackErrorTypeByStatus","getAccessFallbackHTTPStatus","isHTTPAccessFallbackError","NOT_FOUND","FORBIDDEN","UNAUTHORIZED","ALLOWED_CODES","Set","Object","values","error","digest","prefix","httpStatus","split","has","Number","status"],"mappings":";;;;;;;;;;;;;;;;;;IAAaA,qBAAqB,EAAA;eAArBA;;IAQAC,8BAA8B,EAAA;eAA9BA;;IAuCGC,kCAAkC,EAAA;eAAlCA;;IAPAC,2BAA2B,EAAA;eAA3BA;;IAnBAC,yBAAyB,EAAA;eAAzBA;;;AArBT,MAAMJ,wBAAwB;IACnCK,WAAW;IACXC,WAAW;IACXC,cAAc;AAChB;AAEA,MAAMC,gBAAgB,IAAIC,IAAIC,OAAOC,MAAM,CAACX;AAErC,MAAMC,iCAAiC;AAavC,SAASG,0BACdQ,KAAc;IAEd,IACE,OAAOA,UAAU,YACjBA,UAAU,QACV,CAAE,CAAA,YAAYA,KAAI,KAClB,OAAOA,MAAMC,MAAM,KAAK,UACxB;QACA,OAAO;IACT;IACA,MAAM,CAACC,QAAQC,WAAW,GAAGH,MAAMC,MAAM,CAACG,KAAK,CAAC;IAEhD,OACEF,WAAWb,kCACXO,cAAcS,GAAG,CAACC,OAAOH;AAE7B;AAEO,SAASZ,4BACdS,KAA8B;IAE9B,MAAMG,aAAaH,MAAMC,MAAM,CAACG,KAAK,CAAC,IAAI,CAAC,EAAE;IAC7C,OAAOE,OAAOH;AAChB;AAEO,SAASb,mCACdiB,MAAc;IAEd,OAAQA;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE;IACJ;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16718, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/client/components/not-found.ts"],"sourcesContent":["import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n/**\n * This function allows you to render the [not-found.js file](https://nextjs.org/docs/app/api-reference/file-conventions/not-found)\n * within a route segment as well as inject a tag.\n *\n * `notFound()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a `<meta name=\"robots\" content=\"noindex\" />` meta tag and set the status code to 404.\n * - In a Route Handler or Server Action, it will serve a 404 to the caller.\n *\n * Read more: [Next.js Docs: `notFound`](https://nextjs.org/docs/app/api-reference/functions/not-found)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};404`\n\nexport function notFound(): never {\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n\n  throw error\n}\n"],"names":["notFound","DIGEST","HTTP_ERROR_FALLBACK_ERROR_CODE","error","Error","digest"],"mappings":";;;;+BAsBgBA,YAAAA;;;eAAAA;;;oCAnBT;AAEP;;;;;;;;;;;;;CAaC,GAED,MAAMC,SAAU,KAAEC,oBAAAA,8BAA8B,GAAC;AAE1C,SAASF;IACd,4CAA4C;IAC5C,MAAMG,QAAQ,OAAA,cAAiB,CAAjB,IAAIC,MAAMH,SAAV,qBAAA;eAAA;oBAAA;sBAAA;IAAgB;IAC5BE,MAAkCE,MAAM,GAAGJ;IAE7C,MAAME;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16765, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/client/components/forbidden.ts"],"sourcesContent":["import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `forbidden` docs\n/**\n * @experimental\n * This function allows you to render the [forbidden.js file](https://nextjs.org/docs/app/api-reference/file-conventions/forbidden)\n * within a route segment as well as inject a tag.\n *\n * `forbidden()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * Read more: [Next.js Docs: `forbidden`](https://nextjs.org/docs/app/api-reference/functions/forbidden)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};403`\n\nexport function forbidden(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`forbidden()\\` is experimental and only allowed to be enabled when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n"],"names":["forbidden","DIGEST","HTTP_ERROR_FALLBACK_ERROR_CODE","process","env","__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS","Error","error","digest"],"mappings":";;;;+BAqBgBA,aAAAA;;;eAAAA;;;oCAlBT;AAEP,6BAA6B;AAC7B;;;;;;;;;;;CAWC,GAED,MAAMC,SAAU,KAAEC,oBAAAA,8BAA8B,GAAC;AAE1C,SAASF;IACd,IAAI,CAACG,QAAQC,GAAG,CAACC,uBAAqC,YAAF;QAClD,MAAM,OAAA,cAEL,CAFK,IAAIC,MACP,gHADG,qBAAA;mBAAA;wBAAA;0BAAA;QAEN;IACF;IAEA,4CAA4C;IAC5C,MAAMC,QAAQ,OAAA,cAAiB,CAAjB,IAAID,MAAML,SAAV,qBAAA;eAAA;oBAAA;sBAAA;IAAgB;IAC5BM,MAAkCC,MAAM,GAAGP;IAC7C,MAAMM;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16818, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/client/components/unauthorized.ts"],"sourcesContent":["import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `unauthorized` docs\n/**\n * @experimental\n * This function allows you to render the [unauthorized.js file](https://nextjs.org/docs/app/api-reference/file-conventions/unauthorized)\n * within a route segment as well as inject a tag.\n *\n * `unauthorized()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n *\n * Read more: [Next.js Docs: `unauthorized`](https://nextjs.org/docs/app/api-reference/functions/unauthorized)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};401`\n\nexport function unauthorized(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`unauthorized()\\` is experimental and only allowed to be used when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n"],"names":["unauthorized","DIGEST","HTTP_ERROR_FALLBACK_ERROR_CODE","process","env","__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS","Error","error","digest"],"mappings":";;;;+BAsBgBA,gBAAAA;;;eAAAA;;;oCAnBT;AAEP,gCAAgC;AAChC;;;;;;;;;;;;CAYC,GAED,MAAMC,SAAU,KAAEC,oBAAAA,8BAA8B,GAAC;AAE1C,SAASF;IACd,IAAI,CAACG,QAAQC,GAAG,CAACC,uBAAqC,YAAF;QAClD,MAAM,OAAA,cAEL,CAFK,IAAIC,MACP,gHADG,qBAAA;mBAAA;wBAAA;0BAAA;QAEN;IACF;IAEA,4CAA4C;IAC5C,MAAMC,QAAQ,OAAA,cAAiB,CAAjB,IAAID,MAAML,SAAV,qBAAA;eAAA;oBAAA;sBAAA;IAAgB;IAC5BM,MAAkCC,MAAM,GAAGP;IAC7C,MAAMM;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16872, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/server/dynamic-rendering-utils.ts"],"sourcesContent":["export function isHangingPromiseRejectionError(\n  err: unknown\n): err is HangingPromiseRejectionError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === HANGING_PROMISE_REJECTION\n}\n\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION'\n\nclass HangingPromiseRejectionError extends Error {\n  public readonly digest = HANGING_PROMISE_REJECTION\n\n  constructor(public readonly expression: string) {\n    super(\n      `During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context.`\n    )\n  }\n}\n\ntype AbortListeners = Array<(err: unknown) => void>\nconst abortListenersBySignal = new WeakMap<AbortSignal, AbortListeners>()\n\n/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for dynamicIO where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */\nexport function makeHangingPromise<T>(\n  signal: AbortSignal,\n  expression: string\n): Promise<T> {\n  if (signal.aborted) {\n    return Promise.reject(new HangingPromiseRejectionError(expression))\n  } else {\n    const hangingPromise = new Promise<T>((_, reject) => {\n      const boundRejection = reject.bind(\n        null,\n        new HangingPromiseRejectionError(expression)\n      )\n      let currentListeners = abortListenersBySignal.get(signal)\n      if (currentListeners) {\n        currentListeners.push(boundRejection)\n      } else {\n        const listeners = [boundRejection]\n        abortListenersBySignal.set(signal, listeners)\n        signal.addEventListener(\n          'abort',\n          () => {\n            for (let i = 0; i < listeners.length; i++) {\n              listeners[i]()\n            }\n          },\n          { once: true }\n        )\n      }\n    })\n    // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n    // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n    // your own promise out of it you'll need to ensure you handle the error when it rejects.\n    hangingPromise.catch(ignoreReject)\n    return hangingPromise\n  }\n}\n\nfunction ignoreReject() {}\n"],"names":["isHangingPromiseRejectionError","makeHangingPromise","err","digest","HANGING_PROMISE_REJECTION","HangingPromiseRejectionError","Error","constructor","expression","abortListenersBySignal","WeakMap","signal","aborted","Promise","reject","hangingPromise","_","boundRejection","bind","currentListeners","get","push","listeners","set","addEventListener","i","length","once","catch","ignoreReject"],"mappings":";;;;;;;;;;;;;;;IAAgBA,8BAA8B,EAAA;eAA9BA;;IAgCAC,kBAAkB,EAAA;eAAlBA;;;AAhCT,SAASD,+BACdE,GAAY;IAEZ,IAAI,OAAOA,QAAQ,YAAYA,QAAQ,QAAQ,CAAE,CAAA,YAAYA,GAAE,GAAI;QACjE,OAAO;IACT;IAEA,OAAOA,IAAIC,MAAM,KAAKC;AACxB;AAEA,MAAMA,4BAA4B;AAElC,MAAMC,qCAAqCC;IAGzCC,YAA4BC,UAAkB,CAAE;QAC9C,KAAK,CACH,CAAC,qBAAqB,EAAEA,WAAW,qGAAqG,EAAEA,WAAW,qJAAqJ,CAAC,GAAA,IAAA,CAFnRA,UAAAA,GAAAA,YAAAA,IAAAA,CAFZL,MAAAA,GAASC;IAMzB;AACF;AAGA,MAAMK,yBAAyB,IAAIC;AAS5B,SAAST,mBACdU,MAAmB,EACnBH,UAAkB;IAElB,IAAIG,OAAOC,OAAO,EAAE;QAClB,OAAOC,QAAQC,MAAM,CAAC,IAAIT,6BAA6BG;IACzD,OAAO;QACL,MAAMO,iBAAiB,IAAIF,QAAW,CAACG,GAAGF;YACxC,MAAMG,iBAAiBH,OAAOI,IAAI,CAChC,MACA,IAAIb,6BAA6BG;YAEnC,IAAIW,mBAAmBV,uBAAuBW,GAAG,CAACT;YAClD,IAAIQ,kBAAkB;gBACpBA,iBAAiBE,IAAI,CAACJ;YACxB,OAAO;gBACL,MAAMK,YAAY;oBAACL;iBAAe;gBAClCR,uBAAuBc,GAAG,CAACZ,QAAQW;gBACnCX,OAAOa,gBAAgB,CACrB,SACA;oBACE,IAAK,IAAIC,IAAI,GAAGA,IAAIH,UAAUI,MAAM,EAAED,IAAK;wBACzCH,SAAS,CAACG,EAAE;oBACd;gBACF,GACA;oBAAEE,MAAM;gBAAK;YAEjB;QACF;QACA,2GAA2G;QAC3G,6GAA6G;QAC7G,yFAAyF;QACzFZ,eAAea,KAAK,CAACC;QACrB,OAAOd;IACT;AACF;AAEA,SAASc,gBAAgB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16943, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/server/lib/router-utils/is-postpone.ts"],"sourcesContent":["const REACT_POSTPONE_TYPE: symbol = Symbol.for('react.postpone')\n\nexport function isPostpone(error: any): boolean {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    error.$$typeof === REACT_POSTPONE_TYPE\n  )\n}\n"],"names":["isPostpone","REACT_POSTPONE_TYPE","Symbol","for","error","$$typeof"],"mappings":";;;;+BAEgBA,cAAAA;;;eAAAA;;;AAFhB,MAAMC,sBAA8BC,OAAOC,GAAG,CAAC;AAExC,SAASH,WAAWI,KAAU;IACnC,OACE,OAAOA,UAAU,YACjBA,UAAU,QACVA,MAAMC,QAAQ,KAAKJ;AAEvB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16962, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/shared/lib/lazy-dynamic/bailout-to-csr.ts"],"sourcesContent":["// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = 'BAILOUT_TO_CLIENT_SIDE_RENDERING'\n\n/** An error that should be thrown when we want to bail out to client-side rendering. */\nexport class BailoutToCSRError extends Error {\n  public readonly digest = BAILOUT_TO_CSR\n\n  constructor(public readonly reason: string) {\n    super(`Bail out to client-side rendering: ${reason}`)\n  }\n}\n\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */\nexport function isBailoutToCSRError(err: unknown): err is BailoutToCSRError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === BAILOUT_TO_CSR\n}\n"],"names":["BailoutToCSRError","isBailoutToCSRError","BAILOUT_TO_CSR","Error","constructor","reason","digest","err"],"mappings":"AAAA,+GAA+G;;;;;;;;;;;;;;;;IAIlGA,iBAAiB,EAAA;eAAjBA;;IASGC,mBAAmB,EAAA;eAAnBA;;;AAZhB,MAAMC,iBAAiB;AAGhB,MAAMF,0BAA0BG;IAGrCC,YAA4BC,MAAc,CAAE;QAC1C,KAAK,CAAE,wCAAqCA,SAAAA,IAAAA,CADlBA,MAAAA,GAAAA,QAAAA,IAAAA,CAFZC,MAAAA,GAASJ;IAIzB;AACF;AAGO,SAASD,oBAAoBM,GAAY;IAC9C,IAAI,OAAOA,QAAQ,YAAYA,QAAQ,QAAQ,CAAE,CAAA,YAAYA,GAAE,GAAI;QACjE,OAAO;IACT;IAEA,OAAOA,IAAID,MAAM,KAAKJ;AACxB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17002, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/client/components/is-next-router-error.ts"],"sourcesContent":["import {\n  isHTTPAccessFallbackError,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\nimport { isRedirectError, type RedirectError } from './redirect-error'\n\n/**\n * Returns true if the error is a navigation signal error. These errors are\n * thrown by user code to perform navigation operations and interrupt the React\n * render.\n */\nexport function isNextRouterError(\n  error: unknown\n): error is RedirectError | HTTPAccessFallbackError {\n  return isRedirectError(error) || isHTTPAccessFallbackError(error)\n}\n"],"names":["isNextRouterError","error","isRedirectError","isHTTPAccessFallbackError"],"mappings":";;;;+BAWgBA,qBAAAA;;;eAAAA;;;oCART;+BAC6C;AAO7C,SAASA,kBACdC,KAAc;IAEd,OAAOC,CAAAA,GAAAA,eAAAA,eAAe,EAACD,UAAUE,CAAAA,GAAAA,oBAAAA,yBAAyB,EAACF;AAC7D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17029, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/client/components/hooks-server-context.ts"],"sourcesContent":["const DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE'\n\nexport class DynamicServerError extends Error {\n  digest: typeof DYNAMIC_ERROR_CODE = DYNAMIC_ERROR_CODE\n\n  constructor(public readonly description: string) {\n    super(`Dynamic server usage: ${description}`)\n  }\n}\n\nexport function isDynamicServerError(err: unknown): err is DynamicServerError {\n  if (\n    typeof err !== 'object' ||\n    err === null ||\n    !('digest' in err) ||\n    typeof err.digest !== 'string'\n  ) {\n    return false\n  }\n\n  return err.digest === DYNAMIC_ERROR_CODE\n}\n"],"names":["DynamicServerError","isDynamicServerError","DYNAMIC_ERROR_CODE","Error","constructor","description","digest","err"],"mappings":";;;;;;;;;;;;;;;IAEaA,kBAAkB,EAAA;eAAlBA;;IAQGC,oBAAoB,EAAA;eAApBA;;;AAVhB,MAAMC,qBAAqB;AAEpB,MAAMF,2BAA2BG;IAGtCC,YAA4BC,WAAmB,CAAE;QAC/C,KAAK,CAAE,2BAAwBA,cAAAA,IAAAA,CADLA,WAAAA,GAAAA,aAAAA,IAAAA,CAF5BC,MAAAA,GAAoCJ;IAIpC;AACF;AAEO,SAASD,qBAAqBM,GAAY;IAC/C,IACE,OAAOA,QAAQ,YACfA,QAAQ,QACR,CAAE,CAAA,YAAYA,GAAE,KAChB,OAAOA,IAAID,MAAM,KAAK,UACtB;QACA,OAAO;IACT;IAEA,OAAOC,IAAID,MAAM,KAAKJ;AACxB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17075, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/client/components/static-generation-bailout.ts"],"sourcesContent":["const NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT'\n\nexport class StaticGenBailoutError extends Error {\n  public readonly code = NEXT_STATIC_GEN_BAILOUT\n}\n\nexport function isStaticGenBailoutError(\n  error: unknown\n): error is StaticGenBailoutError {\n  if (typeof error !== 'object' || error === null || !('code' in error)) {\n    return false\n  }\n\n  return error.code === NEXT_STATIC_GEN_BAILOUT\n}\n"],"names":["StaticGenBailoutError","isStaticGenBailoutError","NEXT_STATIC_GEN_BAILOUT","Error","code","error"],"mappings":";;;;;;;;;;;;;;;IAEaA,qBAAqB,EAAA;eAArBA;;IAIGC,uBAAuB,EAAA;eAAvBA;;;AANhB,MAAMC,0BAA0B;AAEzB,MAAMF,8BAA8BG;;QAApC,KAAA,IAAA,OAAA,IAAA,CACWC,IAAAA,GAAOF;;AACzB;AAEO,SAASD,wBACdI,KAAc;IAEd,IAAI,OAAOA,UAAU,YAAYA,UAAU,QAAQ,CAAE,CAAA,UAAUA,KAAI,GAAI;QACrE,OAAO;IACT;IAEA,OAAOA,MAAMD,IAAI,KAAKF;AACxB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17121, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/lib/metadata/metadata-constants.tsx"],"sourcesContent":["export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__'\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__'\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__'\n"],"names":["METADATA_BOUNDARY_NAME","OUTLET_BOUNDARY_NAME","VIEWPORT_BOUNDARY_NAME"],"mappings":";;;;;;;;;;;;;;;;IAAaA,sBAAsB,EAAA;eAAtBA;;IAEAC,oBAAoB,EAAA;eAApBA;;IADAC,sBAAsB,EAAA;eAAtBA;;;AADN,MAAMF,yBAAyB;AAC/B,MAAME,yBAAyB;AAC/B,MAAMD,uBAAuB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17155, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/lib/scheduler.ts"],"sourcesContent":["export type ScheduledFn<T = void> = () => T | PromiseLike<T>\nexport type SchedulerFn<T = void> = (cb: ScheduledFn<T>) => void\n\n/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */\nexport const scheduleOnNextTick = <T = void>(cb: ScheduledFn<T>): void => {\n  // We use Promise.resolve().then() here so that the operation is scheduled at\n  // the end of the promise job queue, we then add it to the next process tick\n  // to ensure it's evaluated afterwards.\n  //\n  // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n  //\n  Promise.resolve().then(() => {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      setTimeout(cb, 0)\n    } else {\n      process.nextTick(cb)\n    }\n  })\n}\n\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */\nexport const scheduleImmediate = <T = void>(cb: ScheduledFn<T>): void => {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    setTimeout(cb, 0)\n  } else {\n    setImmediate(cb)\n  }\n}\n\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */\nexport function atLeastOneTask() {\n  return new Promise<void>((resolve) => scheduleImmediate(resolve))\n}\n\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */\nexport function waitAtLeastOneReactRenderTask(): Promise<void> {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    return new Promise((r) => setTimeout(r, 0))\n  } else {\n    return new Promise((r) => setImmediate(r))\n  }\n}\n"],"names":["atLeastOneTask","scheduleImmediate","scheduleOnNextTick","waitAtLeastOneReactRenderTask","cb","Promise","resolve","then","process","env","NEXT_RUNTIME","setTimeout","nextTick","setImmediate","r"],"mappings":";;;;;;;;;;;;;;;;;IA4CgBA,cAAc,EAAA;eAAdA;;IAbHC,iBAAiB,EAAA;eAAjBA;;IAtBAC,kBAAkB,EAAA;eAAlBA;;IAgDGC,6BAA6B,EAAA;eAA7BA;;;AAhDT,MAAMD,qBAAqB,CAAWE;IAC3C,6EAA6E;IAC7E,4EAA4E;IAC5E,uCAAuC;IACvC,EAAE;IACF,kLAAkL;IAClL,EAAE;IACFC,QAAQC,OAAO,GAAGC,IAAI,CAAC;QACrB,IAAIC,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;QAEzC,OAAO;YACLF,QAAQI,QAAQ,CAACR;QACnB;IACF;AACF;AAQO,MAAMH,oBAAoB,CAAWG;IAC1C,IAAII,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;IAEzC,OAAO;QACLG,aAAaT;IACf;AACF;AAOO,SAASJ;IACd,OAAO,IAAIK,QAAc,CAACC,UAAYL,kBAAkBK;AAC1D;AAWO,SAASH;IACd,IAAIK,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;IAEzC,OAAO;QACL,OAAO,IAAIL,QAAQ,CAACS,IAAMD,aAAaC;IACzC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17222, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/server/app-render/dynamic-rendering.ts"],"sourcesContent":["/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */\n\nimport type { WorkStore } from '../app-render/work-async-storage.external'\nimport type {\n  WorkUnitStore,\n  RequestStore,\n  PrerenderStoreLegacy,\n  PrerenderStoreModern,\n} from '../app-render/work-unit-async-storage.external'\n\n// Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react'\n\nimport { DynamicServerError } from '../../client/components/hooks-server-context'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n} from '../../lib/metadata/metadata-constants'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\n\nconst hasPostpone = typeof React.unstable_postpone === 'function'\n\nexport type DynamicAccess = {\n  /**\n   * If debugging, this will contain the stack trace of where the dynamic access\n   * occurred. This is used to provide more information to the user about why\n   * their page is being rendered dynamically.\n   */\n  stack?: string\n\n  /**\n   * The expression that was accessed dynamically.\n   */\n  expression: string\n}\n\n// Stores dynamic reasons used during an RSC render.\nexport type DynamicTrackingState = {\n  /**\n   * When true, stack information will also be tracked during dynamic access.\n   */\n  readonly isDebugDynamicAccesses: boolean | undefined\n\n  /**\n   * The dynamic accesses that occurred during the render.\n   */\n  readonly dynamicAccesses: Array<DynamicAccess>\n\n  syncDynamicExpression: undefined | string\n  syncDynamicErrorWithStack: null | Error\n  // Dev only\n  syncDynamicLogged?: boolean\n}\n\n// Stores dynamic reasons used during an SSR render.\nexport type DynamicValidationState = {\n  hasSuspendedDynamic: boolean\n  hasDynamicMetadata: boolean\n  hasDynamicViewport: boolean\n  hasSyncDynamicErrors: boolean\n  dynamicErrors: Array<Error>\n}\n\nexport function createDynamicTrackingState(\n  isDebugDynamicAccesses: boolean | undefined\n): DynamicTrackingState {\n  return {\n    isDebugDynamicAccesses,\n    dynamicAccesses: [],\n    syncDynamicExpression: undefined,\n    syncDynamicErrorWithStack: null,\n  }\n}\n\nexport function createDynamicValidationState(): DynamicValidationState {\n  return {\n    hasSuspendedDynamic: false,\n    hasDynamicMetadata: false,\n    hasDynamicViewport: false,\n    hasSyncDynamicErrors: false,\n    dynamicErrors: [],\n  }\n}\n\nexport function getFirstDynamicReason(\n  trackingState: DynamicTrackingState\n): undefined | string {\n  return trackingState.dynamicAccesses[0]?.expression\n}\n\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */\nexport function markCurrentScopeAsDynamic(\n  store: WorkStore,\n  workUnitStore: undefined | Exclude<WorkUnitStore, PrerenderStoreModern>,\n  expression: string\n): void {\n  if (workUnitStore) {\n    if (\n      workUnitStore.type === 'cache' ||\n      workUnitStore.type === 'unstable-cache'\n    ) {\n      // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n      // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n      // forbidden inside a cache scope.\n      return\n    }\n  }\n\n  // If we're forcing dynamic rendering or we're forcing static rendering, we\n  // don't need to do anything here because the entire page is already dynamic\n  // or it's static and it should not throw or postpone here.\n  if (store.forceDynamic || store.forceStatic) return\n\n  if (store.dynamicShouldError) {\n    throw new StaticGenBailoutError(\n      `Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n    )\n  }\n\n  if (workUnitStore) {\n    if (workUnitStore.type === 'prerender-ppr') {\n      postponeWithTracking(\n        store.route,\n        expression,\n        workUnitStore.dynamicTracking\n      )\n    } else if (workUnitStore.type === 'prerender-legacy') {\n      workUnitStore.revalidate = 0\n\n      // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n      const err = new DynamicServerError(\n        `Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n      )\n      store.dynamicUsageDescription = expression\n      store.dynamicUsageStack = err.stack\n\n      throw err\n    } else if (\n      process.env.NODE_ENV === 'development' &&\n      workUnitStore &&\n      workUnitStore.type === 'request'\n    ) {\n      workUnitStore.usedDynamic = true\n    }\n  }\n}\n\n/**\n * This function communicates that some dynamic path parameter was read. This\n * differs from the more general `trackDynamicDataAccessed` in that it is will\n * not error when `dynamic = \"error\"` is set.\n *\n * @param store The static generation store\n * @param expression The expression that was accessed dynamically\n */\nexport function trackFallbackParamAccessed(\n  store: WorkStore,\n  expression: string\n): void {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  if (!prerenderStore || prerenderStore.type !== 'prerender-ppr') return\n\n  postponeWithTracking(store.route, expression, prerenderStore.dynamicTracking)\n}\n\n/**\n * This function is meant to be used when prerendering without dynamicIO or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */\nexport function throwToInterruptStaticGeneration(\n  expression: string,\n  store: WorkStore,\n  prerenderStore: PrerenderStoreLegacy\n): never {\n  // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n  const err = new DynamicServerError(\n    `Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n  )\n\n  prerenderStore.revalidate = 0\n\n  store.dynamicUsageDescription = expression\n  store.dynamicUsageStack = err.stack\n\n  throw err\n}\n\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */\nexport function trackDynamicDataInDynamicRender(\n  _store: WorkStore,\n  workUnitStore: void | WorkUnitStore\n) {\n  if (workUnitStore) {\n    if (\n      workUnitStore.type === 'cache' ||\n      workUnitStore.type === 'unstable-cache'\n    ) {\n      // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n      // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n      // forbidden inside a cache scope.\n      return\n    }\n    if (\n      workUnitStore.type === 'prerender' ||\n      workUnitStore.type === 'prerender-legacy'\n    ) {\n      workUnitStore.revalidate = 0\n    }\n    if (\n      process.env.NODE_ENV === 'development' &&\n      workUnitStore.type === 'request'\n    ) {\n      workUnitStore.usedDynamic = true\n    }\n  }\n}\n\n// Despite it's name we don't actually abort unless we have a controller to call abort on\n// There are times when we let a prerender run long to discover caches where we want the semantics\n// of tracking dynamic access without terminating the prerender early\nfunction abortOnSynchronousDynamicDataAccess(\n  route: string,\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n\n  const error = createPrerenderInterruptedError(reason)\n\n  prerenderStore.controller.abort(error)\n\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function abortOnSynchronousPlatformIOAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    if (dynamicTracking.syncDynamicErrorWithStack === null) {\n      dynamicTracking.syncDynamicExpression = expression\n      dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n    }\n  }\n  abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n}\n\nexport function trackSynchronousPlatformIOAccessInDev(\n  requestStore: RequestStore\n): void {\n  // We don't actually have a controller to abort but we do the semantic equivalent by\n  // advancing the request store out of prerender mode\n  requestStore.prerenderPhase = false\n}\n\n/**\n * use this function when prerendering with dynamicIO. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in dynamicIO mode.\n *\n * @internal\n */\nexport function abortAndThrowOnSynchronousRequestDataAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): never {\n  const prerenderSignal = prerenderStore.controller.signal\n  if (prerenderSignal.aborted === false) {\n    // TODO it would be better to move this aborted check into the callsite so we can avoid making\n    // the error object when it isn't relevant to the aborting of the prerender however\n    // since we need the throw semantics regardless of whether we abort it is easier to land\n    // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n    // to ideal implementation\n    const dynamicTracking = prerenderStore.dynamicTracking\n    if (dynamicTracking) {\n      if (dynamicTracking.syncDynamicErrorWithStack === null) {\n        dynamicTracking.syncDynamicExpression = expression\n        dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n        if (prerenderStore.validating === true) {\n          // We always log Request Access in dev at the point of calling the function\n          // So we mark the dynamic validation as not requiring it to be printed\n          dynamicTracking.syncDynamicLogged = true\n        }\n      }\n    }\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n  }\n  throw createPrerenderInterruptedError(\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n  )\n}\n\n// For now these implementations are the same so we just reexport\nexport const trackSynchronousRequestDataAccessInDev =\n  trackSynchronousPlatformIOAccessInDev\n\n/**\n * This component will call `React.postpone` that throws the postponed error.\n */\ntype PostponeProps = {\n  reason: string\n  route: string\n}\nexport function Postpone({ reason, route }: PostponeProps): never {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  const dynamicTracking =\n    prerenderStore && prerenderStore.type === 'prerender-ppr'\n      ? prerenderStore.dynamicTracking\n      : null\n  postponeWithTracking(route, reason, dynamicTracking)\n}\n\nexport function postponeWithTracking(\n  route: string,\n  expression: string,\n  dynamicTracking: null | DynamicTrackingState\n): never {\n  assertPostpone()\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n\n  React.unstable_postpone(createPostponeReason(route, expression))\n}\n\nfunction createPostponeReason(route: string, expression: string) {\n  return (\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` +\n    `React throws this special object to indicate where. It should not be caught by ` +\n    `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`\n  )\n}\n\nexport function isDynamicPostpone(err: unknown) {\n  if (\n    typeof err === 'object' &&\n    err !== null &&\n    typeof (err as any).message === 'string'\n  ) {\n    return isDynamicPostponeReason((err as any).message)\n  }\n  return false\n}\n\nfunction isDynamicPostponeReason(reason: string) {\n  return (\n    reason.includes(\n      'needs to bail out of prerendering at this point because it used'\n    ) &&\n    reason.includes(\n      'Learn more: https://nextjs.org/docs/messages/ppr-caught-error'\n    )\n  )\n}\n\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n  throw new Error(\n    'Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'\n  )\n}\n\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED'\n\nfunction createPrerenderInterruptedError(message: string): Error {\n  const error = new Error(message)\n  ;(error as any).digest = NEXT_PRERENDER_INTERRUPTED\n  return error\n}\n\ntype DigestError = Error & {\n  digest: string\n}\n\nexport function isPrerenderInterruptedError(\n  error: unknown\n): error is DigestError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    (error as any).digest === NEXT_PRERENDER_INTERRUPTED &&\n    'name' in error &&\n    'message' in error &&\n    error instanceof Error\n  )\n}\n\nexport function accessedDynamicData(\n  dynamicAccesses: Array<DynamicAccess>\n): boolean {\n  return dynamicAccesses.length > 0\n}\n\nexport function consumeDynamicAccess(\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n): DynamicTrackingState['dynamicAccesses'] {\n  // We mutate because we only call this once we are no longer writing\n  // to the dynamicTrackingState and it's more efficient than creating a new\n  // array.\n  serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses)\n  return serverDynamic.dynamicAccesses\n}\n\nexport function formatDynamicAPIAccesses(\n  dynamicAccesses: Array<DynamicAccess>\n): string[] {\n  return dynamicAccesses\n    .filter(\n      (access): access is Required<DynamicAccess> =>\n        typeof access.stack === 'string' && access.stack.length > 0\n    )\n    .map(({ expression, stack }) => {\n      stack = stack\n        .split('\\n')\n        // Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4)\n        .filter((line) => {\n          // Exclude Next.js internals from the stack trace.\n          if (line.includes('node_modules/next/')) {\n            return false\n          }\n\n          // Exclude anonymous functions from the stack trace.\n          if (line.includes(' (<anonymous>)')) {\n            return false\n          }\n\n          // Exclude Node.js internals from the stack trace.\n          if (line.includes(' (node:')) {\n            return false\n          }\n\n          return true\n        })\n        .join('\\n')\n      return `Dynamic API Usage Debug - ${expression}:\\n${stack}`\n    })\n}\n\nfunction assertPostpone() {\n  if (!hasPostpone) {\n    throw new Error(\n      `Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`\n    )\n  }\n}\n\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */\nexport function createPostponedAbortSignal(reason: string): AbortSignal {\n  assertPostpone()\n  const controller = new AbortController()\n  // We get our hands on a postpone instance by calling postpone and catching the throw\n  try {\n    React.unstable_postpone(reason)\n  } catch (x: unknown) {\n    controller.abort(x)\n  }\n  return controller.signal\n}\n\n/**\n * In a prerender, we may end up with hanging Promises as inputs due them\n * stalling on connection() or because they're loading dynamic data. In that\n * case we need to abort the encoding of arguments since they'll never complete.\n */\nexport function createHangingInputAbortSignal(\n  workUnitStore: PrerenderStoreModern\n): AbortSignal {\n  const controller = new AbortController()\n\n  if (workUnitStore.cacheSignal) {\n    // If we have a cacheSignal it means we're in a prospective render. If the input\n    // we're waiting on is coming from another cache, we do want to wait for it so that\n    // we can resolve this cache entry too.\n    workUnitStore.cacheSignal.inputReady().then(() => {\n      controller.abort()\n    })\n  } else {\n    // Otherwise we're in the final render and we should already have all our caches\n    // filled. We might still be waiting on some microtasks so we wait one tick before\n    // giving up. When we give up, we still want to render the content of this cache\n    // as deeply as we can so that we can suspend as deeply as possible in the tree\n    // or not at all if we don't end up waiting for the input.\n    scheduleOnNextTick(() => controller.abort())\n  }\n\n  return controller.signal\n}\n\nexport function annotateDynamicAccess(\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n) {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function useDynamicRouteParams(expression: string) {\n  const workStore = workAsyncStorage.getStore()\n\n  if (\n    workStore &&\n    workStore.isStaticGeneration &&\n    workStore.fallbackRouteParams &&\n    workStore.fallbackRouteParams.size > 0\n  ) {\n    // There are fallback route params, we should track these as dynamic\n    // accesses.\n    const workUnitStore = workUnitAsyncStorage.getStore()\n    if (workUnitStore) {\n      // We're prerendering with dynamicIO or PPR or both\n      if (workUnitStore.type === 'prerender') {\n        // We are in a prerender with dynamicIO semantics\n        // We are going to hang here and never resolve. This will cause the currently\n        // rendering component to effectively be a dynamic hole\n        React.use(makeHangingPromise(workUnitStore.renderSignal, expression))\n      } else if (workUnitStore.type === 'prerender-ppr') {\n        // We're prerendering with PPR\n        postponeWithTracking(\n          workStore.route,\n          expression,\n          workUnitStore.dynamicTracking\n        )\n      } else if (workUnitStore.type === 'prerender-legacy') {\n        throwToInterruptStaticGeneration(expression, workStore, workUnitStore)\n      }\n    }\n  }\n}\n\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/\nconst hasMetadataRegex = new RegExp(\n  `\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasViewportRegex = new RegExp(\n  `\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`)\n\nexport function trackAllowedDynamicAccess(\n  route: string,\n  componentStack: string,\n  dynamicValidation: DynamicValidationState,\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n) {\n  if (hasOutletRegex.test(componentStack)) {\n    // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n    return\n  } else if (hasMetadataRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicMetadata = true\n    return\n  } else if (hasViewportRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicViewport = true\n    return\n  } else if (hasSuspenseRegex.test(componentStack)) {\n    dynamicValidation.hasSuspendedDynamic = true\n    return\n  } else if (\n    serverDynamic.syncDynamicErrorWithStack ||\n    clientDynamic.syncDynamicErrorWithStack\n  ) {\n    dynamicValidation.hasSyncDynamicErrors = true\n    return\n  } else {\n    const message = `Route \"${route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. We don't have the exact line number added to error messages yet but you can see which component in the stack below. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`\n    const error = createErrorWithComponentStack(message, componentStack)\n    dynamicValidation.dynamicErrors.push(error)\n    return\n  }\n}\n\nfunction createErrorWithComponentStack(\n  message: string,\n  componentStack: string\n) {\n  const error = new Error(message)\n  error.stack = 'Error: ' + message + componentStack\n  return error\n}\n\nexport function throwIfDisallowedDynamic(\n  route: string,\n  dynamicValidation: DynamicValidationState,\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n): void {\n  let syncError: null | Error\n  let syncExpression: undefined | string\n  let syncLogged: boolean\n  if (serverDynamic.syncDynamicErrorWithStack) {\n    syncError = serverDynamic.syncDynamicErrorWithStack\n    syncExpression = serverDynamic.syncDynamicExpression!\n    syncLogged = serverDynamic.syncDynamicLogged === true\n  } else if (clientDynamic.syncDynamicErrorWithStack) {\n    syncError = clientDynamic.syncDynamicErrorWithStack\n    syncExpression = clientDynamic.syncDynamicExpression!\n    syncLogged = clientDynamic.syncDynamicLogged === true\n  } else {\n    syncError = null\n    syncExpression = undefined\n    syncLogged = false\n  }\n\n  if (dynamicValidation.hasSyncDynamicErrors && syncError) {\n    if (!syncLogged) {\n      // In dev we already log errors about sync dynamic access. But during builds we need to ensure\n      // the offending sync error is logged before we exit the build\n      console.error(syncError)\n    }\n    // The actual error should have been logged when the sync access ocurred\n    throw new StaticGenBailoutError()\n  }\n\n  const dynamicErrors = dynamicValidation.dynamicErrors\n  if (dynamicErrors.length) {\n    for (let i = 0; i < dynamicErrors.length; i++) {\n      console.error(dynamicErrors[i])\n    }\n\n    throw new StaticGenBailoutError()\n  }\n\n  if (!dynamicValidation.hasSuspendedDynamic) {\n    if (dynamicValidation.hasDynamicMetadata) {\n      if (syncError) {\n        console.error(syncError)\n        throw new StaticGenBailoutError(\n          `Route \"${route}\" has a \\`generateMetadata\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`\n        )\n      }\n      throw new StaticGenBailoutError(\n        `Route \"${route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateMetadata\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`\n      )\n    } else if (dynamicValidation.hasDynamicViewport) {\n      if (syncError) {\n        console.error(syncError)\n        throw new StaticGenBailoutError(\n          `Route \"${route}\" has a \\`generateViewport\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`\n        )\n      }\n      throw new StaticGenBailoutError(\n        `Route \"${route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateViewport\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`\n      )\n    }\n  }\n}\n"],"names":["Postpone","abortAndThrowOnSynchronousRequestDataAccess","abortOnSynchronousPlatformIOAccess","accessedDynamicData","annotateDynamicAccess","consumeDynamicAccess","createDynamicTrackingState","createDynamicValidationState","createHangingInputAbortSignal","createPostponedAbortSignal","formatDynamicAPIAccesses","getFirstDynamicReason","isDynamicPostpone","isPrerenderInterruptedError","markCurrentScopeAsDynamic","postponeWithTracking","throwIfDisallowedDynamic","throwToInterruptStaticGeneration","trackAllowedDynamicAccess","trackDynamicDataInDynamicRender","trackFallbackParamAccessed","trackSynchronousPlatformIOAccessInDev","trackSynchronousRequestDataAccessInDev","useDynamicRouteParams","hasPostpone","React","unstable_postpone","isDebugDynamicAccesses","dynamicAccesses","syncDynamicExpression","undefined","syncDynamicErrorWithStack","hasSuspendedDynamic","hasDynamicMetadata","hasDynamicViewport","hasSyncDynamicErrors","dynamicErrors","trackingState","expression","store","workUnitStore","type","forceDynamic","forceStatic","dynamicShouldError","StaticGenBailoutError","route","dynamicTracking","revalidate","err","DynamicServerError","dynamicUsageDescription","dynamicUsageStack","stack","process","env","NODE_ENV","usedDynamic","prerenderStore","workUnitAsyncStorage","getStore","_store","abortOnSynchronousDynamicDataAccess","reason","error","createPrerenderInterruptedError","controller","abort","push","Error","errorWithStack","requestStore","prerenderPhase","prerenderSignal","signal","aborted","validating","syncDynamicLogged","assertPostpone","createPostponeReason","message","isDynamicPostponeReason","includes","NEXT_PRERENDER_INTERRUPTED","digest","length","serverDynamic","clientDynamic","filter","access","map","split","slice","line","join","AbortController","x","cacheSignal","inputReady","then","scheduleOnNextTick","workStore","workAsyncStorage","isStaticGeneration","fallbackRouteParams","size","use","makeHangingPromise","renderSignal","hasSuspenseRegex","hasMetadataRegex","RegExp","METADATA_BOUNDARY_NAME","hasViewportRegex","VIEWPORT_BOUNDARY_NAME","hasOutletRegex","OUTLET_BOUNDARY_NAME","componentStack","dynamicValidation","test","createErrorWithComponentStack","syncError","syncExpression","syncLogged","console","i"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17774, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/client/components/unstable-rethrow.server.ts"],"sourcesContent":["import { isHangingPromiseRejectionError } from '../../server/dynamic-rendering-utils'\nimport { isPostpone } from '../../server/lib/router-utils/is-postpone'\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { isNextRouterError } from './is-next-router-error'\nimport { isDynamicPostpone } from '../../server/app-render/dynamic-rendering'\nimport { isDynamicServerError } from './hooks-server-context'\n\nexport function unstable_rethrow(error: unknown): void {\n  if (\n    isNextRouterError(error) ||\n    isBailoutToCSRError(error) ||\n    isDynamicServerError(error) ||\n    isDynamicPostpone(error) ||\n    isPostpone(error) ||\n    isHangingPromiseRejectionError(error)\n  ) {\n    throw error\n  }\n\n  if (error instanceof Error && 'cause' in error) {\n    unstable_rethrow(error.cause)\n  }\n}\n"],"names":["unstable_rethrow","error","isNextRouterError","isBailoutToCSRError","isDynamicServerError","isDynamicPostpone","isPostpone","isHangingPromiseRejectionError","Error","cause"],"mappings":";;;;+BAOgBA,oBAAAA;;;eAAAA;;;uCAP+B;4BACpB;8BACS;mCACF;kCACA;oCACG;AAE9B,SAASA,iBAAiBC,KAAc;IAC7C,IACEC,CAAAA,GAAAA,mBAAAA,iBAAiB,EAACD,UAClBE,CAAAA,GAAAA,cAAAA,mBAAmB,EAACF,UACpBG,CAAAA,GAAAA,oBAAAA,oBAAoB,EAACH,UACrBI,CAAAA,GAAAA,kBAAAA,iBAAiB,EAACJ,UAClBK,CAAAA,GAAAA,YAAAA,UAAU,EAACL,UACXM,CAAAA,GAAAA,uBAAAA,8BAA8B,EAACN,QAC/B;QACA,MAAMA;IACR;IAEA,IAAIA,iBAAiBO,SAAS,WAAWP,OAAO;QAC9CD,iBAAiBC,MAAMQ,KAAK;IAC9B;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17810, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/client/components/unstable-rethrow.ts"],"sourcesContent":["/**\n * This function should be used to rethrow internal Next.js errors so that they can be handled by the framework.\n * When wrapping an API that uses errors to interrupt control flow, you should use this function before you do any error handling.\n * This function will rethrow the error if it is a Next.js error so it can be handled, otherwise it will do nothing.\n *\n * Read more: [Next.js Docs: `unstable_rethrow`](https://nextjs.org/docs/app/api-reference/functions/unstable_rethrow)\n */\nexport const unstable_rethrow =\n  typeof window === 'undefined'\n    ? (\n        require('./unstable-rethrow.server') as typeof import('./unstable-rethrow.server')\n      ).unstable_rethrow\n    : (\n        require('./unstable-rethrow.browser') as typeof import('./unstable-rethrow.browser')\n      ).unstable_rethrow\n"],"names":["unstable_rethrow","window","require"],"mappings":"AAAA;;;;;;CAMC,GAAA;;;;+BACYA,oBAAAA;;;eAAAA;;;AAAN,MAAMA,mBACX,OAAOC,WAAW,qBAEZC,QAAQ,wHACRF,gBAAgB,GAClB,AACEE,QAAQ,8BACRF,gBAAgB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17839, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/client/components/navigation.react-server.ts"],"sourcesContent":["/** @internal */\nclass ReadonlyURLSearchParamsError extends Error {\n  constructor() {\n    super(\n      'Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams'\n    )\n  }\n}\n\nclass ReadonlyURLSearchParams extends URLSearchParams {\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  append() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  delete() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  set() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  sort() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n}\n\nexport { redirect, permanentRedirect } from './redirect'\nexport { RedirectType } from './redirect-error'\nexport { notFound } from './not-found'\nexport { forbidden } from './forbidden'\nexport { unauthorized } from './unauthorized'\nexport { unstable_rethrow } from './unstable-rethrow'\nexport { ReadonlyURLSearchParams }\n"],"names":["ReadonlyURLSearchParams","RedirectType","forbidden","notFound","permanentRedirect","redirect","unauthorized","unstable_rethrow","ReadonlyURLSearchParamsError","Error","constructor","URLSearchParams","append","delete","set","sort"],"mappings":"AAAA,cAAc,GAAA;;;;;;;;;;;;;;;;;;;;;IAkCLA,uBAAuB,EAAA;eAAvBA;;IALAC,YAAY,EAAA;eAAZA,eAAAA,YAAY;;IAEZC,SAAS,EAAA;eAATA,WAAAA,SAAS;;IADTC,QAAQ,EAAA;eAARA,UAAAA,QAAQ;;IAFEC,iBAAiB,EAAA;eAAjBA,UAAAA,iBAAiB;;IAA3BC,QAAQ,EAAA;eAARA,UAAAA,QAAQ;;IAIRC,YAAY,EAAA;eAAZA,cAAAA,YAAY;;IACZC,gBAAgB,EAAA;eAAhBA,iBAAAA,gBAAgB;;;0BALmB;+BACf;0BACJ;2BACC;8BACG;iCACI;AAhCjC,MAAMC,qCAAqCC;IACzCC,aAAc;QACZ,KAAK,CACH;IAEJ;AACF;AAEA,MAAMV,gCAAgCW;IACpC,wKAAwK,GACxKC,SAAS;QACP,MAAM,IAAIJ;IACZ;IACA,wKAAwK,GACxKK,SAAS;QACP,MAAM,IAAIL;IACZ;IACA,wKAAwK,GACxKM,MAAM;QACJ,MAAM,IAAIN;IACZ;IACA,wKAAwK,GACxKO,OAAO;QACL,MAAM,IAAIP;IACZ;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17923, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/src/api/navigation.react-server.ts"],"sourcesContent":["export * from '../client/components/navigation.react-server'\n"],"names":[],"mappings":";AAAA,cAAc,+CAA8C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17940, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17978, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAEkD,wBAAwB;AAOhG,iCAAiC;;;;;;;;;;;;IAI/BM,WAAWC,0DAAAA;AACb,EAAC,QAAA;AAED,MAAA,OAAA;IAAc;IAAA,sCAA0C;YAAE,QAAA;YAAA;YAAA,GAAwB;gBAAsB,EAAC,UAAA;oBAAA;oBAAA;wBAEzG,YAAA;4BAAA;4BAAA,CACA,kCAD4D;4BAC5D,IAAO,MAAMC,cAAc,IAAIX,mBAAmB;kCAChDY,QAAAA,CAAAA,CAAY;gCAAA,QAAA;oCAAA,IAAA;oCAAA;iCAAA;;+BACVC,MAAMZ,UAAUa,QAAQ;;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA;oBAAAA,CAAU;iBAAA;;iBACV,2CAA2C;sBAC3CC,IAAAA,CAAAA;YAAAA;SAAAA,CAAY;;SACZC,UAAU;cACVC,IAAAA;YAAAA,CAAU,EAAE,GAAA;gBACd,OAAA,QAAA;wBAAA;4BACAC,KAAAA,CAAAA,GAAAA,4MAAAA,CAAAA,CAAU,qBAAA,EAAA,MAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,6SAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACRC,OAAAA,GAAAA,6SAAAA,CAAAA,EAAYnB,QAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAAAA,6SAAAA,CAAAA,UAAAA,CAAAA,MAAAA,EAAAA;4BACd,MAAA,CAAA,YAAA,CAAA;wBACA;qBAAA","ignoreList":[0],"debugId":null}}]
}