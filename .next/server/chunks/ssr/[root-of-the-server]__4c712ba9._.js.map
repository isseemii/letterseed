{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/src/lib/sanity.ts"],"sourcesContent":["import { createClient } from 'next-sanity'\nimport imageUrlBuilder from '@sanity/image-url'\n\nexport const client = createClient({\n  projectId: process.env.NEXT_PUBLIC_SANITY_PROJECT_ID!,\n  dataset: process.env.NEXT_PUBLIC_SANITY_DATASET!,\n  apiVersion: '2024-01-01',\n  useCdn: false, // 실시간 데이터를 위해 false\n})\n\n// 이미지 URL 생성 함수\nconst builder = imageUrlBuilder(client)\n\nexport function urlFor(source: any) {\n  return builder.image(source)\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,SAAS,CAAA,GAAA,mKAAA,CAAA,eAAY,AAAD,EAAE;IACjC,SAAS;IACT,OAAO;IACP,YAAY;IACZ,QAAQ;AACV;AAEA,gBAAgB;AAChB,MAAM,UAAU,CAAA,GAAA,gKAAA,CAAA,UAAe,AAAD,EAAE;AAEzB,SAAS,OAAO,MAAW;IAChC,OAAO,QAAQ,KAAK,CAAC;AACvB","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/src/lib/queries.ts"],"sourcesContent":["// 호 목록 가져오기 (각 호별 섹션과 아티클 포함) - 수정됨\nexport const issuesListQuery = `\n  *[_type == \"issue\"] | order(number desc) {\n    _id,\n    number,\n    title,\n    publishDate,\n    coverImage,\n    \"sections\": *[_type == \"section\"] | order(order asc) {\n      _id,\n      title,\n      slug,\n      order,\n      \"articles\": *[_type == \"article\" && references(^._id) && issue->number == ^.^.number] | order(order asc) {\n        _id,\n        title,\n        slug,\n        author,\n        order\n      }\n    }[count(articles) > 0]\n  }\n`\n\n// 특정 호(단일) + 섹션/아티클 포함\nexport const issueWithSectionsQuery = `\n  *[_type == \"issue\" && number == $number][0]{\n    _id,\n    number,\n    title,\n    publishDate,\n    coverImage,\n    \"sections\": *[_type == \"section\"] | order(order asc) {\n      _id,\n      title,\n      slug,\n      order,\n      \"articles\": *[_type == \"article\" && references(^._id) && issue->number == $number] | order(order asc) {\n        _id,\n        title,\n        slug,\n        author,\n        order\n      }\n    }\n  }\n`"],"names":[],"mappings":"AAAA,oCAAoC;;;;;AAC7B,MAAM,kBAAkB,CAAC;;;;;;;;;;;;;;;;;;;;;AAqBhC,CAAC;AAGM,MAAM,yBAAyB,CAAC;;;;;;;;;;;;;;;;;;;;;AAqBvC,CAAC","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/src/app/issues/%5Bnumber%5D/page.tsx"],"sourcesContent":["'use client'\n\nimport { client } from '@/lib/sanity'\nimport { issueWithSectionsQuery, issuesListQuery } from '@/lib/queries'\nimport Link from 'next/link'\nimport { useEffect, useState } from 'react'\n\ninterface PageProps {\n  params: Promise<{ number: string }>\n}\n\nexport default function IssuePage({ params }: PageProps) {\n  const [issue, setIssue] = useState<any>(null)\n  const [allIssues, setAllIssues] = useState<any[]>([])\n  const [loading, setLoading] = useState(true)\n  const [menuOpen, setMenuOpen] = useState(false)\n\n  useEffect(() => {\n    params.then((resolvedParams) => {\n      const issueNumber = parseInt(resolvedParams.number)\n      \n      Promise.all([\n        client.fetch(issueWithSectionsQuery, { number: issueNumber }),\n        client.fetch(issuesListQuery)\n      ]).then(([issueData, issuesData]) => {\n        setIssue(issueData)\n        setAllIssues(issuesData)\n        setLoading(false)\n      })\n    })\n  }, [params])\n\n  if (loading) {\n    return (\n      <img src=\"/img/logo2.gif\" alt=\"글짜씨\" className=\"min-h-screen flex items-center justify-center\" />\n      // <div className=\"min-h-screen flex items-center justify-center\">\n      //   로딩 중...\n      // </div>\n    )\n  }\n\n  if (!issue) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className=\"mb-4\">호를 찾을 수 없습니다.</p>\n          <Link href=\"/\" className=\"text-blue-600 underline\">\n            홈으로 돌아가기\n          </Link>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-white flex\">\n      {/* 왼쪽: 메인 콘텐츠 */}\n      <main className=\"flex-1 p-12 lg:p-20\">\n        {/* 상단 네비게이션 */}\n        <div className=\"mb-12\">\n          <Link href=\"/\" className=\".본문폰트 text-gray-600 hover:text-black\">\n            ← 홈으로\n          </Link>\n        </div>\n\n        {/* 호 제목 */}\n        <div className=\"mb-16\">\n          <h1 className=\"text-sm font-bold mb-4\">\n            {issue.number}\n          </h1>\n          {issue.title && (\n            <p className=\"text-sm text-gray-600\">{issue.title}</p>\n          )}\n          <div className=\"w-12 h-1 bg-black mt-6\"></div>\n        </div>\n\n        {/* 섹션별 아티클 */}\n        <div className=\"max-w-3xl space-y-16\">\n          {Array.isArray(issue?.sections) && issue.sections.length > 0 ? (\n            issue.sections.map((section: any) => (\n              <section key={section._id}>\n                <h2 className=\"text-3xl font-bold mb-8 pb-3 border-b-2 border-black\">\n                  {section.title}\n                </h2>\n\n                <div className=\"space-y-6\">\n                  {Array.isArray(section?.articles) && section.articles.length > 0 ? (\n                    section.articles.map((article: any) => (\n                      <Link\n                        key={article._id}\n                        href={`/articles/${article.slug.current}`}\n                        className=\"block group\"\n                      >\n                        <article className=\"border-l-4 border-gray-200 pl-6 py-2 hover:border-black transition-colors\">\n                          <h3 className=\"text-sm font-semibold mb-2 group-hover:text-blue-600\">\n                            {article.title}\n                          </h3>\n                          <p className=\"text-sm text-gray-600\">\n                            {article.author}\n                          </p>\n                        </article>\n                      </Link>\n                    ))\n                  ) : (\n                    <p className=\"text-sm text-gray-500\">아티클이 없습니다.</p>\n                  )}\n                </div>\n              </section>\n            ))\n          ) : (\n            <p className=\"text-sm text-gray-500\">섹션이 없습니다.</p>\n          )}\n        </div>\n      </main>\n\n      {/* 오른쪽: 사이드바 (데스크톱) */}\n      <aside className=\"hidden lg:block w-80 p-12 sticky top-0 h-screen overflow-auto\">\n\n        {/* 호 목록 */}\n        <div className=\"pt-6 border-t\">\n          {allIssues.map((item) => (\n            <Link\n              key={item._id}\n              href={`/issues/${item.number}`}\n              className={`block py-3 transition ${\n                item.number === issue.number\n                  ? 'font-bold text-black'\n                  : 'text-gray-600 hover:text-black'\n              }`}\n            >\n              <div className=\"text-sm\">\n                <div className=\"mb-1\">{item.number}</div>\n                <div className={item.number === issue.number ? 'text-black' : ''}>\n                  {item.title}\n                </div>\n              </div>\n            </Link>\n          ))}\n        </div>\n      </aside>\n\n      {/* 모바일 햄버거 메뉴 */}\n      <button\n        className=\"lg:hidden fixed top-6 right-6 z-50 w-10 h-10 flex items-center justify-center bg-white\"\n        onClick={() => setMenuOpen(!menuOpen)}\n      >\n        <div className=\"w-6 space-y-1.5\">\n          <div className=\"h-0.5 bg-black\"></div>\n          <div className=\"h-0.5 bg-black\"></div>\n          <div className=\"h-0.5 bg-black\"></div>\n        </div>\n      </button>\n\n      {/* 모바일 메뉴 */}\n      {menuOpen && (\n        <div className=\"lg:hidden fixed inset-0 bg-white z-40 p-12 overflow-auto\">\n          <button\n            className=\"absolute top-6 right-6 text-3xl font-light\"\n            onClick={() => setMenuOpen(false)}\n          >\n            ×\n          </button>\n\n          <div className=\"mt-16\">\n            <div className=\"space-y-6\">\n              <div className=\"pt-6 border-t\">\n                {allIssues.map((item) => (\n                  <Link\n                    key={item._id}\n                    href={`/issues/${item.number}`}\n                    className=\"block py-3 border-b\"\n                    onClick={() => setMenuOpen(false)}\n                  >\n                    <div className={`font-bold mb-1 ${\n                      item.number === issue.number ? 'text-black' : 'text-gray-600'\n                    }`}>\n                      {item.number}\n                    </div>\n                    <div className=\"text-gray-600 text-xs\">{item.title}</div>\n                  </Link>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}