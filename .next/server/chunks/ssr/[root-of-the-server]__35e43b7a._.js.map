{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/src/lib/sanity.ts"],"sourcesContent":["import { createClient } from 'next-sanity'\nimport imageUrlBuilder from '@sanity/image-url'\n\nexport const client = createClient({\n  projectId: process.env.NEXT_PUBLIC_SANITY_PROJECT_ID!,\n  dataset: process.env.NEXT_PUBLIC_SANITY_DATASET!,\n  apiVersion: '2024-01-01',\n  useCdn: false, // Ïã§ÏãúÍ∞Ñ Îç∞Ïù¥ÌÑ∞Î•º ÏúÑÌï¥ false\n})\n\n// Ïù¥ÎØ∏ÏßÄ URL ÏÉùÏÑ± Ìï®Ïàò\nconst builder = imageUrlBuilder(client)\n\nexport function urlFor(source: any) {\n  return builder.image(source)\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,SAAS,CAAA,GAAA,8KAAA,CAAA,eAAY,AAAD,EAAE;IACjC,SAAS;IACT,OAAO;IACP,YAAY;IACZ,QAAQ;AACV;AAEA,gBAAgB;AAChB,MAAM,UAAU,CAAA,GAAA,gKAAA,CAAA,UAAe,AAAD,EAAE;AAEzB,SAAS,OAAO,MAAW;IAChC,OAAO,QAAQ,KAAK,CAAC;AACvB","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/src/lib/queries.ts"],"sourcesContent":["// Ìò∏ Î™©Î°ù Í∞ÄÏ†∏Ïò§Í∏∞ (Í∞Å Ìò∏Î≥Ñ ÏÑπÏÖòÍ≥º ÏïÑÌã∞ÌÅ¥ Ìè¨Ìï®) - ÏàòÏ†ïÎê®\nexport const issuesListQuery = `\n  *[_type == \"issue\"] | order(number desc) {\n    _id,\n    number,\n    title,\n    publishDate,\n    coverImage,\n    \"sections\": *[_type == \"section\"] | order(order asc) {\n      _id,\n      title,\n      slug,\n      order,\n      \"articles\": *[_type == \"article\" && references(^._id) && issue->number == ^.^.number] | order(order asc) {\n        _id,\n        title,\n        slug,\n        author,\n        order\n      }\n    }[count(articles) > 0]\n  }\n`\n\n// ÌäπÏ†ï Ìò∏(Îã®Ïùº) + ÏÑπÏÖò/ÏïÑÌã∞ÌÅ¥ Ìè¨Ìï®\nexport const issueWithSectionsQuery = `\n  *[_type == \"issue\" && number == $number][0]{\n    _id,\n    number,\n    title,\n    publishDate,\n    coverImage,\n    \"sections\": *[_type == \"section\"] | order(order asc) {\n      _id,\n      title,\n      slug,\n      order,\n      \"articles\": *[_type == \"article\" && references(^._id) && issue->number == $number] | order(order asc) {\n        _id,\n        title,\n        slug,\n        author,\n        order\n      }\n    }\n  }\n`\n\n// ÏïÑÌã∞ÌÅ¥ ÏÉÅÏÑ∏ Í∞ÄÏ†∏Ïò§Í∏∞\nexport const articleQuery = `\n  *[_type == \"article\" && slug.current == $slug][0]{\n    _id,\n    title,\n    slug,\n    author,\n    authorBio,\n    content,\n    references,\n    imageSources,\n    \"issue\": issue->{\n      number,\n      title\n    },\n    \"section\": section->{\n      title,\n      slug\n    }\n  }\n`"],"names":[],"mappings":"AAAA,oCAAoC;;;;;;AAC7B,MAAM,kBAAkB,CAAC;;;;;;;;;;;;;;;;;;;;;AAqBhC,CAAC;AAGM,MAAM,yBAAyB,CAAC;;;;;;;;;;;;;;;;;;;;;AAqBvC,CAAC;AAGM,MAAM,eAAe,CAAC;;;;;;;;;;;;;;;;;;;AAmB7B,CAAC","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///Users/isseemii/app/letterseed/src/app/test-sanity/page.tsx"],"sourcesContent":["import { client } from '@/lib/sanity'\nimport { issueWithSectionsQuery, issuesListQuery  } from '@/lib/queries'\nimport Link from 'next/link'\n\nexport default async function TestSanityPage() {\n  // 26Ìò∏ Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞\n  const issue = await client.fetch(issueWithSectionsQuery, { number: 26 })\n\n  return (\n    <div style={{ maxWidth: '800px', margin: '50px auto', padding: '20px' }}>\n      <h1 style={{ fontSize: '48px', marginBottom: '20px' }}>\n        Í∏ÄÏßúÏî® {issue.number}Ìò∏\n      </h1>\n      \n      {issue.title && (\n        <p style={{ fontSize: '24px', color: '#666', marginBottom: '40px' }}>\n          {issue.title}\n        </p>\n      )}\n\n      {/* ÏÑπÏÖòÎ≥Ñ ÏïÑÌã∞ÌÅ¥ */}\n      {issue.sections.map((section: any) => (\n        <section key={section._id} style={{ marginBottom: '60px' }}>\n          <h2 style={{ \n            fontSize: '32px', \n            fontWeight: 'bold',\n            marginBottom: '20px',\n            borderBottom: '2px solid #000',\n            paddingBottom: '10px'\n          }}>\n            {section.title}\n          </h2>\n\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}>\n            {section.articles.map((article: any) => (\n              <article \n                key={article._id}\n                style={{ \n                  borderLeft: '4px solid #ddd',\n                  paddingLeft: '20px'\n                }}\n              >\n                <Link \n                  href={`/articles/${article.slug.current}`}\n                  style={{ textDecoration: 'none', color: 'inherit' }}\n                >\n                  <h3 style={{ \n                    fontSize: '24px', \n                    fontWeight: '600',\n                    marginBottom: '8px',\n                    color: '#000'\n                  }}>\n                    {article.title}\n                  </h3>\n                  <p style={{ color: '#666', fontSize: '16px' }}>\n                    {article.author}\n                  </p>\n                </Link>\n              </article>\n            ))}\n          </div>\n        </section>\n      ))}\n\n      {/* ÎîîÎ≤ÑÍπÖ: Ï†ÑÏ≤¥ Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏ */}\n      <details style={{ marginTop: '60px', padding: '20px', background: '#f5f5f5' }}>\n        <summary style={{ cursor: 'pointer', fontWeight: 'bold' }}>\n          üîç ÎîîÎ≤ÑÍ∑∏: Ï†ÑÏ≤¥ Îç∞Ïù¥ÌÑ∞ Î≥¥Í∏∞\n        </summary>\n        <pre style={{ \n          marginTop: '20px', \n          padding: '20px', \n          background: '#fff',\n          overflow: 'auto',\n          fontSize: '12px'\n        }}>\n          {JSON.stringify(issue, null, 2)}\n        </pre>\n      </details>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEe,eAAe;IAC5B,eAAe;IACf,MAAM,QAAQ,MAAM,oHAAA,CAAA,SAAM,CAAC,KAAK,CAAC,qHAAA,CAAA,yBAAsB,EAAE;QAAE,QAAQ;IAAG;IAEtE,qBACE,8OAAC;QAAI,OAAO;YAAE,UAAU;YAAS,QAAQ;YAAa,SAAS;QAAO;;0BACpE,8OAAC;gBAAG,OAAO;oBAAE,UAAU;oBAAQ,cAAc;gBAAO;;oBAAG;oBAChD,MAAM,MAAM;oBAAC;;;;;;;YAGnB,MAAM,KAAK,kBACV,8OAAC;gBAAE,OAAO;oBAAE,UAAU;oBAAQ,OAAO;oBAAQ,cAAc;gBAAO;0BAC/D,MAAM,KAAK;;;;;;YAKf,MAAM,QAAQ,CAAC,GAAG,CAAC,CAAC,wBACnB,8OAAC;oBAA0B,OAAO;wBAAE,cAAc;oBAAO;;sCACvD,8OAAC;4BAAG,OAAO;gCACT,UAAU;gCACV,YAAY;gCACZ,cAAc;gCACd,cAAc;gCACd,eAAe;4BACjB;sCACG,QAAQ,KAAK;;;;;;sCAGhB,8OAAC;4BAAI,OAAO;gCAAE,SAAS;gCAAQ,eAAe;gCAAU,KAAK;4BAAO;sCACjE,QAAQ,QAAQ,CAAC,GAAG,CAAC,CAAC,wBACrB,8OAAC;oCAEC,OAAO;wCACL,YAAY;wCACZ,aAAa;oCACf;8CAEA,cAAA,8OAAC,4JAAA,CAAA,UAAI;wCACH,MAAM,CAAC,UAAU,EAAE,QAAQ,IAAI,CAAC,OAAO,EAAE;wCACzC,OAAO;4CAAE,gBAAgB;4CAAQ,OAAO;wCAAU;;0DAElD,8OAAC;gDAAG,OAAO;oDACT,UAAU;oDACV,YAAY;oDACZ,cAAc;oDACd,OAAO;gDACT;0DACG,QAAQ,KAAK;;;;;;0DAEhB,8OAAC;gDAAE,OAAO;oDAAE,OAAO;oDAAQ,UAAU;gDAAO;0DACzC,QAAQ,MAAM;;;;;;;;;;;;mCAnBd,QAAQ,GAAG;;;;;;;;;;;mBAdV,QAAQ,GAAG;;;;;0BA2C3B,8OAAC;gBAAQ,OAAO;oBAAE,WAAW;oBAAQ,SAAS;oBAAQ,YAAY;gBAAU;;kCAC1E,8OAAC;wBAAQ,OAAO;4BAAE,QAAQ;4BAAW,YAAY;wBAAO;kCAAG;;;;;;kCAG3D,8OAAC;wBAAI,OAAO;4BACV,WAAW;4BACX,SAAS;4BACT,YAAY;4BACZ,UAAU;4BACV,UAAU;wBACZ;kCACG,KAAK,SAAS,CAAC,OAAO,MAAM;;;;;;;;;;;;;;;;;;AAKvC","debugId":null}}]
}