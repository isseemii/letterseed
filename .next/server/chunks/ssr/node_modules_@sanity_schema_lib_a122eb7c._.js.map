{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"Rule.mjs","sources":["file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/constants.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/utils.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/any.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/array.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/preview/deprecationUtils.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/preview/JSONStringifyHuman.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/preview/fallbackPrepare.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/preview/portableText.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/preview/guessPreviewConfig.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/preview/createPreviewGetter.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/blocks/defaults.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/blocks/block.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/blocks/span.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/preview/primitivePreview.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/boolean.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/searchConfig/resolve.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/crossDatasetReference.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/date.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/datetime.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/ordering/guessOrderingConfig.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/searchConfig/normalize.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/object.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/document.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/email.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/file.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/globalDocumentReference.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/image/fieldDefs.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/image.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/number.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/reference.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/string.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/text.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/types/url.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/Schema.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/Rule.ts"],"sourcesContent":["export const DEFAULT_OVERRIDEABLE_FIELDS = [\n  'jsonType',\n  'type',\n  'name',\n  'title',\n  'description',\n  'options',\n  'fieldsets',\n  'validation',\n  'readOnly',\n  'hidden',\n  'components',\n  'diffComponent',\n  'initialValue',\n  'deprecated',\n]\n\n/**\n * The property name used for each type where we store the \"own props\" of the type.\n * This is the set of properties which are _not_ inherited, but explicitly defined on this type.\n */\nexport const OWN_PROPS_NAME = '_internal_ownProps'\n\nexport const ALL_FIELDS_GROUP_NAME = 'all-fields'\n","interface Config {\n  enumerable?: boolean\n  writable?: boolean\n}\nexport function lazyGetter(target: any, key: any, getter: any, config: Config = {}) {\n  Object.defineProperty(target, key, {\n    configurable: true,\n    enumerable: config.enumerable !== false,\n    get() {\n      const val = getter()\n      Object.defineProperty(target, key, {\n        value: val,\n        writable: Boolean(config.writable),\n        configurable: false,\n      })\n      return val\n    },\n  })\n  return target\n}\n\nexport function hiddenGetter(target: any, key: string, value: unknown) {\n  Object.defineProperty(target, key, {\n    enumerable: false,\n    writable: false,\n    configurable: false,\n    value,\n  })\n}\n\n//\n// const o = lazyGetter({}, 'expensive', function() {\n//   console.log('doing expensive calculations')\n//   return 'RESULT OF EXPENSIVE'\n// })\n//\n// console.log(o.expensive)\n// console.log(o.expensive)\n// console.log(o.expensive)\n","import {omit, pick} from 'lodash'\n\nimport {DEFAULT_OVERRIDEABLE_FIELDS, OWN_PROPS_NAME} from './constants'\nimport {hiddenGetter} from './utils'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst ANY_CORE = {\n  name: 'any',\n  type: null,\n  jsonType: 'any',\n}\n\nexport const AnyType = {\n  get() {\n    return ANY_CORE\n  },\n  extend(subTypeDef: any, extendMember: any) {\n    const ownProps = {\n      ...subTypeDef,\n      of: subTypeDef.of.map((fieldDef: any) => {\n        return {\n          name: fieldDef.name,\n          type: extendMember(omit(fieldDef, 'name')),\n        }\n      }),\n    }\n\n    const parsed = Object.assign(pick(ANY_CORE, OVERRIDABLE_FIELDS), ownProps, {\n      type: ANY_CORE,\n    })\n\n    hiddenGetter(parsed, OWN_PROPS_NAME, ownProps)\n\n    return subtype(parsed)\n\n    function subtype(parent: any) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef: any) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` property of subtypes of \"array\"')\n          }\n          const subOwnProps = pick(extensionDef, OVERRIDABLE_FIELDS)\n          const current = Object.assign({}, parent, subOwnProps, {\n            type: parent,\n          })\n          hiddenGetter(current, OWN_PROPS_NAME, subOwnProps)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\n\nimport {DEFAULT_OVERRIDEABLE_FIELDS, OWN_PROPS_NAME} from './constants'\nimport {hiddenGetter, lazyGetter} from './utils'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst ARRAY_CORE = {\n  name: 'array',\n  type: null,\n  jsonType: 'array',\n  of: [],\n}\n\nexport const ArrayType = {\n  get() {\n    return ARRAY_CORE\n  },\n  extend(subTypeDef: any, createMemberType: any) {\n    const parsed = Object.assign(pick(ARRAY_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: ARRAY_CORE,\n    })\n    lazyGetter(parsed, 'of', () => {\n      return subTypeDef.of.map((ofTypeDef: any) => {\n        return createMemberType(ofTypeDef)\n      })\n    })\n    lazyGetter(parsed, OWN_PROPS_NAME, () => ({...subTypeDef, of: parsed.of}), {\n      enumerable: false,\n      writable: false,\n    })\n\n    return subtype(parsed)\n\n    function subtype(parent: any) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef: any) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` property of subtypes of \"array\"')\n          }\n          const ownProps = pick(extensionDef, OVERRIDABLE_FIELDS)\n          const current = Object.assign({}, parent, ownProps, {\n            type: parent,\n          })\n          hiddenGetter(current, OWN_PROPS_NAME, ownProps)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","export function warnIfPreviewOnOptions(type: any) {\n  if (type.options && type.options.preview) {\n    console.warn(`Heads up! The preview config is no longer defined on \"options\", but instead on the type/field itself.\nPlease move {options: {preview: ...}} to {..., preview: ...} on the type/field definition of \"${type.name}\".\n`)\n  }\n}\n\nexport function warnIfPreviewHasFields(type: any) {\n  const preview = type.preview || (type.options || {}).preview\n  if (preview && 'fields' in preview) {\n    console.warn(`Heads up! \"preview.fields\" should be renamed to \"preview.select\". Please update the preview config for \"${type.name}\".\n`)\n  }\n}\n","import {pick} from 'lodash'\n\nfunction isEmpty(object: any) {\n  for (const key in object) {\n    if (object.hasOwnProperty(key)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction _stringify(value: any, options: any, depth: any): any {\n  if (depth > options.maxDepth) {\n    return '...'\n  }\n  if (Array.isArray(value)) {\n    if (value.length === 0) {\n      return '[empty]'\n    }\n    const capLength = Math.max(value.length - options.maxBreadth)\n    const asString: any = value\n      .slice(0, options.maxBreadth)\n      .map((item, index) => _stringify(item, options, depth + 1))\n      .concat(capLength > 0 ? `â€¦+${capLength}` : [])\n      .join(', ')\n\n    return depth === 0 ? asString : `[${asString}]`\n  }\n  if (typeof value === 'object' && value !== null) {\n    const keys = Object.keys(value).filter(\n      (key) => !options.ignoreKeys.includes(key) && typeof value[key] !== 'undefined',\n    )\n\n    if (isEmpty(pick(value, keys))) {\n      return '{empty}'\n    }\n\n    const asString = keys\n      .slice(0, options.maxBreadth)\n      .map((key) => `${key}: ${_stringify(value[key], options, depth + 1)}`)\n      .join(', ')\n\n    return depth === 0 ? asString : `{${asString}}`\n  }\n  const asString = String(value)\n  return asString === '' ? '\"\"' : asString\n}\n\nexport default function stringify(\n  value: any,\n  options: {maxDepth?: number; maxBreadth?: number; ignoreKeys?: string[]} = {},\n) {\n  const opts = {\n    maxDepth: 'maxDepth' in options ? options.maxDepth : 2,\n    maxBreadth: 'maxBreadth' in options ? options.maxBreadth : 2,\n    ignoreKeys: 'ignoreKeys' in options ? options.ignoreKeys : [],\n  }\n  return _stringify(value, opts, 0)\n}\n","import {pick} from 'lodash'\n\nimport stringify from './JSONStringifyHuman'\n\nconst OPTIONS = {\n  maxEntries: 2,\n  maxDepth: 2,\n  maxBreadth: 2,\n  ignoreKeys: ['_id', '_type', '_key', '_ref'],\n}\n\nexport function createFallbackPrepare(fieldNames: any) {\n  return (value: any) => ({\n    title: stringify(pick(value, fieldNames), OPTIONS),\n  })\n}\n","type FieldDef = {\n  type: string\n  name: string\n  of?: {type: string}[]\n}\n\nexport function isBlockField(field: FieldDef): boolean {\n  return (\n    (field.type === 'array' && field.of && field.of.some((member) => member.type === 'block')) ||\n    false\n  )\n}\n","import arrify from 'arrify'\nimport {isUndefined, omitBy} from 'lodash'\n\nimport {createFallbackPrepare} from './fallbackPrepare'\nimport {isBlockField} from './portableText'\n\nconst TITLE_CANDIDATES = ['title', 'name', 'label', 'heading', 'header', 'caption']\nconst DESCRIPTION_CANDIDATES = ['description', ...TITLE_CANDIDATES]\n\nfunction fieldHasReferenceTo(fieldDef: any, refType: any) {\n  return arrify(fieldDef.to || []).some((memberTypeDef: any) => memberTypeDef.type === refType)\n}\n\nfunction isImageAssetField(fieldDef: any) {\n  return fieldHasReferenceTo(fieldDef, 'sanity.imageAsset')\n}\n\nfunction resolveImageAssetPath(typeDef: any) {\n  const fields = typeDef.fields || []\n  const imageAssetField = fields.find(isImageAssetField)\n  if (imageAssetField) {\n    return imageAssetField.name\n  }\n  const fieldWithImageAsset = fields.find((fieldDef: any) =>\n    (fieldDef.fields || []).some(isImageAssetField),\n  )\n\n  return fieldWithImageAsset ? `${fieldWithImageAsset.name}.asset` : undefined\n}\n\nfunction isFileAssetField(fieldDef: any) {\n  return fieldHasReferenceTo(fieldDef, 'sanity.fileAsset')\n}\n\nfunction resolveFileAssetPath(typeDef: any) {\n  const fields = typeDef.fields || []\n  const assetField = fields.find(isFileAssetField)\n  if (assetField) {\n    return assetField.name\n  }\n  const fieldWithFileAsset = fields.find((fieldDef: any) =>\n    (fieldDef.fields || []).some(isFileAssetField),\n  )\n  return fieldWithFileAsset ? `${fieldWithFileAsset.name}.asset` : undefined\n}\n\nexport default function guessPreviewFields(rawObjectTypeDef: any) {\n  const objectTypeDef = {fields: [], ...rawObjectTypeDef}\n\n  const stringFieldNames = objectTypeDef.fields\n    .filter((field: any) => field.type === 'string')\n    .map((field: any) => field.name)\n\n  const blockFieldNames = objectTypeDef.fields.filter(isBlockField).map((field: any) => field.name)\n\n  // Check if we have fields with names that is listed in candidate fields\n  let titleField = TITLE_CANDIDATES.find(\n    (candidate) => stringFieldNames.includes(candidate) || blockFieldNames.includes(candidate),\n  )\n\n  let descField = DESCRIPTION_CANDIDATES.find(\n    (candidate) =>\n      candidate !== titleField &&\n      (stringFieldNames.includes(candidate) || blockFieldNames.includes(candidate)),\n  )\n\n  if (!titleField) {\n    // Pick first defined string field\n    titleField = stringFieldNames[0] || blockFieldNames[0]\n    // Pick next as desc\n    descField = stringFieldNames[1] || blockFieldNames[1]\n  }\n\n  const mediaField = objectTypeDef.fields.find((field: any) => field.type === 'image')\n\n  const imageAssetPath = resolveImageAssetPath(objectTypeDef)\n\n  if (!titleField) {\n    const fileAssetPath = resolveFileAssetPath(objectTypeDef)\n    if (fileAssetPath) {\n      titleField = `${fileAssetPath}.originalFilename`\n    }\n    if (imageAssetPath) {\n      titleField = `${imageAssetPath}.originalFilename`\n    }\n  }\n\n  if (!titleField && !imageAssetPath) {\n    // last resort, pick all fields and concat them\n    const fieldNames = objectTypeDef.fields.map((field: any) => field.name)\n    const fieldMapping = fieldNames.reduce((acc: any, fieldName: any) => {\n      acc[fieldName] = fieldName\n      return acc\n    }, {})\n\n    return {\n      select: fieldMapping,\n      prepare: createFallbackPrepare(fieldNames),\n    }\n  }\n\n  const select = omitBy(\n    {\n      title: titleField,\n      description: descField,\n      media: mediaField ? mediaField.name : imageAssetPath,\n    },\n    isUndefined,\n  )\n\n  return {\n    select: select,\n  }\n}\n","import {pick} from 'lodash'\n\nimport {warnIfPreviewHasFields, warnIfPreviewOnOptions} from './deprecationUtils'\nimport guessPreviewConfig from './guessPreviewConfig'\n\nfunction parseSelection(selection: any) {\n  return selection.reduce((acc: any, field: any) => {\n    acc[field] = field\n    return acc\n  }, {})\n}\n\nfunction parsePreview(preview: any) {\n  if (!preview) {\n    return preview\n  }\n  const select = preview.select || preview.fields || {}\n  if (Array.isArray(select)) {\n    return {\n      ...pick(preview, ['prepare', 'component']),\n      select: parseSelection(select),\n    }\n  }\n  return {\n    ...pick(preview, ['prepare', 'component']),\n    select,\n  }\n}\n\nexport default function createPreviewGetter(objectTypeDef: any) {\n  return function previewGetter() {\n    warnIfPreviewOnOptions(objectTypeDef)\n    warnIfPreviewHasFields(objectTypeDef)\n    const preview = parsePreview(objectTypeDef.preview || (objectTypeDef.options || {}).preview)\n    return preview || guessPreviewConfig(objectTypeDef)\n  }\n}\n","export const DEFAULT_LINK_ANNOTATION = {\n  type: 'object',\n  name: 'link',\n  title: 'Link',\n  i18nTitleKey: 'inputs.portable-text.annotation.link',\n  options: {\n    modal: {type: 'popover'},\n  },\n  fields: [\n    {\n      name: 'href',\n      type: 'url',\n      title: 'Link',\n      description: 'A valid web, email, phone, or relative link.',\n      validation: (Rule: any) =>\n        Rule.uri({\n          scheme: ['http', 'https', 'tel', 'mailto'],\n          allowRelative: true,\n        }),\n    },\n  ],\n}\n\nexport const DEFAULT_TEXT_FIELD = {\n  type: 'text',\n  name: 'text',\n  title: 'Text',\n}\n\nexport const DEFAULT_MARKS_FIELD = {\n  name: 'marks',\n  type: 'array',\n  of: [{type: 'string'}],\n  title: 'Marks',\n}\n\nexport const LIST_TYPES = {\n  bullet: {\n    title: 'Bulleted list',\n    value: 'bullet',\n    i18nTitleKey: 'inputs.portable-text.list-type.bullet',\n  },\n  numbered: {\n    title: 'Numbered list',\n    value: 'number',\n    i18nTitleKey: 'inputs.portable-text.list-type.number',\n  },\n}\n\nexport const DEFAULT_LIST_TYPES = [LIST_TYPES.bullet, LIST_TYPES.numbered]\n\nexport const BLOCK_STYLES = {\n  normal: {title: 'Normal', value: 'normal', i18nTitleKey: 'inputs.portable-text.style.normal'},\n  h1: {title: 'Heading 1', value: 'h1', i18nTitleKey: 'inputs.portable-text.style.h1'},\n  h2: {title: 'Heading 2', value: 'h2', i18nTitleKey: 'inputs.portable-text.style.h2'},\n  h3: {title: 'Heading 3', value: 'h3', i18nTitleKey: 'inputs.portable-text.style.h3'},\n  h4: {title: 'Heading 4', value: 'h4', i18nTitleKey: 'inputs.portable-text.style.h4'},\n  h5: {title: 'Heading 5', value: 'h5', i18nTitleKey: 'inputs.portable-text.style.h5'},\n  h6: {title: 'Heading 6', value: 'h6', i18nTitleKey: 'inputs.portable-text.style.h6'},\n  blockquote: {\n    title: 'Quote',\n    value: 'blockquote',\n    i18nTitleKey: 'inputs.portable-text.style.quote',\n  },\n}\n\nexport const DEFAULT_BLOCK_STYLES = [\n  BLOCK_STYLES.normal,\n  BLOCK_STYLES.h1,\n  BLOCK_STYLES.h2,\n  BLOCK_STYLES.h3,\n  BLOCK_STYLES.h4,\n  BLOCK_STYLES.h5,\n  BLOCK_STYLES.h6,\n  BLOCK_STYLES.blockquote,\n]\n\nexport const DECORATOR_STRONG = {\n  title: 'Strong',\n  value: 'strong',\n  i18nTitleKey: 'inputs.portable-text.decorator.strong',\n}\nexport const DECORATOR_EMPHASIS = {\n  title: 'Italic',\n  value: 'em',\n  i18nTitleKey: 'inputs.portable-text.decorator.emphasis',\n}\nexport const DECORATOR_CODE = {\n  title: 'Code',\n  value: 'code',\n  i18nTitleKey: 'inputs.portable-text.decorator.code',\n}\nexport const DECORATOR_UNDERLINE = {\n  title: 'Underline',\n  value: 'underline',\n  i18nTitleKey: 'inputs.portable-text.decorator.underline',\n}\nexport const DECORATOR_STRIKE = {\n  title: 'Strike',\n  value: 'strike-through',\n  i18nTitleKey: 'inputs.portable-text.decorator.strike-through',\n}\n\nexport const DECORATORS = {\n  strong: DECORATOR_STRONG,\n  em: DECORATOR_EMPHASIS,\n  code: DECORATOR_CODE,\n  underline: DECORATOR_UNDERLINE,\n  strikeThrough: DECORATOR_STRIKE,\n}\n\nexport const DEFAULT_DECORATORS = [\n  DECORATORS.strong,\n  DECORATORS.em,\n  DECORATORS.code,\n  DECORATORS.underline,\n  DECORATORS.strikeThrough,\n]\n","import {pick} from 'lodash'\n\nimport createPreviewGetter from '../../preview/createPreviewGetter'\nimport {OWN_PROPS_NAME} from '../constants'\nimport {hiddenGetter, lazyGetter} from '../utils'\nimport {\n  BLOCK_STYLES,\n  DEFAULT_BLOCK_STYLES,\n  DEFAULT_DECORATORS,\n  DEFAULT_LINK_ANNOTATION,\n  DEFAULT_LIST_TYPES,\n  DEFAULT_MARKS_FIELD,\n  DEFAULT_TEXT_FIELD,\n} from './defaults'\n\nconst INHERITED_FIELDS = [\n  'type',\n  'name',\n  'title',\n  'jsonType',\n  'description',\n  'options',\n  'fieldsets',\n  'icon',\n]\n\nconst BLOCK_CORE = {\n  name: 'block',\n  title: 'Block',\n  type: null,\n  jsonType: 'object',\n}\n\nconst DEFAULT_OPTIONS = {}\n\nexport const BlockType = {\n  get() {\n    return BLOCK_CORE\n  },\n  extend(subTypeDef: any, extendMember: any) {\n    const options = {...(subTypeDef.options || DEFAULT_OPTIONS)}\n\n    const {marks, styles, lists, of, ...rest} = subTypeDef\n\n    const childrenField = createChildrenField(marks, of)\n    const styleField = createStyleField(styles)\n    const listItemField = createListItemField(lists)\n\n    const markDefsField = {\n      name: 'markDefs',\n      title: 'Mark definitions',\n      type: 'array',\n      of: marks?.annotations || DEFAULT_ANNOTATIONS,\n    }\n\n    const levelField = {\n      name: 'level',\n      title: 'Indentation',\n      type: 'number',\n    }\n\n    // NOTE: if you update this (EVEN THE ORDER OF FIELDS) you _NEED TO_ also\n    // update `BlockSchemaType`, `isBlockSchemaType` and similar in `@sanity/types`\n    const fields = [childrenField, styleField, listItemField, markDefsField, levelField].concat(\n      subTypeDef.fields || [],\n    )\n\n    const ownProps = {...rest, options}\n\n    const parsed = Object.assign(pick(BLOCK_CORE, INHERITED_FIELDS), ownProps, {\n      type: BLOCK_CORE,\n    })\n\n    lazyGetter(parsed, 'fields', () => {\n      return fields.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: extendMember(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(subTypeDef))\n\n    lazyGetter(\n      parsed,\n      OWN_PROPS_NAME,\n      () => ({\n        ...ownProps,\n        fields: parsed.fields,\n        preview: parsed.preview,\n      }),\n      {enumerable: false, writable: false},\n    )\n\n    return subtype(parsed)\n\n    function subtype(parent: any) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef: any) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"block\"')\n          }\n          const subOwnProps = pick(extensionDef, INHERITED_FIELDS)\n          const current = Object.assign({}, parent, subOwnProps, {\n            type: parent,\n          })\n          hiddenGetter(current, OWN_PROPS_NAME, subOwnProps)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n\nfunction ensureNormalStyle(styles: any) {\n  return styles.some((style: any) => style.value === 'normal')\n    ? styles\n    : [BLOCK_STYLES.normal, ...styles]\n}\n\nfunction createStyleField(styles: any) {\n  return {\n    name: 'style',\n    title: 'Style',\n    type: 'string',\n    options: {\n      list: ensureNormalStyle(styles || DEFAULT_BLOCK_STYLES),\n    },\n  }\n}\n\nfunction createListItemField(lists: any) {\n  return {\n    name: 'listItem',\n    title: 'List type',\n    type: 'string',\n    options: {\n      list: lists || DEFAULT_LIST_TYPES,\n    },\n  }\n}\n\nconst DEFAULT_ANNOTATIONS = [DEFAULT_LINK_ANNOTATION]\n\nfunction createChildrenField(marks: any, of = []) {\n  return {\n    name: 'children',\n    title: 'Content',\n    type: 'array',\n    of: [\n      {\n        type: 'span',\n        fields: [DEFAULT_TEXT_FIELD, DEFAULT_MARKS_FIELD],\n        annotations: marks && marks.annotations ? marks.annotations : DEFAULT_ANNOTATIONS,\n        decorators: marks && marks.decorators ? marks.decorators : DEFAULT_DECORATORS,\n      },\n      ...of.filter((memberType: any) => memberType.type !== 'span'),\n    ],\n  }\n}\n","import {pick} from 'lodash'\n\nimport createPreviewGetter from '../../preview/createPreviewGetter'\nimport {OWN_PROPS_NAME} from '../constants'\nimport {hiddenGetter, lazyGetter} from '../utils'\n\nconst INHERITED_FIELDS = [\n  'type',\n  'name',\n  'title',\n  'jsonType',\n  'description',\n  'options',\n  'fieldsets',\n  'icon',\n]\n\nconst SPAN_CORE = {\n  name: 'span',\n  title: 'Span',\n  type: null,\n  jsonType: 'object',\n}\n\nconst MARKS_FIELD = {\n  name: 'marks',\n  title: 'Marks',\n  type: 'array',\n  of: [{type: 'string'}],\n}\n\nconst TEXT_FIELD = {\n  name: 'text',\n  title: 'Text',\n  type: 'string',\n}\n\nconst DEFAULT_OPTIONS = {}\n\nexport const SpanType = {\n  get() {\n    return SPAN_CORE\n  },\n  extend(subTypeDef: any, extendMember: any) {\n    const options = {...(subTypeDef.options || DEFAULT_OPTIONS)}\n\n    const {annotations = [], marks = []} = subTypeDef\n\n    // NOTE: if you update this please also update `SpanSchemaType` in`@sanity/types`\n    const fields = [MARKS_FIELD, TEXT_FIELD]\n\n    const ownProps = {...subTypeDef, options}\n\n    const parsed = Object.assign(pick(SPAN_CORE, INHERITED_FIELDS), ownProps, {\n      type: SPAN_CORE,\n    })\n\n    lazyGetter(parsed, 'fields', () => {\n      return fields.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: extendMember(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'annotations', () => annotations.map(extendMember))\n    lazyGetter(parsed, 'marks', () => marks.map(extendMember))\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(subTypeDef))\n\n    lazyGetter(\n      parsed,\n      OWN_PROPS_NAME,\n      () => ({\n        ...ownProps,\n        fields: parsed.fields,\n        annotations: parsed.annotations,\n        marks: parsed.marks,\n        preview: parsed.preview,\n      }),\n      {enumerable: false, writable: false},\n    )\n\n    return subtype(parsed)\n\n    function subtype(parent: any) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef: any) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"span\"')\n          }\n          const subOwnProps = pick(extensionDef, INHERITED_FIELDS)\n          const current = Object.assign({}, parent, subOwnProps, {\n            type: parent,\n          })\n          hiddenGetter(current, OWN_PROPS_NAME, subOwnProps)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","export default {\n  prepare: (val: any) => ({title: String(val)}),\n}\n","import {pick} from 'lodash'\n\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS, OWN_PROPS_NAME} from './constants'\nimport {hiddenGetter} from './utils'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst BOOLEAN_CORE = {\n  name: 'boolean',\n  title: 'Boolean',\n  type: null,\n  jsonType: 'boolean',\n}\n\nexport const BooleanType = {\n  get() {\n    return BOOLEAN_CORE\n  },\n  extend(subTypeDef: any) {\n    const ownProps = {\n      ...subTypeDef,\n      preview: primitivePreview,\n    }\n    const parsed = Object.assign(pick(BOOLEAN_CORE, OVERRIDABLE_FIELDS), ownProps, {\n      type: BOOLEAN_CORE,\n    })\n\n    hiddenGetter(parsed, OWN_PROPS_NAME, ownProps)\n\n    return subtype(parsed)\n\n    function subtype(parent: any) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef: any) => {\n          const subOwnProps = pick(extensionDef, OVERRIDABLE_FIELDS)\n          const current = Object.assign({}, parent, subOwnProps, {\n            type: parent,\n          })\n          hiddenGetter(current, OWN_PROPS_NAME, subOwnProps)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {isFinite, uniqBy} from 'lodash'\n\nexport const DEFAULT_MAX_FIELD_DEPTH = 5\n\nconst stringFieldsSymbols = {} as Record<number, symbol>\n\nconst getStringFieldSymbol = (maxDepth: number) => {\n  if (!stringFieldsSymbols[maxDepth]) {\n    stringFieldsSymbols[maxDepth] = Symbol(`__cachedStringFields_${maxDepth}`)\n  }\n\n  return stringFieldsSymbols[maxDepth]\n}\n\nconst isReference = (type: any) => type.type && type.type.name === 'reference'\n\nconst portableTextFields = ['style', 'list']\nconst isPortableTextBlock: any = (type: any) =>\n  type.name === 'block' || (type.type && isPortableTextBlock(type.type))\nconst isPortableTextArray = (type: any) =>\n  type.jsonType === 'array' && Array.isArray(type.of) && type.of.some(isPortableTextBlock)\n\nfunction reduceType(type: any, reducer: any, acc: any, path = [], maxDepth: any) {\n  if (maxDepth < 0) {\n    return acc\n  }\n\n  const accumulator = reducer(acc, type, path)\n  if (type.jsonType === 'array' && Array.isArray(type.of)) {\n    return reduceArray(type, reducer, accumulator, path, maxDepth)\n  }\n\n  if (type.jsonType === 'object' && Array.isArray(type.fields) && !isReference(type)) {\n    return reduceObject(type, reducer, accumulator, path, maxDepth)\n  }\n\n  return accumulator\n}\n\nfunction reduceArray(arrayType: any, reducer: any, accumulator: any, path: any, maxDepth: any) {\n  return arrayType.of.reduce(\n    (acc: any, ofType: any) => reduceType(ofType, reducer, acc, path, maxDepth - 1),\n    accumulator,\n  )\n}\n\nfunction reduceObject(objectType: any, reducer: any, accumulator: any, path: any, maxDepth: any) {\n  const isPtBlock = isPortableTextBlock(objectType)\n  return objectType.fields.reduce((acc: any, field: any) => {\n    // Don't include styles and list types as searchable paths for portable text blocks\n    if (isPtBlock && portableTextFields.includes(field.name)) {\n      return acc\n    }\n\n    const segment = [field.name].concat(field.type.jsonType === 'array' ? [[]] : [])\n    return reduceType(field.type, reducer, acc, path.concat(segment), maxDepth - 1)\n  }, accumulator)\n}\n\nconst BASE_WEIGHTS = [\n  {weight: 1, path: ['_id']},\n  {weight: 1, path: ['_type']},\n]\n\nconst PREVIEW_FIELD_WEIGHT_MAP = {\n  title: 10,\n  subtitle: 5,\n  description: 1.5,\n}\n\n/**\n * @internal\n */\nexport function deriveFromPreview(\n  type: {\n    preview: {select: Record<string, string>}\n  },\n  maxDepth: number,\n): {weight?: number; path: (string | number)[]}[] {\n  const select = type?.preview?.select\n\n  if (!select) {\n    return []\n  }\n\n  const fields: {weight: number; path: (string | number)[]}[] = []\n\n  for (const fieldName of Object.keys(select)) {\n    if (!(fieldName in PREVIEW_FIELD_WEIGHT_MAP)) {\n      continue\n    }\n\n    const path = select[fieldName].split('.')\n\n    if (maxDepth > -1 && path.length - 1 > maxDepth) {\n      continue\n    }\n\n    fields.push({\n      weight: (PREVIEW_FIELD_WEIGHT_MAP as any)[fieldName],\n      path,\n    })\n  }\n\n  return fields\n}\n\nfunction getCachedStringFieldPaths(type: any, maxDepth: number) {\n  const symbol = getStringFieldSymbol(maxDepth)\n  if (!type[symbol]) {\n    type[symbol] = uniqBy(\n      [\n        ...BASE_WEIGHTS,\n        ...deriveFromPreview(type, maxDepth),\n        ...getStringFieldPaths(type, maxDepth).map((path: any) => ({weight: 1, path})),\n        ...getPortableTextFieldPaths(type, maxDepth).map((path: any) => ({\n          weight: 1,\n          path,\n          mapWith: 'pt::text',\n        })),\n      ],\n      (spec) => spec.path.join('.'),\n    )\n  }\n  return type[symbol]\n}\n\nfunction getCachedBaseFieldPaths(type: any, maxDepth: number) {\n  const symbol = getStringFieldSymbol(maxDepth)\n  if (!type[symbol]) {\n    type[symbol] = uniqBy([...BASE_WEIGHTS, ...deriveFromPreview(type, maxDepth)], (spec) =>\n      spec.path.join('.'),\n    )\n  }\n  return type[symbol]\n}\n\nfunction getStringFieldPaths(type: any, maxDepth: number) {\n  const reducer = (accumulator: any, childType: any, path: any) =>\n    childType.jsonType === 'string' ? [...accumulator, path] : accumulator\n\n  return reduceType(type, reducer, [], [], maxDepth)\n}\n\nfunction getPortableTextFieldPaths(type: any, maxDepth: any) {\n  const reducer = (accumulator: any, childType: any, path: any) =>\n    isPortableTextArray(childType) ? [...accumulator, path] : accumulator\n\n  return reduceType(type, reducer, [], [], maxDepth)\n}\n\nexport function resolveSearchConfigForBaseFieldPaths(type: any, maxDepth?: number) {\n  return getCachedBaseFieldPaths(type, normalizeMaxDepth(maxDepth))\n}\n\n/**\n * @internal\n */\nexport function resolveSearchConfig(type: any, maxDepth?: number) {\n  return getCachedStringFieldPaths(type, normalizeMaxDepth(maxDepth))\n}\n\n/**\n * Normalizes a one-indexed maxDepth to a zero-indexed maxDepth\n * 0 = all fields\n *\n * @internal\n */\nfunction normalizeMaxDepth(maxDepth?: number) {\n  if (!isFinite(maxDepth) || maxDepth! < 1 || maxDepth! > DEFAULT_MAX_FIELD_DEPTH) {\n    return DEFAULT_MAX_FIELD_DEPTH - 1\n  }\n\n  return maxDepth! - 1\n}\n","import arrify from 'arrify'\nimport {capitalize, pick} from 'lodash'\n\nimport {resolveSearchConfigForBaseFieldPaths} from '../searchConfig/resolve'\nimport {DEFAULT_OVERRIDEABLE_FIELDS, OWN_PROPS_NAME} from './constants'\nimport {hiddenGetter, lazyGetter} from './utils'\n\nexport const REF_FIELD = {\n  name: '_ref',\n  title: 'Referenced document ID',\n  type: 'string',\n}\n\nexport const WEAK_FIELD = {\n  name: '_weak',\n  title: 'Weak reference marker',\n  type: 'boolean',\n}\n\nconst DATASET_FIELD = {\n  name: '_dataset',\n  title: 'Target dataset',\n  type: 'string',\n}\n\nconst PROJECT_ID_FIELD = {\n  name: '_projectId',\n  title: 'Target project ID',\n  type: 'string',\n  hidden: true,\n}\n\nconst REFERENCE_FIELDS = [REF_FIELD, WEAK_FIELD, DATASET_FIELD, PROJECT_ID_FIELD]\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst CROSS_DATASET_REFERENCE_CORE = {\n  name: 'crossDatasetReference',\n  type: null,\n  jsonType: 'object',\n}\n\nfunction humanize(arr: any, conjunction: any) {\n  const len = arr.length\n  if (len === 1) {\n    return arr[0]\n  }\n  const first = arr.slice(0, len - 1)\n  const last = arr[len - 1]\n  return `${first.join(', ')} ${conjunction} ${last}`\n}\n\nfunction buildTitle(type: any) {\n  if (!type.to || type.to.length === 0) {\n    return 'Cross dataset Reference'\n  }\n  return `Cross dataset reference to ${humanize(\n    arrify(type.to).map((toType: any) => toType.title || capitalize(toType.type)),\n    'or',\n  ).toLowerCase()}`\n}\n\nexport const CrossDatasetReferenceType = {\n  get() {\n    return CROSS_DATASET_REFERENCE_CORE\n  },\n  extend(subTypeDef: any, createMemberType: any) {\n    if (!subTypeDef.to) {\n      throw new Error(\n        `Missing \"to\" field in cross dataset reference definition. Check the type ${subTypeDef.name}`,\n      )\n    }\n    const parsed = Object.assign(\n      pick(CROSS_DATASET_REFERENCE_CORE, OVERRIDABLE_FIELDS),\n      subTypeDef,\n      {\n        type: CROSS_DATASET_REFERENCE_CORE,\n      },\n    )\n\n    lazyGetter(parsed, 'fields', () => {\n      return REFERENCE_FIELDS.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: createMemberType(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'to', () => {\n      return arrify(subTypeDef.to).map((toType: any) => {\n        return {\n          ...toType,\n          // eslint-disable-next-line camelcase\n          __experimental_search: resolveSearchConfigForBaseFieldPaths(toType),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'title', () => subTypeDef.title || buildTitle(parsed))\n\n    lazyGetter(\n      parsed,\n      OWN_PROPS_NAME,\n      () => ({\n        ...subTypeDef,\n        fields: parsed.fields,\n        to: parsed.to,\n        title: parsed.title,\n      }),\n      {enumerable: false, writable: false},\n    )\n\n    return subtype(parsed)\n\n    function subtype(parent: any) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef: any) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` of subtypes of \"reference\"')\n          }\n          const ownProps = pick(extensionDef, OVERRIDABLE_FIELDS)\n          const current = Object.assign({}, parent, ownProps, {\n            type: parent,\n          })\n          hiddenGetter(current, OWN_PROPS_NAME, ownProps)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\n\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS, OWN_PROPS_NAME} from './constants'\nimport {hiddenGetter} from './utils'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst DATE_CORE = {\n  name: 'date',\n  title: 'Datetime',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const DateType = {\n  get() {\n    return DATE_CORE\n  },\n  extend(subTypeDef: any) {\n    const ownProps = {\n      ...subTypeDef,\n      preview: primitivePreview,\n    }\n    const parsed = Object.assign(pick(DATE_CORE, OVERRIDABLE_FIELDS), ownProps, {\n      type: DATE_CORE,\n    })\n\n    hiddenGetter(parsed, OWN_PROPS_NAME, ownProps)\n\n    return subtype(parsed)\n\n    function subtype(parent: any) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef: any) => {\n          const subOwnProps = pick(extensionDef, OVERRIDABLE_FIELDS)\n          const current = Object.assign({}, parent, subOwnProps, {\n            type: parent,\n          })\n          hiddenGetter(current, OWN_PROPS_NAME, subOwnProps)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\n\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS, OWN_PROPS_NAME} from './constants'\nimport {hiddenGetter} from './utils'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst DATETIME_CORE = {\n  name: 'datetime',\n  title: 'Datetime',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const DateTimeType = {\n  get() {\n    return DATETIME_CORE\n  },\n  extend(subTypeDef: any) {\n    const ownProps = {\n      ...subTypeDef,\n      preview: primitivePreview,\n    }\n    const parsed = Object.assign(pick(DATETIME_CORE, OVERRIDABLE_FIELDS), ownProps, {\n      type: DATETIME_CORE,\n    })\n    hiddenGetter(parsed, OWN_PROPS_NAME, ownProps)\n    return subtype(parsed)\n\n    function subtype(parent: any) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef: any) => {\n          const subOwnProps = pick(extensionDef, OVERRIDABLE_FIELDS)\n          const current = Object.assign({}, parent, subOwnProps, {\n            type: parent,\n          })\n          hiddenGetter(current, OWN_PROPS_NAME, subOwnProps)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {type SortOrdering} from '@sanity/types'\nimport {capitalize, startCase} from 'lodash'\n\nconst CANDIDATES = ['title', 'name', 'label', 'heading', 'header', 'caption', 'description']\n\nconst PRIMITIVES = ['string', 'boolean', 'number']\n\nconst isPrimitive = (field: any) => PRIMITIVES.includes(field.type)\n\nexport default function guessOrderingConfig(objectTypeDef: any): SortOrdering[] {\n  let candidates = CANDIDATES.filter((candidate) =>\n    objectTypeDef.fields.some((field: any) => isPrimitive(field) && field.name === candidate),\n  )\n\n  // None of the candidates were found, fallback to all fields\n  if (candidates.length === 0) {\n    candidates = objectTypeDef.fields.filter(isPrimitive).map((field: any) => field.name)\n  }\n\n  return candidates.map(\n    (name): SortOrdering => ({\n      name: name,\n      i18n: {\n        title: {key: `default-orderings.${name}`, ns: 'studio'},\n      },\n      title: capitalize(startCase(name)),\n      by: [{field: name, direction: 'asc'}],\n    }),\n  )\n}\n","import {isPlainObject, toPath} from 'lodash'\n\nexport function normalizeSearchConfigs(configs: any) {\n  if (!Array.isArray(configs)) {\n    throw new Error(\n      'The search config of a document type must be an array of search config objects',\n    )\n  }\n  return configs.map((conf) => {\n    if (conf === 'defaults') {\n      return conf\n    }\n    if (!isPlainObject(conf)) {\n      throw new Error('Search config must be an object of {path: string, weight: number}')\n    }\n    return {\n      weight: 'weight' in conf ? conf.weight : 1,\n      path: toPath(conf.path),\n      mapWith: typeof conf.mapWith === 'string' ? conf.mapWith : undefined,\n    }\n  })\n}\n","import {\n  type FieldGroup,\n  type FieldGroupDefinition,\n  type Fieldset,\n  type FieldsetDefinition,\n  type ObjectDefinition,\n  type ObjectField,\n} from '@sanity/types'\nimport {castArray, flatMap, pick, startCase} from 'lodash'\n\nimport guessOrderingConfig from '../ordering/guessOrderingConfig'\nimport createPreviewGetter from '../preview/createPreviewGetter'\nimport {normalizeSearchConfigs} from '../searchConfig/normalize'\nimport {resolveSearchConfig} from '../searchConfig/resolve'\nimport {ALL_FIELDS_GROUP_NAME, DEFAULT_OVERRIDEABLE_FIELDS, OWN_PROPS_NAME} from './constants'\nimport {hiddenGetter, lazyGetter} from './utils'\n\nconst OVERRIDABLE_FIELDS = [\n  ...DEFAULT_OVERRIDEABLE_FIELDS,\n  'orderings',\n  '__experimental_search',\n  'blockEditor',\n  'icon',\n]\n\nexport const ObjectType = {\n  get() {\n    return {\n      name: 'object',\n      title: 'Object',\n      type: null,\n      jsonType: 'object',\n    }\n  },\n  extend(rawSubTypeDef: any, createMemberType: any) {\n    const subTypeDef = {fields: [], ...rawSubTypeDef}\n\n    const options = {...subTypeDef.options}\n\n    const ownProps = {\n      ...subTypeDef,\n      title: subTypeDef.title || (subTypeDef.name ? startCase(subTypeDef.name) : 'Object'),\n      options: options,\n      orderings: subTypeDef.orderings || guessOrderingConfig(subTypeDef),\n      fields: subTypeDef.fields.map((fieldDef: any) => {\n        const {name, fieldset, group, ...rest} = fieldDef\n\n        const compiledField = {\n          name,\n          group,\n          fieldset,\n        }\n\n        return lazyGetter(compiledField, 'type', () => {\n          return createMemberType({\n            ...rest,\n            title: fieldDef.title || startCase(name),\n          })\n        })\n      }),\n    }\n\n    const parsed = Object.assign(pick(this.get(), OVERRIDABLE_FIELDS), ownProps, {\n      type: this.get(),\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'groups', () => {\n      return createFieldsGroups(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(subTypeDef))\n\n    lazyGetter(\n      parsed,\n      OWN_PROPS_NAME,\n      () => ({\n        ...ownProps,\n        preview: parsed.preview,\n      }),\n      {enumerable: false, writable: false},\n    )\n\n    lazyGetter(\n      parsed,\n      '__experimental_search',\n      () => {\n        const userProvidedSearchConfig = subTypeDef.__experimental_search\n          ? normalizeSearchConfigs(subTypeDef.__experimental_search)\n          : null\n\n        if (userProvidedSearchConfig) {\n          return userProvidedSearchConfig.map((entry) =>\n            entry === 'defaults' ? normalizeSearchConfigs(subTypeDef) : entry,\n          )\n        }\n        return resolveSearchConfig(parsed)\n      },\n      {\n        enumerable: false,\n      },\n    )\n\n    return subtype(parsed)\n\n    function subtype(parent: any) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef: any) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"object\"')\n          }\n\n          const subOwnProps = pick(extensionDef, OVERRIDABLE_FIELDS)\n          subOwnProps.title =\n            extensionDef.title ||\n            subTypeDef.title ||\n            (subTypeDef.name ? startCase(subTypeDef.name) : 'Object')\n\n          const current = Object.assign({}, parent, pick(extensionDef, OVERRIDABLE_FIELDS), {\n            type: parent,\n          })\n          lazyGetter(current, '__experimental_search', () => parent.__experimental_search)\n          hiddenGetter(current, OWN_PROPS_NAME, subOwnProps)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n\nexport function createFieldsets(typeDef: ObjectDefinition, fields: ObjectField[]): Fieldset[] {\n  const fieldsetsByName: Record<string, FieldsetDefinition & {fields: ObjectField[]}> = {}\n\n  for (const fieldset of typeDef.fieldsets || []) {\n    if (fieldsetsByName[fieldset.name]) {\n      throw new Error(\n        `Duplicate fieldset name \"${fieldset.name}\" found for type '${\n          typeDef.title ? typeDef.title : startCase(typeDef.name)\n        }'`,\n      )\n    }\n\n    fieldsetsByName[fieldset.name] = {title: startCase(fieldset.name), ...fieldset, fields: []}\n  }\n\n  const fieldsets = new Set<Fieldset>()\n\n  for (const field of fields) {\n    if (!field.fieldset) {\n      fieldsets.add({single: true, field})\n      continue\n    }\n\n    const fieldset = fieldsetsByName[field.fieldset]\n    if (!fieldset) {\n      throw new Error(\n        `Fieldset '${field.fieldset}' is not defined in schema for type '${typeDef.name}'`,\n      )\n    }\n\n    fieldset.fields.push(field)\n\n    // The Set will prevent duplicates\n    fieldsets.add(fieldset)\n  }\n\n  return Array.from(fieldsets)\n}\n\nfunction createFieldsGroups(typeDef: ObjectDefinition, fields: ObjectField[]): FieldGroup[] {\n  const groupsByName: Record<string, FieldGroupDefinition & {fields: ObjectField[]}> = {}\n\n  let numDefaultGroups = 0\n  for (const group of typeDef.groups || []) {\n    if (groupsByName[group.name]) {\n      throw new Error(\n        `Duplicate group name \"${group.name}\" found for type '${\n          typeDef.title ? typeDef.title : startCase(typeDef.name)\n        }'`,\n      )\n    }\n\n    groupsByName[group.name] = {title: startCase(group.name), ...group, fields: []}\n\n    if (group.default && ++numDefaultGroups > 1) {\n      // Throw if you have multiple default field groups defined\n      throw new Error(\n        `More than one field group defined as default for type '${\n          typeDef.title ? typeDef.title : startCase(typeDef.name)\n        }' - only 1 is supported`,\n      )\n    }\n  }\n\n  fields.forEach((field) => {\n    const fieldGroupNames = castArray(field.group || [])\n    if (fieldGroupNames.length === 0) {\n      return\n    }\n\n    fieldGroupNames.forEach((fieldGroupName) => {\n      const currentGroup = groupsByName[fieldGroupName]\n\n      if (!currentGroup) {\n        throw new Error(\n          `Field group '${fieldGroupName}' is not defined in schema for type '${\n            typeDef.title ? typeDef.name : startCase(typeDef.name)\n          }'`,\n        )\n      }\n\n      currentGroup.fields.push(field)\n    })\n  })\n\n  return flatMap(groupsByName).filter(\n    // All fields group is added by default in structure.\n    // To pass the properties from the schema to the form state, we need to include it in the list of groups.\n    (group) => group.fields.length > 0 || group.name === ALL_FIELDS_GROUP_NAME,\n  )\n}\n","import {ObjectType} from './object'\n\nconst DOCUMENT_CORE = {\n  name: 'document',\n  title: 'Document',\n  type: null,\n  jsonType: 'object',\n}\n\nexport const DocumentType = {\n  get() {\n    return DOCUMENT_CORE\n  },\n  extend: ObjectType.extend,\n}\n","import {pick} from 'lodash'\n\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS, OWN_PROPS_NAME} from './constants'\nimport {hiddenGetter, lazyGetter} from './utils'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst EMAIL_CORE = {\n  name: 'email',\n  title: 'Email',\n  type: null,\n  jsonType: 'string',\n}\n\nlazyGetter(\n  EMAIL_CORE,\n  OWN_PROPS_NAME,\n  () => ({\n    ...EMAIL_CORE,\n    validation: (Rule: any) => Rule.email(),\n  }),\n  {enumerable: false},\n)\n\nexport const EmailType = {\n  get() {\n    return EMAIL_CORE\n  },\n  extend(subTypeDef: any) {\n    const ownProps = {\n      ...subTypeDef,\n      preview: primitivePreview,\n    }\n    const parsed = Object.assign(pick(EMAIL_CORE, OVERRIDABLE_FIELDS), ownProps, {\n      type: EMAIL_CORE,\n    })\n    hiddenGetter(parsed, OWN_PROPS_NAME, ownProps)\n    return subtype(parsed)\n\n    function subtype(parent: any) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef: any) => {\n          const subOwnProps = pick(extensionDef, OVERRIDABLE_FIELDS)\n          const current = Object.assign({}, parent, subOwnProps, {\n            type: parent,\n          })\n          hiddenGetter(current, OWN_PROPS_NAME, subOwnProps)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick, startCase} from 'lodash'\n\nimport createPreviewGetter from '../preview/createPreviewGetter'\nimport {DEFAULT_OVERRIDEABLE_FIELDS, OWN_PROPS_NAME} from './constants'\nimport {createFieldsets} from './object'\nimport {hiddenGetter, lazyGetter} from './utils'\n\nexport const ASSET_FIELD = {\n  name: 'asset',\n  type: 'reference',\n  to: {type: 'sanity.fileAsset'},\n}\n\nexport const MEDIA_LIBRARY_ASSET_FIELD = {\n  name: 'media',\n  type: 'globalDocumentReference',\n  hidden: true,\n  to: [{type: 'sanity.asset'}],\n}\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst FILE_CORE = {\n  name: 'file',\n  title: 'File',\n  type: null,\n  jsonType: 'object',\n}\n\nconst DEFAULT_OPTIONS = {\n  accept: '',\n}\n\nexport const FileType = {\n  get() {\n    return FILE_CORE\n  },\n  extend(rawSubTypeDef: any, createMemberType: any) {\n    const options = {...(rawSubTypeDef.options || DEFAULT_OPTIONS)}\n\n    const fields = [ASSET_FIELD, MEDIA_LIBRARY_ASSET_FIELD, ...(rawSubTypeDef.fields || [])]\n\n    const subTypeDef = {...rawSubTypeDef, fields}\n\n    const parsed = Object.assign(pick(FILE_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: FILE_CORE,\n      title: subTypeDef.title || (subTypeDef.name ? startCase(subTypeDef.name) : FILE_CORE.title),\n      options: options,\n      fields: subTypeDef.fields.map((fieldDef: any) => {\n        const {name, fieldset, ...rest} = fieldDef\n\n        const compiledField = {\n          name,\n          fieldset,\n          isCustomized: Boolean(rawSubTypeDef.fields),\n        }\n\n        return lazyGetter(compiledField, 'type', () => {\n          return createMemberType({\n            ...rest,\n            title: fieldDef.title || startCase(name),\n          })\n        })\n      }),\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(Object.assign({}, subTypeDef, {fields})))\n\n    lazyGetter(\n      parsed,\n      OWN_PROPS_NAME,\n      () => ({\n        ...subTypeDef,\n        options,\n        fields: parsed.fields,\n        title: parsed.title,\n        fieldsets: parsed.fieldsets,\n        preview: parsed.preview,\n      }),\n      {enumerable: false, writable: false},\n    )\n\n    return subtype(parsed)\n\n    function subtype(parent: any) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef: any) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"file\"')\n          }\n          const ownProps = pick(extensionDef, OVERRIDABLE_FIELDS)\n          const current = Object.assign({}, parent, ownProps, {\n            type: parent,\n          })\n          hiddenGetter(current, OWN_PROPS_NAME, ownProps)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import arrify from 'arrify'\nimport {pick} from 'lodash'\n\nimport {DEFAULT_OVERRIDEABLE_FIELDS, OWN_PROPS_NAME} from './constants'\nimport {hiddenGetter, lazyGetter} from './utils'\n\nexport const REF_FIELD = {\n  name: '_ref',\n  title: 'Referenced document ID',\n  type: 'string',\n}\n\nexport const WEAK_FIELD = {\n  name: '_weak',\n  title: 'Weak reference',\n  type: 'boolean',\n}\n\nconst REFERENCE_FIELDS = [REF_FIELD, WEAK_FIELD]\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst GLOBAL_DOCUMENT_REFERENCE_CORE = {\n  name: 'globalDocumentReference',\n  title: 'Global Document Reference',\n  type: null,\n  jsonType: 'object',\n}\n\nfunction humanize(arr: any, conjunction: any) {\n  const len = arr.length\n  if (len === 1) {\n    return arr[0]\n  }\n  const first = arr.slice(0, len - 1)\n  const last = arr[len - 1]\n  return `${first.join(', ')} ${conjunction} ${last}`\n}\n\nfunction buildTitle(type: any) {\n  if (!type.to || type.to.length === 0) {\n    return 'Global Document Reference'\n  }\n  return `Global Document Reference to ${humanize(\n    arrify(type.to).map((toType: any) => toType.title),\n    'or',\n  ).toLowerCase()}`\n}\n\nexport const GlobalDocumentReferenceType = {\n  get() {\n    return GLOBAL_DOCUMENT_REFERENCE_CORE\n  },\n  extend(subTypeDef: any, createMemberType: any) {\n    if (!subTypeDef.to) {\n      throw new Error(\n        `Missing \"to\" field in global document reference definition. Check the type ${subTypeDef.name}`,\n      )\n    }\n    const parsed = Object.assign(\n      pick(GLOBAL_DOCUMENT_REFERENCE_CORE, OVERRIDABLE_FIELDS),\n      subTypeDef,\n      {\n        type: GLOBAL_DOCUMENT_REFERENCE_CORE,\n      },\n    )\n\n    lazyGetter(parsed, 'fields', () => {\n      return REFERENCE_FIELDS.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: createMemberType(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'to', () => {\n      return arrify(subTypeDef.to).map((toType: any) => {\n        return {\n          ...toType,\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'title', () => subTypeDef.title || buildTitle(parsed))\n\n    lazyGetter(\n      parsed,\n      OWN_PROPS_NAME,\n      () => ({\n        ...subTypeDef,\n        fields: parsed.fields,\n        to: parsed.to,\n        title: parsed.title,\n      }),\n      {enumerable: false, writable: false},\n    )\n\n    return subtype(parsed)\n\n    function subtype(parent: any) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef: any) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` of subtypes of \"globalDocumentReference\"')\n          }\n          const ownProps = pick(extensionDef, OVERRIDABLE_FIELDS)\n          const current = Object.assign({}, parent, ownProps, {\n            type: parent,\n          })\n          hiddenGetter(current, OWN_PROPS_NAME, ownProps)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","export const ASSET_FIELD = {\n  name: 'asset',\n  type: 'reference',\n  to: [{type: 'sanity.imageAsset'}],\n}\n\nexport const HOTSPOT_FIELD = {\n  name: 'hotspot',\n  type: 'sanity.imageHotspot',\n}\n\nexport const CROP_FIELD = {\n  name: 'crop',\n  type: 'sanity.imageCrop',\n}\n\nexport const MEDIA_LIBRARY_ASSET_FIELD = {\n  name: 'media',\n  type: 'globalDocumentReference',\n  hidden: true,\n  to: [{type: 'sanity.asset'}],\n}\n","import {pick, startCase} from 'lodash'\n\nimport createPreviewGetter from '../preview/createPreviewGetter'\nimport {DEFAULT_OVERRIDEABLE_FIELDS, OWN_PROPS_NAME} from './constants'\nimport {ASSET_FIELD, CROP_FIELD, HOTSPOT_FIELD, MEDIA_LIBRARY_ASSET_FIELD} from './image/fieldDefs'\nimport {createFieldsets} from './object'\nimport {hiddenGetter, lazyGetter} from './utils'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst IMAGE_CORE = {\n  name: 'image',\n  title: 'Image',\n  type: null,\n  jsonType: 'object',\n}\n\nconst DEFAULT_OPTIONS = {}\n\nexport const ImageType = {\n  get() {\n    return IMAGE_CORE\n  },\n  extend(rawSubTypeDef: any, createMemberType: any) {\n    const options = {...(rawSubTypeDef.options || DEFAULT_OPTIONS)}\n\n    let hotspotFields = [HOTSPOT_FIELD, CROP_FIELD]\n    if (!options.hotspot) {\n      hotspotFields = hotspotFields.map((field) => ({...field, hidden: true}))\n    }\n\n    const fields = [\n      ASSET_FIELD,\n      MEDIA_LIBRARY_ASSET_FIELD,\n      ...hotspotFields,\n      ...(rawSubTypeDef.fields || []),\n    ]\n    const subTypeDef = {...rawSubTypeDef, fields}\n\n    const parsed = Object.assign(pick(this.get(), OVERRIDABLE_FIELDS), subTypeDef, {\n      type: IMAGE_CORE,\n      title: subTypeDef.title || (subTypeDef.name ? startCase(subTypeDef.name) : IMAGE_CORE.title),\n      options: options,\n      fields: subTypeDef.fields.map((fieldDef: any) => {\n        const {name, fieldset, ...rest} = fieldDef\n\n        const compiledField = {\n          name,\n          fieldset,\n          isCustomized: Boolean(rawSubTypeDef.fields),\n        }\n\n        return lazyGetter(compiledField, 'type', () => {\n          return createMemberType({\n            ...rest,\n            title: fieldDef.title || startCase(name),\n          })\n        })\n      }),\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'preview', createPreviewGetter(Object.assign({}, subTypeDef, {fields})))\n\n    lazyGetter(\n      parsed,\n      OWN_PROPS_NAME,\n      () => ({\n        ...subTypeDef,\n        options,\n        fields: parsed.fields,\n        title: parsed.title,\n        fieldsets: parsed.fieldsets,\n        preview: parsed.preview,\n      }),\n      {enumerable: false, writable: false},\n    )\n\n    return subtype(parsed)\n\n    function subtype(parent: any) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef: any) => {\n          if (extensionDef.fields) {\n            throw new Error('Cannot override `fields` of subtypes of \"image\"')\n          }\n          const ownProps = pick(extensionDef, OVERRIDABLE_FIELDS)\n          const current = Object.assign({}, parent, ownProps, {\n            type: parent,\n          })\n          hiddenGetter(current, OWN_PROPS_NAME, ownProps)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\n\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS, OWN_PROPS_NAME} from './constants'\nimport {hiddenGetter} from './utils'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst NUMBER_CORE = {\n  name: 'number',\n  title: 'Number',\n  type: null,\n  jsonType: 'number',\n}\n\nexport const NumberType = {\n  get() {\n    return NUMBER_CORE\n  },\n  extend(subTypeDef: any) {\n    const ownProps = {\n      ...subTypeDef,\n      preview: primitivePreview,\n    }\n\n    const parsed = Object.assign(pick(NUMBER_CORE, OVERRIDABLE_FIELDS), ownProps, {\n      type: NUMBER_CORE,\n    })\n\n    hiddenGetter(parsed, OWN_PROPS_NAME, ownProps)\n\n    return subtype(parsed)\n\n    function subtype(parent: any) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef: any) => {\n          const subOwnProps = pick(extensionDef, OVERRIDABLE_FIELDS)\n          const current = Object.assign({}, parent, subOwnProps, {\n            type: parent,\n          })\n          hiddenGetter(current, OWN_PROPS_NAME, subOwnProps)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import arrify from 'arrify'\nimport {pick} from 'lodash'\n\nimport {DEFAULT_OVERRIDEABLE_FIELDS, OWN_PROPS_NAME} from './constants'\nimport {createFieldsets} from './object'\nimport {hiddenGetter, lazyGetter} from './utils'\n\nexport const REF_FIELD = {\n  name: '_ref',\n  title: 'Referenced document ID',\n  type: 'string',\n}\n\nexport const WEAK_FIELD = {\n  name: '_weak',\n  title: 'Weak reference',\n  type: 'boolean',\n}\n\nconst REFERENCE_FIELDS = [REF_FIELD, WEAK_FIELD]\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst REFERENCE_CORE = {\n  name: 'reference',\n  title: 'Reference',\n  type: null,\n  jsonType: 'object',\n}\n\nfunction humanize(arr: any, conjunction: any) {\n  const len = arr.length\n  if (len === 1) {\n    return arr[0]\n  }\n  const first = arr.slice(0, len - 1)\n  const last = arr[len - 1]\n  return `${first.join(', ')} ${conjunction} ${last}`\n}\n\nfunction buildTitle(type: any) {\n  if (!type.to || type.to.length === 0) {\n    return 'Reference'\n  }\n  return `Reference to ${humanize(\n    arrify(type.to).map((toType: any) => toType.title),\n    'or',\n  ).toLowerCase()}`\n}\n\nexport const ReferenceType = {\n  get() {\n    return REFERENCE_CORE\n  },\n  extend(subTypeDef: any, createMemberType: any) {\n    if (!subTypeDef.to) {\n      throw new Error(\n        `Missing \"to\" field in reference definition. Check the type ${subTypeDef.name}`,\n      )\n    }\n    const parsed = Object.assign(pick(REFERENCE_CORE, OVERRIDABLE_FIELDS), subTypeDef, {\n      type: REFERENCE_CORE,\n    })\n\n    lazyGetter(parsed, 'fields', () => {\n      return REFERENCE_FIELDS.map((fieldDef) => {\n        const {name, ...type} = fieldDef\n        return {\n          name: name,\n          type: createMemberType(type),\n        }\n      })\n    })\n\n    lazyGetter(parsed, 'fieldsets', () => {\n      return createFieldsets(subTypeDef, parsed.fields)\n    })\n\n    lazyGetter(parsed, 'to', () => {\n      return arrify(subTypeDef.to).map((toType: any) => createMemberType(toType))\n    })\n\n    lazyGetter(parsed, 'title', () => subTypeDef.title || buildTitle(parsed))\n\n    lazyGetter(\n      parsed,\n      OWN_PROPS_NAME,\n      () => ({\n        ...subTypeDef,\n        fields: parsed.fields,\n        fieldsets: parsed.fieldsets,\n        to: parsed.to,\n        title: parsed.title,\n      }),\n      {enumerable: false, writable: false},\n    )\n\n    return subtype(parsed)\n\n    function subtype(parent: any) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef: any) => {\n          if (extensionDef.of) {\n            throw new Error('Cannot override `of` of subtypes of \"reference\"')\n          }\n          const ownProps = pick(extensionDef, OVERRIDABLE_FIELDS)\n          const current = Object.assign({}, parent, ownProps, {\n            type: parent,\n          })\n          hiddenGetter(current, OWN_PROPS_NAME, ownProps)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\n\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS, OWN_PROPS_NAME} from './constants'\nimport {hiddenGetter} from './utils'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst STRING_CORE = {\n  name: 'string',\n  title: 'String',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const StringType = {\n  get() {\n    return STRING_CORE\n  },\n  extend(subTypeDef: any) {\n    const ownProps = {\n      ...subTypeDef,\n      preview: primitivePreview,\n    }\n\n    const parsed = Object.assign(pick(STRING_CORE, OVERRIDABLE_FIELDS), ownProps, {\n      type: STRING_CORE,\n    })\n\n    hiddenGetter(parsed, OWN_PROPS_NAME, ownProps)\n\n    return subtype(parsed)\n\n    function subtype(parent: any) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef: any) => {\n          const subOwnProps = pick(extensionDef, OVERRIDABLE_FIELDS)\n          const current = Object.assign({}, parent, subOwnProps, {\n            type: parent,\n          })\n          hiddenGetter(current, OWN_PROPS_NAME, subOwnProps)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\n\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS, OWN_PROPS_NAME} from './constants'\nimport {hiddenGetter} from './utils'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS, 'rows']\n\nconst TEXT_CORE = {\n  name: 'text',\n  title: 'Text',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const TextType = {\n  get() {\n    return TEXT_CORE\n  },\n  extend(subTypeDef: any) {\n    const ownProps = {\n      ...subTypeDef,\n      preview: primitivePreview,\n    }\n\n    const parsed = Object.assign(pick(TEXT_CORE, OVERRIDABLE_FIELDS), ownProps, {\n      type: TEXT_CORE,\n    })\n\n    hiddenGetter(parsed, OWN_PROPS_NAME, ownProps)\n\n    return subtype(parsed)\n\n    function subtype(parent: any) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef: any) => {\n          const subOwnProps = pick(extensionDef, OVERRIDABLE_FIELDS)\n          const current = Object.assign({}, parent, subOwnProps, {\n            type: parent,\n          })\n          hiddenGetter(current, OWN_PROPS_NAME, subOwnProps)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import {pick} from 'lodash'\n\nimport primitivePreview from '../preview/primitivePreview'\nimport {DEFAULT_OVERRIDEABLE_FIELDS, OWN_PROPS_NAME} from './constants'\nimport {hiddenGetter} from './utils'\n\nconst OVERRIDABLE_FIELDS = [...DEFAULT_OVERRIDEABLE_FIELDS]\n\nconst URL_CORE = {\n  name: 'url',\n  title: 'Url',\n  type: null,\n  jsonType: 'string',\n}\n\nexport const UrlType = {\n  get() {\n    return URL_CORE\n  },\n  extend(subTypeDef: any) {\n    const ownProps = {\n      ...subTypeDef,\n      preview: primitivePreview,\n    }\n\n    const parsed = Object.assign(pick(URL_CORE, OVERRIDABLE_FIELDS), ownProps, {\n      type: URL_CORE,\n    })\n\n    hiddenGetter(parsed, OWN_PROPS_NAME, ownProps)\n\n    return subtype(parsed)\n\n    function subtype(parent: any) {\n      return {\n        get() {\n          return parent\n        },\n        extend: (extensionDef: any) => {\n          const subOwnownProps = pick(extensionDef, OVERRIDABLE_FIELDS)\n          const current = Object.assign({}, parent, subOwnownProps, {\n            type: parent,\n          })\n          hiddenGetter(current, OWN_PROPS_NAME, subOwnownProps)\n          return subtype(current)\n        },\n      }\n    }\n  },\n}\n","import * as types from './types'\n\nfunction compileRegistry(schemaDef: any) {\n  const registry = Object.create(null)\n  let localTypeNames: string[]\n\n  if (schemaDef.parent) {\n    Object.assign(registry, schemaDef.parent._registry)\n    localTypeNames = []\n  } else {\n    // For the root schema we inherit from the core types and also register these as the \"local\" ones.\n    Object.assign(registry, types)\n    localTypeNames = Object.keys(types)\n  }\n\n  const defsByName = schemaDef.types.reduce((acc: any, def: any) => {\n    if (acc[def.name]) {\n      throw new Error(`Duplicate type name added to schema: ${def.name}`)\n    }\n    acc[def.name] = def\n    return acc\n  }, {})\n\n  schemaDef.types.forEach(add)\n\n  return {\n    registry,\n    localTypeNames,\n  }\n\n  function ensure(typeName: any) {\n    if (!registry[typeName]) {\n      if (!defsByName[typeName]) {\n        throw new Error(`Unknown type: ${typeName}`)\n      }\n      add(defsByName[typeName])\n    }\n  }\n\n  function extendMember(memberDef: any) {\n    ensure(memberDef.type)\n    return registry[memberDef.type].extend(memberDef, extendMember).get()\n  }\n\n  function add(typeDef: any) {\n    ensure(typeDef.type)\n    if (registry[typeDef.name]) {\n      return\n    }\n    localTypeNames.push(typeDef.name)\n    registry[typeDef.name] = registry[typeDef.type].extend(typeDef, extendMember)\n  }\n}\n\n/**\n * @beta\n */\nexport class Schema {\n  _original: {name: string; types: any[]; parent?: Schema}\n  _registry: {[typeName: string]: any}\n  #localTypeNames: string[]\n\n  static compile(schemaDef: any): Schema {\n    return new Schema(schemaDef)\n  }\n\n  constructor(schemaDef: any) {\n    this._original = schemaDef\n\n    const {registry, localTypeNames} = compileRegistry(schemaDef)\n    this._registry = registry\n    this.#localTypeNames = localTypeNames\n  }\n\n  get name(): string {\n    return this._original.name\n  }\n\n  /**\n   * Returns the parent schema.\n   */\n  get parent(): Schema | undefined {\n    return this._original.parent\n  }\n\n  get(name: string): any {\n    return this._registry[name] && this._registry[name].get()\n  }\n\n  has(name: string): boolean {\n    return name in this._registry\n  }\n\n  getTypeNames(): string[] {\n    return Object.keys(this._registry)\n  }\n\n  getLocalTypeNames(): string[] {\n    return this.#localTypeNames\n  }\n}\n\n/**\n * @deprecated Use `import {Schema} from \"@sanity/schema\"` instead\n */\nexport class DeprecatedDefaultSchema extends Schema {\n  static compile(schemaDef: any): Schema {\n    return new DeprecatedDefaultSchema(schemaDef)\n  }\n\n  constructor(schemaDef: any) {\n    super(schemaDef)\n\n    const stack = new Error(\n      'The default export of `@sanity/schema` is deprecated. Use `import {Schema} from \"@sanity/schema\"` instead.',\n    ).stack!.replace(/^Error/, 'Warning')\n\n    console.warn(stack)\n  }\n}\n","import {\n  type CustomValidator,\n  type FieldReference,\n  type FieldRules,\n  type LocalizedValidationMessages,\n  type MediaAssetTypes,\n  type MediaValidator,\n  type Rule as IRule,\n  type RuleClass,\n  type RuleSpec,\n  type RuleSpecConstraint,\n  type RuleTypeConstraint,\n  type SchemaType,\n  type ValidationContext,\n  type ValidationMarker,\n} from '@sanity/types'\nimport {cloneDeep} from 'lodash'\n\nconst FIELD_REF = Symbol('FIELD_REF')\nconst ruleConstraintTypes: RuleTypeConstraint[] = [\n  'Array',\n  'Boolean',\n  'Date',\n  'Number',\n  'Object',\n  'String',\n]\n\n/**\n * Core Rule implementation without validation logic.\n * This is the base Rule class that can be extended with validation logic.\n *\n * @internal\n */\nexport const Rule: RuleClass = class Rule implements IRule {\n  static readonly FIELD_REF = FIELD_REF\n  static array = (def?: SchemaType): Rule => new Rule(def).type('Array')\n  static object = (def?: SchemaType): Rule => new Rule(def).type('Object')\n  static string = (def?: SchemaType): Rule => new Rule(def).type('String')\n  static number = (def?: SchemaType): Rule => new Rule(def).type('Number')\n  static boolean = (def?: SchemaType): Rule => new Rule(def).type('Boolean')\n  static dateTime = (def?: SchemaType): Rule => new Rule(def).type('Date')\n  static valueOfField = (path: string | string[]): {type: symbol; path: string | string[]} => ({\n    type: FIELD_REF,\n    path,\n  })\n\n  _type: RuleTypeConstraint | undefined = undefined\n  _level: 'error' | 'warning' | 'info' | undefined = undefined\n  _required: 'required' | 'optional' | undefined = undefined\n  _typeDef: SchemaType | undefined = undefined\n  _message: string | LocalizedValidationMessages | undefined = undefined\n  _rules: RuleSpec[] = []\n  _fieldRules: FieldRules | undefined = undefined\n\n  constructor(typeDef?: SchemaType) {\n    this._typeDef = typeDef\n    this.reset()\n  }\n\n  private _mergeRequired(next: Rule) {\n    if (this._required === 'required' || next._required === 'required') return 'required'\n    if (this._required === 'optional' || next._required === 'optional') return 'optional'\n    return undefined\n  }\n\n  // Alias to static method, since we often have access to an _instance_ of a rule but not the actual Rule class\n  valueOfField = Rule.valueOfField.bind(Rule)\n\n  error(message?: string | LocalizedValidationMessages): Rule {\n    const rule = this.clone()\n    rule._level = 'error'\n    rule._message = message || undefined\n    return rule\n  }\n\n  warning(message?: string | LocalizedValidationMessages): Rule {\n    const rule = this.clone()\n    rule._level = 'warning'\n    rule._message = message || undefined\n    return rule\n  }\n\n  info(message?: string | LocalizedValidationMessages): Rule {\n    const rule = this.clone()\n    rule._level = 'info'\n    rule._message = message || undefined\n    return rule\n  }\n\n  reset(): this {\n    this._type = this._type || undefined\n    this._rules = (this._rules || []).filter((rule) => rule.flag === 'type')\n    this._message = undefined\n    this._required = undefined\n    this._level = 'error'\n    this._fieldRules = undefined\n    return this\n  }\n\n  isRequired(): boolean {\n    return this._required === 'required'\n  }\n\n  clone(): Rule {\n    const rule = new Rule()\n    rule._type = this._type\n    rule._message = this._message\n    rule._required = this._required\n    rule._rules = cloneDeep(this._rules)\n    rule._level = this._level\n    rule._fieldRules = this._fieldRules\n    rule._typeDef = this._typeDef\n    return rule\n  }\n\n  cloneWithRules(rules: RuleSpec[]): Rule {\n    const rule = this.clone()\n    const newRules = new Set()\n    rules.forEach((curr) => {\n      if (curr.flag === 'type') {\n        rule._type = curr.constraint\n      }\n\n      newRules.add(curr.flag)\n    })\n\n    rule._rules = rule._rules\n      .filter((curr) => {\n        const disallowDuplicate = ['type', 'uri', 'email'].includes(curr.flag)\n        const isDuplicate = newRules.has(curr.flag)\n        return !(disallowDuplicate && isDuplicate)\n      })\n      .concat(rules)\n\n    return rule\n  }\n\n  merge(rule: Rule): Rule {\n    if (this._type && rule._type && this._type !== rule._type) {\n      throw new Error('merge() failed: conflicting types')\n    }\n\n    const newRule = this.cloneWithRules(rule._rules)\n    newRule._type = this._type || rule._type\n    newRule._message = this._message || rule._message\n    newRule._required = this._mergeRequired(rule)\n    newRule._level = this._level === 'error' ? rule._level : this._level\n    return newRule\n  }\n\n  // Validation flag setters\n  type(targetType: RuleTypeConstraint | Lowercase<RuleTypeConstraint>): Rule {\n    const type = `${targetType.slice(0, 1).toUpperCase()}${targetType.slice(1)}` as Capitalize<\n      typeof targetType\n    >\n\n    if (!ruleConstraintTypes.includes(type)) {\n      throw new Error(`Unknown type \"${targetType}\"`)\n    }\n\n    const rule = this.cloneWithRules([{flag: 'type', constraint: type}])\n    rule._type = type\n    return rule\n  }\n\n  all(children: Rule[]): Rule {\n    return this.cloneWithRules([{flag: 'all', constraint: children}])\n  }\n\n  either(children: Rule[]): Rule {\n    return this.cloneWithRules([{flag: 'either', constraint: children}])\n  }\n\n  // Shared rules\n  optional(): Rule {\n    const rule = this.cloneWithRules([{flag: 'presence', constraint: 'optional'}])\n    rule._required = 'optional'\n    return rule\n  }\n\n  required(): Rule {\n    const rule = this.cloneWithRules([{flag: 'presence', constraint: 'required'}])\n    rule._required = 'required'\n    return rule\n  }\n\n  custom<T = unknown>(\n    fn: CustomValidator<T>,\n    options: {bypassConcurrencyLimit?: boolean} = {},\n  ): Rule {\n    if (options.bypassConcurrencyLimit) {\n      Object.assign(fn, {bypassConcurrencyLimit: true})\n    }\n    return this.cloneWithRules([{flag: 'custom', constraint: fn as CustomValidator}])\n  }\n\n  min(len: number | string | FieldReference): Rule {\n    return this.cloneWithRules([{flag: 'min', constraint: len}])\n  }\n\n  max(len: number | string | FieldReference): Rule {\n    return this.cloneWithRules([{flag: 'max', constraint: len}])\n  }\n\n  length(len: number | FieldReference): Rule {\n    return this.cloneWithRules([{flag: 'length', constraint: len}])\n  }\n\n  valid(value: unknown | unknown[]): Rule {\n    const values = Array.isArray(value) ? value : [value]\n    return this.cloneWithRules([{flag: 'valid', constraint: values}])\n  }\n\n  // Numbers only\n  integer(): Rule {\n    return this.cloneWithRules([{flag: 'integer'}])\n  }\n\n  precision(limit: number | FieldReference): Rule {\n    return this.cloneWithRules([{flag: 'precision', constraint: limit}])\n  }\n\n  positive(): Rule {\n    return this.cloneWithRules([{flag: 'min', constraint: 0}])\n  }\n\n  negative(): Rule {\n    return this.cloneWithRules([{flag: 'lessThan', constraint: 0}])\n  }\n\n  greaterThan(num: number | FieldReference): Rule {\n    return this.cloneWithRules([{flag: 'greaterThan', constraint: num}])\n  }\n\n  lessThan(num: number | FieldReference): Rule {\n    return this.cloneWithRules([{flag: 'lessThan', constraint: num}])\n  }\n\n  // String only\n  uppercase(): Rule {\n    return this.cloneWithRules([{flag: 'stringCasing', constraint: 'uppercase'}])\n  }\n\n  lowercase(): Rule {\n    return this.cloneWithRules([{flag: 'stringCasing', constraint: 'lowercase'}])\n  }\n\n  regex(pattern: RegExp, name: string, options: {name?: string; invert?: boolean}): Rule\n  regex(pattern: RegExp, options: {name?: string; invert?: boolean}): Rule\n  regex(pattern: RegExp, name: string): Rule\n  regex(pattern: RegExp): Rule\n  regex(\n    pattern: RegExp,\n    a?: string | {name?: string; invert?: boolean},\n    b?: {name?: string; invert?: boolean},\n  ): Rule {\n    const name = typeof a === 'string' ? a : (a?.name ?? b?.name)\n    const invert = typeof a === 'string' ? false : (a?.invert ?? b?.invert)\n\n    const constraint: RuleSpecConstraint<'regex'> = {\n      pattern,\n      name,\n      invert: invert || false,\n    }\n\n    return this.cloneWithRules([{flag: 'regex', constraint}])\n  }\n\n  email(): Rule {\n    return this.cloneWithRules([{flag: 'email'}])\n  }\n\n  uri(opts?: {\n    scheme?: (string | RegExp) | Array<string | RegExp>\n    allowRelative?: boolean\n    relativeOnly?: boolean\n    allowCredentials?: boolean\n  }): Rule {\n    const optsScheme = opts?.scheme || ['http', 'https']\n    const schemes = Array.isArray(optsScheme) ? optsScheme : [optsScheme]\n\n    if (!schemes.length) {\n      throw new Error('scheme must have at least 1 scheme specified')\n    }\n\n    const constraint: RuleSpecConstraint<'uri'> = {\n      options: {\n        scheme: schemes.map((scheme) => {\n          if (!(scheme instanceof RegExp) && typeof scheme !== 'string') {\n            throw new Error('scheme must be a RegExp or a String')\n          }\n\n          return typeof scheme === 'string' ? new RegExp(`^${escapeRegex(scheme)}$`) : scheme\n        }),\n        allowRelative: opts?.allowRelative || false,\n        relativeOnly: opts?.relativeOnly || false,\n        allowCredentials: opts?.allowCredentials || false,\n      },\n    }\n\n    return this.cloneWithRules([{flag: 'uri', constraint}])\n  }\n\n  // Array only\n  unique(): Rule {\n    return this.cloneWithRules([{flag: 'unique'}])\n  }\n\n  // Objects only\n  reference(): Rule {\n    return this.cloneWithRules([{flag: 'reference'}])\n  }\n\n  fields(rules: FieldRules): Rule {\n    if (this._type !== 'Object') {\n      throw new Error('fields() can only be called on an object type')\n    }\n\n    const rule = this.cloneWithRules([])\n    rule._fieldRules = rules\n    return rule\n  }\n\n  assetRequired(): Rule {\n    const base = getBaseType(this._typeDef)\n    let assetType: 'asset' | 'image' | 'file'\n    if (base && ['image', 'file'].includes(base.name)) {\n      assetType = base.name === 'image' ? 'image' : 'file'\n    } else {\n      assetType = 'asset'\n    }\n\n    return this.cloneWithRules([{flag: 'assetRequired', constraint: {assetType}}])\n  }\n\n  media<T extends MediaAssetTypes = MediaAssetTypes>(fn: MediaValidator<T>): Rule {\n    return this.cloneWithRules([{flag: 'media', constraint: fn}])\n  }\n\n  /**\n   * The validate method is not implemented in the base Rule class.\n   * It should be implemented by extending this class or injecting validation logic.\n   */\n  async validate(\n    value: unknown,\n    options: ValidationContext & {\n      __internal?: {\n        customValidationConcurrencyLimiter?: {\n          ready: () => Promise<void>\n          release: () => void\n        }\n      }\n    },\n  ): Promise<ValidationMarker[]> {\n    throw new Error('validate() method must be implemented by extending Rule class')\n  }\n}\n\n// Helper functions\nfunction getBaseType(type: SchemaType | undefined): SchemaType | undefined {\n  return type && type.type ? getBaseType(type.type) : type\n}\n\nfunction escapeRegex(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n}\n"],"names":["OVERRIDABLE_FIELDS","asString","guessPreviewConfig","Rule","INHERITED_FIELDS","DEFAULT_OPTIONS","REF_FIELD","WEAK_FIELD","REFERENCE_FIELDS","humanize","buildTitle","ASSET_FIELD","MEDIA_LIBRARY_ASSET_FIELD"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"debugId":null}},
    {"offset": {"line": 2028, "column": 0}, "map": {"version":3,"file":"_internal.mjs","sources":["file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/descriptors/convert.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/descriptors/sync.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/legacy/actionUtils.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/builtinTypes/assetSourceData.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/builtinTypes/fileAsset.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/builtinTypes/geopoint.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/builtinTypes/imageAsset.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/builtinTypes/imageCrop.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/builtinTypes/imageDimensions.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/builtinTypes/imageHotspot.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/builtinTypes/imageMetadata.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/builtinTypes/imagePalette.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/builtinTypes/imagePaletteSwatch.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/builtinTypes/slug.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/builtinTypes/index.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/createValidationResult.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/groupProblems.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/utils/getDupes.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/core/traverseSchema.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/coreTypes.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/traverseSchema.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/types/array.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/utils/isJSONTypeOf.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/types/block.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/utils/validateNonObjectFieldsProp.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/utils/validateTypeName.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/types/deprecated.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/types/common.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/types/crossDatasetReference.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/utils/isComponent.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/utils/validateComponent.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/types/object.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/types/document.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/types/file.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/types/globalDocumentReference.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/types/image.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/types/reference.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/types/rootType.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/types/slug.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validateSchema.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validation/ValidationError.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/createSchemaFromManifestTypes.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/extractSchema.ts","file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/sanity/validateMediaLibraryAssetAspect.ts"],"sourcesContent":["import {\n  type EncodableObject,\n  type EncodableValue,\n  SetBuilder,\n  type SetSynchronization,\n} from '@sanity/descriptors'\nimport {\n  type ArraySchemaType,\n  type FieldGroupDefinition,\n  type FieldsetDefinition,\n  type ObjectSchemaType,\n  type ReferenceSchemaType,\n  type Rule as IRule,\n  type Schema,\n  type SchemaType,\n} from '@sanity/types'\nimport {isEqual, isObject} from 'lodash'\n\nimport {Rule} from '../legacy/Rule'\nimport {OWN_PROPS_NAME} from '../legacy/types/constants'\nimport {\n  type ArrayTypeDef,\n  type CommonTypeDef,\n  type CoreTypeDef,\n  type CyclicMarker,\n  type DepthMarker,\n  type FieldReference,\n  type FunctionMarker,\n  type JSXMarker,\n  type ObjectField,\n  type ObjectFieldset,\n  type ObjectGroup,\n  type ObjectI18n,\n  type ObjectI18nValue,\n  type ObjectMessage,\n  type ObjectOrdering,\n  type ObjectOrderingBy,\n  type ReferenceTypeDef,\n  type RegistryType,\n  type Rule as RuleType,\n  type SubtypeDef,\n  type TypeDef,\n  type UndefinedMarker,\n  type UnknownMarker,\n  type Validation,\n  type ValidationMessage,\n} from './types'\n\nconst MAX_DEPTH_UKNOWN = 5\n\ntype UnknownRecord<T> = {[P in keyof T]: unknown}\n\nexport class DescriptorConverter {\n  opts: Options\n  cache: WeakMap<Schema, SetSynchronization<RegistryType>> = new WeakMap()\n\n  constructor(opts: Options) {\n    this.opts = opts\n  }\n\n  /**\n   * Returns a synchronization object for a schema.\n   *\n   * This is automatically cached in a weak map.\n   */\n  get(schema: Schema): SetSynchronization<RegistryType> {\n    let value = this.cache.get(schema)\n    if (value) return value\n\n    const builder = new SetBuilder()\n    for (const name of schema.getLocalTypeNames()) {\n      const typeDef = convertTypeDef(schema.get(name)!, this.opts)\n      builder.addObject('sanity.schema.namedType', {name, typeDef})\n    }\n\n    if (schema.parent) {\n      builder.addSet(this.get(schema.parent))\n    }\n\n    value = builder.build('sanity.schema.registry')\n    this.cache.set(schema, value)\n    return value\n  }\n}\n\nfunction convertCommonTypeDef(schemaType: SchemaType, opts: Options): CommonTypeDef {\n  // Note that OWN_PROPS_NAME is only set on subtypes, not the core types.\n  // We might consider setting OWN_PROPS_NAME on _all_ types to avoid this branch.\n  const ownProps = OWN_PROPS_NAME in schemaType ? (schemaType as any)[OWN_PROPS_NAME] : schemaType\n\n  let fields: ObjectField[] | undefined\n  if (Array.isArray(ownProps.fields)) {\n    fields = (ownProps.fields as ObjectSchemaType['fields']).map(\n      ({name, group, fieldset, type}) => ({\n        name,\n        typeDef: convertTypeDef(type, opts),\n        groups: arrayifyString(group),\n        fieldset,\n      }),\n    )\n  }\n\n  let fieldsets: ObjectFieldset[] | undefined\n  if (Array.isArray(ownProps.fieldsets)) {\n    fieldsets = filterStringKey(\n      'name',\n      (ownProps.fieldsets as Array<UnknownRecord<FieldsetDefinition>>).map(\n        ({name, title, description, group, hidden, readOnly, options}) => ({\n          name,\n          title: maybeString(title),\n          description: maybeString(description),\n          group: maybeString(group),\n          hidden: conditionalTrue(hidden),\n          readOnly: conditionalTrue(readOnly),\n          options: convertUnknown(options),\n        }),\n      ),\n    )\n  }\n\n  let groups: ObjectGroup[] | undefined\n  if (Array.isArray(ownProps.groups)) {\n    groups = filterStringKey(\n      'name',\n      (ownProps.groups as Array<UnknownRecord<FieldGroupDefinition>>).map(\n        ({name, title, hidden, default: def, i18n}) => ({\n          name,\n          title: maybeString(title),\n          hidden: conditionalTrue(hidden),\n          default: maybeTrue(def),\n          i18n: maybeI18n(i18n),\n        }),\n      ),\n    )\n  }\n\n  const reason = ownProps.deprecated?.reason\n\n  let orderings: ObjectOrdering[] | undefined\n  if (Array.isArray(ownProps.orderings)) {\n    orderings = ownProps.orderings\n      .map(maybeOrdering)\n      .filter((o: ObjectOrdering | undefined) => o !== undefined)\n  }\n\n  return {\n    title: maybeString(ownProps.title),\n    description: maybeStringOrJSX(ownProps.description),\n    readOnly: conditionalTrue(ownProps.readOnly),\n    hidden: conditionalTrue(ownProps.hidden),\n    liveEdit: maybeTrue(ownProps.liveEdit),\n    options: convertUnknown(ownProps.options),\n    initialValue: convertUnknown(ownProps.initialValue),\n    deprecated: typeof reason === 'string' ? {reason} : undefined,\n    placeholder: maybeString(ownProps.placeholder),\n    rows: maybeNumberAsString(ownProps.rows),\n    fields,\n    fieldsets,\n    groups,\n    validation: maybeValidations(ownProps),\n    orderings,\n  }\n}\n\n/**\n * Options used when converting the schema.\n *\n * We know we need this in order to handle validations.\n **/\nexport type Options = Record<never, never>\n\nexport function convertTypeDef(schemaType: SchemaType, opts: Options): TypeDef {\n  const common = convertCommonTypeDef(schemaType, opts)\n\n  if (!schemaType.type) {\n    return {\n      extends: null,\n      jsonType: schemaType.jsonType,\n      ...common,\n    } satisfies CoreTypeDef\n  }\n\n  // The types below are somewhat magical: It's only direct subtypes of array/reference which\n  // are allowed to have of/to assigned to them. We handle them specifically here since this\n  // gives us more control over the types.\n\n  switch (schemaType.type.name) {\n    case 'array': {\n      return {\n        extends: 'array',\n        of: (schemaType as ArraySchemaType).of.map((ofType) => ({\n          name: ofType.name,\n          typeDef: convertTypeDef(ofType, opts),\n        })),\n        ...common,\n      } satisfies ArrayTypeDef\n    }\n    case 'reference':\n    case 'globalDocumentReference':\n    case 'crossDatasetReference':\n      return {\n        extends: schemaType.type.name,\n        to: filterStringKey(\n          'name',\n          (schemaType as ReferenceSchemaType).to\n            // The `toType.type` case is for crossDatasetReferences/crossDatasetReference\n            .map((toType) => ({name: toType.name || toType.type?.name || toType.type})),\n        ),\n        ...common,\n      } satisfies ReferenceTypeDef\n    default:\n      return {extends: schemaType.type.name, ...common} satisfies SubtypeDef\n  }\n}\n\nfunction maybeString(val: unknown): string | undefined {\n  return typeof val === 'string' ? val : undefined\n}\n\nfunction maybeNumberAsString(val: unknown): string | undefined {\n  return typeof val === 'number' ? val.toString() : undefined\n}\n\n/** Returns `true` for `true` and undefined for everything else. */\nfunction maybeTrue(val: unknown): true | undefined {\n  return val === true ? true : undefined\n}\n\nfunction conditionalTrue(val: unknown): true | undefined | FunctionMarker {\n  if (typeof val === 'function') return FUNCTION_MARKER\n  return maybeTrue(val)\n}\n\nfunction filterStringKey<T, K extends keyof T>(key: K, arr: T[]): Array<T & {[key in K]: string}> {\n  return arr.filter((obj): obj is T & {[key in K]: string} => typeof obj[key] === 'string')\n}\n\nfunction arrayifyString(val: unknown): string[] | undefined {\n  if (typeof val === 'string') {\n    return [val]\n  }\n\n  if (Array.isArray(val)) {\n    return val.filter((elem) => typeof elem === 'string')\n  }\n\n  return undefined\n}\n\nconst FUNCTION_MARKER: FunctionMarker = {__type: 'function'}\nconst UNKNOWN_MARKER: UnknownMarker = {__type: 'unknown'}\nconst UNDEFINED_MARKER: UndefinedMarker = {__type: 'undefined'}\nconst CYCLIC_MARKER: CyclicMarker = {__type: 'cyclic'}\nconst MAX_DEPTH_MARKER: DepthMarker = {__type: 'maxDepth'}\n\nfunction convertUnknown(\n  val: unknown,\n  seen = new Set(),\n  maxDepth = MAX_DEPTH_UKNOWN,\n): EncodableValue | undefined {\n  if (maxDepth === 0) return MAX_DEPTH_MARKER\n\n  if (typeof val === 'string' || typeof val === 'boolean' || val === null || val === undefined) {\n    return val\n  }\n\n  if (typeof val === 'number') {\n    return {__type: 'number', value: val.toString()}\n  }\n\n  if (typeof val === 'function') return FUNCTION_MARKER\n\n  if (seen.has(val)) {\n    return CYCLIC_MARKER\n  }\n\n  seen.add(val)\n\n  if (isObject(val)) {\n    if (Array.isArray(val)) {\n      return val.map((elem) => {\n        const res = convertUnknown(elem, seen, maxDepth - 1)\n        return res === undefined ? UNDEFINED_MARKER : res\n      })\n    }\n\n    if ('$$typeof' in val && 'type' in val && 'props' in val) {\n      // React element:\n      const {type, props} = val\n      const strType = typeof type === 'function' ? type.name : type\n      if (typeof strType !== 'string') return undefined\n      return {\n        __type: 'jsx',\n        type: strType,\n        props: convertUnknown(props, seen, maxDepth - 1) as EncodableObject,\n      }\n    }\n\n    let hasType = false\n    const result: EncodableObject = {}\n    for (const [key, field] of Object.entries(val)) {\n      if (key === '__type') hasType = true\n      result[key] = convertUnknown(field, seen, maxDepth - 1)\n    }\n\n    return hasType ? {__type: 'object', value: result} : result\n  }\n\n  return UNKNOWN_MARKER\n}\n\nfunction maybeStringOrJSX(val: unknown): string | undefined | JSXMarker {\n  if (typeof val === 'string') return val\n  if (isObject(val) && '$$typeof' in val && 'type' in val && 'props' in val) {\n    const {type, props} = val\n    const strType = typeof type === 'function' ? type.name : type\n    if (typeof strType !== 'string') return undefined\n    return {__type: 'jsx', type: strType, props: convertUnknown(props) as EncodableObject}\n  }\n  return undefined\n}\n\n// maybeValidations attempts to serialize the validations of a type. Note: we need the whole type object and not\n// just the validation property as we need to recreate implied validations of various properties. This are technically\n// inherited and thus lost since we operate on the ownProps.\nfunction maybeValidations(obj: unknown): Validation[] | undefined {\n  if (!isObject(obj) || !('type' in obj)) return undefined\n\n  // Implied rules are rules which are inherited by the types. Since the descriptor operates on the ownProps\n  // it is necessary to add these rule back to ensure we have the default validations for the types.\n  const impliedRules: RuleType[] = []\n\n  if (\n    'options' in obj &&\n    isObject(obj.options) &&\n    'list' in obj.options &&\n    Array.isArray(obj.options.list)\n  ) {\n    impliedRules.push({\n      type: 'enum',\n      values: obj.options.list\n        .map((o) => convertUnknown(extractValueFromListOption(o, obj)))\n        .filter((v: EncodableValue | undefined) => v !== undefined),\n    })\n  }\n\n  switch (obj.type) {\n    case 'url':\n      impliedRules.push({\n        type: 'uri',\n        allowRelative: false,\n      })\n      break\n    case 'slug':\n      impliedRules.push({\n        type: 'custom',\n      })\n      break\n    case 'reference':\n      impliedRules.push({\n        type: 'reference',\n      })\n      break\n    case 'email':\n      impliedRules.push({\n        type: 'email',\n      })\n      break\n    default:\n    // Do nothing\n  }\n\n  // Shortcut\n  if (!('validation' in obj) || !obj.validation) {\n    if (impliedRules.length > 0) {\n      return [\n        {\n          level: 'error',\n          rules: impliedRules,\n        },\n      ]\n    }\n    return undefined\n  }\n\n  const validations: Validation[] = []\n  const rules = Array.isArray(obj.validation) ? obj.validation : [obj.validation]\n  for (const rule of rules) {\n    const validation = maybeValidation(rule)\n    if (validation === undefined) {\n      continue\n    }\n\n    // Add implied rules that aren't already defined in the validation\n    const rulesToAdd = impliedRules.filter((ir) => !validation.rules.some((r) => isEqual(r, ir)))\n    if (rulesToAdd.length > 0) {\n      validation.rules.unshift(...rulesToAdd)\n    }\n\n    // If the validation is already present, skip adding it\n    if (validations.some((v) => isEqual(v, validation))) {\n      continue\n    }\n\n    validations.push(validation)\n  }\n\n  return validations.length > 0 ? validations : undefined\n}\n\nfunction hasValueField(typeDef: unknown): boolean {\n  if (!typeDef || typeof typeDef !== 'object') return false\n  if (!('fields' in typeDef)) {\n    if ('type' in typeDef && typeDef.type) return hasValueField(typeDef.type)\n    return false\n  }\n  if (!Array.isArray(typeDef.fields)) return false\n  return typeDef.fields.some((field) => field.name === 'value')\n}\n\n// This logic is pulled from extractValueFromListOption in packages/sanity/src/core/validation/util/normalizeValidationRules.ts.\n// It has been slightly tweaked to be safer in accessing the value attribute of the option variable\nfunction extractValueFromListOption(option: unknown, typeDef: Record<string, unknown>): unknown {\n  // If you define a `list` option with object items, where the item has a `value` field,\n  // we don't want to treat that as the value but rather the surrounding object\n  // This differs from the case where you have a title/value pair setup for a string/number, for instance\n  if (typeDef.jsonType === 'object' && hasValueField(typeDef)) return option\n\n  if (isObject(option) && 'value' in option && option.value) {\n    return option.value\n  }\n\n  return option\n}\n\nfunction maybeValidation(val: unknown): Validation | undefined {\n  // Handle undefined, false\n  if (!val) {\n    return undefined\n  }\n\n  // Handle function rules - these are functions that return a Rule\n  if (isIRuleFunction(val)) {\n    try {\n      const result = val(new Rule())\n\n      // If the result is a Rule object, attempt to convert it\n      if (isIRule(result)) {\n        // Recursively convert the returned Rule object\n        return maybeValidation(result)\n      }\n\n      throw new Error('failed to convert to plain rule')\n    } catch (error) {\n      // If the function could not convert into a plain rule, mark it as custom\n      return {\n        level: 'error',\n        rules: [{type: 'custom', name: 'function'}],\n      }\n    }\n  }\n\n  // Handle Rule object\n  if (isIRule(val)) {\n    // Determine validation level\n    const level: Validation['level'] = val._level || 'error'\n\n    // Convert message\n    const message = maybeValidationMessage(val._message)\n\n    // Convert RuleSpec array to Rule array\n    const rules: RuleType[] = []\n\n    for (const spec of val._rules || []) {\n      // For custom rule spec, the optional property is determined by the rule.\n      // This is used to determine the behaviour the rule when the value is undefined or null\n      const optional = val._required === 'optional' || undefined\n      const convertedRule = convertRuleSpec(spec, optional)\n      if (convertedRule === undefined) {\n        continue\n      }\n\n      // If the converted spec is a duplicate, skip adding it\n      if (rules.some((r) => isEqual(r, convertedRule))) {\n        continue\n      }\n\n      rules.push(convertedRule)\n    }\n\n    if (rules.length === 0) {\n      return undefined\n    }\n\n    return {\n      level,\n      rules,\n      ...(message && {message}),\n    }\n  }\n\n  return undefined\n}\n\nfunction isIRule(val: unknown): val is IRule {\n  return isObject(val) && '_rules' in val\n}\n\nfunction maybeValidationMessage(val: unknown): ValidationMessage | undefined {\n  if (typeof val === 'string') return val\n  if (!isObject(val) || Array.isArray(val)) return undefined\n\n  const objectMessage: ObjectMessage = {}\n  for (const [field, value] of Object.entries(val)) {\n    if (typeof field !== 'string' || typeof value !== 'string') {\n      continue\n    }\n    objectMessage[field] = value\n  }\n\n  return Object.keys(objectMessage).length > 0 ? objectMessage : undefined\n}\n\nfunction isIRuleFunction(val: unknown): val is (rule: IRule) => IRule | undefined {\n  return typeof val === 'function'\n}\n\n// eslint-disable-next-line complexity\nfunction convertRuleSpec(spec: unknown, optional?: true | undefined): RuleType | undefined {\n  if (!isObject(spec) || !('flag' in spec)) {\n    return undefined\n  }\n\n  const constraint = 'constraint' in spec ? spec.constraint : undefined\n\n  switch (spec.flag) {\n    case 'integer':\n      return {type: 'integer'}\n    case 'email':\n      return {type: 'email'}\n    case 'unique':\n      return {type: 'uniqueItems'}\n    case 'reference':\n      return {type: 'reference'}\n    case 'assetRequired':\n      return {type: 'assetRequired'}\n    case 'stringCasing':\n      if (constraint === 'uppercase') return {type: 'uppercase'}\n      if (constraint === 'lowercase') return {type: 'lowercase'}\n      return undefined\n    case 'all':\n      if (Array.isArray(constraint)) {\n        const children = constraint\n          .map((childRule) => maybeValidation(childRule))\n          .filter((c) => c !== undefined)\n        if (children.length > 0) {\n          return {type: 'allOf', children}\n        }\n      }\n      return undefined\n    case 'either':\n      if (Array.isArray(constraint)) {\n        const children = constraint\n          .map((childRule) => maybeValidation(childRule))\n          .filter((c) => c !== undefined)\n        if (children.length > 0) {\n          return {type: 'anyOf', children}\n        }\n      }\n      return undefined\n    case 'valid':\n      if (Array.isArray(constraint)) {\n        return {\n          type: 'enum',\n          values: constraint.map((c) => convertUnknown(c)).filter((v) => v !== undefined),\n        }\n      }\n      return undefined\n    case 'min':\n      return {type: 'minimum', value: convertConstraintValue(constraint)}\n    case 'max':\n      return {type: 'maximum', value: convertConstraintValue(constraint)}\n    case 'length':\n      return {type: 'length', value: convertConstraintValue(constraint)}\n    case 'precision':\n      return {type: 'precision', value: convertConstraintValue(constraint)}\n    case 'lessThan':\n      return {type: 'exclusiveMaximum', value: convertConstraintValue(constraint)}\n    case 'greaterThan':\n      return {type: 'exclusiveMinimum', value: convertConstraintValue(constraint)}\n    case 'regex':\n      if (isObject(constraint) && 'pattern' in constraint) {\n        const {pattern} = constraint\n        const invert = 'invert' in constraint ? maybeBoolean(constraint.invert) : undefined\n\n        if (pattern instanceof RegExp) {\n          return {\n            type: 'regex',\n            pattern: pattern.source,\n            ...(invert && {invert: true}),\n          }\n        }\n      }\n      return undefined\n    case 'uri': {\n      const allowRelative =\n        isObject(constraint) &&\n        'options' in constraint &&\n        isObject(constraint.options) &&\n        'allowRelative' in constraint.options\n          ? maybeBoolean(constraint.options.allowRelative)\n          : undefined\n\n      return {\n        type: 'uri',\n        ...(allowRelative !== undefined && {allowRelative}),\n      }\n    }\n    case 'custom':\n      return {type: 'custom', ...(optional && {optional})}\n    case 'media':\n      return {type: 'custom', name: 'media'}\n    case 'type':\n      return undefined\n    case 'presence':\n      if (constraint === 'required') return {type: 'required'}\n      if (constraint === 'optional') return undefined\n      return undefined\n    default:\n      return undefined\n  }\n}\n\nfunction convertConstraintValue(constraint: unknown): string | FieldReference {\n  if (\n    isObject(constraint) &&\n    'type' in constraint &&\n    'path' in constraint &&\n    constraint.type &&\n    constraint.path\n  ) {\n    // This is a FieldReference\n    return {\n      type: 'fieldReference',\n      path: Array.isArray(constraint.path) ? constraint.path : [constraint.path],\n    }\n  }\n  // Convert to string\n  return String(constraint)\n}\n\nfunction maybeBoolean(val: unknown): boolean | undefined {\n  if (typeof val === 'boolean') {\n    return val\n  }\n  return undefined\n}\n\nfunction maybeI18n(val: unknown): ObjectI18n | undefined {\n  if (!isObject(val) || Array.isArray(val)) return undefined\n\n  // Convert I18nTextRecord to LocalizedMessage format\n  const localizedMessage: ObjectI18n = {}\n  for (const entry of Object.entries(val)) {\n    if (isI18nEntry(entry)) {\n      const [field, value] = entry\n      localizedMessage[field] = {\n        ns: value.ns,\n        key: value.key,\n      }\n    }\n  }\n\n  return Object.keys(localizedMessage).length > 0 ? localizedMessage : undefined\n}\n\nfunction isI18nEntry(entry: [unknown, unknown]): entry is [string, ObjectI18nValue] {\n  const [key, value] = entry\n  return (\n    typeof key === 'string' &&\n    !!value &&\n    typeof value === 'object' &&\n    'key' in value &&\n    'ns' in value &&\n    typeof value.key === 'string' &&\n    typeof value.ns === 'string'\n  )\n}\n\nfunction maybeOrdering(val: unknown): ObjectOrdering | undefined {\n  if (!isObject(val) || Array.isArray(val)) return undefined\n\n  const name = 'name' in val && typeof val.name === 'string' ? val.name : undefined\n  // A valid ordering _must_ have a name\n  if (name === undefined) return undefined\n\n  // If no title is specified, default to the name\n  const title = 'title' in val && typeof val.title === 'string' ? val.title : name\n  const by = 'by' in val && Array.isArray(val.by) ? val.by : []\n\n  const orderingBy: ObjectOrderingBy[] = []\n  for (const item of by) {\n    const orderingItem = maybeOrderingBy(item)\n    if (orderingItem) {\n      orderingBy.push(orderingItem)\n    }\n  }\n\n  // A valid ordering _must_ have items (by)\n  if (orderingBy.length === 0) return undefined\n\n  const i18n = 'i18n' in val ? maybeI18n(val.i18n) : undefined\n\n  return {\n    name,\n    title,\n    by: orderingBy,\n    ...(i18n && {i18n}),\n  }\n}\n\nfunction maybeOrderingBy(val: unknown): ObjectOrderingBy | undefined {\n  if (!isObject(val) || Array.isArray(val)) return undefined\n\n  const field = 'field' in val && typeof val.field === 'string' ? val.field : undefined\n  const direction =\n    'direction' in val && (val.direction === 'asc' || val.direction === 'desc')\n      ? val.direction\n      : undefined\n\n  if (!field || !direction) return undefined\n\n  return {field, direction}\n}\n","import {\n  processSetSynchronization,\n  type SetSynchronization,\n  type SynchronizationRequest,\n  type SynchronizationResult,\n} from '@sanity/descriptors'\n\nimport {type RegistryType} from './types'\n\n// This file provides wrapper types/functions for synchronizing a schema.\n// This avoids users of `@sanity/schema` to have to depend on `@sanity/descriptors`.\n\nexport type SchemaSynchronizationRequest = SynchronizationRequest\nexport type SchemaSynchronizationResult = SynchronizationResult\n\n/**\n * Returns the next request that should be generated for synchronizing the\n * schema, based on the previous response from the /synchronize endpoint.\n *\n * @param response - The previous response, or `null` if it's the first request.\n * @returns The next request, or `null` if it's been fully synchronized.\n */\nexport function processSchemaSynchronization(\n  sync: SetSynchronization<RegistryType>,\n  response: SchemaSynchronizationResult | null,\n): SchemaSynchronizationRequest | null {\n  return processSetSynchronization(sync, response)\n}\n","import {generateHelpUrl} from '@sanity/generate-help-url'\nimport {type SchemaType} from '@sanity/types'\nimport {difference} from 'lodash'\n\nconst ACTIONS_FLAG = '__experimental_actions'\n\nconst DEFAULT_ACTIONS = ['create', 'update', 'delete', 'publish']\nconst VALID_ACTIONS = DEFAULT_ACTIONS\n\n// todo: enable this when officially deprecating experimental actions\nconst DEPRECATE_EXPERIMENTAL_ACTIONS = false\n\nconst hasWarned = {}\nconst readActions = (schemaType: SchemaType): string[] => {\n  if (DEPRECATE_EXPERIMENTAL_ACTIONS && !(schemaType.name in hasWarned)) {\n    console.warn(`Heads up! Experimental actions is now deprecated and replaced by Document Actions. Read more about how to migrate on ${generateHelpUrl(\n      'experimental-actions-replaced-by-document-actions',\n    )}\".\n`)\n    ;(hasWarned as any)[schemaType.name] = true\n  }\n\n  return ACTIONS_FLAG in schemaType ? (schemaType[ACTIONS_FLAG] as string[]) : DEFAULT_ACTIONS\n}\n\nconst validateActions = (typeName: string, actions: string[]) => {\n  if (!Array.isArray(actions)) {\n    throw new Error(\n      `The value of <type>.${ACTIONS_FLAG} should be an array with any of the actions ${VALID_ACTIONS.join(\n        ', ',\n      )}`,\n    )\n  }\n\n  const invalid = difference(actions, VALID_ACTIONS)\n\n  if (invalid.length > 0) {\n    throw new Error(\n      `Invalid action${\n        invalid.length > 1 ? 's' : ''\n      } configured for schema type \"${typeName}\": ${invalid.join(\n        ', ',\n      )}. Valid actions are: ${VALID_ACTIONS.join(', ')}`,\n    )\n  }\n\n  return actions\n}\n\nexport const resolveEnabledActions = (schemaType: SchemaType): string[] =>\n  validateActions(schemaType.name, readActions(schemaType))\n\nexport const isActionEnabled = (schemaType: SchemaType, action: string): boolean =>\n  resolveEnabledActions(schemaType).includes(action)\n","export default {\n  name: 'sanity.assetSourceData',\n  title: 'Asset Source Data',\n  type: 'object',\n  fields: [\n    {\n      name: 'name',\n      title: 'Source name',\n      description: 'A canonical name for the source this asset is originating from',\n      type: 'string',\n    },\n    {\n      name: 'id',\n      title: 'Asset Source ID',\n      description:\n        'The unique ID for the asset within the originating source so you can programatically find back to it',\n      type: 'string',\n    },\n    {\n      name: 'url',\n      title: 'Asset information URL',\n      description: 'A URL to find more information about this asset in the originating source',\n      type: 'string',\n    },\n  ],\n}\n","export default {\n  name: 'sanity.fileAsset',\n  title: 'File',\n  type: 'document',\n  fieldsets: [\n    {\n      name: 'system',\n      title: 'System fields',\n      description: 'These fields are managed by the system and not editable',\n    },\n  ],\n  fields: [\n    {\n      name: 'originalFilename',\n      type: 'string',\n      title: 'Original file name',\n      readOnly: true,\n    },\n    {\n      name: 'label',\n      type: 'string',\n      title: 'Label',\n    },\n    {\n      name: 'title',\n      type: 'string',\n      title: 'Title',\n    },\n    {\n      name: 'description',\n      type: 'string',\n      title: 'Description',\n    },\n    {\n      name: 'altText',\n      type: 'string',\n      title: 'Alternative text',\n    },\n    {\n      name: 'sha1hash',\n      type: 'string',\n      title: 'SHA1 hash',\n      readOnly: true,\n      fieldset: 'system',\n    },\n    {\n      name: 'extension',\n      type: 'string',\n      title: 'File extension',\n      readOnly: true,\n      fieldset: 'system',\n    },\n    {\n      name: 'mimeType',\n      type: 'string',\n      title: 'Mime type',\n      readOnly: true,\n      fieldset: 'system',\n    },\n    {\n      name: 'size',\n      type: 'number',\n      title: 'File size in bytes',\n      readOnly: true,\n      fieldset: 'system',\n    },\n    {\n      name: 'assetId',\n      type: 'string',\n      title: 'Asset ID',\n      readOnly: true,\n      fieldset: 'system',\n    },\n    {\n      name: 'uploadId',\n      type: 'string',\n      readOnly: true,\n      hidden: true,\n      fieldset: 'system',\n    },\n    {\n      name: 'path',\n      type: 'string',\n      title: 'Path',\n      readOnly: true,\n      fieldset: 'system',\n    },\n    {\n      name: 'url',\n      type: 'string',\n      title: 'Url',\n      readOnly: true,\n      fieldset: 'system',\n    },\n    {\n      name: 'source',\n      type: 'sanity.assetSourceData',\n      title: 'Source',\n      readOnly: true,\n      fieldset: 'system',\n    },\n  ],\n  preview: {\n    select: {\n      title: 'originalFilename',\n      path: 'path',\n      mimeType: 'mimeType',\n      size: 'size',\n    },\n    prepare(doc: Record<string, any>) {\n      return {\n        title: doc.title || doc.path.split('/').slice(-1)[0],\n        subtitle: `${doc.mimeType} (${(doc.size / 1024 / 1024).toFixed(2)} MB)`,\n      }\n    },\n  },\n  orderings: [\n    {\n      title: 'File size',\n      name: 'fileSizeDesc',\n      by: [{field: 'size', direction: 'desc'}],\n    },\n  ],\n}\n","export default {\n  title: 'Geographical Point',\n  name: 'geopoint',\n  type: 'object',\n  fields: [\n    {\n      name: 'lat',\n      type: 'number',\n      title: 'Latitude',\n    },\n    {\n      name: 'lng',\n      type: 'number',\n      title: 'Longitude',\n    },\n    {\n      name: 'alt',\n      type: 'number',\n      title: 'Altitude',\n    },\n  ],\n}\n","import {type SanityDocument} from '@sanity/types'\n\nexport default {\n  name: 'sanity.imageAsset',\n  title: 'Image',\n  type: 'document',\n  fieldsets: [\n    {\n      name: 'system',\n      title: 'System fields',\n      description: 'These fields are managed by the system and not editable',\n    },\n  ],\n  fields: [\n    {\n      name: 'originalFilename',\n      type: 'string',\n      title: 'Original file name',\n      readOnly: true,\n    },\n    {\n      name: 'label',\n      type: 'string',\n      title: 'Label',\n    },\n    {\n      name: 'title',\n      type: 'string',\n      title: 'Title',\n    },\n    {\n      name: 'description',\n      type: 'string',\n      title: 'Description',\n    },\n    {\n      name: 'altText',\n      type: 'string',\n      title: 'Alternative text',\n    },\n    {\n      name: 'sha1hash',\n      type: 'string',\n      title: 'SHA1 hash',\n      readOnly: true,\n      fieldset: 'system',\n    },\n    {\n      name: 'extension',\n      type: 'string',\n      readOnly: true,\n      title: 'File extension',\n      fieldset: 'system',\n    },\n    {\n      name: 'mimeType',\n      type: 'string',\n      readOnly: true,\n      title: 'Mime type',\n      fieldset: 'system',\n    },\n    {\n      name: 'size',\n      type: 'number',\n      title: 'File size in bytes',\n      readOnly: true,\n      fieldset: 'system',\n    },\n    {\n      name: 'assetId',\n      type: 'string',\n      title: 'Asset ID',\n      readOnly: true,\n      fieldset: 'system',\n    },\n    {\n      name: 'uploadId',\n      type: 'string',\n      readOnly: true,\n      hidden: true,\n      fieldset: 'system',\n    },\n    {\n      name: 'path',\n      type: 'string',\n      title: 'Path',\n      readOnly: true,\n      fieldset: 'system',\n    },\n    {\n      name: 'url',\n      type: 'string',\n      title: 'Url',\n      readOnly: true,\n      fieldset: 'system',\n    },\n    {\n      name: 'metadata',\n      type: 'sanity.imageMetadata',\n      title: 'Metadata',\n    },\n    {\n      name: 'source',\n      type: 'sanity.assetSourceData',\n      title: 'Source',\n      readOnly: true,\n      fieldset: 'system',\n    },\n  ],\n  preview: {\n    select: {\n      id: '_id',\n      title: 'originalFilename',\n      mimeType: 'mimeType',\n      size: 'size',\n    },\n    prepare(doc: Partial<SanityDocument>) {\n      return {\n        title: doc.title || (typeof doc.path === 'string' && doc.path.split('/').slice(-1)[0]),\n        media: {asset: {_ref: doc.id}},\n        subtitle: `${doc.mimeType} (${(Number(doc.size) / 1024 / 1024).toFixed(2)} MB)`,\n      }\n    },\n  },\n  orderings: [\n    {\n      title: 'File size',\n      name: 'fileSizeDesc',\n      by: [{field: 'size', direction: 'desc'}],\n    },\n  ],\n}\n","import {type Rule} from '@sanity/types'\n\nexport default {\n  name: 'sanity.imageCrop',\n  title: 'Image crop',\n  type: 'object',\n  fields: [\n    {\n      name: 'top',\n      type: 'number',\n      validation: (Rule: Rule): Rule => Rule.required(),\n    },\n    {\n      name: 'bottom',\n      type: 'number',\n      validation: (Rule: Rule): Rule => Rule.required(),\n    },\n    {\n      name: 'left',\n      type: 'number',\n      validation: (Rule: Rule): Rule => Rule.required(),\n    },\n    {\n      name: 'right',\n      type: 'number',\n      validation: (Rule: Rule): Rule => Rule.required(),\n    },\n  ],\n}\n","import {type Rule} from '@sanity/types'\n\nexport default {\n  name: 'sanity.imageDimensions',\n  type: 'object',\n  title: 'Image dimensions',\n  fields: [\n    {\n      name: 'height',\n      type: 'number',\n      title: 'Height',\n      readOnly: true,\n      validation: (Rule: Rule): Rule => Rule.required(),\n    },\n    {\n      name: 'width',\n      type: 'number',\n      title: 'Width',\n      readOnly: true,\n      validation: (Rule: Rule): Rule => Rule.required(),\n    },\n    {\n      name: 'aspectRatio',\n      type: 'number',\n      title: 'Aspect ratio',\n      readOnly: true,\n      validation: (Rule: Rule): Rule => Rule.required(),\n    },\n  ],\n}\n","import {type Rule} from '@sanity/types'\n\nexport default {\n  name: 'sanity.imageHotspot',\n  title: 'Image hotspot',\n  type: 'object',\n  fields: [\n    {\n      name: 'x',\n      type: 'number',\n      validation: (Rule: Rule): Rule => Rule.required(),\n    },\n    {\n      name: 'y',\n      type: 'number',\n      validation: (Rule: Rule): Rule => Rule.required(),\n    },\n    {\n      name: 'height',\n      type: 'number',\n      validation: (Rule: Rule): Rule => Rule.required(),\n    },\n    {\n      name: 'width',\n      type: 'number',\n      validation: (Rule: Rule): Rule => Rule.required(),\n    },\n  ],\n}\n","export default {\n  name: 'sanity.imageMetadata',\n  title: 'Image metadata',\n  type: 'object',\n  fieldsets: [\n    {\n      name: 'extra',\n      title: 'Extra metadataâ€¦',\n      options: {\n        collapsable: true,\n      },\n    },\n  ],\n  fields: [\n    {\n      name: 'location',\n      type: 'geopoint',\n    },\n    {\n      name: 'dimensions',\n      title: 'Dimensions',\n      type: 'sanity.imageDimensions',\n      fieldset: 'extra',\n    },\n    {\n      name: 'palette',\n      type: 'sanity.imagePalette',\n      title: 'Palette',\n      fieldset: 'extra',\n    },\n    {\n      name: 'lqip',\n      title: 'LQIP (Low-Quality Image Placeholder)',\n      type: 'string',\n      readOnly: true,\n    },\n    {\n      name: 'blurHash',\n      title: 'BlurHash',\n      type: 'string',\n      readOnly: true,\n    },\n    {\n      name: 'hasAlpha',\n      title: 'Has alpha channel',\n      type: 'boolean',\n      readOnly: true,\n    },\n    {\n      name: 'isOpaque',\n      title: 'Is opaque',\n      type: 'boolean',\n      readOnly: true,\n    },\n  ],\n}\n","export default {\n  name: 'sanity.imagePalette',\n  title: 'Image palette',\n  type: 'object',\n  fields: [\n    {name: 'darkMuted', type: 'sanity.imagePaletteSwatch', title: 'Dark Muted'},\n    {name: 'lightVibrant', type: 'sanity.imagePaletteSwatch', title: 'Light Vibrant'},\n    {name: 'darkVibrant', type: 'sanity.imagePaletteSwatch', title: 'Dark Vibrant'},\n    {name: 'vibrant', type: 'sanity.imagePaletteSwatch', title: 'Vibrant'},\n    {name: 'dominant', type: 'sanity.imagePaletteSwatch', title: 'Dominant'},\n    {name: 'lightMuted', type: 'sanity.imagePaletteSwatch', title: 'Light Muted'},\n    {name: 'muted', type: 'sanity.imagePaletteSwatch', title: 'Muted'},\n  ],\n}\n","export default {\n  name: 'sanity.imagePaletteSwatch',\n  title: 'Image palette swatch',\n  type: 'object',\n  fields: [\n    {name: 'background', type: 'string', title: 'Background', readOnly: true},\n    {name: 'foreground', type: 'string', title: 'Foreground', readOnly: true},\n    {name: 'population', type: 'number', title: 'Population', readOnly: true},\n    {name: 'title', type: 'string', title: 'String', readOnly: true},\n  ],\n}\n","import {type Rule} from '@sanity/types'\n\nexport default {\n  title: 'Slug',\n  name: 'slug',\n  type: 'object',\n  fields: [\n    {\n      name: 'current',\n      title: 'Current slug',\n      type: 'string',\n      validation: (Rule: Rule): Rule => Rule.required(),\n    },\n    {\n      // The source field is deprecated/unused, but leaving it included and hidden\n      // to prevent rendering \"Unknown field\" warnings on legacy data\n      name: 'source',\n      title: 'Source field',\n      type: 'string',\n      hidden: true,\n    },\n  ],\n}\n","import assetSourceData from './assetSourceData'\nimport fileAsset from './fileAsset'\nimport geopoint from './geopoint'\nimport imageAsset from './imageAsset'\nimport imageCrop from './imageCrop'\nimport imageDimensions from './imageDimensions'\nimport imageHotspot from './imageHotspot'\nimport imageMetadata from './imageMetadata'\nimport imagePalette from './imagePalette'\nimport imagePaletteSwatch from './imagePaletteSwatch'\nimport slug from './slug'\n\nexport const builtinTypes = [\n  assetSourceData,\n  slug,\n  geopoint,\n  // legacyRichDate,\n  imageAsset,\n  fileAsset,\n  imageCrop,\n  imageHotspot,\n  imageMetadata,\n  imageDimensions,\n  imagePalette,\n  imagePaletteSwatch,\n]\n","import {type SchemaValidationResult} from '../typedefs'\n\n// Temporary solution to ensure we have a central registry over used helpIds\nexport const HELP_IDS = {\n  TYPE_INVALID: 'schema-type-invalid',\n  TYPE_IS_ESM_MODULE: 'schema-type-is-esm-module',\n  TYPE_NAME_RESERVED: 'schema-type-name-reserved',\n  TYPE_MISSING_NAME: 'schema-type-missing-name-or-type',\n  TYPE_MISSING_TYPE: 'schema-type-missing-name-or-type',\n  TYPE_TITLE_RECOMMENDED: 'schema-type-title-is-recommended',\n  TYPE_TITLE_INVALID: 'schema-type-title-is-recommended',\n  OBJECT_FIELDS_INVALID: 'schema-object-fields-invalid',\n  OBJECT_FIELD_NOT_UNIQUE: 'schema-object-fields-invalid',\n  OBJECT_FIELD_NAME_INVALID: 'schema-object-fields-invalid',\n  OBJECT_FIELD_DEFINITION_INVALID_TYPE: 'schema-object-fields-invalid',\n  ARRAY_PREDEFINED_CHOICES_INVALID: 'schema-predefined-choices-invalid',\n  ARRAY_OF_ARRAY: 'schema-array-of-array',\n  ARRAY_OF_INVALID: 'schema-array-of-invalid',\n  ARRAY_OF_NOT_UNIQUE: 'schema-array-of-invalid',\n  ARRAY_OF_TYPE_GLOBAL_TYPE_CONFLICT: 'schema-array-of-type-global-type-conflict',\n  ARRAY_OF_TYPE_BUILTIN_TYPE_CONFLICT: 'schema-array-of-type-builtin-type-conflict',\n  REFERENCE_TO_INVALID: 'schema-reference-to-invalid',\n  REFERENCE_TO_NOT_UNIQUE: 'schema-reference-to-invalid',\n  REFERENCE_INVALID_OPTIONS: 'schema-reference-invalid-options',\n  REFERENCE_INVALID_OPTIONS_LOCATION: 'schema-reference-options-nesting',\n  REFERENCE_INVALID_FILTER_PARAMS_COMBINATION: 'schema-reference-filter-params-combination',\n  SLUG_SLUGIFY_FN_RENAMED: 'slug-slugifyfn-renamed',\n  ASSET_METADATA_FIELD_INVALID: 'asset-metadata-field-invalid',\n  CROSS_DATASET_REFERENCE_INVALID: 'cross-dataset-reference-invalid',\n  GLOBAL_DOCUMENT_REFERENCE_INVALID: 'global-document-reference-invalid',\n  DEPRECATED_BLOCKEDITOR_KEY: 'schema-deprecated-blockeditor-key',\n  STANDALONE_BLOCK_TYPE: 'schema-standalone-block-type',\n}\n\nfunction createValidationResult(\n  severity: SchemaValidationResult['severity'],\n  message: string,\n  helpId: string | null,\n): SchemaValidationResult {\n  if (helpId && !Object.keys(HELP_IDS).some((id) => (HELP_IDS as any)[id] === helpId)) {\n    throw new Error(\n      `Used the unknown helpId \"${helpId}\", please add it to the array in createValidationResult.js`,\n    )\n  }\n  return {\n    severity,\n    message,\n    helpId: helpId!,\n  }\n}\n\nexport const error = (message: string, helpId?: string | null): SchemaValidationResult =>\n  createValidationResult('error', message, helpId!)\n\nexport const warning = (message: string, helpId?: string | null): SchemaValidationResult =>\n  createValidationResult('warning', message, helpId!)\n","import {\n  type SchemaType,\n  type SchemaTypeDefinition,\n  type SchemaValidationProblemGroup,\n} from '@sanity/types'\nimport {flatten, get} from 'lodash'\n\nimport {type ProblemPath, type ProblemPathPropertySegment, type TypeWithProblems} from './typedefs'\nimport {error} from './validation/createValidationResult'\n\n/**\n * @internal\n */\nexport function groupProblems(types: SchemaTypeDefinition[]): SchemaValidationProblemGroup[] {\n  return flatten<TypeWithProblems>(types.map((type) => getTypeProblems(type))).filter(\n    (type) => type.problems.length > 0,\n  )\n}\n\nfunction createTypeWithMembersProblemsAccessor(\n  memberPropertyName: string,\n  getMembers = (type: SchemaType) => get(type, memberPropertyName),\n) {\n  return function getProblems(type: any, parentPath: ProblemPath): TypeWithProblems[] {\n    const currentPath: ProblemPath = [\n      ...parentPath,\n      {kind: 'type', type: type.type, name: type.name},\n    ]\n\n    const members = getMembers(type) || []\n\n    const memberProblems: TypeWithProblems[][] = Array.isArray(members)\n      ? members.map((memberType) => {\n          const propertySegment: ProblemPathPropertySegment = {\n            kind: 'property',\n            name: memberPropertyName,\n          }\n          const memberPath: ProblemPath = [...currentPath, propertySegment]\n          return getTypeProblems(memberType, memberPath as any)\n        })\n      : [\n          [\n            {\n              path: currentPath,\n              problems: [error(`Member declaration (${memberPropertyName}) is not an array`)],\n            },\n          ],\n        ]\n\n    return [\n      {\n        path: currentPath,\n        problems: type._problems || [],\n      },\n      ...flatten(memberProblems),\n    ]\n  }\n}\n\nconst arrify = (val: any) =>\n  Array.isArray(val) ? val : (typeof val === 'undefined' && []) || [val]\n\nconst getObjectProblems = createTypeWithMembersProblemsAccessor('fields')\nconst getImageProblems = createTypeWithMembersProblemsAccessor('fields')\nconst getFileProblems = createTypeWithMembersProblemsAccessor('fields')\nconst getArrayProblems = createTypeWithMembersProblemsAccessor('of')\nconst getReferenceProblems = createTypeWithMembersProblemsAccessor('to', (type) =>\n  'to' in type ? arrify(type.to) : [],\n)\nconst getBlockAnnotationProblems = createTypeWithMembersProblemsAccessor('marks.annotations')\nconst getBlockMemberProblems = createTypeWithMembersProblemsAccessor('of')\nconst getBlockProblems = (type: any, problems: any) => [\n  ...getBlockAnnotationProblems(type, problems),\n  ...getBlockMemberProblems(type, problems),\n]\n\nfunction getDefaultProblems(type: any, path = []): TypeWithProblems[] {\n  return [\n    {\n      path: [...path, {kind: 'type', type: type.type, name: type.name}],\n      problems: type._problems || [],\n    },\n  ]\n}\n\nfunction getTypeProblems(type: SchemaTypeDefinition, path = []): TypeWithProblems[] {\n  switch (type.type) {\n    case 'object': {\n      return getObjectProblems(type, path)\n    }\n    case 'document': {\n      return getObjectProblems(type, path)\n    }\n    case 'array': {\n      return getArrayProblems(type, path)\n    }\n    case 'reference': {\n      return getReferenceProblems(type, path)\n    }\n    case 'block': {\n      return getBlockProblems(type, path)\n    }\n    case 'image': {\n      return getImageProblems(type, path)\n    }\n    case 'file': {\n      return getFileProblems(type, path)\n    }\n    default: {\n      return getDefaultProblems(type, path)\n    }\n  }\n}\n","export function getDupes(array: any, selector = (v: any) => v) {\n  const dupes = array.reduce((acc: any, item: any) => {\n    const key = selector(item)\n    if (!acc[key]) {\n      acc[key] = []\n    }\n    acc[key].push(item)\n    return acc\n  }, {})\n\n  return Object.keys(dupes)\n    .map((key) => (dupes[key].length > 1 ? dupes[key] : null))\n    .filter(Boolean)\n}\n","import {flatten, uniq} from 'lodash'\n\nimport {getDupes} from '../sanity/validation/utils/getDupes'\n\ntype SchemaType = Record<string, any>\ntype SchemaTypeDef = Record<string, any>\n\ntype VisitContext = {\n  isRoot: boolean\n  isReserved: (typeName: string) => boolean\n  visit: Visitor\n  index: number\n  isDuplicate: (typeName: string) => boolean\n  getType: (typeName: string) => null | SchemaType\n  getTypeNames: () => Array<string>\n}\n\nexport type Visitor = (typeDef: SchemaTypeDef, arg1: VisitContext) => SchemaType\n\nconst NOOP_VISITOR: Visitor = (typeDef) => typeDef\n\nexport class UnknownType {\n  name: string\n\n  constructor(name: string) {\n    this.name = name\n  }\n}\n\nconst TYPE_TYPE = {name: 'type', type: null}\n\nconst FUTURE_RESERVED = ['any', 'time', 'date']\n\nexport function traverseSchema(\n  types: SchemaTypeDef[] = [],\n  coreTypes: SchemaTypeDef[] = [],\n  visitor: Visitor = NOOP_VISITOR,\n) {\n  const coreTypesRegistry = Object.create(null)\n  const registry = Object.create(null)\n\n  const coreTypeNames = coreTypes.map((typeDef) => typeDef.name)\n\n  const reservedTypeNames = FUTURE_RESERVED.concat(coreTypeNames)\n\n  const typeNames = types.map((typeDef) => typeDef && typeDef.name).filter(Boolean)\n\n  coreTypes.forEach((coreType) => {\n    coreTypesRegistry[coreType.name] = coreType\n  })\n\n  types.forEach((type, i) => {\n    // Allocate a placeholder for each type\n    registry[(type && type.name) || `__unnamed_${i}`] = {}\n  })\n\n  function getType(typeName: any) {\n    return typeName === 'type'\n      ? TYPE_TYPE\n      : coreTypesRegistry[typeName] || registry[typeName] || null\n  }\n\n  const duplicateNames = uniq(flatten(getDupes(typeNames)))\n\n  function isDuplicate(typeName: any) {\n    return duplicateNames.includes(typeName)\n  }\n  function getTypeNames() {\n    return typeNames.concat(coreTypeNames)\n  }\n  function isReserved(typeName: any) {\n    return typeName === 'type' || reservedTypeNames.includes(typeName)\n  }\n\n  const visitType = (isRoot: any) => (typeDef: any, index: any) => {\n    return visitor(typeDef, {\n      visit: visitType(false),\n      isRoot,\n      getType,\n      getTypeNames,\n      isReserved,\n      isDuplicate,\n      index,\n    })\n  }\n\n  coreTypes.forEach((coreTypeDef) => {\n    Object.assign(coreTypesRegistry[coreTypeDef.name], visitType(coreTypeDef))\n  })\n\n  types.forEach((typeDef, i) => {\n    Object.assign(\n      registry[(typeDef && typeDef.name) || `__unnamed_${i}`],\n      visitType(true)(typeDef, i),\n    )\n  })\n\n  return {\n    get(typeName: string) {\n      const res = registry[typeName] || coreTypesRegistry[typeName]\n      if (res) {\n        return res\n      }\n      throw new Error(`No such type: ${typeName}`)\n    },\n    has(typeName: string): boolean {\n      return typeName in registry || typeName in coreTypesRegistry\n    },\n    getTypeNames(): string[] {\n      return Object.keys(registry)\n    },\n    getTypes() {\n      return this.getTypeNames().map(this.get)\n    },\n    toJSON() {\n      return this.getTypes()\n    },\n  }\n}\n","const coreTypes = [\n  {name: 'array', jsonType: 'array', type: 'type'},\n  {name: 'block', jsonType: 'object', type: 'type'},\n  {name: 'boolean', jsonType: 'boolean', type: 'type'},\n  {name: 'datetime', jsonType: 'string', type: 'type'},\n  {name: 'date', jsonType: 'string', type: 'type'},\n  {name: 'document', jsonType: 'object', type: 'type'},\n  {name: 'email', jsonType: 'string', type: 'type'},\n  {name: 'file', jsonType: 'object', type: 'type'},\n  {name: 'geopoint', jsonType: 'object', type: 'type'},\n  {name: 'image', jsonType: 'object', type: 'type'},\n  {name: 'number', jsonType: 'number', type: 'type'},\n  {name: 'object', jsonType: 'object', type: 'type'},\n  {name: 'reference', jsonType: 'object', type: 'type'},\n  {name: 'crossDatasetReference', jsonType: 'object', type: 'type'},\n  {name: 'globalDocumentReference', jsonType: 'object', type: 'type'},\n  {name: 'slug', jsonType: 'object', type: 'type'},\n  {name: 'span', jsonType: 'object', type: 'type'},\n  {name: 'string', jsonType: 'string', type: 'type'},\n  {name: 'telephone', jsonType: 'string', type: 'type'},\n  {name: 'text', jsonType: 'string', type: 'type'},\n  {name: 'url', jsonType: 'string', type: 'type'},\n] as const\n\nexport const coreTypeNames = coreTypes.map((t) => t.name)\nexport default coreTypes\n","import {traverseSchema, type Visitor} from '../core/traverseSchema'\nimport coreTypes from './coreTypes'\nimport {type _FIXME_} from './typedefs'\n\nexport function traverseSanitySchema(schemaTypes: _FIXME_[], visitor: Visitor) {\n  return traverseSchema(schemaTypes, coreTypes as _FIXME_, visitor)\n}\n","import humanizeList from 'humanize-list'\nimport {flatten, partition} from 'lodash'\n\nimport {coreTypeNames} from '../../coreTypes'\nimport {error, HELP_IDS, warning} from '../createValidationResult'\nimport {getDupes} from '../utils/getDupes'\n\nfunction isPrimitiveTypeName(typeName: any) {\n  return typeName === 'string' || typeName === 'number' || typeName === 'boolean'\n}\n\nfunction isAssignable(typeName: any, type: any) {\n  return (typeof type.name === 'string' ? type.name : type.type) === typeName\n}\n\nfunction quote(n: any) {\n  return `\"${n}\"`\n}\n\nfunction pluralize(arr: unknown[], suf = 's') {\n  return arr.length === 1 ? '' : suf\n}\n\nfunction format(value: unknown) {\n  if (Array.isArray(value)) {\n    return `array with ${value.length} entries`\n  }\n  if (typeof value === 'object' && value !== null) {\n    return `object with keys ${humanizeList(Object.keys(value).map(quote))}`\n  }\n  return quote(value)\n}\n\nexport default (typeDef: any, visitorContext: any) => {\n  // name should already have been marked\n  const ofIsArray = Array.isArray(typeDef.of)\n\n  if (ofIsArray) {\n    const invalid = typeDef.of.reduce((errs: any, def: any, idx: any) => {\n      if (typeof def.name === 'string') {\n        // If an array member has been given a \"local\" type name, we want to trigger an error if the given member type name\n        // is one of the builtin types\n        //\n        // The following examples should be an error (where book is an existing root level type and reference is a built-in type):\n        //  - (â€¦) of: [{type: 'book', name: 'image'}]\n        //  - (â€¦) of: [{type: 'book', name: 'object'}]\n        //  - (â€¦) of: [{type: 'object', name: 'reference'}]\n        // The following examples are valid (where \"address\" is not defined as a global object type)\n        //  - (â€¦) of: [{type: 'object', name: 'address'}]\n        // The following examples are redundant, but should be allowed (at least for now)\n        //  - (â€¦) of: [{type: 'object', name: 'object'}]\n        //  - (â€¦) of: [{type: 'image', name: 'image'}]\n\n        if (\n          // specifying the same name as the type is redundant, but should not be a hard error at this point\n          // Consider showing a warning for this and deprecate this ability eventually\n          def.name !== def.type &&\n          coreTypeNames.includes(def.name)\n        ) {\n          return errs.concat(\n            error(\n              `Found array member declaration with the same type name as a built-in type (\"${def.name}\"). Array members can not be given the same name as a built-in type.`,\n              HELP_IDS.ARRAY_OF_TYPE_BUILTIN_TYPE_CONFLICT,\n            ),\n          )\n        }\n      }\n\n      if (def.type === 'object' && def.name && visitorContext.getType(def.name)) {\n        return errs.concat(\n          warning(\n            `Found array member declaration with the same name as the global schema type \"${def.name}\". It's recommended to use a unique name to avoid possibly incompatible data types that shares the same name.`,\n            HELP_IDS.ARRAY_OF_TYPE_GLOBAL_TYPE_CONFLICT,\n          ),\n        )\n      }\n      if (def.type === 'array') {\n        return errs.concat(\n          error(\n            `Found array member declaration of type \"array\" - multidimensional arrays are not currently supported by Sanity`,\n            HELP_IDS.ARRAY_OF_ARRAY,\n          ),\n        )\n      }\n\n      if (def) {\n        return errs\n      }\n\n      const err = `Found ${def === null ? 'null' : typeof def}, expected member declaration`\n      return errs.concat(\n        error(\n          `Found invalid type member declaration in array at index ${idx}: ${err}`,\n          HELP_IDS.ARRAY_OF_INVALID,\n        ),\n      )\n    }, [])\n\n    if (invalid.length > 0) {\n      return {\n        ...typeDef,\n        of: [],\n        _problems: invalid,\n      }\n    }\n  }\n\n  const problems = flatten([\n    ofIsArray\n      ? getDupes(typeDef.of, (t) => `${t.name};${t.type}`).map((dupes) =>\n          error(\n            `Found ${dupes.length} members with same type, but not unique names \"${dupes[0].type}\" in array. This makes it impossible to tell their values apart and you should consider naming them`,\n            HELP_IDS.ARRAY_OF_NOT_UNIQUE,\n          ),\n        )\n      : error(\n          'The array type is missing or having an invalid value for the required \"of\" property',\n          HELP_IDS.ARRAY_OF_INVALID,\n        ),\n  ])\n  const of = ofIsArray ? typeDef.of : []\n\n  // Don't allow object types without a name in block arrays\n  const hasObjectTypesWithoutName = of.some(\n    (type: any) => type.type === 'object' && typeof type.name === 'undefined',\n  )\n  const hasBlockType = of.some((ofType: any) => ofType.type === 'block')\n  if (hasBlockType && hasObjectTypesWithoutName) {\n    problems.push(\n      error(\n        \"The array type's 'of' property can't have an object type without a 'name' property as member, when the 'block' type is also a member of that array.\",\n        HELP_IDS.ARRAY_OF_INVALID,\n      ),\n    )\n  }\n\n  const [primitiveTypes, objectTypes] = partition(\n    of,\n    (ofType) =>\n      isPrimitiveTypeName(ofType.type) ||\n      isPrimitiveTypeName(visitorContext.getType(ofType.type)?.jsonType),\n  )\n\n  const isMixedArray = primitiveTypes.length > 0 && objectTypes.length > 0\n\n  if (isMixedArray) {\n    const primitiveTypeNames = primitiveTypes.map((t) => t.type)\n    const objectTypeNames = objectTypes.map((t) => t.type)\n    problems.push(\n      error(\n        `The array type's 'of' property can't have both object types and primitive types (found primitive type ${pluralize(\n          primitiveTypeNames,\n        )} ${humanizeList(primitiveTypeNames.map(quote))} and object type${pluralize(\n          objectTypeNames,\n        )} ${humanizeList(objectTypeNames.map(quote))})`,\n        HELP_IDS.ARRAY_OF_INVALID,\n      ),\n    )\n  }\n\n  const list = typeDef?.options?.list\n  if (!isMixedArray && Array.isArray(list)) {\n    const isArrayOfPrimitives = primitiveTypes.length > 0\n    if (isArrayOfPrimitives) {\n      list.forEach((option) => {\n        const value = option?.value ?? option\n        const isDeclared = primitiveTypes.some((primitiveType) => {\n          return typeof value === visitorContext.getType(primitiveType.type).jsonType\n        })\n        if (!isDeclared) {\n          const formattedTypeList = humanizeList(\n            primitiveTypes.map((t) => t.name || t.type),\n            {conjunction: 'or'},\n          )\n          problems.push(\n            error(\n              `An invalid entry found in options.list: ${format(\n                value,\n              )}. Must be either a value of type ${formattedTypeList}, or an object with {title: string, value: ${formattedTypeList}}`,\n              HELP_IDS.ARRAY_PREDEFINED_CHOICES_INVALID,\n            ),\n          )\n        }\n      })\n    } else {\n      list.forEach((option) => {\n        const optionTypeName = option._type || 'object'\n        const isDeclared = objectTypes.some((validObjectType) =>\n          isAssignable(optionTypeName, validObjectType),\n        )\n        if (!isDeclared) {\n          problems.push(\n            error(\n              `An invalid entry found in options.list: ${format(\n                option,\n              )}. Must be an object with \"_type\" set to ${humanizeList(\n                objectTypes\n                  .map((t) => t.name || t.type)\n                  .map((t) => (t === 'object' ? 'undefined' : quote(t))),\n                {conjunction: 'or'},\n              )}`,\n              HELP_IDS.ARRAY_PREDEFINED_CHOICES_INVALID,\n            ),\n          )\n        }\n      })\n    }\n  }\n\n  if (typeDef?.options?.list && typeDef?.options?.layout === 'tags') {\n    problems.push(\n      warning(\n        'Found array member declaration with both tags layout and a list of predefined values. If you want to display a list of predefined values, remove the tags layout from `options`.',\n      ),\n    )\n  }\n\n  return {\n    ...typeDef,\n    of: of.map(visitorContext.visit),\n    _problems: problems,\n  }\n}\n","export function isJSONTypeOf(type: any, jsonType: any, visitorContext: any) {\n  if ('jsonType' in type) {\n    return type.jsonType === jsonType\n  }\n  const parentType = visitorContext.getType(type.type)\n  if (!parentType) {\n    throw new Error(`Could not resolve jsonType of ${type.name}. No parent type found`)\n  }\n  return isJSONTypeOf(parentType, jsonType, visitorContext)\n}\n","import humanizeList from 'humanize-list'\nimport {isPlainObject, omit} from 'lodash'\n\nimport {coreTypeNames} from '../../coreTypes'\nimport {error, HELP_IDS, warning} from '../createValidationResult'\nimport {isJSONTypeOf} from '../utils/isJSONTypeOf'\n\nconst getTypeOf = (thing: any) => (Array.isArray(thing) ? 'array' : typeof thing)\nconst quote = (str: any) => `\"${str}\"`\nconst allowedKeys = [\n  'components',\n  'lists',\n  'marks',\n  'name',\n  'of',\n  'options',\n  'styles',\n  'title',\n  'type',\n  'validation',\n]\nconst allowedMarkKeys = ['decorators', 'annotations']\nconst allowedStyleKeys = ['blockEditor', 'title', 'value', 'icon', 'component']\nconst allowedDecoratorKeys = ['blockEditor', 'title', 'value', 'icon', 'component']\nconst allowedListKeys = ['title', 'value', 'icon', 'component']\nconst supportedBuiltInObjectTypes = [\n  'file',\n  'image',\n  'object',\n  'reference',\n  'crossDatasetReference',\n  'globalDocumentReference',\n]\n\nexport default function validateBlockType(typeDef: any, visitorContext: any) {\n  const problems = []\n  let styles = typeDef.styles\n  let lists = typeDef.lists\n  let marks = typeDef.marks\n  let members = typeDef.of\n\n  const disallowedKeys = Object.keys(typeDef).filter(\n    (key) => !allowedKeys.includes(key) && !key.startsWith('_'),\n  )\n\n  if (disallowedKeys.length > 0) {\n    problems.push(\n      error(\n        `Found unknown properties for block declaration: ${humanizeList(\n          disallowedKeys.map(quote),\n        )}`,\n      ),\n    )\n  }\n\n  if (marks) {\n    marks = validateMarks(typeDef.marks, visitorContext, problems)\n  }\n\n  if (styles) {\n    styles = validateStyles(styles, visitorContext, problems)\n  }\n\n  if (lists) {\n    lists = validateLists(lists, visitorContext, problems)\n  }\n\n  if (members) {\n    members = validateMembers(members, visitorContext, problems)\n  }\n  return {\n    ...omit(typeDef, disallowedKeys),\n    marks,\n    styles,\n    name: typeDef.name || typeDef.type,\n    of: members,\n    _problems: problems,\n  }\n}\n\nfunction validateMarks(marks: any, visitorContext: any, problems: any) {\n  let decorators = marks.decorators\n  let annotations = marks.annotations\n\n  if (!isPlainObject(marks)) {\n    problems.push(error(`\"marks\" declaration should be an object, got ${getTypeOf(marks)}`))\n    return problems\n  }\n\n  const disallowedMarkKeys = Object.keys(marks).filter(\n    (key) => !allowedMarkKeys.includes(key) && !key.startsWith('_'),\n  )\n\n  if (disallowedMarkKeys.length > 0) {\n    problems.push(\n      error(\n        `Found unknown properties for block declaration: ${humanizeList(\n          disallowedMarkKeys.map(quote),\n        )}`,\n      ),\n    )\n  }\n\n  if (decorators && !Array.isArray(decorators)) {\n    problems.push(\n      error(`\"marks.decorators\" declaration should be an array, got ${getTypeOf(decorators)}`),\n    )\n  } else if (decorators) {\n    decorators\n      .filter((dec: any) => !!dec.blockEditor)\n      .forEach((dec: any) => {\n        dec.icon = dec.blockEditor.icon\n        dec.component = dec.blockEditor.render\n      })\n    decorators = validateDecorators(decorators, visitorContext, problems)\n  }\n\n  if (annotations && !Array.isArray(annotations)) {\n    problems.push(\n      error(`\"marks.annotations\" declaration should be an array, got ${getTypeOf(annotations)}`),\n    )\n  } else if (annotations) {\n    annotations = validateAnnotations(annotations, visitorContext, problems)\n  }\n\n  return {...marks, decorators, annotations}\n}\n\nfunction validateLists(lists: any, visitorContext: any, problems: any) {\n  if (!Array.isArray(lists)) {\n    problems.push(error(`\"lists\" declaration should be an array, got ${getTypeOf(lists)}`))\n    return problems\n  }\n\n  lists.forEach((list, index) => {\n    if (!isPlainObject(list)) {\n      problems.push(error(`List must be an object, got ${getTypeOf(list)}`))\n      return\n    }\n\n    const name = list.value || `#${index}`\n    const disallowedKeys = Object.keys(list).filter(\n      (key) => !allowedListKeys.includes(key) && !key.startsWith('_'),\n    )\n\n    if (disallowedKeys.length > 0) {\n      problems.push(\n        error(\n          `Found unknown properties for list ${name}: ${humanizeList(disallowedKeys.map(quote))}`,\n        ),\n      )\n    }\n\n    if (!list.value) {\n      problems.push(error(`List #${index} is missing required \"value\" property`))\n    } else if (typeof list.value !== 'string') {\n      problems.push(\n        error(\n          `List type #${index} has an invalid \"value\" property, expected string, got ${getTypeOf(\n            list.value,\n          )}`,\n        ),\n      )\n    } else if (!list.title) {\n      problems.push(warning(`List type ${name} is missing recommended \"title\" property`))\n    }\n  })\n  return lists\n}\n\nfunction validateStyles(styles: any, visitorContext: any, problems: any) {\n  if (!Array.isArray(styles)) {\n    problems.push(error(`\"styles\" declaration should be an array, got ${getTypeOf(styles)}`))\n    return problems\n  }\n\n  styles.forEach((style, index) => {\n    if (!isPlainObject(style)) {\n      problems.push(error(`Style must be an object, got ${getTypeOf(style)}`))\n      return\n    }\n\n    const name = style.value || `#${index}`\n    const disallowedKeys = Object.keys(style).filter(\n      (key) => !allowedStyleKeys.includes(key) && !key.startsWith('_'),\n    )\n\n    if (disallowedKeys.length > 0) {\n      problems.push(\n        error(\n          `Found unknown properties for style ${name}: ${humanizeList(disallowedKeys.map(quote))}`,\n        ),\n      )\n    }\n\n    if (!style.value) {\n      problems.push(error(`Style #${index} is missing required \"value\" property`))\n    } else if (typeof style.value !== 'string') {\n      problems.push(\n        error(\n          `Style #${index} has an invalid \"value\" property, expected string, got ${getTypeOf(\n            style.value,\n          )}`,\n        ),\n      )\n    } else if (!style.title) {\n      problems.push(warning(`Style ${name} is missing recommended \"title\" property`))\n    }\n    if (typeof style.blockEditor !== 'undefined') {\n      problems.push(\n        warning(\n          `Style has deprecated key \"blockEditor\", please refer to the documentation on how to configure the block type for version 3.`,\n          HELP_IDS.DEPRECATED_BLOCKEDITOR_KEY,\n        ),\n      )\n      // TODO remove this backward compatibility at some point.\n      style.component = style.component || style.blockEditor.render\n    }\n  })\n  return styles\n}\n\nfunction validateDecorators(decorators: any, visitorContext: any, problems: any) {\n  decorators.forEach((decorator: any, index: any) => {\n    if (!isPlainObject(decorator)) {\n      problems.push(error(`Annotation must be an object, got ${getTypeOf(decorator)}`))\n      return\n    }\n\n    const name = decorator.value || `#${index}`\n    const disallowedKeys = Object.keys(decorator).filter(\n      (key) => !allowedDecoratorKeys.includes(key) && !key.startsWith('_'),\n    )\n\n    if (disallowedKeys.length > 0) {\n      problems.push(\n        error(\n          `Found unknown properties for decorator ${name}: ${humanizeList(\n            disallowedKeys.map(quote),\n          )}`,\n        ),\n      )\n    }\n\n    if (!decorator.value) {\n      problems.push(error(`Decorator #${index} is missing required \"value\" property`))\n    } else if (typeof decorator.value !== 'string') {\n      problems.push(\n        error(\n          `Decorator #${index} has an invalid \"value\" property, expected string, got ${getTypeOf(\n            decorator.value,\n          )}`,\n        ),\n      )\n    } else if (!decorator.title) {\n      problems.push(warning(`Decorator ${name} is missing recommended \"title\" property`))\n    }\n    if (typeof decorator.blockEditor !== 'undefined') {\n      problems.push(\n        warning(\n          `Decorator \"${name}\" has deprecated key \"blockEditor\", please refer to the documentation on how to configure the block type for version 3.`,\n          HELP_IDS.DEPRECATED_BLOCKEDITOR_KEY,\n        ),\n      )\n      // TODO remove this backward compatibility at some point.\n      decorator.icon = decorator.icon || decorator.blockEditor.icon\n      decorator.component = decorator.component || decorator.blockEditor.render\n    }\n  })\n  return decorators\n}\n\nfunction validateAnnotations(annotations: any, visitorContext: any, problems: any) {\n  return annotations.map((annotation: any) => {\n    if (!isPlainObject(annotation)) {\n      return {\n        ...annotation,\n        _problems: [error(`Annotation must be an object, got ${getTypeOf(annotation)}`)],\n      }\n    }\n\n    const {_problems} = visitorContext.visit(annotation, visitorContext)\n    const targetType = annotation.type && visitorContext.getType(annotation.type)\n    if (targetType && !isJSONTypeOf(targetType, 'object', visitorContext)) {\n      _problems.push(\n        error(\n          `Annotation cannot have type \"${annotation.type}\" - annotation types must inherit from object`,\n        ),\n      )\n    }\n\n    if (typeof annotation.blockEditor !== 'undefined') {\n      problems.push(\n        warning(\n          `Annotation has deprecated key \"blockEditor\", please refer to the documentation on how to configure the block type for version 3.`,\n          HELP_IDS.DEPRECATED_BLOCKEDITOR_KEY,\n        ),\n      )\n      // TODO remove this backward compatibility at some point.\n      annotation.icon = annotation.icon || annotation.blockEditor.icon\n      if (annotation.blockEditor?.render && !annotation.components?.annotation) {\n        annotation.components = annotation.components || {}\n        annotation.components.annotation =\n          annotation.components.annotation || annotation.blockEditor.render\n      }\n    }\n\n    return {...annotation, _problems}\n  })\n}\n\nfunction validateMembers(members: any, visitorContext: any, problems: any) {\n  if (!Array.isArray(members)) {\n    problems.push(error(`\"of\" declaration should be an array, got ${getTypeOf(members)}`))\n    return undefined\n  }\n\n  return members.map((member) => {\n    const {_problems} = visitorContext.visit(member, visitorContext)\n    if (member.type === 'object' && member.name && visitorContext.getType(member.name)) {\n      return {\n        ...member,\n        _problems: [\n          warning(\n            `Found array member declaration with the same name as the global schema type \"${member.name}\". It's recommended to use a unique name to avoid possibly incompatible data types that shares the same name.`,\n            HELP_IDS.ARRAY_OF_TYPE_GLOBAL_TYPE_CONFLICT,\n          ),\n        ],\n      }\n    }\n\n    // Test that each member is of a support object-like type\n    let type = member\n    while (type && !type.jsonType) {\n      type = visitorContext.getType(type.type)\n    }\n    const nonObjectCoreTypes = coreTypeNames.filter((n) => !supportedBuiltInObjectTypes.includes(n))\n    if (\n      // Must be object-like type (to validate hoisted types)\n      (type && type.jsonType !== 'object') ||\n      // Can't be a core type, or core object type that isn't supported (like 'span')\n      nonObjectCoreTypes.some((coreName) => coreName === member.type)\n    ) {\n      return {\n        ...member,\n        _problems: [\n          error(\n            `Block member types must be a supported object-like type. The following built-in types are supported: '${supportedBuiltInObjectTypes.join(\n              \"', '\",\n            )}'. You can also use shorthands for previously defined object types like {type: 'myObjectType'}`,\n            HELP_IDS.ARRAY_OF_TYPE_BUILTIN_TYPE_CONFLICT,\n          ),\n        ],\n      }\n    }\n    return {...member, _problems}\n  })\n}\n","import {type SchemaType} from '@sanity/types'\n\nimport {type SchemaValidationResult} from '../../typedefs'\nimport {error} from '../createValidationResult'\n\nexport function validateNonObjectFieldsProp(\n  typeDef: SchemaType,\n  visitorContext: any,\n): SchemaValidationResult[] {\n  if (!('fields' in typeDef)) {\n    return []\n  }\n\n  let type = typeDef\n  while (type && !type.jsonType) {\n    type = visitorContext.getType(type.type)\n  }\n\n  if (type && type.jsonType !== 'object') {\n    return [error(`Type has propery \"fields\", but is not an object/document type.`)]\n  }\n\n  return []\n}\n","import humanize from 'humanize-list'\nimport leven from 'leven'\n\nimport {error, HELP_IDS} from '../createValidationResult'\n\nconst quote = (str: any) => `\"${str}\"`\n\nexport function validateTypeName(typeName: string, visitorContext: any) {\n  const possibleTypeNames = visitorContext.getTypeNames()\n\n  if (!typeName) {\n    return [error(`Type is missing a type.`, HELP_IDS.TYPE_MISSING_TYPE)]\n  }\n\n  if (typeof typeName !== 'string') {\n    return [\n      error(\n        `Type has an invalid \"type\"-property - should be a string.`,\n        HELP_IDS.TYPE_MISSING_TYPE,\n      ),\n    ]\n  }\n\n  const isValid = possibleTypeNames.includes(typeName)\n\n  if (!isValid) {\n    const suggestions = possibleTypeNames\n      .map((possibleTypeName: any) => {\n        return [leven(typeName, possibleTypeName), possibleTypeName]\n      })\n      .filter(([distance]: any) => distance < 3)\n      .map(([_, name]: any) => name)\n\n    const suggestion =\n      suggestions.length > 0\n        ? ` Did you mean ${humanize(suggestions.map(quote), {conjunction: 'or'})}?`\n        : ''\n\n    return [error(`Unknown type: ${typeName}.${suggestion}`)]\n  }\n  return []\n}\n","import {type SchemaValidationResult} from '../../typedefs'\nimport {warning} from '../createValidationResult'\n\nexport function validateDeprecatedProperties(type: any): SchemaValidationResult[] {\n  const warnings = []\n\n  if (type?.inputComponent) {\n    warnings.push(\n      warning(`The \"inputComponent\" property is deprecated. Use \"components.input\" instead.`),\n    )\n  }\n\n  if (type?.preview?.component) {\n    warnings.push(\n      warning(`The \"preview.component\" property is deprecated. Use \"components.preview\" instead.`),\n    )\n  }\n\n  if (type?.diffComponent) {\n    warnings.push(\n      warning(`The \"diffComponent\" property is deprecated. Use \"components.diff\" instead.`),\n    )\n  }\n\n  if (type?.options?.editModal) {\n    warnings.push(\n      warning(`The \"options.editModal\" property is deprecated. Use \"options.modal\" instead.`),\n    )\n  }\n\n  if (type?.options?.isHighlighted) {\n    warnings.push(\n      warning(\n        `The \"options.isHighlighted\" property is deprecated. You can put fields behind a collapsed fieldset if you want to hide them from plain sight.`,\n      ),\n    )\n  }\n\n  return warnings\n}\n","import {validateNonObjectFieldsProp} from '../utils/validateNonObjectFieldsProp'\nimport {validateTypeName} from '../utils/validateTypeName'\nimport {validateDeprecatedProperties} from './deprecated'\n\nexport default (typeDef: any, visitorContext: any) => {\n  return {\n    ...typeDef,\n    _problems: [\n      ...validateTypeName(typeDef.type, visitorContext),\n      ...validateNonObjectFieldsProp(typeDef, visitorContext),\n      ...validateDeprecatedProperties(typeDef),\n    ].filter(Boolean),\n  }\n}\n","import {flatten, isPlainObject} from 'lodash'\n\nimport {type SchemaValidationResult} from '../../typedefs'\nimport {error, HELP_IDS} from '../createValidationResult'\nimport {getDupes} from '../utils/getDupes'\n\nfunction normalizeToProp(typeDef: any) {\n  if (Array.isArray(typeDef.to)) {\n    return typeDef.to\n  }\n  return typeDef.to ? [typeDef.to] : typeDef.to\n}\n\nconst VALID_DATASET = /^[a-z0-9~][-_a-z0-9]+$/\nexport function isValidDatasetName(name: string): string | true {\n  const isValid = name.length >= 2 && name.toLowerCase() === name && VALID_DATASET.test(name)\n  return (\n    isValid ||\n    `The provided dataset \"${name}\" doesn't look like a valid dataset. Dataset names must be more than 2 characters, can only contain lowercase characters, numbers, underscores and dashes and can not start with a dash or an underscore`\n  )\n}\n\nexport default (typeDef: any, visitorContext: any) => {\n  const isValidTo = Array.isArray(typeDef.to) || isPlainObject(typeDef.to)\n  const normalizedTo = normalizeToProp(typeDef)\n\n  const problems = flatten([\n    isValidTo\n      ? getDupes(normalizedTo, (t) => `${t.name};${t.type}`).map((dupes) =>\n          error(\n            `Found ${dupes.length} members with same type, but not unique names \"${dupes[0].type}\" in reference. This makes it impossible to tell their values apart and you should consider naming them`,\n            HELP_IDS.CROSS_DATASET_REFERENCE_INVALID,\n          ),\n        )\n      : error(\n          'The cross dataset reference type is missing or having an invalid value for the required \"to\" property. It should be an array of accepted types.',\n          HELP_IDS.CROSS_DATASET_REFERENCE_INVALID,\n        ),\n  ])\n\n  if (isValidTo && normalizedTo.length === 0) {\n    problems.push(\n      error(\n        'The cross dataset reference type should define at least one referenced type. Please check the \"to\" property.',\n        HELP_IDS.CROSS_DATASET_REFERENCE_INVALID,\n      ),\n    )\n  }\n\n  normalizedTo.forEach((crossDatasetTypeDef: any, index: any) => {\n    if (!crossDatasetTypeDef.type) {\n      problems.push(\n        error(\n          `The referenced type at index ${index} must be named. Specify the name of the type you want to create references to.`,\n          HELP_IDS.CROSS_DATASET_REFERENCE_INVALID,\n        ),\n      )\n    }\n\n    if (!isPlainObject(crossDatasetTypeDef.preview)) {\n      problems.push(\n        error(\n          `Missing required preview config for the referenced type \"${\n            crossDatasetTypeDef.type || '<unknown type>'\n          }\"`,\n          HELP_IDS.CROSS_DATASET_REFERENCE_INVALID,\n        ),\n      )\n    }\n  })\n\n  if (typeof typeDef.dataset === 'string') {\n    const datasetValidation = isValidDatasetName(typeDef.dataset)\n    if (datasetValidation !== true) {\n      problems.push(error(datasetValidation, HELP_IDS.CROSS_DATASET_REFERENCE_INVALID))\n    }\n  } else {\n    problems.push(\n      error(\n        'A cross dataset reference must specify a `dataset`',\n        HELP_IDS.CROSS_DATASET_REFERENCE_INVALID,\n      ),\n    )\n  }\n\n  if (typeDef.studioUrl && typeof typeDef.studioUrl !== 'function') {\n    problems.push(\n      error(\n        'The \"studioUrl\" property on a cross dataset reference must be a function taking \"{id, type}\" as argument and returning a studio url.',\n        HELP_IDS.CROSS_DATASET_REFERENCE_INVALID,\n      ),\n    )\n  }\n\n  problems.push(...getOptionErrors(typeDef))\n\n  return {\n    ...typeDef,\n    _problems: problems,\n  }\n}\n\nfunction getOptionErrors(typeDef: any): SchemaValidationResult[] {\n  const {options} = typeDef\n  const problems = [] as SchemaValidationResult[]\n\n  problems.push(\n    ...['filter', 'filterParams']\n      .filter((key) => key in typeDef)\n      .map((key) =>\n        error(\n          `\\`${key}\\` is not allowed on a reference type definition - did you mean \\`options.${key}\\`?`,\n          HELP_IDS.REFERENCE_INVALID_OPTIONS_LOCATION,\n        ),\n      ),\n  )\n\n  if (!options) {\n    return problems\n  }\n\n  if (!isPlainObject(options)) {\n    return problems.concat(\n      error(\n        'The reference type expects `options` to be an object',\n        HELP_IDS.REFERENCE_INVALID_OPTIONS,\n      ),\n    )\n  }\n\n  if (typeof options.filter === 'function' && typeof options.filterParams !== 'undefined') {\n    return problems.concat(\n      error(\n        '`filterParams` cannot be used if `filter` is a function. Either statically define `filter` as a string, or return `params` from the `filter`-function.',\n        HELP_IDS.REFERENCE_INVALID_FILTER_PARAMS_COMBINATION,\n      ),\n    )\n  }\n\n  if (typeof options.filter === 'function' || (!options.filter && !options.filterParams)) {\n    return problems\n  }\n\n  if (typeof options.filter !== 'string') {\n    return problems.concat(\n      error(`If set, \\`filter\\` must be a string. Got ${typeof options.filter}`),\n    )\n  }\n\n  if (typeof options.filterParams !== 'undefined' && !isPlainObject(options.filterParams)) {\n    return problems.concat(error(`If set, \\`filterParams\\` must be an object.`))\n  }\n\n  if (options.filterParams) {\n    return problems.concat(\n      Object.keys(options.filterParams)\n        .filter((key) => key.startsWith('__') || key.startsWith('$'))\n        .map((key) => error(`Filter parameter cannot be prefixed with \"$\" or \"__\". Got ${key}\".`)),\n    )\n  }\n\n  return problems\n}\n","const REACT_SYM_RE = /^Symbol\\(react\\..+\\)$/\n\nexport function isComponentLike(value: any) {\n  const type = typeof value\n  // Note: we're not using `isValidElementType` from react-is here since it accepts too much, e.g. any strings.\n  return (\n    type === 'function' ||\n    (typeof value?.$$typeof === 'symbol' && REACT_SYM_RE.test(String(value?.$$typeof)))\n  )\n}\n","import inspect from '../../inspect'\nimport {type SchemaValidationResult} from '../../typedefs'\nimport {warning} from '../createValidationResult'\nimport {isComponentLike} from './isComponent'\n\nexport function validateComponent(typeDef: any): SchemaValidationResult[] {\n  const components = 'components' in typeDef ? typeDef.components : false\n  if (!components) {\n    return []\n  }\n\n  const warnings: SchemaValidationResult[] = []\n\n  if (components.input && !isComponentLike(components.input)) {\n    warnings.push(\n      warning(\n        `The \\`components.input\\` property is set but does not appear to be a valid React component (expected a function, but saw ${inspect(\n          components.input,\n        )}). If you have imported a custom input component, please verify that you have imported the correct named/default export.`,\n      ),\n    )\n  }\n\n  if (components.field && !isComponentLike(components.field)) {\n    warnings.push(\n      warning(\n        `The \\`components.field\\` property is set but does not appear to be a valid React component (expected a function, but saw ${inspect(\n          components.field,\n        )}). If you have imported a custom field component, please verify that you have imported the correct named/default export.`,\n      ),\n    )\n  }\n\n  if (components.item && !isComponentLike(components.item)) {\n    warnings.push(\n      warning(\n        `The \\`components.item\\` property is set but does not appear to be a valid React component (expected a function, but saw ${inspect(\n          components.item,\n        )}). If you have imported a custom item component, please verify that you have imported the correct named/default export.`,\n      ),\n    )\n  }\n\n  if (components.preview && !isComponentLike(components.preview)) {\n    warnings.push(\n      warning(\n        `The \\`components.preview\\` property is set but does not appear to be a valid React component (expected a function, but saw ${inspect(\n          components.preview,\n        )}). If you have imported a custom preview component, please verify that you have imported the correct named/default export.`,\n      ),\n    )\n  }\n\n  return warnings\n}\n","import {isPlainObject} from 'lodash'\n\nimport inspect from '../../inspect'\nimport {error, HELP_IDS, warning} from '../createValidationResult'\nimport {validateComponent} from '../utils/validateComponent'\n\nconst VALID_FIELD_RE = /^[A-Za-z]+[0-9A-Za-z_]*$/\nconst CONVENTIONAL_FIELD_RE = /^[A-Za-z_]+[0-9A-Za-z_]*$/\ninterface Field {\n  name: string\n}\n\ninterface PreviewConfig {\n  select?: {\n    [key: string]: string\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n  prepare?: Function\n}\n\nfunction validateFieldName(name: any): Array<any> {\n  if (typeof name !== 'string') {\n    return [\n      error(\n        `Field names must be strings. Saw \"${inspect(name)}\"`,\n        HELP_IDS.OBJECT_FIELD_NAME_INVALID,\n      ),\n    ]\n  }\n  if (name.startsWith('_')) {\n    return [\n      error(\n        `Invalid field name \"${name}\". Field names cannot start with underscores \"_\" as it's reserved for system fields.`,\n        HELP_IDS.OBJECT_FIELD_NAME_INVALID,\n      ),\n    ]\n  }\n\n  if (!VALID_FIELD_RE.test(name)) {\n    return [\n      error(\n        `Invalid field name: \"${name}\". Fields can only contain characters from A-Z, numbers and underscores and should not start with a number (must pass the regular expression ${String(\n          VALID_FIELD_RE,\n        )}).`,\n        HELP_IDS.OBJECT_FIELD_NAME_INVALID,\n      ),\n    ]\n  }\n  if (!CONVENTIONAL_FIELD_RE.test(name)) {\n    return [\n      warning(\n        'Thats an interesting field name for sure! But it is... how to put it... a bit... unconventional?' +\n          ' It may be wise to keep special characters out of field names for easier access later on.',\n      ),\n      HELP_IDS.OBJECT_FIELD_NAME_INVALID,\n    ]\n  }\n  return []\n}\n\nexport function validateField(field: any, _visitorContext: any) {\n  if (!isPlainObject(field)) {\n    return [\n      error(\n        `Incorrect type for field definition - should be an object, saw ${inspect(field)}`,\n        HELP_IDS.OBJECT_FIELD_DEFINITION_INVALID_TYPE,\n      ),\n    ]\n  }\n\n  const problems = []\n  problems.push(\n    ...('name' in field\n      ? validateFieldName(field.name)\n      : [error('Missing field name', HELP_IDS.OBJECT_FIELD_NAME_INVALID)]),\n  )\n  problems.push(...validateComponent(field))\n  return problems\n}\n\nfunction getDuplicateFields(array: Array<Field>): Array<Array<Field> | null> {\n  const dupes: {[name: string]: Array<Field>} = {}\n  array.forEach((field) => {\n    if (!dupes[field.name]) {\n      dupes[field.name] = []\n    }\n    dupes[field.name].push(field)\n  })\n  return Object.keys(dupes)\n    .map((fieldName) => (dupes[fieldName].length > 1 ? dupes[fieldName] : null))\n    .filter(Boolean)\n}\n\nexport function validateFields(fields: any, options = {allowEmpty: false}) {\n  const problems = []\n  const fieldsIsArray = Array.isArray(fields)\n  if (!fieldsIsArray) {\n    return [\n      error(\n        `The \"fields\" property must be an array of fields. Instead saw \"${typeof fields}\"`,\n        HELP_IDS.OBJECT_FIELDS_INVALID,\n      ),\n    ]\n  }\n\n  const fieldsWithNames = fields.filter((field) => typeof field.name === 'string')\n\n  getDuplicateFields(fieldsWithNames).forEach((dupes) => {\n    problems.push(\n      error(\n        `Found ${dupes!.length} fields with name \"${dupes![0].name}\" in object`,\n        HELP_IDS.OBJECT_FIELD_NOT_UNIQUE,\n      ),\n    )\n  })\n\n  if (fields.length === 0 && !options.allowEmpty) {\n    problems.push(error('Object should have at least one field', HELP_IDS.OBJECT_FIELDS_INVALID))\n  }\n\n  const standaloneBlockFields = fields\n    .filter((field) => field.type === 'block')\n    .map((field) => `\"${field.name}\"`)\n\n  if (standaloneBlockFields.length > 0) {\n    const fmtFields = standaloneBlockFields.join(', ')\n    problems.push(\n      error(\n        `Invalid standalone block field(s) ${fmtFields}. Block content must be defined as an array of blocks`,\n        HELP_IDS.STANDALONE_BLOCK_TYPE,\n      ),\n    )\n  }\n\n  return problems\n}\n\nexport function validatePreview(preview: PreviewConfig) {\n  if (!isPlainObject(preview)) {\n    return [error(`The \"preview\" property must be an object, instead saw \"${typeof preview}\"`)]\n  }\n\n  if (typeof preview.prepare !== 'undefined' && typeof preview.prepare !== 'function') {\n    return [\n      error(\n        `The \"preview.prepare\" property must be a function, instead saw \"${typeof preview.prepare}\"`,\n      ),\n    ]\n  }\n\n  if (!preview.select) {\n    return []\n  }\n\n  if (!isPlainObject(preview.select)) {\n    return [\n      error(\n        `The \"preview.select\" property must be an object, instead saw \"${typeof preview.prepare}\"`,\n      ),\n    ]\n  }\n\n  return Object.keys(preview.select).reduce((errs: any, key) => {\n    return typeof preview.select![key] === 'string'\n      ? errs\n      : errs.concat(\n          error(\n            `The key \"${key}\" of \"preview.select\" must be a string, instead saw \"${typeof preview\n              .select![key]}\"`,\n          ),\n        )\n  }, [])\n}\n\nexport default (typeDef: any, visitorContext: any) => {\n  let problems = validateFields(typeDef.fields)\n\n  let preview = typeDef.preview\n  if (preview) {\n    const previewErrors = validatePreview(typeDef.preview)\n    problems = problems.concat(previewErrors)\n    preview = previewErrors.some((err: any) => err.severity === 'error') ? {} : preview\n  }\n\n  if (\n    typeDef.type !== 'document' &&\n    typeDef.type !== 'object' &&\n    typeof typeDef.initialValue !== 'undefined'\n  ) {\n    problems.push(\n      error(`The \"initialValue\" property is currently only supported for document & object types.`),\n    )\n  }\n\n  return {\n    ...typeDef,\n    preview,\n    fields: (Array.isArray(typeDef.fields) ? typeDef.fields : []).map((field: any, index: any) => {\n      const {name, ...fieldTypeDef} = field\n      const {_problems, ...fieldType} = visitorContext.visit(fieldTypeDef, index)\n      return {\n        name,\n        ...fieldType,\n        _problems: validateField(field, visitorContext).concat(_problems || []),\n      }\n    }),\n    _problems: problems,\n  }\n}\n","import {isPlainObject} from 'lodash'\n\nimport {error} from '../createValidationResult'\nimport object from './object'\n\nexport default (typeDefinition: any, visitorContext: any) => {\n  const typeDef = object(typeDefinition, visitorContext)\n  const {initialValue, initialValues} = typeDef\n\n  const hasInitialValue = typeof initialValue !== 'undefined'\n  if (hasInitialValue && !isPlainObject(initialValue) && typeof initialValue !== 'function') {\n    typeDef._problems.push(\n      error(`The \"initialValue\" property must be either a plain object or a function`),\n    )\n  }\n\n  if (typeof initialValues !== 'undefined') {\n    typeDef._problems.push(error(`Found property \"initialValues\" - did you mean \"initialValue\"?`))\n  }\n\n  return typeDef\n}\n","import {error, HELP_IDS} from '../createValidationResult'\nimport {validateField, validateFields} from './object'\n\nexport default (typeDef: any, visitorContext: any) => {\n  const problems = []\n  const fields = typeDef.fields\n\n  if (fields) {\n    problems.push(...validateFields(fields, {allowEmpty: true}))\n  }\n\n  const invalidFieldNames = Array.isArray(fields)\n    ? fields?.filter((field) => field.name === 'asset')\n    : []\n\n  if (\n    typeDef.options &&\n    typeof typeDef.options.metadata !== 'undefined' &&\n    !Array.isArray(typeDef.options.metadata)\n  ) {\n    problems.push(\n      error(\n        `Invalid type for file \\`metadata\\` field - must be an array of strings`,\n        HELP_IDS.ASSET_METADATA_FIELD_INVALID,\n      ),\n    )\n  } else if (invalidFieldNames.length > 0) {\n    problems.push(error('The name `asset` is not a valid field name for type `file`.'))\n  }\n\n  return {\n    ...typeDef,\n    fields: (Array.isArray(fields) ? fields : []).map((field, index) => {\n      const {name, ...fieldTypeDef} = field\n      const {_problems, ...fieldType} = visitorContext.visit(fieldTypeDef, index)\n      return {\n        name,\n        ...fieldType,\n        _problems: validateField(field, visitorContext).concat(_problems || []),\n      }\n    }),\n    _problems: problems,\n  }\n}\n","import {flatten, isPlainObject} from 'lodash'\n\nimport {type SchemaValidationResult} from '../../typedefs'\nimport {error, HELP_IDS} from '../createValidationResult'\nimport {getDupes} from '../utils/getDupes'\n\nfunction normalizeToProp(typeDef: any) {\n  if (Array.isArray(typeDef.to)) {\n    return typeDef.to\n  }\n  return typeDef.to ? [typeDef.to] : []\n}\n\nexport function isValidResourceType(resourceType: string): string | true {\n  if (!resourceType) {\n    return 'The resource type must be a non-empty string'\n  }\n  if (resourceType != 'media-library' && resourceType != 'dataset') {\n    return 'The resource type must be either \"media-library\" or \"dataset\"'\n  }\n  return true\n}\n\nexport function isValidResourceId(resourceType: string, resourceId: string): string | true {\n  if (!resourceId) {\n    return 'The resource ID must be a non-empty string'\n  }\n  if (resourceType === 'dataset') {\n    const parts = resourceId.split('.')\n    if (parts.length !== 2) {\n      return 'The resource ID for a dataset reference must be on the form \"<projectId>.<datasetName>\"'\n    }\n    return true\n  }\n  if (resourceType === 'media-library') {\n    return true\n  }\n  return `Cannot validate resource ID for resource type: ${resourceType}`\n}\n\nexport default (typeDef: any, visitorContext: any) => {\n  const isValidTo = Array.isArray(typeDef.to) || isPlainObject(typeDef.to)\n  const normalizedTo = normalizeToProp(typeDef)\n\n  const problems = flatten([\n    isValidTo\n      ? getDupes(normalizedTo, (t) => `${t.name};${t.type}`).map((dupes) =>\n          error(\n            `Found ${dupes.length} members with same type, but not unique names \"${dupes[0].type}\" in reference. This makes it impossible to tell their values apart and you should consider naming them`,\n            HELP_IDS.GLOBAL_DOCUMENT_REFERENCE_INVALID,\n          ),\n        )\n      : error(\n          'The global document reference type is missing or having an invalid value for the required \"to\" property. It should be an array of accepted types.',\n          HELP_IDS.GLOBAL_DOCUMENT_REFERENCE_INVALID,\n        ),\n  ])\n\n  if (isValidTo && normalizedTo.length === 0) {\n    problems.push(\n      error(\n        'The global document reference type should define at least one referenced type. Please check the \"to\" property.',\n        HELP_IDS.GLOBAL_DOCUMENT_REFERENCE_INVALID,\n      ),\n    )\n  }\n\n  normalizedTo.forEach((crossDatasetTypeDef: any, index: any) => {\n    if (!crossDatasetTypeDef.type) {\n      problems.push(\n        error(\n          `The referenced type at index ${index} must be named. Specify the name of the type you want to create references to.`,\n          HELP_IDS.GLOBAL_DOCUMENT_REFERENCE_INVALID,\n        ),\n      )\n    }\n\n    if (!isPlainObject(crossDatasetTypeDef.preview)) {\n      problems.push(\n        error(\n          `Missing required preview config for the referenced type \"${\n            crossDatasetTypeDef.type || '<unknown type>'\n          }\"`,\n          HELP_IDS.GLOBAL_DOCUMENT_REFERENCE_INVALID,\n        ),\n      )\n    }\n  })\n\n  if (typeof typeDef.resourceType === 'string') {\n    const validation = isValidResourceType(typeDef.resourceType)\n    if (validation !== true) {\n      problems.push(error(validation, HELP_IDS.GLOBAL_DOCUMENT_REFERENCE_INVALID))\n    }\n  } else {\n    problems.push(\n      error(\n        'A global document reference must specify a `resourceType`',\n        HELP_IDS.GLOBAL_DOCUMENT_REFERENCE_INVALID,\n      ),\n    )\n  }\n\n  if (typeof typeDef.resourceId === 'string') {\n    const datasetValidation = isValidResourceId(typeDef.resourceType, typeDef.resourceId)\n    if (datasetValidation !== true) {\n      problems.push(error(datasetValidation, HELP_IDS.GLOBAL_DOCUMENT_REFERENCE_INVALID))\n    }\n  } else {\n    problems.push(\n      error(\n        'A global document reference must specify a `resourceId`',\n        HELP_IDS.GLOBAL_DOCUMENT_REFERENCE_INVALID,\n      ),\n    )\n  }\n\n  if (\n    typeDef.studioUrl &&\n    typeof typeDef.studioUrl !== 'function' &&\n    typeof typeDef.studioUrl !== 'string'\n  ) {\n    problems.push(\n      error(\n        'The \"studioUrl\" property on a global document reference must either be a function taking \"{id, type}\" as argument and returning a studio url, or a string being the base url pointing to a studio.',\n        HELP_IDS.GLOBAL_DOCUMENT_REFERENCE_INVALID,\n      ),\n    )\n  }\n\n  problems.push(...getOptionErrors(typeDef))\n\n  return {\n    ...typeDef,\n    _problems: problems,\n  }\n}\n\nfunction getOptionErrors(typeDef: any): SchemaValidationResult[] {\n  const {options} = typeDef\n  const problems = [] as SchemaValidationResult[]\n\n  problems.push(\n    ...['filter', 'filterParams']\n      .filter((key) => key in typeDef)\n      .map((key) =>\n        error(\n          `\\`${key}\\` is not allowed on a reference type definition - did you mean \\`options.${key}\\`?`,\n          HELP_IDS.REFERENCE_INVALID_OPTIONS_LOCATION,\n        ),\n      ),\n  )\n\n  if (!options) {\n    return problems\n  }\n\n  if (!isPlainObject(options)) {\n    return problems.concat(\n      error(\n        'The reference type expects `options` to be an object',\n        HELP_IDS.REFERENCE_INVALID_OPTIONS,\n      ),\n    )\n  }\n\n  if (typeof options.filter === 'function' && typeof options.filterParams !== 'undefined') {\n    return problems.concat(\n      error(\n        '`filterParams` cannot be used if `filter` is a function. Either statically define `filter` as a string, or return `params` from the `filter`-function.',\n        HELP_IDS.REFERENCE_INVALID_FILTER_PARAMS_COMBINATION,\n      ),\n    )\n  }\n\n  if (typeof options.filter === 'function' || (!options.filter && !options.filterParams)) {\n    return problems\n  }\n\n  if (typeof options.filter !== 'string') {\n    return problems.concat(\n      error(`If set, \\`filter\\` must be a string. Got ${typeof options.filter}`),\n    )\n  }\n\n  if (typeof options.filterParams !== 'undefined' && !isPlainObject(options.filterParams)) {\n    return problems.concat(error(`If set, \\`filterParams\\` must be an object.`))\n  }\n\n  if (options.filterParams) {\n    return problems.concat(\n      Object.keys(options.filterParams)\n        .filter((key) => key.startsWith('__') || key.startsWith('$'))\n        .map((key) => error(`Filter parameter cannot be prefixed with \"$\" or \"__\". Got ${key}\".`)),\n    )\n  }\n\n  return problems\n}\n","import {error, HELP_IDS, warning} from '../createValidationResult'\nimport {validateField, validateFields} from './object'\n\nconst autoMeta = ['dimensions', 'hasAlpha', 'isOpaque']\n\nexport default (typeDef: any, visitorContext: any) => {\n  const problems = []\n  const fields = typeDef.fields\n\n  if (fields) {\n    problems.push(...validateFields(fields, {allowEmpty: true}))\n  }\n\n  let options = typeDef.options\n  const metadata = options?.metadata\n  const superfluousMeta = Array.isArray(metadata)\n    ? metadata.filter((meta) => autoMeta.includes(meta))\n    : []\n\n  const invalidFieldNames = ['asset', 'hotspot', 'crop']\n\n  const fieldsWithInvalidName = Array.isArray(fields)\n    ? fields?.filter((field) => invalidFieldNames.includes(field.name))\n    : []\n\n  if (typeof metadata !== 'undefined' && !Array.isArray(metadata)) {\n    problems.push(\n      error(\n        `Invalid type for image \\`metadata\\` field - must be an array of strings`,\n        HELP_IDS.ASSET_METADATA_FIELD_INVALID,\n      ),\n    )\n  } else if (superfluousMeta.length > 0) {\n    problems.push(\n      warning(\n        `Image \\`metadata\\` field contains superfluous properties (they are always included): ${superfluousMeta.join(\n          ', ',\n        )}`,\n      ),\n    )\n    options = {...options, metadata: metadata!.filter((meta) => !autoMeta.includes(meta))}\n  } else if (fieldsWithInvalidName.length > 0) {\n    problems.push(\n      error(\n        `The names \\`${invalidFieldNames.join(\n          '`, `',\n        )}\\` are invalid field names for type \\`image\\`.`,\n      ),\n    )\n  }\n\n  return {\n    ...typeDef,\n    options,\n    fields: (Array.isArray(fields) ? fields : []).map((field, index) => {\n      const {name, ...fieldTypeDef} = field\n      const {_problems, ...fieldType} = visitorContext.visit(fieldTypeDef, index)\n      return {\n        name,\n        ...fieldType,\n        _problems: validateField(field, visitorContext).concat(_problems || []),\n      }\n    }),\n    _problems: problems,\n  }\n}\n","import {flatten, isPlainObject} from 'lodash'\n\nimport {type SchemaValidationResult} from '../../typedefs'\nimport {error, HELP_IDS} from '../createValidationResult'\nimport {getDupes} from '../utils/getDupes'\n\nfunction normalizeToProp(typeDef: any) {\n  if (Array.isArray(typeDef.to)) {\n    return typeDef.to\n  }\n  return typeDef.to ? [typeDef.to] : typeDef.to\n}\n\nexport default (typeDef: any, visitorContext: any) => {\n  const isValidTo = Array.isArray(typeDef.to) || isPlainObject(typeDef.to)\n  const normalizedTo = normalizeToProp(typeDef)\n\n  const problems = flatten([\n    isValidTo\n      ? getDupes(normalizedTo, (t) => `${t.name};${t.type}`).map((dupes) =>\n          error(\n            `Found ${dupes.length} members with same type, but not unique names \"${dupes[0].type}\" in reference. This makes it impossible to tell their values apart and you should consider naming them`,\n            HELP_IDS.REFERENCE_TO_INVALID,\n          ),\n        )\n      : error(\n          'The reference type is missing or having an invalid value for the required \"to\" property. It should be an array of accepted types.',\n          HELP_IDS.REFERENCE_TO_INVALID,\n        ),\n  ])\n\n  if (isValidTo && normalizedTo.length === 0) {\n    problems.push(\n      error(\n        'The reference type should define at least one accepted type. Please check the \"to\" property.',\n        HELP_IDS.REFERENCE_TO_INVALID,\n      ),\n    )\n  }\n\n  problems.push(...getOptionErrors(typeDef))\n\n  return {\n    ...typeDef,\n    to: (isValidTo ? normalizedTo : []).map(visitorContext.visit),\n    _problems: problems,\n  }\n}\n\nfunction getOptionErrors(typeDef: any): SchemaValidationResult[] {\n  const {options} = typeDef\n  const problems = [] as SchemaValidationResult[]\n\n  problems.push(\n    ...['filter', 'filterParams']\n      .filter((key) => key in typeDef)\n      .map((key) =>\n        error(\n          `\\`${key}\\` is not allowed on a reference type definition - did you mean \\`options.${key}\\`?`,\n          HELP_IDS.REFERENCE_INVALID_OPTIONS_LOCATION,\n        ),\n      ),\n  )\n\n  if (!options) {\n    return problems\n  }\n\n  if (!isPlainObject(options)) {\n    return problems.concat(\n      error(\n        'The reference type expects `options` to be an object',\n        HELP_IDS.REFERENCE_INVALID_OPTIONS,\n      ),\n    )\n  }\n\n  if (typeof options.filter === 'function' && typeof options.filterParams !== 'undefined') {\n    return problems.concat(\n      error(\n        '`filterParams` cannot be used if `filter` is a function. Either statically define `filter` as a string, or return `params` from the `filter`-function.',\n        HELP_IDS.REFERENCE_INVALID_FILTER_PARAMS_COMBINATION,\n      ),\n    )\n  }\n\n  if (typeof options.filter === 'function' || (!options.filter && !options.filterParams)) {\n    return problems\n  }\n\n  if (typeof options.filter !== 'string') {\n    return problems.concat(\n      error(`If set, \\`filter\\` must be a string. Got ${typeof options.filter}`),\n    )\n  }\n\n  if (typeof options.filterParams !== 'undefined' && !isPlainObject(options.filterParams)) {\n    return problems.concat(error(`If set, \\`filterParams\\` must be an object.`))\n  }\n\n  if (options.filterParams) {\n    return problems.concat(\n      Object.keys(options.filterParams)\n        .filter((key) => key.startsWith('__') || key.startsWith('$'))\n        .map((key) => error(`Filter parameter cannot be prefixed with \"$\" or \"__\". Got ${key}\".`)),\n    )\n  }\n\n  return problems\n}\n","import {error, HELP_IDS, warning} from '../createValidationResult'\nimport {validateComponent} from '../utils/validateComponent'\n\nexport default (typeDef: any, visitorContext: any) => {\n  const hasName = Boolean(typeDef.name)\n  if (!hasName && Object.keys(typeDef).length === 1) {\n    // Short-circuit on obviously invalid types (only key is _problems)\n    return {\n      ...typeDef,\n      _problems: [\n        error(\n          'Invalid/undefined type declaration, check declaration or the import/export of the schema type.',\n          HELP_IDS.TYPE_INVALID,\n        ),\n      ],\n    }\n  }\n\n  const problems = []\n  if (looksLikeEsmModule(typeDef)) {\n    problems.push(\n      error(\n        'Type appears to be an ES6 module imported through CommonJS require - use an import statement or access the `.default` property',\n        HELP_IDS.TYPE_IS_ESM_MODULE,\n      ),\n    )\n  } else if (!hasName) {\n    problems.push(error('Missing type name', HELP_IDS.TYPE_MISSING_NAME))\n  } else if (visitorContext.isReserved(typeDef.name)) {\n    problems.push(\n      error(\n        `Invalid type name: \"${typeDef.name}\" is a reserved name.`,\n        HELP_IDS.TYPE_NAME_RESERVED,\n      ),\n    )\n  }\n\n  if (visitorContext.isDuplicate(typeDef.name)) {\n    problems.push(\n      error(\n        `Invalid type name: A type with name \"${typeDef.name}\" is already defined in the schema.`,\n      ),\n    )\n  }\n\n  problems.push(...validateComponent(typeDef))\n\n  if ('title' in typeDef && typeof typeDef.title !== 'string') {\n    problems.push(warning('Type title is not a string.', HELP_IDS.TYPE_TITLE_INVALID))\n  }\n  return {\n    ...typeDef,\n    _problems: problems,\n  }\n}\n\nfunction looksLikeEsmModule(typeDef: any) {\n  return !typeDef.name && typeDef.default && (typeDef.default.name || typeDef.default.title)\n}\n","import {HELP_IDS, warning} from '../createValidationResult'\n\nexport default (typeDef: any, visitorContext: any) => {\n  const problems = []\n\n  if (typeDef.options && typeDef.options.slugifyFn) {\n    problems.push(\n      warning(\n        'Heads up! The \"slugifyFn\" option has been renamed to \"slugify\".',\n        HELP_IDS.SLUG_SLUGIFY_FN_RENAMED,\n      ),\n    )\n\n    typeDef.options.slugify = typeDef.options.slugifyFn\n  }\n\n  return {\n    ...typeDef,\n    _problems: problems,\n  }\n}\n","import {traverseSanitySchema} from './traverseSchema'\nimport {type _FIXME_} from './typedefs'\nimport array from './validation/types/array'\nimport block from './validation/types/block'\nimport common from './validation/types/common'\nimport crossDatasetReference from './validation/types/crossDatasetReference'\nimport documentVisitor from './validation/types/document'\nimport file from './validation/types/file'\nimport globalDocumentReference from './validation/types/globalDocumentReference'\nimport image from './validation/types/image'\nimport object from './validation/types/object'\nimport reference from './validation/types/reference'\nimport rootType from './validation/types/rootType'\nimport slug from './validation/types/slug'\n\nconst typeVisitors = {\n  array,\n  object,\n  slug,\n  file,\n  image,\n  block,\n  document: documentVisitor,\n  reference: reference,\n  crossDatasetReference: crossDatasetReference,\n  globalDocumentReference,\n}\n\nconst getNoopVisitor = (visitorContext: any) => (schemaDef: any) => ({\n  name: `<unnamed_type_@_index_${visitorContext.index}>`,\n  ...schemaDef,\n  _problems: [],\n})\n\nfunction combine(...visitors: any) {\n  return (schemaType: any, visitorContext: any) => {\n    return visitors.reduce(\n      (result: any, visitor: any) => {\n        const res = visitor(result, visitorContext)\n        return {\n          ...res,\n          _problems: result._problems.concat(res._problems),\n        }\n      },\n      {_problems: [], ...schemaType},\n    )\n  }\n}\n\ninterface Options {\n  transformTypeVisitors?: (visitors: typeof typeVisitors) => Partial<typeof typeVisitors>\n}\n\n/**\n * @internal\n */\nexport function validateSchema(\n  schemaTypes: _FIXME_,\n  {transformTypeVisitors = (visitors) => visitors}: Options = {},\n) {\n  return traverseSanitySchema(schemaTypes, (schemaDef, visitorContext) => {\n    const typeVisitor =\n      (schemaDef &&\n        schemaDef.type &&\n        (transformTypeVisitors(typeVisitors) as any)[schemaDef.type]) ||\n      getNoopVisitor(visitorContext)\n\n    if (visitorContext.isRoot) {\n      return combine(rootType, common, typeVisitor)(schemaDef, visitorContext)\n    }\n\n    return combine(common, typeVisitor)(schemaDef, visitorContext)\n  })\n}\n","import {type SchemaValidationProblemGroup} from '@sanity/types'\n\nexport class ValidationError extends Error {\n  public problems: SchemaValidationProblemGroup[]\n  constructor(problems: SchemaValidationProblemGroup[]) {\n    super('ValidationError')\n    this.problems = problems\n    this.name = 'ValidationError'\n  }\n}\n","import {\n  type CustomValidator,\n  type MediaValidator,\n  type Rule as IRule,\n  type RuleTypeConstraint,\n  type UriValidationOptions,\n} from '@sanity/types'\nimport {cloneDeep, isObject} from 'lodash'\n\nimport {Schema} from '../legacy/Schema'\nimport {builtinTypes} from './builtinTypes'\nimport {groupProblems} from './groupProblems'\nimport {type SchemaValidationResult} from './typedefs'\nimport {validateSchema} from './validateSchema'\nimport {ValidationError} from './validation/ValidationError'\n\nconst builtinSchema = Schema.compile({\n  name: 'studio',\n  types: builtinTypes,\n})\n\nexport function createSchemaFromManifestTypes(schemaDef: {name: string; types: unknown[]}) {\n  const validated = validateSchema(schemaDef.types).getTypes()\n  const validation = groupProblems(validated)\n  const problems = validation.filter((group) =>\n    group.problems.some((problem: SchemaValidationResult) => problem.severity === 'error'),\n  )\n\n  if (problems.length > 0) {\n    throw new ValidationError(problems)\n  }\n\n  return Schema.compile({\n    name: schemaDef.name,\n    types: schemaDef.types.map(coerceType).filter(Boolean),\n    parent: builtinSchema,\n  })\n}\n\n// coerceType attempts to coerce a json schema into a Sanity schema type. This mainly involves\n// converting a json normalized rule into an actual '@sanity/schema' Rule.\nfunction coerceType(obj: unknown) {\n  if (!isObject(obj)) return undefined\n  const typ = cloneDeep(obj)\n  traverse(typ)\n  return typ\n}\n\nfunction traverse(obj: unknown) {\n  if (!isObject(obj)) {\n    return\n  }\n\n  if (Array.isArray(obj)) {\n    obj.forEach(traverse)\n    return\n  }\n\n  for (const v of Object.values(obj)) {\n    traverse(v)\n  }\n\n  coerceValidation(obj)\n}\n\n// Convert a json rule into a '@sanity/schema' Rule.\nfunction coerceValidation(val: unknown) {\n  if (!isObject(val) || !('validation' in val)) return\n\n  // Convert ManifestValidationGroup[] to Rule functions\n  const manifestValidation = Array.isArray(val.validation) ? val.validation : [val.validation]\n\n  val.validation = manifestValidation\n    .map((group) => {\n      if (!isObject(group)) return undefined\n\n      return (baseRule: IRule) => {\n        let rule = baseRule\n        const level = 'level' in group ? group.level : undefined\n        const rules = 'rules' in group ? group.rules : undefined\n        const message = 'message' in group ? group.message : undefined\n\n        if (!rules || !Array.isArray(rules)) return undefined\n\n        // Apply level if specified\n        if (isValidLevel(level) && (message === undefined || typeof message === 'string')) {\n          rule = rule[level](message)\n        }\n\n        // Apply each rule in the group\n        for (const ruleSpec of rules) {\n          rule = applyRuleSpec(rule, ruleSpec)\n        }\n\n        return rule\n      }\n    })\n    .filter(Boolean)\n}\n\nfunction coerceConstraintRule(val: unknown): any {\n  if (!isObject(val)) return undefined\n\n  if (Array.isArray(val)) {\n    return val.map(coerceConstraintRule).filter(Boolean)\n  }\n\n  return (baseRule: any) => {\n    let rule = baseRule\n\n    const rules = '_rules' in val ? val._rules : undefined\n    const level = '_level' in val ? val._level : undefined\n    const message = '_message' in val ? val._message : undefined\n\n    if (!rules || !Array.isArray(rules)) return undefined\n\n    // Apply level if specified\n    if (typeof level === 'string') {\n      rule = rule[level](message)\n    }\n\n    // Apply each rule in the group\n    for (const ruleSpec of rules) {\n      rule = applyRuleSpec(rule, ruleSpec)\n    }\n\n    return rule\n  }\n}\n\n// eslint-disable-next-line complexity\nfunction applyRuleSpec(rule: IRule, ruleSpec: unknown): IRule {\n  if (!ruleSpec || typeof ruleSpec !== 'object') {\n    return rule\n  }\n\n  const flag = 'flag' in ruleSpec ? ruleSpec.flag : undefined\n  const constraint = 'constraint' in ruleSpec ? ruleSpec.constraint : undefined\n\n  switch (flag) {\n    case 'presence':\n      if (constraint === 'required') {\n        return rule.required()\n      } else if (constraint === 'optional') {\n        return rule.optional()\n      }\n      break\n\n    case 'type':\n      if (typeof constraint === 'string') {\n        return rule.type(constraint as RuleTypeConstraint)\n      }\n      break\n\n    case 'min':\n      if (typeof constraint === 'number' || typeof constraint === 'string') {\n        return rule.min(constraint)\n      }\n      break\n\n    case 'max':\n      if (typeof constraint === 'number' || typeof constraint === 'string') {\n        return rule.max(constraint)\n      }\n      break\n\n    case 'length':\n      if (typeof constraint === 'number') {\n        return rule.length(constraint)\n      }\n      break\n\n    case 'integer':\n      return rule.integer()\n\n    case 'email':\n      return rule.email()\n\n    case 'unique':\n      return rule.unique()\n\n    case 'reference':\n      return rule.reference()\n\n    case 'precision':\n      if (typeof constraint === 'number') {\n        return rule.precision(constraint)\n      }\n      break\n\n    case 'positive':\n      return rule.positive()\n\n    case 'negative':\n      return rule.negative()\n\n    case 'greaterThan':\n      if (typeof constraint === 'number') {\n        return rule.greaterThan(constraint)\n      }\n      break\n\n    case 'lessThan':\n      if (typeof constraint === 'number') {\n        return rule.lessThan(constraint)\n      }\n      break\n\n    case 'stringCasing':\n      if (constraint === 'uppercase') {\n        return rule.uppercase()\n      } else if (constraint === 'lowercase') {\n        return rule.lowercase()\n      }\n      break\n\n    case 'valid':\n      if (Array.isArray(constraint)) {\n        return rule.valid(constraint)\n      }\n      break\n\n    case 'regex':\n      if (\n        isObject(constraint) &&\n        'pattern' in constraint &&\n        (typeof constraint.pattern === 'string' || constraint.pattern instanceof RegExp)\n      ) {\n        const options: any = {}\n        if ('name' in constraint && typeof constraint.name === 'string') {\n          options.name = constraint.name\n        }\n        if ('invert' in constraint) {\n          options.invert = constraint.invert\n        }\n        const pattern =\n          typeof constraint.pattern === 'string'\n            ? stringToRegExp(constraint.pattern)\n            : constraint.pattern\n        return rule.regex(pattern, options)\n      }\n      break\n\n    case 'uri':\n      if (isObject(constraint) && 'options' in constraint) {\n        return rule.uri(constraint.options as UriValidationOptions)\n      }\n      break\n\n    case 'assetRequired':\n      return rule.assetRequired()\n\n    case 'all':\n      return rule.all(coerceConstraintRule(constraint))\n\n    case 'either':\n      return rule.either(coerceConstraintRule(constraint))\n\n    case 'custom':\n      // When the manifest schema types are serialized, the custom function will be stripped. We add it back here to keep track that\n      // a rule did exist at one point.\n      if (constraint === undefined) return rule.custom(() => true)\n      if (typeof constraint === 'function') return rule.custom(constraint as CustomValidator)\n      break\n\n    case 'media':\n      // When the manifest schema types are serialized, the custom function will be stripped. We add it back here to keep track that\n      // a rule did exist at one point.\n      if (constraint === undefined) return rule.media(() => true)\n      if (typeof constraint === 'function') return rule.media(constraint as MediaValidator)\n      break\n\n    default:\n      break\n  }\n\n  return rule\n}\n\nconst isValidLevel = (level: unknown): level is 'error' | 'warning' | 'info' => {\n  return !!level && typeof level === 'string' && ['error', 'warning', 'info'].includes(level)\n}\n\nfunction stringToRegExp(str: string): RegExp {\n  // RegExp.toString() returns \"/pattern/flags\"\n  const match = str.match(/^\\/(.*)\\/([gimuy]*)$/)\n  if (match) {\n    return new RegExp(match[1], match[2])\n  }\n  // Fallback if the format doesn't match\n  return new RegExp(str)\n}\n","import {\n  type ArraySchemaType,\n  type NumberSchemaType,\n  type ObjectField,\n  type ObjectFieldType,\n  type ObjectSchemaType,\n  type ReferenceSchemaType,\n  type Rule,\n  type Schema as SchemaDef,\n  type SchemaType as SanitySchemaType,\n  type StringSchemaType,\n} from '@sanity/types'\nimport {\n  type ArrayTypeNode,\n  createReferenceTypeNode,\n  type DocumentSchemaType,\n  type InlineTypeNode,\n  type NullTypeNode,\n  type NumberTypeNode,\n  type ObjectAttribute,\n  type ObjectTypeNode,\n  type SchemaType,\n  type StringTypeNode,\n  type TypeDeclarationSchemaType,\n  type TypeNode,\n  type UnionTypeNode,\n  type UnknownTypeNode,\n} from 'groq-js'\n\nconst documentDefaultFields = (typeName: string): Record<string, ObjectAttribute> => ({\n  _id: {\n    type: 'objectAttribute',\n    value: {type: 'string'},\n  },\n  _type: {\n    type: 'objectAttribute',\n    value: {type: 'string', value: typeName},\n  },\n  _createdAt: {\n    type: 'objectAttribute',\n    value: {type: 'string'},\n  },\n  _updatedAt: {\n    type: 'objectAttribute',\n    value: {type: 'string'},\n  },\n  _rev: {\n    type: 'objectAttribute',\n    value: {type: 'string'},\n  },\n})\nconst typesMap = new Map<string, TypeNode>([\n  ['text', {type: 'string'}],\n  ['url', {type: 'string'}],\n  ['datetime', {type: 'string'}],\n  ['date', {type: 'string'}],\n  ['boolean', {type: 'boolean'}],\n  ['email', {type: 'string'}],\n])\n\nexport interface ExtractSchemaOptions {\n  enforceRequiredFields?: boolean\n}\n\nexport function extractSchema(\n  schemaDef: SchemaDef,\n  extractOptions: ExtractSchemaOptions = {},\n): SchemaType {\n  const inlineFields = new Set<SanitySchemaType>()\n  const documentTypes = new Map<string, DocumentSchemaType>()\n  const schema: SchemaType = []\n\n  // get a list of all the types in the schema, sorted by their dependencies. This ensures that when we check for inline/reference types, we have already processed the type\n  const sortedSchemaTypeNames = sortByDependencies(schemaDef)\n  sortedSchemaTypeNames.forEach((typeName) => {\n    const schemaType = schemaDef.get(typeName)\n    if (schemaType === undefined) {\n      return\n    }\n    const base = convertBaseType(schemaType)\n    if (base === null) {\n      return\n    }\n    if (base.type === 'type') {\n      inlineFields.add(schemaType)\n    }\n    if (base.type === 'document') {\n      documentTypes.set(typeName, base)\n    }\n\n    schema.push(base)\n  })\n\n  function convertBaseType(\n    schemaType: SanitySchemaType,\n  ): DocumentSchemaType | TypeDeclarationSchemaType | null {\n    let typeName: string | undefined\n    if (schemaType.type) {\n      typeName = schemaType.type.name\n    } else if ('jsonType' in schemaType) {\n      typeName = schemaType.jsonType\n    }\n\n    if (typeName === 'document' && isObjectType(schemaType)) {\n      const defaultAttributes = documentDefaultFields(schemaType.name)\n\n      const object = createObject(schemaType)\n      if (object.type === 'unknown') {\n        return null\n      }\n\n      return {\n        name: schemaType.name,\n        type: 'document',\n        attributes: {\n          ...defaultAttributes,\n          ...object.attributes,\n        },\n      }\n    }\n\n    const value = convertSchemaType(schemaType)\n    if (value.type === 'unknown') {\n      return null\n    }\n    if (value.type === 'object') {\n      value.attributes = {\n        _type: {\n          type: 'objectAttribute',\n          value: {\n            type: 'string',\n            value: schemaType.name,\n          },\n        },\n        ...value.attributes,\n      }\n      return {\n        name: schemaType.name,\n        type: 'type',\n        value,\n      }\n    }\n\n    return {\n      name: schemaType.name,\n      type: 'type',\n      value,\n    }\n  }\n\n  function convertSchemaType(schemaType: SanitySchemaType): TypeNode {\n    // if we have already seen the base type, we can just reference it\n    if (inlineFields.has(schemaType.type!)) {\n      return {type: 'inline', name: schemaType.type!.name} satisfies InlineTypeNode\n    }\n\n    // If we have a type that is point to a type, that is pointing to a type, we assume this is a circular reference\n    // and we return an inline type referencing it instead\n    if (schemaType.type?.type?.name === 'object') {\n      return {type: 'inline', name: schemaType.type.name} satisfies InlineTypeNode\n    }\n\n    if (isStringType(schemaType)) {\n      return createStringTypeNodeDefintion(schemaType)\n    }\n\n    if (isNumberType(schemaType)) {\n      return createNumberTypeNodeDefintion(schemaType)\n    }\n\n    // map some known types\n    if (schemaType.type && typesMap.has(schemaType.type.name)) {\n      return typesMap.get(schemaType.type.name)!\n    }\n\n    // Cross dataset references are not supported\n    if (isCrossDatasetReferenceType(schemaType)) {\n      return {type: 'unknown'} satisfies UnknownTypeNode // we don't support cross-dataset references at the moment\n    }\n\n    // Global document references are not supported\n    if (isGlobalDocumentReferenceType(schemaType)) {\n      return {type: 'unknown'} satisfies UnknownTypeNode // we don't support global document references at the moment\n    }\n\n    if (isReferenceType(schemaType)) {\n      return createReferenceTypeNodeDefintion(schemaType)\n    }\n\n    if (isArrayType(schemaType)) {\n      return createArray(schemaType)\n    }\n\n    if (isObjectType(schemaType)) {\n      return createObject(schemaType)\n    }\n\n    if (lastType(schemaType)?.name === 'document') {\n      const doc = documentTypes.get(schemaType.name)\n      if (doc === undefined) {\n        return {type: 'unknown'} satisfies UnknownTypeNode\n      }\n      return {type: 'object', attributes: doc?.attributes} satisfies ObjectTypeNode\n    }\n\n    throw new Error(`Type \"${schemaType.name}\" not found`)\n  }\n\n  function createObject(\n    schemaType: ObjectSchemaType | SanitySchemaType,\n  ): ObjectTypeNode | UnknownTypeNode {\n    const attributes: Record<string, ObjectAttribute> = {}\n\n    const fields = gatherFields(schemaType)\n    for (const field of fields) {\n      const fieldIsRequired = isFieldRequired(field)\n      const value = convertSchemaType(field.type)\n      if (value === null) {\n        continue\n      }\n\n      // if the field sets assetRequired() we will mark the asset attribute as required\n      // also guard against the case where the field is not an object, though type validation should catch this\n      if (hasAssetRequired(field) && value.type === 'object') {\n        value.attributes.asset.optional = false\n      }\n\n      // if we extract with enforceRequiredFields, we will mark the field as optional only if it is not a required field,\n      // else we will always mark it as optional\n      const optional = extractOptions.enforceRequiredFields ? fieldIsRequired === false : true\n\n      attributes[field.name] = {\n        type: 'objectAttribute',\n        value,\n        optional,\n      }\n    }\n\n    // Ignore empty objects\n    if (Object.keys(attributes).length === 0) {\n      return {type: 'unknown'} satisfies UnknownTypeNode\n    }\n\n    if (schemaType.type?.name !== 'document' && schemaType.name !== 'object') {\n      attributes._type = {\n        type: 'objectAttribute',\n        value: {\n          type: 'string',\n          value: schemaType.name,\n        },\n      }\n    }\n\n    return {\n      type: 'object',\n      attributes,\n    }\n  }\n\n  function createArray(arraySchemaType: ArraySchemaType): ArrayTypeNode | NullTypeNode {\n    const of: TypeNode[] = []\n    for (const item of arraySchemaType.of) {\n      const field = convertSchemaType(item)\n      if (field.type === 'inline') {\n        of.push({\n          type: 'object',\n          attributes: {\n            _key: createKeyField(),\n          },\n          rest: field,\n        } satisfies ObjectTypeNode)\n      } else if (field.type === 'object') {\n        field.rest = {\n          type: 'object',\n          attributes: {\n            _key: createKeyField(),\n          },\n        }\n        of.push(field)\n      } else {\n        of.push(field)\n      }\n    }\n\n    if (of.length === 0) {\n      return {type: 'null'}\n    }\n\n    return {\n      type: 'array',\n      of:\n        of.length > 1\n          ? {\n              type: 'union',\n              of,\n            }\n          : of[0],\n    }\n  }\n\n  return schema\n}\n\nfunction createKeyField(): ObjectAttribute<StringTypeNode> {\n  return {\n    type: 'objectAttribute',\n    value: {\n      type: 'string',\n    },\n  }\n}\n\nfunction isFieldRequired(field: ObjectField): boolean {\n  const {validation} = field.type\n  if (!validation) {\n    return false\n  }\n  const rules = Array.isArray(validation) ? validation : [validation]\n  for (const rule of rules) {\n    let required = false\n\n    // hack to check if a field is required. We create a proxy that returns itself when a method is called,\n    // if the method is \"required\" we set a flag\n    const proxy = new Proxy(\n      {},\n      {\n        get: (target, methodName) => () => {\n          if (methodName === 'required') {\n            required = true\n          }\n          return proxy\n        },\n      },\n    ) as Rule\n\n    if (typeof rule === 'function') {\n      rule(proxy)\n      if (required) {\n        return true\n      }\n    }\n\n    if (typeof rule === 'object' && rule !== null && '_required' in rule) {\n      if (rule._required === 'required') {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n\nfunction hasAssetRequired(field: ObjectField): boolean {\n  const {validation} = field.type\n  if (!validation) {\n    return false\n  }\n  const rules = Array.isArray(validation) ? validation : [validation]\n  for (const rule of rules) {\n    let assetRequired = false\n\n    // hack to check if a field is required. We create a proxy that returns itself when a method is called,\n    // if the method is \"required\" we set a flag\n    const proxy = new Proxy(\n      {},\n      {\n        get: (target, methodName) => () => {\n          if (methodName === 'assetRequired') {\n            assetRequired = true\n          }\n          return proxy\n        },\n      },\n    ) as Rule\n\n    if (typeof rule === 'function') {\n      rule(proxy)\n      if (assetRequired) {\n        return true\n      }\n    }\n\n    if (\n      typeof rule === 'object' &&\n      rule !== null &&\n      '_rules' in rule &&\n      Array.isArray(rule._rules)\n    ) {\n      if (rule._rules.some((r) => r.flag === 'assetRequired')) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n\nfunction isObjectType(typeDef: SanitySchemaType): typeDef is ObjectSchemaType {\n  return isType(typeDef, 'object') || typeDef.jsonType === 'object' || 'fields' in typeDef\n}\nfunction isArrayType(typeDef: SanitySchemaType): typeDef is ArraySchemaType {\n  return isType(typeDef, 'array')\n}\nfunction isReferenceType(typeDef: SanitySchemaType): typeDef is ReferenceSchemaType {\n  return isType(typeDef, 'reference')\n}\nfunction isCrossDatasetReferenceType(typeDef: SanitySchemaType) {\n  return isType(typeDef, 'crossDatasetReference')\n}\nfunction isGlobalDocumentReferenceType(typeDef: SanitySchemaType) {\n  return isType(typeDef, 'globalDocumentReference')\n}\nfunction isStringType(typeDef: SanitySchemaType): typeDef is StringSchemaType {\n  return isType(typeDef, 'string')\n}\nfunction isNumberType(typeDef: SanitySchemaType): typeDef is NumberSchemaType {\n  return isType(typeDef, 'number')\n}\nfunction createStringTypeNodeDefintion(\n  stringSchemaType: StringSchemaType,\n): StringTypeNode | UnionTypeNode<StringTypeNode> {\n  const listOptions = stringSchemaType.options?.list\n  if (listOptions && Array.isArray(listOptions)) {\n    return {\n      type: 'union',\n      of: listOptions.map((v) => ({\n        type: 'string',\n        value: typeof v === 'string' ? v : v.value,\n      })),\n    }\n  }\n  return {\n    type: 'string',\n  }\n}\n\nfunction createNumberTypeNodeDefintion(\n  numberSchemaType: NumberSchemaType,\n): NumberTypeNode | UnionTypeNode<NumberTypeNode> {\n  const listOptions = numberSchemaType.options?.list\n  if (listOptions && Array.isArray(listOptions)) {\n    return {\n      type: 'union',\n      of: listOptions.map((v) => ({\n        type: 'number',\n        value: typeof v === 'number' ? v : v.value,\n      })),\n    }\n  }\n  return {\n    type: 'number',\n  }\n}\n\nfunction createReferenceTypeNodeDefintion(\n  reference: ReferenceSchemaType,\n): ObjectTypeNode | UnionTypeNode<ObjectTypeNode> {\n  const references = gatherReferenceNames(reference)\n  if (references.length === 1) {\n    return createReferenceTypeNode(references[0])\n  }\n\n  return {\n    type: 'union',\n    of: references.map((name) => createReferenceTypeNode(name)),\n  }\n}\n\n// Traverse the reference type tree and gather all the reference names\nfunction gatherReferenceNames(type: ReferenceSchemaType): string[] {\n  const allReferences = gatherReferenceTypes(type)\n  // Remove duplicates\n  return [...new Set(allReferences.map((ref) => ref.name))]\n}\n\nfunction gatherReferenceTypes(type: ReferenceSchemaType): ObjectSchemaType[] {\n  const refTo = 'to' in type ? type.to : []\n  if ('type' in type && isReferenceType(type.type!)) {\n    return [...gatherReferenceTypes(type.type), ...refTo]\n  }\n\n  return refTo\n}\n\n// Traverse the type tree and gather all the fields\nfunction gatherFields(type: SanitySchemaType | ObjectSchemaType): ObjectField[] {\n  if ('fields' in type) {\n    return type.type ? gatherFields(type.type).concat(type.fields) : type.fields\n  }\n\n  return []\n}\n\n// Traverse the type tree and check if the type or any of its subtypes are of the given type\nfunction isType(\n  typeDef: SanitySchemaType | ObjectField | ObjectFieldType,\n  typeName: string,\n): boolean {\n  let type: SchemaType | ObjectField | ObjectFieldType | undefined = typeDef\n  while (type) {\n    if (type.name === typeName || (type.type && type.type.name === typeName)) {\n      return true\n    }\n\n    type = type.type\n  }\n  return false\n}\n\n// Traverse the type tree and return the \"last\" type, ie deepest type in the tree\nfunction lastType(typeDef: SanitySchemaType): SanitySchemaType | undefined {\n  let type: SchemaType | ObjectField | ObjectFieldType | undefined = typeDef\n  while (type) {\n    if (!type.type) {\n      return type\n    }\n    type = type.type\n  }\n\n  return undefined\n}\n\n// Sorts the types by their dependencies by using a topological sort depth-first algorithm.\nfunction sortByDependencies(compiledSchema: SchemaDef): string[] {\n  const seen = new Set<SanitySchemaType>()\n\n  // Walks the dependencies of a schema type and adds them to the dependencies set\n  function walkDependencies(\n    schemaType: SanitySchemaType,\n    dependencies: Set<SanitySchemaType>,\n  ): void {\n    if (seen.has(schemaType)) {\n      return\n    }\n    seen.add(schemaType)\n\n    if ('fields' in schemaType) {\n      for (const field of gatherFields(schemaType)) {\n        const last = lastType(field.type)\n        if (last!.name === 'document') {\n          dependencies.add(last!)\n          continue\n        }\n\n        let schemaTypeName: string | undefined\n        if (schemaType.type!.type) {\n          schemaTypeName = field.type.type!.name\n        } else if ('jsonType' in schemaType.type!) {\n          schemaTypeName = field.type.jsonType\n        }\n\n        if (schemaTypeName === 'object' || schemaTypeName === 'block') {\n          if (isReferenceType(field.type)) {\n            field.type.to.forEach((ref) => dependencies.add(ref.type!))\n          } else {\n            dependencies.add(field.type)\n          }\n        }\n        walkDependencies(field.type, dependencies)\n      }\n    } else if ('of' in schemaType) {\n      for (const item of schemaType.of) {\n        walkDependencies(item, dependencies)\n      }\n    }\n  }\n  const dependencyMap = new Map<SanitySchemaType, Set<SanitySchemaType>>()\n  compiledSchema.getTypeNames().forEach((typeName) => {\n    const schemaType = compiledSchema.get(typeName)\n    if (schemaType === undefined || schemaType.type === null) {\n      return\n    }\n    const dependencies = new Set<SanitySchemaType>()\n\n    walkDependencies(schemaType, dependencies)\n    dependencyMap.set(schemaType, dependencies)\n    seen.clear() // Clear the seen set for the next type\n  })\n\n  // Sorts the types by their dependencies\n  const typeNames: string[] = []\n  // holds a temporary mark for types that are currently being visited, to detect cyclic dependencies\n  const currentlyVisiting = new Set<SanitySchemaType>()\n\n  // holds a permanent mark for types that have been already visited\n  const visited = new Set<SanitySchemaType>()\n\n  // visit implements a depth-first search\n  function visit(type: SanitySchemaType) {\n    if (visited.has(type)) {\n      return\n    }\n    // If we find a type that is already in the temporary mark, we have a cyclic dependency.\n    if (currentlyVisiting.has(type)) {\n      return\n    }\n    // mark this as a temporary mark, meaning it's being visited\n    currentlyVisiting.add(type)\n    const deps = dependencyMap.get(type)\n    if (deps !== undefined) {\n      deps.forEach((dep) => visit(dep))\n    }\n    currentlyVisiting.delete(type)\n    visited.add(type)\n\n    if (!typeNames.includes(type.name)) {\n      typeNames.unshift(type.name)\n    }\n  }\n  // Visit all types in the dependency map\n  for (const [type] of dependencyMap) {\n    visit(type)\n  }\n\n  return typeNames\n}\n","import {type SchemaValidationProblem} from '@sanity/types'\n\nimport {groupProblems} from './groupProblems'\nimport {validateSchema} from './validateSchema'\n\nfunction unsupportedTypeValidator(typeLabel: string) {\n  return function () {\n    return {\n      _problems: [\n        {\n          severity: 'error',\n          message: `Type unsupported in Media Library aspects: ${typeLabel}.`,\n        },\n      ],\n    }\n  }\n}\n\n/**\n * Ensure that the provided value is a valid Media Library asset aspect that can be safely deployed.\n *\n * @internal\n */\nexport function validateMediaLibraryAssetAspect(\n  maybeAspect: unknown,\n): [isValidMediaLibraryAspect: boolean, validationErrors: SchemaValidationProblem[][]] {\n  const input = [maybeAspect]\n\n  const validated = validateSchema(input, {\n    transformTypeVisitors: (typeVisitors) => ({\n      ...typeVisitors,\n      document: unsupportedTypeValidator('document'),\n      image: unsupportedTypeValidator('image'),\n      file: unsupportedTypeValidator('file'),\n      video: unsupportedTypeValidator('sanity.video'),\n      reference: unsupportedTypeValidator('reference'),\n      crossDatasetReference: unsupportedTypeValidator('cross dataset reference'),\n    }),\n  })\n\n  const validation = groupProblems(validated.getTypes())\n\n  const errors = validation\n    .map((group) => group.problems.filter(({severity}) => severity === 'error'))\n    .filter((problems) => problems.length)\n\n  return [errors.length === 0, errors]\n}\n"],"names":["common","Rule","slug","array","coreTypes","coreTypeNames","quote","humanize","normalizeToProp","getOptionErrors","block","object","reference","typeVisitors"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,MAAM,mBAAmB;AAIlB,MAAM,oBAAoB;IAC/B,KAAA;IACA,QAAA,aAAA,GAAA,IAA+D,QAAA,EAAA;IAE/D,YAAY,IAAA,CAAe;QACzB,IAAA,CAAK,IAAA,GAAO;IACd;IAAA;;;;GAAA,GAOA,IAAI,MAAA,EAAkD;QACpD,IAAI,QAAQ,IAAA,CAAK,KAAA,CAAM,GAAA,CAAI,MAAM;QACjC,IAAI,MAAO,CAAA,OAAO;QAElB,MAAM,UAAU,6JAAI,aAAA,CAAA;QACpB,KAAA,MAAW,QAAQ,OAAO,iBAAA,GAAqB;YAC7C,MAAM,UAAU,eAAe,OAAO,GAAA,CAAI,IAAI,CAAa;YAC3D,QAAQ,SAAA,CAAU,2BAA2B;gBAAC;gBAAM;YAAA,CAAQ;QAC9D;QAEA,OAAI,OAAO,MAAA,IACT,QAAQ,MAAA,CAAO,IAAA,CAAK,GAAA,CAAI,OAAO,MAAM,CAAC,GAGxC,QAAQ,QAAQ,KAAA,CAAM,wBAAwB,GAC9C,IAAA,CAAK,KAAA,CAAM,GAAA,CAAI,QAAQ,KAAK,GACrB;IACT;AACF;AAEA,SAAS,qBAAqB,UAAA,EAAwB,IAAA,EAA8B;IAGlF,MAAM,WAAW,qLAAA,IAAkB,aAAc,UAAA,qKAAmB,iBAAc,CAAA,GAAI;IAEtF,IAAI;IACA,MAAM,OAAA,CAAQ,SAAS,MAAM,KAAA,CAC/B,SAAU,SAAS,MAAA,CAAsC,GAAA,CACvD,CAAC,EAAC,IAAA,EAAM,KAAA,EAAO,QAAA,EAAU,IAAA,EAAA,GAAA,CAAW;YAClC;YACA,SAAS,eAAe,IAAU;YAClC,QAAQ,eAAe,KAAK;YAC5B;QAAA,CAAA,EACF;IAIJ,IAAI;IACA,MAAM,OAAA,CAAQ,SAAS,SAAS,KAAA,CAClC,YAAY,gBACV,QACC,SAAS,SAAA,CAAuD,GAAA,CAC/D,CAAC,EAAC,IAAA,EAAM,KAAA,EAAO,WAAA,EAAa,KAAA,EAAO,MAAA,EAAQ,QAAA,EAAU,OAAA,EAAA,GAAA,CAAc;YACjE;YACA,OAAO,YAAY,KAAK;YACxB,aAAa,YAAY,WAAW;YACpC,OAAO,YAAY,KAAK;YACxB,QAAQ,gBAAgB,MAAM;YAC9B,UAAU,gBAAgB,QAAQ;YAClC,SAAS,eAAe,OAAO;QAAA,CAAA,GAEnC;IAIJ,IAAI;IACA,MAAM,OAAA,CAAQ,SAAS,MAAM,KAAA,CAC/B,SAAS,gBACP,QACC,SAAS,MAAA,CAAsD,GAAA,CAC9D,CAAC,EAAC,IAAA,EAAM,KAAA,EAAO,MAAA,EAAQ,SAAS,GAAA,EAAK,IAAA,EAAA,GAAA,CAAW;YAC9C;YACA,OAAO,YAAY,KAAK;YACxB,QAAQ,gBAAgB,MAAM;YAC9B,SAAS,UAAU,GAAG;YACtB,MAAM,UAAU,IAAI;QAAA,CAAA,GAExB;IAIJ,MAAM,SAAS,SAAS,UAAA,EAAY;IAEpC,IAAI;IACJ,OAAI,MAAM,OAAA,CAAQ,SAAS,SAAS,KAAA,CAClC,YAAY,SAAS,SAAA,CAClB,GAAA,CAAI,aAAa,EACjB,MAAA,CAAO,CAAC,IAAkC,MAAM,KAAA,CAAS,CAAA,GAGvD;QACL,OAAO,YAAY,SAAS,KAAK;QACjC,aAAa,iBAAiB,SAAS,WAAW;QAClD,UAAU,gBAAgB,SAAS,QAAQ;QAC3C,QAAQ,gBAAgB,SAAS,MAAM;QACvC,UAAU,UAAU,SAAS,QAAQ;QACrC,SAAS,eAAe,SAAS,OAAO;QACxC,cAAc,eAAe,SAAS,YAAY;QAClD,YAAY,OAAO,UAAW,WAAW;YAAC;QAAA,IAAU,KAAA;QACpD,aAAa,YAAY,SAAS,WAAW;QAC7C,MAAM,oBAAoB,SAAS,IAAI;QACvC;QACA;QACA;QACA,YAAY,iBAAiB,QAAQ;QACrC;IAAA;AAEJ;AASO,SAAS,eAAe,UAAA,EAAwB,IAAA,EAAwB;IAC7E,MAAMA,UAAS,qBAAqB,UAAgB;IAEpD,IAAI,CAAC,WAAW,IAAA,EACd,OAAO;QACL,SAAS;QACT,UAAU,WAAW,QAAA;QACrB,GAAGA,OAAAA;IAAA;IAQP,OAAQ,WAAW,IAAA,CAAK,IAAA,EAAA;QACtB,KAAK;YACH,OAAO;gBACL,SAAS;gBACT,IAAK,WAA+B,EAAA,CAAG,GAAA,CAAI,CAAC,SAAA,CAAY;wBACtD,MAAM,OAAO,IAAA;wBACb,SAAS,eAAe,MAAY;oBAAA,CAAA,CACpC;gBACF,GAAGA,OAAAA;YAAA;QAGP,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO;gBACL,SAAS,WAAW,IAAA,CAAK,IAAA;gBACzB,IAAI,gBACF,QACC,WAAmC,EAAA,CAEjC,GAAA,CAAI,CAAC,SAAA,CAAY;wBAAC,MAAM,OAAO,IAAA,IAAQ,OAAO,IAAA,EAAM,QAAQ,OAAO,IAAA;oBAAA,CAAA,CAAM;gBAE9E,GAAGA,OAAAA;YAAA;QAEP;YACE,OAAO;gBAAC,SAAS,WAAW,IAAA,CAAK,IAAA;gBAAM,GAAGA,OAAAA;YAAA;IAAM;AAEtD;AAEA,SAAS,YAAY,GAAA,EAAkC;IACrD,OAAO,OAAO,OAAQ,WAAW,MAAM,KAAA;AACzC;AAEA,SAAS,oBAAoB,GAAA,EAAkC;IAC7D,OAAO,OAAO,OAAQ,WAAW,IAAI,QAAA,KAAa,KAAA;AACpD;AAGA,SAAS,UAAU,GAAA,EAAgC;IACjD,OAAO,QAAQ,CAAA,IAAO,CAAA,IAAO,KAAA;AAC/B;AAEA,SAAS,gBAAgB,GAAA,EAAiD;IACxE,OAAI,OAAO,OAAQ,aAAmB,kBAC/B,UAAU,GAAG;AACtB;AAEA,SAAS,gBAAsC,GAAA,EAAQ,GAAA,EAA2C;IAChG,OAAO,IAAI,MAAA,CAAO,CAAC,MAAyC,OAAO,GAAA,CAAI,GAAG,CAAA,IAAM,QAAQ;AAC1F;AAEA,SAAS,eAAe,GAAA,EAAoC;IAC1D,IAAI,OAAO,OAAQ,UACjB,OAAO;QAAC,GAAG;KAAA;IAGb,IAAI,MAAM,OAAA,CAAQ,GAAG,GACnB,OAAO,IAAI,MAAA,CAAO,CAAC,OAAS,OAAO,QAAS,QAAQ;AAIxD;AAEA,MAAM,kBAAkC;IAAC,QAAQ;AAAA,GAC3C,iBAAgC;IAAC,QAAQ;AAAA,GACzC,mBAAoC;IAAC,QAAQ;AAAA,GAC7C,gBAA8B;IAAC,QAAQ;AAAA,GACvC,mBAAgC;IAAC,QAAQ;AAAA;AAE/C,SAAS,eACP,GAAA,EACA,OAAA,aAAA,GAAA,IAAW,IAAA,CAAA,EACX,WAAW,gBAAA,EACiB;IAC5B,IAAI,aAAa,EAAG,CAAA,OAAO;IAE3B,IAAI,OAAO,OAAQ,YAAY,OAAO,OAAQ,aAAa,QAAQ,QAAQ,QAAQ,KAAA,GACjF,OAAO;IAGT,IAAI,OAAO,OAAQ,UACjB,OAAO;QAAC,QAAQ;QAAU,OAAO,IAAI,QAAA;IAAS;IAGhD,IAAI,OAAO,OAAQ,WAAY,CAAA,OAAO;IAEtC,IAAI,KAAK,GAAA,CAAI,GAAG,GACd,OAAO;IAKT,IAFA,KAAK,GAAA,CAAI,GAAG,0IAER,UAAA,EAAS,GAAG,GAAG;QACjB,IAAI,MAAM,OAAA,CAAQ,GAAG,GACnB,OAAO,IAAI,GAAA,CAAI,CAAC,SAAS;YACvB,MAAM,MAAM,eAAe,MAAM,MAAM,WAAW,CAAC;YACnD,OAAO,QAAQ,KAAA,IAAY,mBAAmB;QAChD,CAAC;QAGH,IAAI,cAAc,OAAO,UAAU,OAAO,WAAW,KAAK;YAExD,MAAM,EAAC,IAAA,EAAM,KAAA,CAAA,CAAA,GAAS,KAChB,UAAU,OAAO,QAAS,aAAa,KAAK,IAAA,GAAO;YACzD,OAAI,OAAO,WAAY,WAAU,KAAA,IAC1B;gBACL,QAAQ;gBACR,MAAM;gBACN,OAAO,eAAe,OAAO,MAAM,WAAW,CAAC;YAAA;QAEnD;QAEA,IAAI,UAAU,CAAA;QACd,MAAM,SAA0B,CAAA;QAChC,KAAA,MAAW,CAAC,KAAK,KAAK,CAAA,IAAK,OAAO,OAAA,CAAQ,GAAG,EACvC,QAAQ,YAAA,CAAU,UAAU,CAAA,CAAA,GAChC,MAAA,CAAO,GAAG,CAAA,GAAI,eAAe,OAAO,MAAM,WAAW,CAAC;QAGxD,OAAO,UAAU;YAAC,QAAQ;YAAU,OAAO;QAAA,IAAU;IACvD;IAEA,OAAO;AACT;AAEA,SAAS,iBAAiB,GAAA,EAA8C;IACtE,IAAI,OAAO,OAAQ,SAAU,CAAA,OAAO;IACpC,2IAAI,UAAA,EAAS,GAAG,KAAK,cAAc,OAAO,UAAU,OAAO,WAAW,KAAK;QACzE,MAAM,EAAC,IAAA,EAAM,KAAA,CAAA,CAAA,GAAS,KAChB,UAAU,OAAO,QAAS,aAAa,KAAK,IAAA,GAAO;QACzD,OAAI,OAAO,WAAY,WAAU,KAAA,IAC1B;YAAC,QAAQ;YAAO,MAAM;YAAS,OAAO,eAAe,KAAK;QAAA;IACnE;AAEF;AAKA,SAAS,iBAAiB,GAAA,EAAwC;IAChE,IAAI,wIAAC,UAAA,EAAS,GAAG,KAAK,CAAA,CAAE,UAAU,GAAA,EAAM,CAAA;IAIxC,MAAM,eAA2B,CAAA,CAAA;IAgBjC,OAbE,aAAa,8IACb,UAAA,EAAS,IAAI,OAAO,KACpB,UAAU,IAAI,OAAA,IACd,MAAM,OAAA,CAAQ,IAAI,OAAA,CAAQ,IAAI,KAE9B,aAAa,IAAA,CAAK;QAChB,MAAM;QACN,QAAQ,IAAI,OAAA,CAAQ,IAAA,CACjB,GAAA,CAAI,CAAC,IAAM,eAAe,2BAA2B,GAAG,GAAG,CAAC,CAAC,EAC7D,MAAA,CAAO,CAAC,IAAkC,MAAM,KAAA,CAAS;IAAA,CAC7D,GAGK,IAAI,IAAA,EAAA;QACV,KAAK;YACH,aAAa,IAAA,CAAK;gBAChB,MAAM;gBACN,eAAe,CAAA;YAAA,CAChB;YACD;QACF,KAAK;YACH,aAAa,IAAA,CAAK;gBAChB,MAAM;YAAA,CACP;YACD;QACF,KAAK;YACH,aAAa,IAAA,CAAK;gBAChB,MAAM;YAAA,CACP;YACD;QACF,KAAK;YACH,aAAa,IAAA,CAAK;gBAChB,MAAM;YAAA,CACP;YACD;IACF;IAKF,IAAI,CAAA,CAAE,gBAAgB,GAAA,KAAQ,CAAC,IAAI,UAAA,EACjC,OAAI,aAAa,MAAA,GAAS,IACjB;QACL;YACE,OAAO;YACP,OAAO;QAAA;KACT,GAGJ,KAAA;IAGF,MAAM,cAA4B,CAAA,CAAA,EAC5B,QAAQ,MAAM,OAAA,CAAQ,IAAI,UAAU,IAAI,IAAI,UAAA,GAAa;QAAC,IAAI,UAAU;KAAA;IAC9E,KAAA,MAAW,QAAQ,MAAO;QACxB,MAAM,aAAa,gBAAgB,IAAI;QACvC,IAAI,eAAe,KAAA,GACjB;QAIF,MAAM,aAAa,aAAa,MAAA,CAAO,CAAC,KAAO,CAAC,WAAW,KAAA,CAAM,IAAA,CAAK,CAAC,0IAAM,UAAA,EAAQ,GAAG,EAAE,CAAC,CAAC;QACxF,WAAW,MAAA,GAAS,KACtB,WAAW,KAAA,CAAM,OAAA,CAAQ,GAAG,UAAU,GAIpC,CAAA,YAAY,IAAA,CAAK,CAAC,0IAAM,UAAA,EAAQ,GAAG,UAAU,CAAC,KAIlD,YAAY,IAAA,CAAK,UAAU;IAC7B;IAEA,OAAO,YAAY,MAAA,GAAS,IAAI,cAAc,KAAA;AAChD;AAEA,SAAS,cAAc,OAAA,EAA2B;IAChD,OAAI,CAAC,WAAW,OAAO,WAAY,WAAiB,CAAA,IAC9C,YAAY,UAIb,MAAM,OAAA,CAAQ,QAAQ,MAAM,IAC1B,QAAQ,MAAA,CAAO,IAAA,CAAK,CAAC,QAAU,MAAM,IAAA,KAAS,OAAO,IADjB,CAAA,IAHrC,UAAU,WAAW,QAAQ,IAAA,GAAa,cAAc,QAAQ,IAAI,IACjE,CAAA;AAIX;AAIA,SAAS,2BAA2B,MAAA,EAAiB,OAAA,EAA2C;IAI9F,OAAI,QAAQ,QAAA,KAAa,YAAY,cAAc,OAAO,IAAU,gJAEhE,UAAA,EAAS,MAAM,KAAK,WAAW,UAAU,OAAO,KAAA,GAC3C,OAAO,KAAA,GAGT;AACT;AAEA,SAAS,gBAAgB,GAAA,EAAsC;IAE7D,IAAK,KAKL;QAAA,IAAI,gBAAgB,GAAG,GACrB,IAAI;YACF,MAAM,SAAS,IAAI,uKAAI,QAAA,EAAM;YAG7B,IAAI,QAAQ,MAAM,GAEhB,OAAO,gBAAgB,MAAM;YAG/B,MAAM,IAAI,MAAM,iCAAiC;QACnD,EAAA,OAAgB;YAEd,OAAO;gBACL,OAAO;gBACP,OAAO;oBAAC;wBAAC,MAAM;wBAAU,MAAM;oBAAA,CAAW;iBAAA;YAAA;QAE9C;QAIF,IAAI,QAAQ,GAAG,GAAG;YAEhB,MAAM,QAA6B,IAAI,MAAA,IAAU,SAG3C,UAAU,uBAAuB,IAAI,QAAQ,GAG7C,QAAoB,CAAA,CAAA;YAE1B,KAAA,MAAW,QAAQ,IAAI,MAAA,IAAU,CAAA,CAAA,CAAI;gBAGnC,MAAM,WAAW,IAAI,SAAA,KAAc,cAAc,KAAA,GAC3C,gBAAgB,gBAAgB,MAAM,QAAQ;gBAChD,kBAAkB,KAAA,KAAA,CAKlB,MAAM,IAAA,CAAK,CAAC,yIAAM,WAAA,EAAQ,GAAG,aAAa,CAAC,KAI/C,MAAM,IAAA,CAAK,aAAa,CAAA;YAC1B;YAEA,OAAI,MAAM,MAAA,KAAW,IACnB,KAAA,IAGK;gBACL;gBACA;gBACA,GAAI,WAAW;oBAAC;gBAAA,CAAA;YAAO;QAE3B;IAAA;AAGF;AAEA,SAAS,QAAQ,GAAA,EAA4B;IAC3C,QAAO,gJAAA,EAAS,GAAG,KAAK,YAAY;AACtC;AAEA,SAAS,uBAAuB,GAAA,EAA6C;IAC3E,IAAI,OAAO,OAAQ,SAAU,CAAA,OAAO;IACpC,IAAI,wIAAC,UAAA,EAAS,GAAG,KAAK,MAAM,OAAA,CAAQ,GAAG,EAAG,CAAA;IAE1C,MAAM,gBAA+B,CAAA;IACrC,KAAA,MAAW,CAAC,OAAO,KAAK,CAAA,IAAK,OAAO,OAAA,CAAQ,GAAG,EACzC,OAAO,SAAU,YAAY,OAAO,SAAU,YAAA,CAGlD,aAAA,CAAc,KAAK,CAAA,GAAI,KAAA;IAGzB,OAAO,OAAO,IAAA,CAAK,aAAa,EAAE,MAAA,GAAS,IAAI,gBAAgB,KAAA;AACjE;AAEA,SAAS,gBAAgB,GAAA,EAAyD;IAChF,OAAO,OAAO,OAAQ;AACxB;AAGA,SAAS,gBAAgB,IAAA,EAAe,QAAA,EAAmD;IACzF,IAAI,wIAAC,UAAA,EAAS,IAAI,KAAK,CAAA,CAAE,UAAU,IAAA,GACjC;IAGF,MAAM,aAAa,gBAAgB,OAAO,KAAK,UAAA,GAAa,KAAA;IAE5D,OAAQ,KAAK,IAAA,EAAA;QACX,KAAK;YACH,OAAO;gBAAC,MAAM;YAAA;QAChB,KAAK;YACH,OAAO;gBAAC,MAAM;YAAA;QAChB,KAAK;YACH,OAAO;gBAAC,MAAM;YAAA;QAChB,KAAK;YACH,OAAO;gBAAC,MAAM;YAAA;QAChB,KAAK;YACH,OAAO;gBAAC,MAAM;YAAA;QAChB,KAAK;YACH,OAAI,eAAe,cAAoB;gBAAC,MAAM;YAAA,IAC1C,eAAe,cAAoB;gBAAC,MAAM;YAAA,IAC9C,KAAA;QACF,KAAK;YACH,IAAI,MAAM,OAAA,CAAQ,UAAU,GAAG;gBAC7B,MAAM,WAAW,WACd,GAAA,CAAI,CAAC,YAAc,gBAAgB,SAAS,CAAC,EAC7C,MAAA,CAAO,CAAC,IAAM,MAAM,KAAA,CAAS;gBAChC,IAAI,SAAS,MAAA,GAAS,GACpB,OAAO;oBAAC,MAAM;oBAAS;gBAAA;YAE3B;YACA;QACF,KAAK;YACH,IAAI,MAAM,OAAA,CAAQ,UAAU,GAAG;gBAC7B,MAAM,WAAW,WACd,GAAA,CAAI,CAAC,YAAc,gBAAgB,SAAS,CAAC,EAC7C,MAAA,CAAO,CAAC,IAAM,MAAM,KAAA,CAAS;gBAChC,IAAI,SAAS,MAAA,GAAS,GACpB,OAAO;oBAAC,MAAM;oBAAS;gBAAA;YAE3B;YACA;QACF,KAAK;YACH,OAAI,MAAM,OAAA,CAAQ,UAAU,IACnB;gBACL,MAAM;gBACN,QAAQ,WAAW,GAAA,CAAI,CAAC,IAAM,eAAe,CAAC,CAAC,EAAE,MAAA,CAAO,CAAC,IAAM,MAAM,KAAA,CAAS;YAAA,IAGlF,KAAA;QACF,KAAK;YACH,OAAO;gBAAC,MAAM;gBAAW,OAAO,uBAAuB,UAAU;YAAA;QACnE,KAAK;YACH,OAAO;gBAAC,MAAM;gBAAW,OAAO,uBAAuB,UAAU;YAAA;QACnE,KAAK;YACH,OAAO;gBAAC,MAAM;gBAAU,OAAO,uBAAuB,UAAU;YAAA;QAClE,KAAK;YACH,OAAO;gBAAC,MAAM;gBAAa,OAAO,uBAAuB,UAAU;YAAA;QACrE,KAAK;YACH,OAAO;gBAAC,MAAM;gBAAoB,OAAO,uBAAuB,UAAU;YAAA;QAC5E,KAAK;YACH,OAAO;gBAAC,MAAM;gBAAoB,OAAO,uBAAuB,UAAU;YAAA;QAC5E,KAAK;YACH,IAAI,iJAAA,EAAS,UAAU,KAAK,aAAa,YAAY;gBACnD,MAAM,EAAC,OAAA,CAAA,CAAA,GAAW,YACZ,SAAS,YAAY,aAAa,aAAa,WAAW,MAAM,IAAI,KAAA;gBAE1E,IAAI,mBAAmB,QACrB,OAAO;oBACL,MAAM;oBACN,SAAS,QAAQ,MAAA;oBACjB,GAAI,UAAU;wBAAC,QAAQ,CAAA;oBAAA,CAAA;gBAAI;YAGjC;YACA;QACF,KAAK;YAAO;gBACV,MAAM,uJACJ,UAAA,EAAS,UAAU,KACnB,aAAa,qJACb,UAAA,EAAS,WAAW,OAAO,KAC3B,mBAAmB,WAAW,OAAA,GAC1B,aAAa,WAAW,OAAA,CAAQ,aAAa,IAC7C,KAAA;gBAEN,OAAO;oBACL,MAAM;oBACN,GAAI,kBAAkB,KAAA,KAAa;wBAAC;oBAAA,CAAA;gBAAa;YAErD;QACA,KAAK;YACH,OAAO;gBAAC,MAAM;gBAAU,GAAI,YAAY;oBAAC;gBAAA,CAAA;YAAQ;QACnD,KAAK;YACH,OAAO;gBAAC,MAAM;gBAAU,MAAM;YAAA;QAChC,KAAK;YACH;QACF,KAAK;YACH,OAAI,eAAe,aAAmB;gBAAC,MAAM;YAAA,IACd,KAAA;QAEjC;YACE;IAAA;AAEN;AAEA,SAAS,uBAAuB,UAAA,EAA8C;IAC5E,8IACE,UAAA,EAAS,UAAU,KACnB,UAAU,cACV,UAAU,cACV,WAAW,IAAA,IACX,WAAW,IAAA,GAGJ;QACL,MAAM;QACN,MAAM,MAAM,OAAA,CAAQ,WAAW,IAAI,IAAI,WAAW,IAAA,GAAO;YAAC,WAAW,IAAI;SAAA;IAAA,IAItE,OAAO,UAAU;AAC1B;AAEA,SAAS,aAAa,GAAA,EAAmC;IACvD,IAAI,OAAO,OAAQ,WACjB,OAAO;AAGX;AAEA,SAAS,UAAU,GAAA,EAAsC;IACvD,IAAI,wIAAC,UAAA,EAAS,GAAG,KAAK,MAAM,OAAA,CAAQ,GAAG,EAAG,CAAA;IAG1C,MAAM,mBAA+B,CAAA;IACrC,KAAA,MAAW,SAAS,OAAO,OAAA,CAAQ,GAAG,EACpC,IAAI,YAAY,KAAK,GAAG;QACtB,MAAM,CAAC,OAAO,KAAK,CAAA,GAAI;QACvB,gBAAA,CAAiB,KAAK,CAAA,GAAI;YACxB,IAAI,MAAM,EAAA;YACV,KAAK,MAAM,GAAA;QAAA;IAEf;IAGF,OAAO,OAAO,IAAA,CAAK,gBAAgB,EAAE,MAAA,GAAS,IAAI,mBAAmB,KAAA;AACvE;AAEA,SAAS,YAAY,KAAA,EAA+D;IAClF,MAAM,CAAC,KAAK,KAAK,CAAA,GAAI;IACrB,OACE,OAAO,OAAQ,YACf,CAAC,CAAC,SACF,OAAO,SAAU,YACjB,SAAS,SACT,QAAQ,SACR,OAAO,MAAM,GAAA,IAAQ,YACrB,OAAO,MAAM,EAAA,IAAO;AAExB;AAEA,SAAS,cAAc,GAAA,EAA0C;IAC/D,IAAI,wIAAC,UAAA,EAAS,GAAG,KAAK,MAAM,OAAA,CAAQ,GAAG,EAAG,CAAA;IAE1C,MAAM,OAAO,UAAU,OAAO,OAAO,IAAI,IAAA,IAAS,WAAW,IAAI,IAAA,GAAO,KAAA;IAExE,IAAI,SAAS,KAAA,EAAW,CAAA;IAGxB,MAAM,QAAQ,WAAW,OAAO,OAAO,IAAI,KAAA,IAAU,WAAW,IAAI,KAAA,GAAQ,MACtE,KAAK,QAAQ,OAAO,MAAM,OAAA,CAAQ,IAAI,EAAE,IAAI,IAAI,EAAA,GAAK,EAAA,EAErD,aAAiC,CAAA,CAAA;IACvC,KAAA,MAAW,QAAQ,GAAI;QACrB,MAAM,eAAe,gBAAgB,IAAI;QACrC,gBACF,WAAW,IAAA,CAAK,YAAY;IAEhC;IAGA,IAAI,WAAW,MAAA,KAAW,EAAG,CAAA;IAE7B,MAAM,OAAO,UAAU,MAAM,UAAU,IAAI,IAAI,IAAI,KAAA;IAEnD,OAAO;QACL;QACA;QACA,IAAI;QACJ,GAAI,QAAQ;YAAC;QAAA,CAAA;IAAI;AAErB;AAEA,SAAS,gBAAgB,GAAA,EAA4C;IACnE,IAAI,wIAAC,UAAA,EAAS,GAAG,KAAK,MAAM,OAAA,CAAQ,GAAG,EAAG,CAAA;IAE1C,MAAM,QAAQ,WAAW,OAAO,OAAO,IAAI,KAAA,IAAU,WAAW,IAAI,KAAA,GAAQ,KAAA,GACtE,YACJ,eAAe,OAAA,CAAQ,IAAI,SAAA,KAAc,SAAS,IAAI,SAAA,KAAc,MAAA,IAChE,IAAI,SAAA,GACJ,KAAA;IAEN,IAAI,CAAA,CAAA,CAAC,SAAS,CAAC,SAAA,GAEf,OAAO;QAAC;QAAO;IAAA;AACjB;ACvsBO,SAAS,6BACd,IAAA,EACA,QAAA,EACqC;IACrC,OAAO,yLAAA,EAA0B,MAAM,QAAQ;AACjD;ACvBA,MAAM,eAAe,0BAEf,kBAAkB;IAAC;IAAU;IAAU;IAAU,SAAS;CAAA,EAC1D,gBAAgB,iBAMhB,cAAc,CAAC,aASZ,gBAAgB,aAAc,UAAA,CAAW,YAAY,CAAA,GAAiB,iBAGzE,kBAAkB,CAAC,UAAkB,YAAsB;IAC/D,IAAI,CAAC,MAAM,OAAA,CAAQ,OAAO,GACxB,MAAM,IAAI,MACR,CAAA,oBAAA,EAAuB,YAAY,CAAA,4CAAA,EAA+C,cAAc,IAAA,CAC9F,OACD;IAIL,MAAM,mJAAU,UAAA,EAAW,SAAS,aAAa;IAEjD,IAAI,QAAQ,MAAA,GAAS,GACnB,MAAM,IAAI,MACR,CAAA,cAAA,EACE,QAAQ,MAAA,GAAS,IAAI,MAAM,EAC7B,CAAA,6BAAA,EAAgC,QAAQ,CAAA,GAAA,EAAM,QAAQ,IAAA,CACpD,MACD,qBAAA,EAAwB,cAAc,IAAA,CAAK,IAAI,CAAC,EAAA;IAIrD,OAAO;AACT,GAEa,wBAAwB,CAAC,aACpC,gBAAgB,WAAW,IAAA,EAAM,YAAY,UAAU,CAAC,GAE7C,kBAAkB,CAAC,YAAwB,SACtD,sBAAsB,UAAU,EAAE,QAAA,CAAS,MAAM;ACrDnD,IAAA,kBAAe;IACb,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACN;YACE,MAAM;YACN,OAAO;YACP,aAAa;YACb,MAAM;QAAA;QAER;YACE,MAAM;YACN,OAAO;YACP,aACE;YACF,MAAM;QAAA;QAER;YACE,MAAM;YACN,OAAO;YACP,aAAa;YACb,MAAM;QAAA;KACR;AAEJ,GCzBA,YAAe;IACb,MAAM;IACN,OAAO;IACP,MAAM;IACN,WAAW;QACT;YACE,MAAM;YACN,OAAO;YACP,aAAa;QAAA;KACf;IAEF,QAAQ;QACN;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU,CAAA;QAAA;QAEZ;YACE,MAAM;YACN,MAAM;YACN,OAAO;QAAA;QAET;YACE,MAAM;YACN,MAAM;YACN,OAAO;QAAA;QAET;YACE,MAAM;YACN,MAAM;YACN,OAAO;QAAA;QAET;YACE,MAAM;YACN,MAAM;YACN,OAAO;QAAA;QAET;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU,CAAA;YACV,UAAU;QAAA;QAEZ;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU,CAAA;YACV,UAAU;QAAA;QAEZ;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU,CAAA;YACV,UAAU;QAAA;QAEZ;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU,CAAA;YACV,UAAU;QAAA;QAEZ;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU,CAAA;YACV,UAAU;QAAA;QAEZ;YACE,MAAM;YACN,MAAM;YACN,UAAU,CAAA;YACV,QAAQ,CAAA;YACR,UAAU;QAAA;QAEZ;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU,CAAA;YACV,UAAU;QAAA;QAEZ;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU,CAAA;YACV,UAAU;QAAA;QAEZ;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU,CAAA;YACV,UAAU;QAAA;KACZ;IAEF,SAAS;QACP,QAAQ;YACN,OAAO;YACP,MAAM;YACN,UAAU;YACV,MAAM;QAAA;QAER,SAAQ,GAAA,EAA0B;YAChC,OAAO;gBACL,OAAO,IAAI,KAAA,IAAS,IAAI,IAAA,CAAK,KAAA,CAAM,GAAG,EAAE,KAAA,CAAM,CAAA,CAAE,CAAA,CAAE,CAAC,CAAA;gBACnD,UAAU,GAAG,IAAI,QAAQ,CAAA,EAAA,EAAA,CAAM,IAAI,IAAA,GAAO,OAAO,IAAA,EAAM,OAAA,CAAQ,CAAC,CAAC,CAAA,IAAA,CAAA;YAAA;QAErE;IAAA;IAEF,WAAW;QACT;YACE,OAAO;YACP,MAAM;YACN,IAAI;gBAAC;oBAAC,OAAO;oBAAQ,WAAW;gBAAA,CAAO;aAAA;QAAA;KACzC;AAEJ,GC3HA,WAAe;IACb,OAAO;IACP,MAAM;IACN,MAAM;IACN,QAAQ;QACN;YACE,MAAM;YACN,MAAM;YACN,OAAO;QAAA;QAET;YACE,MAAM;YACN,MAAM;YACN,OAAO;QAAA;QAET;YACE,MAAM;YACN,MAAM;YACN,OAAO;QAAA;KACT;AAEJ,GCnBA,aAAe;IACb,MAAM;IACN,OAAO;IACP,MAAM;IACN,WAAW;QACT;YACE,MAAM;YACN,OAAO;YACP,aAAa;QAAA;KACf;IAEF,QAAQ;QACN;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU,CAAA;QAAA;QAEZ;YACE,MAAM;YACN,MAAM;YACN,OAAO;QAAA;QAET;YACE,MAAM;YACN,MAAM;YACN,OAAO;QAAA;QAET;YACE,MAAM;YACN,MAAM;YACN,OAAO;QAAA;QAET;YACE,MAAM;YACN,MAAM;YACN,OAAO;QAAA;QAET;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU,CAAA;YACV,UAAU;QAAA;QAEZ;YACE,MAAM;YACN,MAAM;YACN,UAAU,CAAA;YACV,OAAO;YACP,UAAU;QAAA;QAEZ;YACE,MAAM;YACN,MAAM;YACN,UAAU,CAAA;YACV,OAAO;YACP,UAAU;QAAA;QAEZ;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU,CAAA;YACV,UAAU;QAAA;QAEZ;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU,CAAA;YACV,UAAU;QAAA;QAEZ;YACE,MAAM;YACN,MAAM;YACN,UAAU,CAAA;YACV,QAAQ,CAAA;YACR,UAAU;QAAA;QAEZ;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU,CAAA;YACV,UAAU;QAAA;QAEZ;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU,CAAA;YACV,UAAU;QAAA;QAEZ;YACE,MAAM;YACN,MAAM;YACN,OAAO;QAAA;QAET;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU,CAAA;YACV,UAAU;QAAA;KACZ;IAEF,SAAS;QACP,QAAQ;YACN,IAAI;YACJ,OAAO;YACP,UAAU;YACV,MAAM;QAAA;QAER,SAAQ,GAAA,EAA8B;YACpC,OAAO;gBACL,OAAO,IAAI,KAAA,IAAU,OAAO,IAAI,IAAA,IAAS,YAAY,IAAI,IAAA,CAAK,KAAA,CAAM,GAAG,EAAE,KAAA,CAAM,CAAA,CAAE,CAAA,CAAE,CAAC,CAAA;gBACpF,OAAO;oBAAC,OAAO;wBAAC,MAAM,IAAI,EAAA;oBAAA;gBAAE;gBAC5B,UAAU,GAAG,IAAI,QAAQ,CAAA,EAAA,EAAA,CAAM,OAAO,IAAI,IAAI,IAAI,OAAO,IAAA,EAAM,OAAA,CAAQ,CAAC,CAAC,CAAA,IAAA,CAAA;YAAA;QAE7E;IAAA;IAEF,WAAW;QACT;YACE,OAAO;YACP,MAAM;YACN,IAAI;gBAAC;oBAAC,OAAO;oBAAQ,WAAW;gBAAA,CAAO;aAAA;QAAA;KACzC;AAEJ,GCjIA,YAAe;IACb,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACN;YACE,MAAM;YACN,MAAM;YACN,YAAY,CAACC,QAAqBA,MAAK,QAAA,CAAA;QAAS;QAElD;YACE,MAAM;YACN,MAAM;YACN,YAAY,CAACA,QAAqBA,MAAK,QAAA,CAAA;QAAS;QAElD;YACE,MAAM;YACN,MAAM;YACN,YAAY,CAACA,QAAqBA,MAAK,QAAA,CAAA;QAAS;QAElD;YACE,MAAM;YACN,MAAM;YACN,YAAY,CAACA,QAAqBA,MAAK,QAAA,CAAA;QAAS;KAClD;AAEJ,GC1BA,kBAAe;IACb,MAAM;IACN,MAAM;IACN,OAAO;IACP,QAAQ;QACN;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU,CAAA;YACV,YAAY,CAACA,QAAqBA,MAAK,QAAA,CAAA;QAAS;QAElD;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU,CAAA;YACV,YAAY,CAACA,QAAqBA,MAAK,QAAA,CAAA;QAAS;QAElD;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU,CAAA;YACV,YAAY,CAACA,QAAqBA,MAAK,QAAA,CAAA;QAAS;KAClD;AAEJ,GC3BA,eAAe;IACb,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACN;YACE,MAAM;YACN,MAAM;YACN,YAAY,CAACA,QAAqBA,MAAK,QAAA,CAAA;QAAS;QAElD;YACE,MAAM;YACN,MAAM;YACN,YAAY,CAACA,QAAqBA,MAAK,QAAA,CAAA;QAAS;QAElD;YACE,MAAM;YACN,MAAM;YACN,YAAY,CAACA,QAAqBA,MAAK,QAAA,CAAA;QAAS;QAElD;YACE,MAAM;YACN,MAAM;YACN,YAAY,CAACA,QAAqBA,MAAK,QAAA,CAAA;QAAS;KAClD;AAEJ,GC5BA,gBAAe;IACb,MAAM;IACN,OAAO;IACP,MAAM;IACN,WAAW;QACT;YACE,MAAM;YACN,OAAO;YACP,SAAS;gBACP,aAAa,CAAA;YAAA;QACf;KACF;IAEF,QAAQ;QACN;YACE,MAAM;YACN,MAAM;QAAA;QAER;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU;QAAA;QAEZ;YACE,MAAM;YACN,MAAM;YACN,OAAO;YACP,UAAU;QAAA;QAEZ;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU,CAAA;QAAA;QAEZ;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU,CAAA;QAAA;QAEZ;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU,CAAA;QAAA;QAEZ;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,UAAU,CAAA;QAAA;KACZ;AAEJ,GCvDA,eAAe;IACb,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACN;YAAC,MAAM;YAAa,MAAM;YAA6B,OAAO;QAAA;QAC9D;YAAC,MAAM;YAAgB,MAAM;YAA6B,OAAO;QAAA;QACjE;YAAC,MAAM;YAAe,MAAM;YAA6B,OAAO;QAAA;QAChE;YAAC,MAAM;YAAW,MAAM;YAA6B,OAAO;QAAA;QAC5D;YAAC,MAAM;YAAY,MAAM;YAA6B,OAAO;QAAA;QAC7D;YAAC,MAAM;YAAc,MAAM;YAA6B,OAAO;QAAA;QAC/D;YAAC,MAAM;YAAS,MAAM;YAA6B,OAAO;QAAA;KAAO;AAErE,GCbA,qBAAe;IACb,MAAM;IACN,OAAO;IACP,MAAM;IACN,QAAQ;QACN;YAAC,MAAM;YAAc,MAAM;YAAU,OAAO;YAAc,UAAU,CAAA;QAAA;QACpE;YAAC,MAAM;YAAc,MAAM;YAAU,OAAO;YAAc,UAAU,CAAA;QAAA;QACpE;YAAC,MAAM;YAAc,MAAM;YAAU,OAAO;YAAc,UAAU,CAAA;QAAA;QACpE;YAAC,MAAM;YAAS,MAAM;YAAU,OAAO;YAAU,UAAU,CAAA;QAAA;KAAI;AAEnE,GCRA,SAAe;IACb,OAAO;IACP,MAAM;IACN,MAAM;IACN,QAAQ;QACN;YACE,MAAM;YACN,OAAO;YACP,MAAM;YACN,YAAY,CAACA,QAAqBA,MAAK,QAAA,CAAA;QAAS;QAElD;YAAA,4EAAA;YAAA,+DAAA;YAGE,MAAM;YACN,OAAO;YACP,MAAM;YACN,QAAQ,CAAA;QAAA;KACV;AAEJ;ACVO,MAAM,eAAe;IAC1B;IACAC;IACA;IAAA,kBAAA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACF,ECtBa,WAAW;IACtB,cAAc;IACd,oBAAoB;IACpB,oBAAoB;IACpB,mBAAmB;IACnB,mBAAmB;IACnB,wBAAwB;IACxB,oBAAoB;IACpB,uBAAuB;IACvB,yBAAyB;IACzB,2BAA2B;IAC3B,sCAAsC;IACtC,kCAAkC;IAClC,gBAAgB;IAChB,kBAAkB;IAClB,qBAAqB;IACrB,oCAAoC;IACpC,qCAAqC;IACrC,sBAAsB;IACtB,yBAAyB;IACzB,2BAA2B;IAC3B,oCAAoC;IACpC,6CAA6C;IAC7C,yBAAyB;IACzB,8BAA8B;IAC9B,iCAAiC;IACjC,mCAAmC;IACnC,4BAA4B;IAC5B,uBAAuB;AACzB;AAEA,SAAS,uBACP,QAAA,EACA,OAAA,EACA,MAAA,EACwB;IACxB,IAAI,UAAU,CAAC,OAAO,IAAA,CAAK,QAAQ,EAAE,IAAA,CAAK,CAAC,KAAQ,QAAA,CAAiB,EAAE,CAAA,KAAM,MAAM,GAChF,MAAM,IAAI,MACR,CAAA,yBAAA,EAA4B,MAAM,CAAA,0DAAA,CAAA;IAGtC,OAAO;QACL;QACA;QACA;IAAA;AAEJ;AAEO,MAAM,QAAQ,CAAC,SAAiB,SACrC,uBAAuB,SAAS,SAAS,MAAO,GAErC,UAAU,CAAC,SAAiB,SACvC,uBAAuB,WAAW,SAAS,MAAO;AC1C7C,SAAS,cAAc,KAAA,EAA+D;IAC3F,OAAO,gJAAA,EAA0B,MAAM,GAAA,CAAI,CAAC,OAAS,gBAAgB,IAAI,CAAC,CAAC,EAAE,MAAA,CAC3E,CAAC,OAAS,KAAK,QAAA,CAAS,MAAA,GAAS;AAErC;AAEA,SAAS,sCACP,kBAAA,EACA,aAAa,CAAC,yIAAqB,UAAA,EAAI,MAAM,kBAAkB,CAAA,EAC/D;IACA,OAAO,SAAqB,IAAA,EAAW,UAAA,EAA6C;QAClF,MAAM,cAA2B;eAC5B;YACH;gBAAC,MAAM;gBAAQ,MAAM,KAAK,IAAA;gBAAM,MAAM,KAAK,IAAA;YAAA;SAAI,EAG3C,UAAU,WAAW,IAAI,KAAK,CAAA,CAAA,EAE9B,iBAAuC,MAAM,OAAA,CAAQ,OAAO,IAC9D,QAAQ,GAAA,CAAI,CAAC,eAAe;YAC1B,MAAM,kBAA8C;gBAClD,MAAM;gBACN,MAAM;YAAA,GAEF,aAA0B,CAAC;mBAAG;gBAAa,eAAe;aAAA;YAChE,OAAO,gBAAgB,YAAY,UAAiB;QACtD,CAAC,IACD;YACE;gBACE;oBACE,MAAM;oBACN,UAAU;wBAAC,MAAM,CAAA,oBAAA,EAAuB,kBAAkB,CAAA,iBAAA,CAAmB,CAAC;qBAAA;gBAAA;aAChF;SACF;QAGN,OAAO;YACL;gBACE,MAAM;gBACN,UAAU,KAAK,SAAA,IAAa,CAAA,CAAA;YAAC;qJAE5B,UAAA,EAAQ,cAAc;SAAA;IAE7B;AACF;AAEA,MAAM,SAAS,CAAC,MACd,MAAM,OAAA,CAAQ,GAAG,IAAI,MAAO,OAAO,MAAQ,OAAe,CAAA,CAAA,IAAO;QAAC,GAAG;KAAA,EAEjE,oBAAoB,sCAAsC,QAAQ,GAClE,mBAAmB,sCAAsC,QAAQ,GACjE,kBAAkB,sCAAsC,QAAQ,GAChE,mBAAmB,sCAAsC,IAAI,GAC7D,uBAAuB,sCAAsC,MAAM,CAAC,OACxE,QAAQ,OAAO,OAAO,KAAK,EAAE,IAAI,CAAA,CAAA,GAE7B,6BAA6B,sCAAsC,mBAAmB,GACtF,yBAAyB,sCAAsC,IAAI,GACnE,mBAAmB,CAAC,MAAW,WAAkB;WAClD,2BAA2B,MAAM,QAAQ;WACzC,uBAAuB,MAAM,QAAQ;KAC1C;AAEA,SAAS,mBAAmB,IAAA,EAAW,OAAO,EAAA,EAAwB;IACpE,OAAO;QACL;YACE,MAAM,CAAC;mBAAG;gBAAM;oBAAC,MAAM;oBAAQ,MAAM,KAAK,IAAA;oBAAM,MAAM,KAAK,IAAA;gBAAA,CAAK;aAAA;YAChE,UAAU,KAAK,SAAA,IAAa,CAAA,CAAA;QAAC;KAC/B;AAEJ;AAEA,SAAS,gBAAgB,IAAA,EAA4B,OAAO,EAAA,EAAwB;IAClF,OAAQ,KAAK,IAAA,EAAA;QACX,KAAK;YACH,OAAO,kBAAkB,MAAM,IAAI;QAErC,KAAK;YACH,OAAO,kBAAkB,MAAM,IAAI;QAErC,KAAK;YACH,OAAO,iBAAiB,MAAM,IAAI;QAEpC,KAAK;YACH,OAAO,qBAAqB,MAAM,IAAI;QAExC,KAAK;YACH,OAAO,iBAAiB,MAAM,IAAI;QAEpC,KAAK;YACH,OAAO,iBAAiB,MAAM,IAAI;QAEpC,KAAK;YACH,OAAO,gBAAgB,MAAM,IAAI;QAEnC;YACE,OAAO,mBAAmB,MAAM,IAAI;IAAA;AAG1C;AChHO,SAAS,SAASC,MAAAA,EAAY,WAAW,CAAC,IAAW,CAAA,EAAG;IAC7D,MAAM,QAAQA,OAAM,MAAA,CAAO,CAAC,KAAU,SAAc;QAClD,MAAM,MAAM,SAAS,IAAI;QACzB,OAAK,GAAA,CAAI,GAAG,CAAA,IAAA,CACV,GAAA,CAAI,GAAG,CAAA,GAAI,CAAA,CAAA,GAEb,GAAA,CAAI,GAAG,CAAA,CAAE,IAAA,CAAK,IAAI,GACX;IACT,GAAG,CAAA,CAAE;IAEL,OAAO,OAAO,IAAA,CAAK,KAAK,EACrB,GAAA,CAAI,CAAC,MAAS,KAAA,CAAM,GAAG,CAAA,CAAE,MAAA,GAAS,IAAI,KAAA,CAAM,GAAG,CAAA,GAAI,IAAK,EACxD,MAAA,CAAO,OAAO;AACnB;ACMA,MAAM,eAAwB,CAAC,UAAY,SAUrC,YAAY;IAAC,MAAM;IAAQ,MAAM;AAAA,GAEjC,kBAAkB;IAAC;IAAO;IAAQ,MAAM;CAAA;AAEvC,SAAS,eACd,QAAyB,CAAA,CAAA,EACzBC,aAA6B,CAAA,CAAA,EAC7B,UAAmB,YAAA,EACnB;IACA,MAAM,oBAAoB,aAAA,GAAA,OAAO,MAAA,CAAO,IAAI,GACtC,WAAW,aAAA,GAAA,OAAO,MAAA,CAAO,IAAI,GAE7BC,iBAAgBD,WAAU,GAAA,CAAI,CAAC,UAAY,QAAQ,IAAI,GAEvD,oBAAoB,gBAAgB,MAAA,CAAOC,cAAa,GAExD,YAAY,MAAM,GAAA,CAAI,CAAC,UAAY,WAAW,QAAQ,IAAI,EAAE,MAAA,CAAO,OAAO;IAEhFD,WAAU,OAAA,CAAQ,CAAC,aAAa;QAC9B,iBAAA,CAAkB,SAAS,IAAI,CAAA,GAAI;IACrC,CAAC,GAED,MAAM,OAAA,CAAQ,CAAC,MAAM,MAAM;QAEzB,QAAA,CAAU,QAAQ,KAAK,IAAA,IAAS,CAAA,UAAA,EAAa,CAAC,EAAE,CAAA,GAAI,CAAA;IACtD,CAAC;IAED,SAAS,QAAQ,QAAA,EAAe;QAC9B,OAAO,aAAa,SAChB,YACA,iBAAA,CAAkB,QAAQ,CAAA,IAAK,QAAA,CAAS,QAAQ,CAAA,IAAK;IAC3D;IAEA,MAAM,oJAAiB,UAAA,wIAAK,UAAA,EAAQ,SAAS,SAAS,CAAC,CAAC;IAExD,SAAS,YAAY,QAAA,EAAe;QAClC,OAAO,eAAe,QAAA,CAAS,QAAQ;IACzC;IACA,SAAS,eAAe;QACtB,OAAO,UAAU,MAAA,CAAOC,cAAa;IACvC;IACA,SAAS,WAAW,QAAA,EAAe;QACjC,OAAO,aAAa,UAAU,kBAAkB,QAAA,CAAS,QAAQ;IACnE;IAEA,MAAM,YAAY,CAAC,SAAgB,CAAC,SAAc,QACzC,QAAQ,SAAS;gBACtB,OAAO,UAAU,CAAA,CAAK;gBACtB;gBACA;gBACA;gBACA;gBACA;gBACA;YAAA,CACD;IAGH,OAAAD,WAAU,OAAA,CAAQ,CAAC,gBAAgB;QACjC,OAAO,MAAA,CAAO,iBAAA,CAAkB,YAAY,IAAI,CAAA,EAAG,UAAU,WAAW,CAAC;IAC3E,CAAC,GAED,MAAM,OAAA,CAAQ,CAAC,SAAS,MAAM;QAC5B,OAAO,MAAA,CACL,QAAA,CAAU,WAAW,QAAQ,IAAA,IAAS,CAAA,UAAA,EAAa,CAAC,EAAE,CAAA,EACtD,UAAU,CAAA,CAAI,EAAE,SAAS,CAAC;IAE9B,CAAC,GAEM;QACL,KAAI,QAAA,EAAkB;YACpB,MAAM,MAAM,QAAA,CAAS,QAAQ,CAAA,IAAK,iBAAA,CAAkB,QAAQ,CAAA;YAC5D,IAAI,KACF,OAAO;YAET,MAAM,IAAI,MAAM,CAAA,cAAA,EAAiB,QAAQ,EAAE;QAC7C;QACA,KAAI,QAAA,EAA2B;YAC7B,OAAO,YAAY,YAAY,YAAY;QAC7C;QACA,eAAyB;YACvB,OAAO,OAAO,IAAA,CAAK,QAAQ;QAC7B;QACA,WAAW;YACT,OAAO,IAAA,CAAK,YAAA,CAAA,EAAe,GAAA,CAAI,IAAA,CAAK,GAAG;QACzC;QACA,SAAS;YACP,OAAO,IAAA,CAAK,QAAA,CAAA;QACd;IAAA;AAEJ;ACtHA,MAAM,YAAY;IAChB;QAAC,MAAM;QAAS,UAAU;QAAS,MAAM;IAAA;IACzC;QAAC,MAAM;QAAS,UAAU;QAAU,MAAM;IAAA;IAC1C;QAAC,MAAM;QAAW,UAAU;QAAW,MAAM;IAAA;IAC7C;QAAC,MAAM;QAAY,UAAU;QAAU,MAAM;IAAA;IAC7C;QAAC,MAAM;QAAQ,UAAU;QAAU,MAAM;IAAA;IACzC;QAAC,MAAM;QAAY,UAAU;QAAU,MAAM;IAAA;IAC7C;QAAC,MAAM;QAAS,UAAU;QAAU,MAAM;IAAA;IAC1C;QAAC,MAAM;QAAQ,UAAU;QAAU,MAAM;IAAA;IACzC;QAAC,MAAM;QAAY,UAAU;QAAU,MAAM;IAAA;IAC7C;QAAC,MAAM;QAAS,UAAU;QAAU,MAAM;IAAA;IAC1C;QAAC,MAAM;QAAU,UAAU;QAAU,MAAM;IAAA;IAC3C;QAAC,MAAM;QAAU,UAAU;QAAU,MAAM;IAAA;IAC3C;QAAC,MAAM;QAAa,UAAU;QAAU,MAAM;IAAA;IAC9C;QAAC,MAAM;QAAyB,UAAU;QAAU,MAAM;IAAA;IAC1D;QAAC,MAAM;QAA2B,UAAU;QAAU,MAAM;IAAA;IAC5D;QAAC,MAAM;QAAQ,UAAU;QAAU,MAAM;IAAA;IACzC;QAAC,MAAM;QAAQ,UAAU;QAAU,MAAM;IAAA;IACzC;QAAC,MAAM;QAAU,UAAU;QAAU,MAAM;IAAA;IAC3C;QAAC,MAAM;QAAa,UAAU;QAAU,MAAM;IAAA;IAC9C;QAAC,MAAM;QAAQ,UAAU;QAAU,MAAM;IAAA;IACzC;QAAC,MAAM;QAAO,UAAU;QAAU,MAAM;IAAA;CAC1C,EAEa,gBAAgB,UAAU,GAAA,CAAI,CAAC,IAAM,EAAE,IAAI;ACpBjD,SAAS,qBAAqB,WAAA,EAAwB,OAAA,EAAkB;IAC7E,OAAO,eAAe,aAAa,WAAsB,OAAO;AAClE;ACCA,SAAS,oBAAoB,QAAA,EAAe;IAC1C,OAAO,aAAa,YAAY,aAAa,YAAY,aAAa;AACxE;AAEA,SAAS,aAAa,QAAA,EAAe,IAAA,EAAW;IAC9C,OAAA,CAAQ,OAAO,KAAK,IAAA,IAAS,WAAW,KAAK,IAAA,GAAO,KAAK,IAAA,MAAU;AACrE;AAEA,SAASE,QAAM,CAAA,EAAQ;IACrB,OAAO,CAAA,CAAA,EAAI,CAAC,CAAA,CAAA,CAAA;AACd;AAEA,SAAS,UAAU,GAAA,EAAgB,MAAM,GAAA,EAAK;IAC5C,OAAO,IAAI,MAAA,KAAW,IAAI,KAAK;AACjC;AAEA,SAAS,OAAO,KAAA,EAAgB;IAC9B,OAAI,MAAM,OAAA,CAAQ,KAAK,IACd,CAAA,WAAA,EAAc,MAAM,MAAM,CAAA,QAAA,CAAA,GAE/B,OAAO,SAAU,YAAY,UAAU,OAClC,CAAA,iBAAA,EAAoB,wJAAA,EAAa,OAAO,IAAA,CAAK,KAAK,EAAE,GAAA,CAAIA,OAAK,CAAC,CAAC,EAAA,GAEjEA,QAAM,KAAK;AACpB;AAEA,IAAA,QAAe,CAAC,SAAc,mBAAwB;IAEpD,MAAM,YAAY,MAAM,OAAA,CAAQ,QAAQ,EAAE;IAE1C,IAAI,WAAW;QACb,MAAM,UAAU,QAAQ,EAAA,CAAG,MAAA,CAAO,CAAC,MAAW,KAAU,QAAa;YACnE,IAAI,OAAO,IAAI,IAAA,IAAS,YAAA,kGAAA;YAAA,4EAAA;YAiBpB,IAAI,IAAA,KAAS,IAAI,IAAA,IACjB,cAAc,QAAA,CAAS,IAAI,IAAI,GAE/B,OAAO,KAAK,MAAA,CACV,MACE,CAAA,4EAAA,EAA+E,IAAI,IAAI,CAAA,oEAAA,CAAA,EACvF,SAAS,mCAAA;YAMjB,IAAI,IAAI,IAAA,KAAS,YAAY,IAAI,IAAA,IAAQ,eAAe,OAAA,CAAQ,IAAI,IAAI,GACtE,OAAO,KAAK,MAAA,CACV,QACE,CAAA,6EAAA,EAAgF,IAAI,IAAI,CAAA,6GAAA,CAAA,EACxF,SAAS,kCAAA;YAIf,IAAI,IAAI,IAAA,KAAS,SACf,OAAO,KAAK,MAAA,CACV,MACE,kHACA,SAAS,cAAA;YAKf,IAAI,KACF,OAAO;YAGT,MAAM,MAAM,CAAA,MAAA,EAAS,QAAQ,OAAO,SAAS,OAAO,GAAG,CAAA,6BAAA,CAAA;YACvD,OAAO,KAAK,MAAA,CACV,MACE,CAAA,wDAAA,EAA2D,GAAG,CAAA,EAAA,EAAK,GAAG,EAAA,EACtE,SAAS,gBAAA;QAGf,GAAG,CAAA,CAAE;QAEL,IAAI,QAAQ,MAAA,GAAS,GACnB,OAAO;YACL,GAAG,OAAA;YACH,IAAI,CAAA,CAAA;YACJ,WAAW;QAAA;IAGjB;IAEA,MAAM,WAAW,gJAAA,EAAQ;QACvB,YACI,SAAS,QAAQ,EAAA,EAAI,CAAC,IAAM,GAAG,EAAE,IAAI,CAAA,CAAA,EAAI,EAAE,IAAI,EAAE,EAAE,GAAA,CAAI,CAAC,QACtD,MACE,CAAA,MAAA,EAAS,MAAM,MAAM,CAAA,+CAAA,EAAkD,KAAA,CAAM,CAAC,CAAA,CAAE,IAAI,CAAA,mGAAA,CAAA,EACpF,SAAS,mBAAA,KAGb,MACE,uFACA,SAAS,gBAAA;KAEhB,GACK,KAAK,YAAY,QAAQ,EAAA,GAAK,EAAA,EAG9B,4BAA4B,GAAG,IAAA,CACnC,CAAC,OAAc,KAAK,IAAA,KAAS,YAAY,OAAO,KAAK,IAAA,GAAS;IAE3C,GAAG,IAAA,CAAK,CAAC,SAAgB,OAAO,IAAA,KAAS,OAAO,KACjD,6BAClB,SAAS,IAAA,CACP,MACE,uJACA,SAAS,gBAAA;IAKf,MAAM,CAAC,gBAAgB,WAAW,CAAA,IAAI,iJAAA,EACpC,IACA,CAAC,SACC,oBAAoB,OAAO,IAAI,KAC/B,oBAAoB,eAAe,OAAA,CAAQ,OAAO,IAAI,GAAG,QAAQ,IAG/D,eAAe,eAAe,MAAA,GAAS,KAAK,YAAY,MAAA,GAAS;IAEvE,IAAI,cAAc;QAChB,MAAM,qBAAqB,eAAe,GAAA,CAAI,CAAC,IAAM,EAAE,IAAI,GACrD,kBAAkB,YAAY,GAAA,CAAI,CAAC,IAAM,EAAE,IAAI;QACrD,SAAS,IAAA,CACP,MACE,CAAA,sGAAA,EAAyG,UACvG,oBACD,CAAA,+IAAI,WAAA,EAAa,mBAAmB,GAAA,CAAIA,OAAK,CAAC,CAAC,CAAA,gBAAA,EAAmB,UACjE,iBACD,CAAA,gJAAI,UAAA,EAAa,gBAAgB,GAAA,CAAIA,OAAK,CAAC,CAAC,CAAA,CAAA,CAAA,EAC7C,SAAS,gBAAA;IAGf;IAEA,MAAM,OAAO,SAAS,SAAS;IAC/B,OAAI,CAAC,gBAAgB,MAAM,OAAA,CAAQ,IAAI,KAAA,CACT,eAAe,MAAA,GAAS,IAElD,KAAK,OAAA,CAAQ,CAAC,WAAW;QACvB,MAAM,QAAQ,QAAQ,SAAS;QAI/B,IAAI,CAHe,eAAe,IAAA,CAAK,CAAC,gBAC/B,OAAO,UAAU,eAAe,OAAA,CAAQ,cAAc,IAAI,EAAE,QACpE,GACgB;YACf,MAAM,kKAAoB,UAAA,EACxB,eAAe,GAAA,CAAI,CAAC,IAAM,EAAE,IAAA,IAAQ,EAAE,IAAI,GAC1C;gBAAC,aAAa;YAAA;YAEhB,SAAS,IAAA,CACP,MACE,CAAA,wCAAA,EAA2C,OACzC,OACD,iCAAA,EAAoC,iBAAiB,CAAA,2CAAA,EAA8C,iBAAiB,CAAA,CAAA,CAAA,EACrH,SAAS,gCAAA;QAGf;IACF,CAAC,IAED,KAAK,OAAA,CAAQ,CAAC,WAAW;QACvB,MAAM,iBAAiB,OAAO,KAAA,IAAS;QACpB,YAAY,IAAA,CAAK,CAAC,kBACnC,aAAa,gBAAgB,eAAe,MAG5C,SAAS,IAAA,CACP,MACE,CAAA,wCAAA,EAA2C,OACzC,QACD,wCAAA,gJAA2C,UAAA,EAC1C,YACG,GAAA,CAAI,CAAC,IAAM,EAAE,IAAA,IAAQ,EAAE,IAAI,EAC3B,GAAA,CAAI,CAAC,IAAO,MAAM,WAAW,cAAcA,QAAM,CAAC,CAAE,GACvD;YAAC,aAAa;QAAA,IACf,EACD,SAAS,gCAAA;IAIjB,CAAC,CAAA,GAID,SAAS,SAAS,QAAQ,SAAS,SAAS,WAAW,UACzD,SAAS,IAAA,CACP,QACE,sLAKC;QACL,GAAG,OAAA;QACH,IAAI,GAAG,GAAA,CAAI,eAAe,KAAK;QAC/B,WAAW;IAAA;AAEf;AC9NO,SAAS,aAAa,IAAA,EAAW,QAAA,EAAe,cAAA,EAAqB;IAC1E,IAAI,cAAc,MAChB,OAAO,KAAK,QAAA,KAAa;IAE3B,MAAM,aAAa,eAAe,OAAA,CAAQ,KAAK,IAAI;IACnD,IAAI,CAAC,YACH,MAAM,IAAI,MAAM,CAAA,8BAAA,EAAiC,KAAK,IAAI,CAAA,sBAAA,CAAwB;IAEpF,OAAO,aAAa,YAAY,UAAU,cAAc;AAC1D;ACFA,MAAM,YAAY,CAAC,QAAgB,MAAM,OAAA,CAAQ,KAAK,IAAI,UAAU,OAAO,OACrEA,UAAQ,CAAC,MAAa,CAAA,CAAA,EAAI,GAAG,CAAA,CAAA,CAAA,EAC7B,cAAc;IAClB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACF,EACM,kBAAkB;IAAC;IAAc,aAAa;CAAA,EAC9C,mBAAmB;IAAC;IAAe;IAAS;IAAS;IAAQ,WAAW;CAAA,EACxE,uBAAuB;IAAC;IAAe;IAAS;IAAS;IAAQ,WAAW;CAAA,EAC5E,kBAAkB;IAAC;IAAS;IAAS;IAAQ,WAAW;CAAA,EACxD,8BAA8B;IAClC;IACA;IACA;IACA;IACA;IACA;CACF;AAEA,SAAwB,kBAAkB,OAAA,EAAc,cAAA,EAAqB;IAC3E,MAAM,WAAW,CAAA,CAAA;IACjB,IAAI,SAAS,QAAQ,MAAA,EACjB,QAAQ,QAAQ,KAAA,EAChB,QAAQ,QAAQ,KAAA,EAChB,UAAU,QAAQ,EAAA;IAEtB,MAAM,iBAAiB,OAAO,IAAA,CAAK,OAAO,EAAE,MAAA,CAC1C,CAAC,MAAQ,CAAC,YAAY,QAAA,CAAS,GAAG,KAAK,CAAC,IAAI,UAAA,CAAW,GAAG;IAG5D,OAAI,eAAe,MAAA,GAAS,KAC1B,SAAS,IAAA,CACP,MACE,CAAA,gDAAA,GAAmD,uJAAA,EACjD,eAAe,GAAA,CAAIA,OAAK,IACzB,IAKH,SAAA,CACF,QAAQ,cAAc,QAAQ,KAAA,EAAO,gBAAgB,QAAQ,CAAA,GAG3D,UAAA,CACF,SAAS,eAAe,QAAQ,gBAAgB,QAAQ,CAAA,GAGtD,SAAA,CACF,QAAQ,cAAc,OAAO,gBAAgB,QAAQ,CAAA,GAGnD,WAAA,CACF,UAAU,gBAAgB,SAAS,gBAAgB,QAAQ,CAAA,GAEtD;QACL,sIAAG,UAAA,EAAK,SAAS,cAAc,CAAA;QAC/B;QACA;QACA,MAAM,QAAQ,IAAA,IAAQ,QAAQ,IAAA;QAC9B,IAAI;QACJ,WAAW;IAAA;AAEf;AAEA,SAAS,cAAc,KAAA,EAAY,cAAA,EAAqB,QAAA,EAAe;IACrE,IAAI,aAAa,MAAM,UAAA,EACnB,cAAc,MAAM,WAAA;IAExB,IAAI,CAAC,sJAAA,EAAc,KAAK,GACtB,OAAA,SAAS,IAAA,CAAK,MAAM,CAAA,6CAAA,EAAgD,UAAU,KAAK,CAAC,EAAE,CAAC,GAChF;IAGT,MAAM,qBAAqB,OAAO,IAAA,CAAK,KAAK,EAAE,MAAA,CAC5C,CAAC,MAAQ,CAAC,gBAAgB,QAAA,CAAS,GAAG,KAAK,CAAC,IAAI,UAAA,CAAW,GAAG;IAGhE,OAAI,mBAAmB,MAAA,GAAS,KAC9B,SAAS,IAAA,CACP,MACE,CAAA,gDAAA,gJAAmD,UAAA,EACjD,mBAAmB,GAAA,CAAIA,OAAK,IAC7B,IAKH,cAAc,CAAC,MAAM,OAAA,CAAQ,UAAU,IACzC,SAAS,IAAA,CACP,MAAM,CAAA,uDAAA,EAA0D,UAAU,UAAU,CAAC,EAAE,KAEhF,cAAA,CACT,WACG,MAAA,CAAO,CAAC,MAAa,CAAC,CAAC,IAAI,WAAW,EACtC,OAAA,CAAQ,CAAC,QAAa;QACrB,IAAI,IAAA,GAAO,IAAI,WAAA,CAAY,IAAA,EAC3B,IAAI,SAAA,GAAY,IAAI,WAAA,CAAY,MAAA;IAClC,CAAC,GACH,aAAa,mBAAmB,YAAY,gBAAgB,QAAQ,CAAA,GAGlE,eAAe,CAAC,MAAM,OAAA,CAAQ,WAAW,IAC3C,SAAS,IAAA,CACP,MAAM,CAAA,wDAAA,EAA2D,UAAU,WAAW,CAAC,EAAE,KAElF,eAAA,CACT,cAAc,oBAAoB,aAAa,gBAAgB,QAAQ,CAAA,GAGlE;QAAC,GAAG,KAAA;QAAO;QAAY;IAAA;AAChC;AAEA,SAAS,cAAc,KAAA,EAAY,cAAA,EAAqB,QAAA,EAAe;IACrE,OAAK,MAAM,OAAA,CAAQ,KAAK,IAAA,CAKxB,MAAM,OAAA,CAAQ,CAAC,MAAM,UAAU;QAC7B,IAAI,EAAC,qJAAA,EAAc,IAAI,GAAG;YACxB,SAAS,IAAA,CAAK,MAAM,CAAA,4BAAA,EAA+B,UAAU,IAAI,CAAC,EAAE,CAAC;YACrE;QACF;QAEA,MAAM,OAAO,KAAK,KAAA,IAAS,CAAA,CAAA,EAAI,KAAK,EAAA,EAC9B,iBAAiB,OAAO,IAAA,CAAK,IAAI,EAAE,MAAA,CACvC,CAAC,MAAQ,CAAC,gBAAgB,QAAA,CAAS,GAAG,KAAK,CAAC,IAAI,UAAA,CAAW,GAAG;QAG5D,eAAe,MAAA,GAAS,KAC1B,SAAS,IAAA,CACP,MACE,CAAA,kCAAA,EAAqC,IAAI,CAAA,EAAA,+IAAK,WAAA,EAAa,eAAe,GAAA,CAAIA,OAAK,CAAC,CAAC,EAAA,IAKtF,KAAK,KAAA,GAEC,OAAO,KAAK,KAAA,IAAU,WAC/B,SAAS,IAAA,CACP,MACE,CAAA,WAAA,EAAc,KAAK,CAAA,uDAAA,EAA0D,UAC3E,KAAK,KAAA,GACN,KAGK,KAAK,KAAA,IACf,SAAS,IAAA,CAAK,QAAQ,CAAA,UAAA,EAAa,IAAI,CAAA,wCAAA,CAA0C,CAAC,IAVlF,SAAS,IAAA,CAAK,MAAM,CAAA,MAAA,EAAS,KAAK,CAAA,qCAAA,CAAuC,CAAC;IAY9E,CAAC,GACM,KAAA,IAAA,CArCL,SAAS,IAAA,CAAK,MAAM,CAAA,4CAAA,EAA+C,UAAU,KAAK,CAAC,EAAE,CAAC,GAC/E,QAAA;AAqCX;AAEA,SAAS,eAAe,MAAA,EAAa,cAAA,EAAqB,QAAA,EAAe;IACvE,OAAK,MAAM,OAAA,CAAQ,MAAM,IAAA,CAKzB,OAAO,OAAA,CAAQ,CAAC,OAAO,UAAU;QAC/B,IAAI,6IAAC,UAAA,EAAc,KAAK,GAAG;YACzB,SAAS,IAAA,CAAK,MAAM,CAAA,6BAAA,EAAgC,UAAU,KAAK,CAAC,EAAE,CAAC;YACvE;QACF;QAEA,MAAM,OAAO,MAAM,KAAA,IAAS,CAAA,CAAA,EAAI,KAAK,EAAA,EAC/B,iBAAiB,OAAO,IAAA,CAAK,KAAK,EAAE,MAAA,CACxC,CAAC,MAAQ,CAAC,iBAAiB,QAAA,CAAS,GAAG,KAAK,CAAC,IAAI,UAAA,CAAW,GAAG;QAG7D,eAAe,MAAA,GAAS,KAC1B,SAAS,IAAA,CACP,MACE,CAAA,mCAAA,EAAsC,IAAI,CAAA,EAAA,gJAAK,UAAA,EAAa,eAAe,GAAA,CAAIA,OAAK,CAAC,CAAC,EAAA,IAKvF,MAAM,KAAA,GAEA,OAAO,MAAM,KAAA,IAAU,WAChC,SAAS,IAAA,CACP,MACE,CAAA,OAAA,EAAU,KAAK,CAAA,uDAAA,EAA0D,UACvE,MAAM,KAAA,GACP,KAGK,MAAM,KAAA,IAChB,SAAS,IAAA,CAAK,QAAQ,CAAA,MAAA,EAAS,IAAI,CAAA,wCAAA,CAA0C,CAAC,IAV9E,SAAS,IAAA,CAAK,MAAM,CAAA,OAAA,EAAU,KAAK,CAAA,qCAAA,CAAuC,CAAC,GAYzE,OAAO,MAAM,WAAA,GAAgB,OAAA,CAC/B,SAAS,IAAA,CACP,QACE,+HACA,SAAS,0BAAA,IAIb,MAAM,SAAA,GAAY,MAAM,SAAA,IAAa,MAAM,WAAA,CAAY,MAAA;IAE3D,CAAC,GACM,MAAA,IAAA,CA/CL,SAAS,IAAA,CAAK,MAAM,CAAA,6CAAA,EAAgD,UAAU,MAAM,CAAC,EAAE,CAAC,GACjF,QAAA;AA+CX;AAEA,SAAS,mBAAmB,UAAA,EAAiB,cAAA,EAAqB,QAAA,EAAe;IAC/E,OAAA,WAAW,OAAA,CAAQ,CAAC,WAAgB,UAAe;QACjD,IAAI,6IAAC,UAAA,EAAc,SAAS,GAAG;YAC7B,SAAS,IAAA,CAAK,MAAM,CAAA,kCAAA,EAAqC,UAAU,SAAS,CAAC,EAAE,CAAC;YAChF;QACF;QAEA,MAAM,OAAO,UAAU,KAAA,IAAS,CAAA,CAAA,EAAI,KAAK,EAAA,EACnC,iBAAiB,OAAO,IAAA,CAAK,SAAS,EAAE,MAAA,CAC5C,CAAC,MAAQ,CAAC,qBAAqB,QAAA,CAAS,GAAG,KAAK,CAAC,IAAI,UAAA,CAAW,GAAG;QAGjE,eAAe,MAAA,GAAS,KAC1B,SAAS,IAAA,CACP,MACE,CAAA,uCAAA,EAA0C,IAAI,CAAA,EAAA,gJAAK,UAAA,EACjD,eAAe,GAAA,CAAIA,OAAK,IACzB,IAKF,UAAU,KAAA,GAEJ,OAAO,UAAU,KAAA,IAAU,WACpC,SAAS,IAAA,CACP,MACE,CAAA,WAAA,EAAc,KAAK,CAAA,uDAAA,EAA0D,UAC3E,UAAU,KAAA,GACX,KAGK,UAAU,KAAA,IACpB,SAAS,IAAA,CAAK,QAAQ,CAAA,UAAA,EAAa,IAAI,CAAA,wCAAA,CAA0C,CAAC,IAVlF,SAAS,IAAA,CAAK,MAAM,CAAA,WAAA,EAAc,KAAK,CAAA,qCAAA,CAAuC,CAAC,GAY7E,OAAO,UAAU,WAAA,GAAgB,OAAA,CACnC,SAAS,IAAA,CACP,QACE,CAAA,WAAA,EAAc,IAAI,CAAA,uHAAA,CAAA,EAClB,SAAS,0BAAA,IAIb,UAAU,IAAA,GAAO,UAAU,IAAA,IAAQ,UAAU,WAAA,CAAY,IAAA,EACzD,UAAU,SAAA,GAAY,UAAU,SAAA,IAAa,UAAU,WAAA,CAAY,MAAA;IAEvE,CAAC,GACM;AACT;AAEA,SAAS,oBAAoB,WAAA,EAAkB,cAAA,EAAqB,QAAA,EAAe;IACjF,OAAO,YAAY,GAAA,CAAI,CAAC,eAAoB;QAC1C,IAAI,6IAAC,UAAA,EAAc,UAAU,GAC3B,OAAO;YACL,GAAG,UAAA;YACH,WAAW;gBAAC,MAAM,CAAA,kCAAA,EAAqC,UAAU,UAAU,CAAC,EAAE,CAAC;aAAA;QAAA;QAInF,MAAM,EAAC,SAAA,CAAA,CAAA,GAAa,eAAe,KAAA,CAAM,YAAY,cAAc,GAC7D,aAAa,WAAW,IAAA,IAAQ,eAAe,OAAA,CAAQ,WAAW,IAAI;QAC5E,OAAI,cAAc,CAAC,aAAa,YAAY,UAAU,cAAc,KAClE,UAAU,IAAA,CACR,MACE,CAAA,6BAAA,EAAgC,WAAW,IAAI,CAAA,6CAAA,CAAA,IAKjD,OAAO,WAAW,WAAA,GAAgB,OAAA,CACpC,SAAS,IAAA,CACP,QACE,oIACA,SAAS,0BAAA,IAIb,WAAW,IAAA,GAAO,WAAW,IAAA,IAAQ,WAAW,WAAA,CAAY,IAAA,EACxD,WAAW,WAAA,EAAa,UAAU,CAAC,WAAW,UAAA,EAAY,cAAA,CAC5D,WAAW,UAAA,GAAa,WAAW,UAAA,IAAc,CAAA,GACjD,WAAW,UAAA,CAAW,UAAA,GACpB,WAAW,UAAA,CAAW,UAAA,IAAc,WAAW,WAAA,CAAY,MAAA,CAAA,GAI1D;YAAC,GAAG,UAAA;YAAY;QAAA;IACzB,CAAC;AACH;AAEA,SAAS,gBAAgB,OAAA,EAAc,cAAA,EAAqB,QAAA,EAAe;IACzE,IAAI,CAAC,MAAM,OAAA,CAAQ,OAAO,GAAG;QAC3B,SAAS,IAAA,CAAK,MAAM,CAAA,yCAAA,EAA4C,UAAU,OAAO,CAAC,EAAE,CAAC;QACrF;IACF;IAEA,OAAO,QAAQ,GAAA,CAAI,CAAC,WAAW;QAC7B,MAAM,EAAC,SAAA,CAAA,CAAA,GAAa,eAAe,KAAA,CAAM,QAAQ,cAAc;QAC/D,IAAI,OAAO,IAAA,KAAS,YAAY,OAAO,IAAA,IAAQ,eAAe,OAAA,CAAQ,OAAO,IAAI,GAC/E,OAAO;YACL,GAAG,MAAA;YACH,WAAW;gBACT,QACE,CAAA,6EAAA,EAAgF,OAAO,IAAI,CAAA,6GAAA,CAAA,EAC3F,SAAS,kCAAA;aACX;QACF;QAKJ,IAAI,OAAO;QACX,MAAO,QAAQ,CAAC,KAAK,QAAA,EACnB,OAAO,eAAe,OAAA,CAAQ,KAAK,IAAI;QAEzC,MAAM,qBAAqB,cAAc,MAAA,CAAO,CAAC,IAAM,CAAC,4BAA4B,QAAA,CAAS,CAAC,CAAC;QAC/F,OAAA,uDAAA;QAEG,QAAQ,KAAK,QAAA,KAAa,YAAA,+EAAA;QAE3B,mBAAmB,IAAA,CAAK,CAAC,WAAa,aAAa,OAAO,IAAI,IAEvD;YACL,GAAG,MAAA;YACH,WAAW;gBACT,MACE,CAAA,sGAAA,EAAyG,4BAA4B,IAAA,CACnI,QACD,8FAAA,CAAA,EACD,SAAS,mCAAA;aACX;QACF,IAGG;YAAC,GAAG,MAAA;YAAQ;QAAA;IACrB,CAAC;AACH;AChWO,SAAS,4BACd,OAAA,EACA,cAAA,EAC0B;IAC1B,IAAI,CAAA,CAAE,YAAY,OAAA,GAChB,OAAO,CAAA,CAAA;IAGT,IAAI,OAAO;IACX,MAAO,QAAQ,CAAC,KAAK,QAAA,EACnB,OAAO,eAAe,OAAA,CAAQ,KAAK,IAAI;IAGzC,OAAI,QAAQ,KAAK,QAAA,KAAa,WACrB;QAAC,MAAM,gEAAgE,CAAC;KAAA,GAG1E,CAAA,CAAA;AACT;AClBA,MAAM,QAAQ,CAAC,MAAa,CAAA,CAAA,EAAI,GAAG,CAAA,CAAA,CAAA;AAE5B,SAAS,iBAAiB,QAAA,EAAkB,cAAA,EAAqB;IACtE,MAAM,oBAAoB,eAAe,YAAA,CAAA;IAEzC,IAAI,CAAC,UACH,OAAO;QAAC,MAAM,2BAA2B,SAAS,iBAAiB,CAAC;KAAA;IAGtE,IAAI,OAAO,YAAa,UACtB,OAAO;QACL,MACE,6DACA,SAAS,iBAAA;KACX;IAMJ,IAAI,CAFY,kBAAkB,QAAA,CAAS,QAAQ,GAErC;QACZ,MAAM,cAAc,kBACjB,GAAA,CAAI,CAAC,mBACG;mJAAC,UAAA,EAAM,UAAU,gBAAgB;gBAAG,gBAAgB;aAC5D,EACA,MAAA,CAAO,CAAC,CAAC,QAAQ,CAAA,GAAW,WAAW,CAAC,EACxC,GAAA,CAAI,CAAC,CAAC,GAAG,IAAI,CAAA,GAAW,IAAI,GAEzB,aACJ,YAAY,MAAA,GAAS,IACjB,CAAA,cAAA,GAAiBC,uJAAAA,EAAS,YAAY,GAAA,CAAI,KAAK,GAAG;YAAC,aAAa;QAAA,CAAK,CAAC,CAAA,CAAA,CAAA,GACtE;QAEN,OAAO;YAAC,MAAM,CAAA,cAAA,EAAiB,QAAQ,CAAA,CAAA,EAAI,UAAU,EAAE,CAAC;SAAA;IAC1D;IACA,OAAO,CAAA,CAAA;AACT;ACtCO,SAAS,6BAA6B,IAAA,EAAqC;IAChF,MAAM,WAAW,CAAA,CAAA;IAEjB,OAAI,MAAM,kBACR,SAAS,IAAA,CACP,QAAQ,8EAA8E,IAItF,MAAM,SAAS,aACjB,SAAS,IAAA,CACP,QAAQ,mFAAmF,IAI3F,MAAM,iBACR,SAAS,IAAA,CACP,QAAQ,4EAA4E,IAIpF,MAAM,SAAS,aACjB,SAAS,IAAA,CACP,QAAQ,8EAA8E,IAItF,MAAM,SAAS,iBACjB,SAAS,IAAA,CACP,QACE,mJAKC;AACT;ACnCA,IAAA,SAAe,CAAC,SAAc,iBAAA,CACrB;QACL,GAAG,OAAA;QACH,WAAW;eACN,iBAAiB,QAAQ,IAAA,EAAM,cAAc;eAC7C,4BAA4B,SAAS,cAAc;eACnD,6BAA6B,OAAO;SAAA,CACvC,MAAA,CAAO,OAAO;IAClB,CAAA;ACNF,SAASC,kBAAgB,OAAA,EAAc;IACrC,OAAI,MAAM,OAAA,CAAQ,QAAQ,EAAE,IACnB,QAAQ,EAAA,GAEV,QAAQ,EAAA,GAAK;QAAC,QAAQ,EAAE;KAAA,GAAI,QAAQ,EAAA;AAC7C;AAEA,MAAM,gBAAgB;AACf,SAAS,mBAAmB,IAAA,EAA6B;IAE9D,OADgB,KAAK,MAAA,IAAU,KAAK,KAAK,WAAA,CAAA,MAAkB,QAAQ,cAAc,IAAA,CAAK,IAAI,KAGxF,CAAA,sBAAA,EAAyB,IAAI,CAAA,wMAAA,CAAA;AAEjC;AAEA,IAAA,wBAAe,CAAC,SAAc,mBAAwB;IACpD,MAAM,YAAY,MAAM,OAAA,CAAQ,QAAQ,EAAE,MAAK,qJAAA,EAAc,QAAQ,EAAE,GACjE,eAAeA,kBAAgB,OAAO,GAEtC,iJAAW,UAAA,EAAQ;QACvB,YACI,SAAS,cAAc,CAAC,IAAM,GAAG,EAAE,IAAI,CAAA,CAAA,EAAI,EAAE,IAAI,EAAE,EAAE,GAAA,CAAI,CAAC,QACxD,MACE,CAAA,MAAA,EAAS,MAAM,MAAM,CAAA,+CAAA,EAAkD,KAAA,CAAM,CAAC,CAAA,CAAE,IAAI,CAAA,uGAAA,CAAA,EACpF,SAAS,+BAAA,KAGb,MACE,mJACA,SAAS,+BAAA;KAEhB;IAiCD,IA/BI,aAAa,aAAa,MAAA,KAAW,KACvC,SAAS,IAAA,CACP,MACE,gHACA,SAAS,+BAAA,IAKf,aAAa,OAAA,CAAQ,CAAC,qBAA0B,UAAe;QACxD,oBAAoB,IAAA,IACvB,SAAS,IAAA,CACP,MACE,CAAA,6BAAA,EAAgC,KAAK,CAAA,8EAAA,CAAA,EACrC,SAAS,+BAAA,gJAKV,UAAA,EAAc,oBAAoB,OAAO,KAC5C,SAAS,IAAA,CACP,MACE,CAAA,yDAAA,EACE,oBAAoB,IAAA,IAAQ,gBAC9B,CAAA,CAAA,CAAA,EACA,SAAS,+BAAA;IAIjB,CAAC,GAEG,OAAO,QAAQ,OAAA,IAAY,UAAU;QACvC,MAAM,oBAAoB,mBAAmB,QAAQ,OAAO;QACxD,sBAAsB,CAAA,KACxB,SAAS,IAAA,CAAK,MAAM,mBAAmB,SAAS,+BAA+B,CAAC;IAEpF,OACE,SAAS,IAAA,CACP,MACE,sDACA,SAAS,+BAAA;IAKf,OAAI,QAAQ,SAAA,IAAa,OAAO,QAAQ,SAAA,IAAc,cACpD,SAAS,IAAA,CACP,MACE,wIACA,SAAS,+BAAA,IAKf,SAAS,IAAA,CAAK,GAAGC,kBAAgB,OAAO,CAAC,GAElC;QACL,GAAG,OAAA;QACH,WAAW;IAAA;AAEf;AAEA,SAASA,kBAAgB,OAAA,EAAwC;IAC/D,MAAM,EAAC,OAAA,CAAA,CAAA,GAAW,SACZ,WAAW,CAAA,CAAA;IAajB,OAXA,SAAS,IAAA,IACJ;QAAC;QAAU,cAAc;KAAA,CACzB,MAAA,CAAO,CAAC,MAAQ,OAAO,OAAO,EAC9B,GAAA,CAAI,CAAC,MACJ,MACE,CAAA,EAAA,EAAK,GAAG,CAAA,0EAAA,EAA6E,GAAG,CAAA,GAAA,CAAA,EACxF,SAAS,kCAAA,KAKZ,sJAIA,UAAA,EAAc,OAAO,IAStB,OAAO,QAAQ,MAAA,IAAW,cAAc,OAAO,QAAQ,YAAA,GAAiB,MACnE,SAAS,MAAA,CACd,MACE,0JACA,SAAS,2CAAA,KAKX,OAAO,QAAQ,MAAA,IAAW,cAAe,CAAC,QAAQ,MAAA,IAAU,CAAC,QAAQ,YAAA,GAChE,WAGL,OAAO,QAAQ,MAAA,IAAW,WACrB,SAAS,MAAA,CACd,MAAM,CAAA,yCAAA,EAA4C,OAAO,QAAQ,MAAM,EAAE,KAIzE,OAAO,QAAQ,YAAA,GAAiB,OAAe,CAAC,sJAAA,EAAc,QAAQ,YAAY,IAC7E,SAAS,MAAA,CAAO,MAAM,2CAA6C,CAAC,IAGzE,QAAQ,YAAA,GACH,SAAS,MAAA,CACd,OAAO,IAAA,CAAK,QAAQ,YAAY,EAC7B,MAAA,CAAO,CAAC,MAAQ,IAAI,UAAA,CAAW,IAAI,KAAK,IAAI,UAAA,CAAW,GAAG,CAAC,EAC3D,GAAA,CAAI,CAAC,MAAQ,MAAM,CAAA,0DAAA,EAA6D,GAAG,CAAA,EAAA,CAAI,CAAC,KAIxF,WAvCE,SAAS,MAAA,CACd,MACE,wDACA,SAAS,yBAAA,KAPN;AA4CX;AClKA,MAAM,eAAe;AAEd,SAAS,gBAAgB,KAAA,EAAY;IAG1C,OAFa,OAAO,SAGT,cACR,OAAO,OAAO,YAAa,YAAY,aAAa,IAAA,CAAK,OAAO,OAAO,QAAQ,CAAC;AAErF;ACJO,SAAS,kBAAkB,OAAA,EAAwC;IACxE,MAAM,aAAa,gBAAgB,UAAU,QAAQ,UAAA,GAAa,CAAA;IAClE,IAAI,CAAC,YACH,OAAO,CAAA,CAAA;IAGT,MAAM,WAAqC,CAAA,CAAA;IAE3C,OAAI,WAAW,KAAA,IAAS,CAAC,gBAAgB,WAAW,KAAK,KACvD,SAAS,IAAA,CACP,QACE,CAAA,yHAAA,iJAA4H,UAAA,EAC1H,WAAW,KAAA,EACZ,wHAAA,CAAA,IAKH,WAAW,KAAA,IAAS,CAAC,gBAAgB,WAAW,KAAK,KACvD,SAAS,IAAA,CACP,QACE,CAAA,yHAAA,iJAA4H,UAAA,EAC1H,WAAW,KAAA,EACZ,wHAAA,CAAA,IAKH,WAAW,IAAA,IAAQ,CAAC,gBAAgB,WAAW,IAAI,KACrD,SAAS,IAAA,CACP,QACE,CAAA,wHAAA,gJAA2H,WAAA,EACzH,WAAW,IAAA,EACZ,uHAAA,CAAA,IAKH,WAAW,OAAA,IAAW,CAAC,gBAAgB,WAAW,OAAO,KAC3D,SAAS,IAAA,CACP,QACE,CAAA,2HAAA,EAA8H,yJAAA,EAC5H,WAAW,OAAA,EACZ,0HAAA,CAAA,IAKA;AACT;AChDA,MAAM,iBAAiB,4BACjB,wBAAwB;AAa9B,SAAS,kBAAkB,IAAA,EAAuB;IAChD,OAAI,OAAO,QAAS,WACX;QACL,MACE,CAAA,kCAAA,iJAAqC,UAAA,EAAQ,IAAI,CAAC,CAAA,CAAA,CAAA,EAClD,SAAS,yBAAA;KACX,GAGA,KAAK,UAAA,CAAW,GAAG,IACd;QACL,MACE,CAAA,oBAAA,EAAuB,IAAI,CAAA,oFAAA,CAAA,EAC3B,SAAS,yBAAA;KACX,GAIC,eAAe,IAAA,CAAK,IAAI,IAUxB,sBAAsB,IAAA,CAAK,IAAI,IAS7B,EAAA,GARE;QACL,QACE;QAGF,SAAS,yBAAA;KAAA,GAfJ;QACL,MACE,CAAA,qBAAA,EAAwB,IAAI,CAAA,6IAAA,EAAgJ,OAC1K,gBACD,EAAA,CAAA,EACD,SAAS,yBAAA;KACX;AAaN;AAEO,SAAS,cAAc,KAAA,EAAY,eAAA,EAAsB;IAC9D,IAAI,CAAC,sJAAA,EAAc,KAAK,GACtB,OAAO;QACL,MACE,CAAA,+DAAA,iJAAkE,UAAA,EAAQ,KAAK,CAAC,EAAA,EAChF,SAAS,oCAAA;KACX;IAIJ,MAAM,WAAW,CAAA,CAAA;IACjB,OAAA,SAAS,IAAA,IACH,UAAU,QACV,kBAAkB,MAAM,IAAI,IAC5B;QAAC,MAAM,sBAAsB,SAAS,yBAAyB,CAAC;KAAA,GAEtE,SAAS,IAAA,CAAK,GAAG,kBAAkB,KAAK,CAAC,GAClC;AACT;AAEA,SAAS,mBAAmBN,MAAAA,EAAiD;IAC3E,MAAM,QAAwC,CAAA;IAC9C,OAAAA,OAAM,OAAA,CAAQ,CAAC,UAAU;QAClB,KAAA,CAAM,MAAM,IAAI,CAAA,IAAA,CACnB,KAAA,CAAM,MAAM,IAAI,CAAA,GAAI,CAAA,CAAA,GAEtB,KAAA,CAAM,MAAM,IAAI,CAAA,CAAE,IAAA,CAAK,KAAK;IAC9B,CAAC,GACM,OAAO,IAAA,CAAK,KAAK,EACrB,GAAA,CAAI,CAAC,YAAe,KAAA,CAAM,SAAS,CAAA,CAAE,MAAA,GAAS,IAAI,KAAA,CAAM,SAAS,CAAA,GAAI,IAAK,EAC1E,MAAA,CAAO,OAAO;AACnB;AAEO,SAAS,eAAe,MAAA,EAAa,UAAU;IAAC,YAAY,CAAA;AAAA,CAAA,EAAQ;IACzE,MAAM,WAAW,CAAA,CAAA;IAEjB,IAAI,CADkB,MAAM,OAAA,CAAQ,MAAM,GAExC,OAAO;QACL,MACE,CAAA,+DAAA,EAAkE,OAAO,MAAM,CAAA,CAAA,CAAA,EAC/E,SAAS,qBAAA;KACX;IAIJ,MAAM,kBAAkB,OAAO,MAAA,CAAO,CAAC,QAAU,OAAO,MAAM,IAAA,IAAS,QAAQ;IAE/E,mBAAmB,eAAe,EAAE,OAAA,CAAQ,CAAC,UAAU;QACrD,SAAS,IAAA,CACP,MACE,CAAA,MAAA,EAAS,MAAO,MAAM,CAAA,mBAAA,EAAsB,KAAA,CAAO,CAAC,CAAA,CAAE,IAAI,CAAA,WAAA,CAAA,EAC1D,SAAS,uBAAA;IAGf,CAAC,GAEG,OAAO,MAAA,KAAW,KAAK,CAAC,QAAQ,UAAA,IAClC,SAAS,IAAA,CAAK,MAAM,yCAAyC,SAAS,qBAAqB,CAAC;IAG9F,MAAM,wBAAwB,OAC3B,MAAA,CAAO,CAAC,QAAU,MAAM,IAAA,KAAS,OAAO,EACxC,GAAA,CAAI,CAAC,QAAU,CAAA,CAAA,EAAI,MAAM,IAAI,CAAA,CAAA,CAAG;IAEnC,IAAI,sBAAsB,MAAA,GAAS,GAAG;QACpC,MAAM,YAAY,sBAAsB,IAAA,CAAK,IAAI;QACjD,SAAS,IAAA,CACP,MACE,CAAA,kCAAA,EAAqC,SAAS,CAAA,qDAAA,CAAA,EAC9C,SAAS,qBAAA;IAGf;IAEA,OAAO;AACT;AAEO,SAAS,gBAAgB,OAAA,EAAwB;IACtD,WAAK,kJAAA,EAAc,OAAO,IAItB,OAAO,QAAQ,OAAA,GAAY,OAAe,OAAO,QAAQ,OAAA,IAAY,aAChE;QACL,MACE,CAAA,gEAAA,EAAmE,OAAO,QAAQ,OAAO,CAAA,CAAA,CAAA;KAC3F,GAIC,QAAQ,MAAA,+IAIR,UAAA,EAAc,QAAQ,MAAM,IAQ1B,OAAO,IAAA,CAAK,QAAQ,MAAM,EAAE,MAAA,CAAO,CAAC,MAAW,MAC7C,OAAO,QAAQ,MAAA,CAAQ,GAAG,CAAA,IAAM,WACnC,OACA,KAAK,MAAA,CACH,MACE,CAAA,SAAA,EAAY,GAAG,CAAA,qDAAA,EAAwD,OAAO,QAC3E,MAAA,CAAQ,GAAG,CAAC,CAAA,CAAA,CAAA,IAGtB,CAAA,CAAE,IAhBI;QACL,MACE,CAAA,8DAAA,EAAiE,OAAO,QAAQ,OAAO,CAAA,CAAA,CAAA;KACzF,GAPK,CAAA,CAAA,GAZA;QAAC,MAAM,CAAA,uDAAA,EAA0D,OAAO,OAAO,CAAA,CAAA,CAAG,CAAC;KAAA;AAiC9F;AAEA,IAAA,SAAe,CAAC,SAAc,mBAAwB;IACpD,IAAI,WAAW,eAAe,QAAQ,MAAM,GAExC,UAAU,QAAQ,OAAA;IACtB,IAAI,SAAS;QACX,MAAM,gBAAgB,gBAAgB,QAAQ,OAAO;QACrD,WAAW,SAAS,MAAA,CAAO,aAAa,GACxC,UAAU,cAAc,IAAA,CAAK,CAAC,MAAa,IAAI,QAAA,KAAa,OAAO,IAAI,CAAA,IAAK;IAC9E;IAEA,OACE,QAAQ,IAAA,KAAS,cACjB,QAAQ,IAAA,KAAS,YACjB,OAAO,QAAQ,YAAA,GAAiB,OAEhC,SAAS,IAAA,CACP,MAAM,sFAAsF,IAIzF;QACL,GAAG,OAAA;QACH;QACA,QAAA,CAAS,MAAM,OAAA,CAAQ,QAAQ,MAAM,IAAI,QAAQ,MAAA,GAAS,CAAA,CAAA,EAAI,GAAA,CAAI,CAAC,OAAY,UAAe;YAC5F,MAAM,EAAC,IAAA,EAAM,GAAG,aAAA,CAAA,GAAgB,OAC1B,EAAC,SAAA,EAAW,GAAG,UAAA,CAAA,GAAa,eAAe,KAAA,CAAM,cAAc,KAAK;YAC1E,OAAO;gBACL;gBACA,GAAG,SAAA;gBACH,WAAW,cAAc,KAAqB,EAAE,MAAA,CAAO,aAAa,CAAA,CAAE;YAAA;QAE1E,CAAC;QACD,WAAW;IAAA;AAEf,GC3MA,kBAAe,CAAC,gBAAqB,mBAAwB;IAC3D,MAAM,UAAU,OAAO,gBAAgB,cAAc,GAC/C,EAAC,YAAA,EAAc,aAAA,EAAA,GAAiB;IAGtC,OADwB,OAAO,eAAiB,OACzB,6IAAC,UAAA,EAAc,YAAY,KAAK,OAAO,gBAAiB,cAC7E,QAAQ,SAAA,CAAU,IAAA,CAChB,MAAM,yEAAyE,IAI/E,OAAO,gBAAkB,OAC3B,QAAQ,SAAA,CAAU,IAAA,CAAK,MAAM,+DAA+D,CAAC,GAGxF;AACT,GClBA,OAAe,CAAC,SAAc,mBAAwB;IACpD,MAAM,WAAW,CAAA,CAAA,EACX,SAAS,QAAQ,MAAA;IAEnB,UACF,SAAS,IAAA,CAAK,GAAG,eAAe,QAAQ;QAAC,YAAY,CAAA;IAAA,CAAK,CAAC;IAG7D,MAAM,oBAAoB,MAAM,OAAA,CAAQ,MAAM,IAC1C,QAAQ,OAAO,CAAC,QAAU,MAAM,IAAA,KAAS,OAAO,IAChD,CAAA,CAAA;IAEJ,OACE,QAAQ,OAAA,IACR,OAAO,QAAQ,OAAA,CAAQ,QAAA,GAAa,OACpC,CAAC,MAAM,OAAA,CAAQ,QAAQ,OAAA,CAAQ,QAAQ,IAEvC,SAAS,IAAA,CACP,MACE,wEACA,SAAS,4BAAA,KAGJ,kBAAkB,MAAA,GAAS,KACpC,SAAS,IAAA,CAAK,MAAM,6DAA6D,CAAC,GAG7E;QACL,GAAG,OAAA;QACH,QAAA,CAAS,MAAM,OAAA,CAAQ,MAAM,IAAI,SAAS,CAAA,CAAA,EAAI,GAAA,CAAI,CAAC,OAAO,UAAU;YAClE,MAAM,EAAC,IAAA,EAAM,GAAG,aAAA,CAAA,GAAgB,OAC1B,EAAC,SAAA,EAAW,GAAG,UAAA,CAAA,GAAa,eAAe,KAAA,CAAM,cAAc,KAAK;YAC1E,OAAO;gBACL;gBACA,GAAG,SAAA;gBACH,WAAW,cAAc,KAAqB,EAAE,MAAA,CAAO,aAAa,CAAA,CAAE;YAAA;QAE1E,CAAC;QACD,WAAW;IAAA;AAEf;ACrCA,SAASK,kBAAgB,OAAA,EAAc;IACrC,OAAI,MAAM,OAAA,CAAQ,QAAQ,EAAE,IACnB,QAAQ,EAAA,GAEV,QAAQ,EAAA,GAAK;QAAC,QAAQ,EAAE;KAAA,GAAI,CAAA,CAAA;AACrC;AAEO,SAAS,oBAAoB,YAAA,EAAqC;IACvE,OAAK,eAGD,gBAAgB,mBAAmB,gBAAgB,YAC9C,kEAEF,CAAA,IALE;AAMX;AAEO,SAAS,kBAAkB,YAAA,EAAsB,UAAA,EAAmC;IACzF,OAAK,aAGD,iBAAiB,YACL,WAAW,KAAA,CAAM,GAAG,EACxB,MAAA,KAAW,IACZ,4FAEF,CAAA,IAEL,iBAAiB,kBACZ,CAAA,IAEF,CAAA,+CAAA,EAAkD,YAAY,EAAA,GAZ5D;AAaX;AAEA,IAAA,0BAAe,CAAC,SAAc,mBAAwB;IACpD,MAAM,YAAY,MAAM,OAAA,CAAQ,QAAQ,EAAE,MAAK,qJAAA,EAAc,QAAQ,EAAE,GACjE,eAAeA,kBAAgB,OAAO,GAEtC,iJAAW,UAAA,EAAQ;QACvB,YACI,SAAS,cAAc,CAAC,IAAM,GAAG,EAAE,IAAI,CAAA,CAAA,EAAI,EAAE,IAAI,EAAE,EAAE,GAAA,CAAI,CAAC,QACxD,MACE,CAAA,MAAA,EAAS,MAAM,MAAM,CAAA,+CAAA,EAAkD,KAAA,CAAM,CAAC,CAAA,CAAE,IAAI,CAAA,uGAAA,CAAA,EACpF,SAAS,iCAAA,KAGb,MACE,qJACA,SAAS,iCAAA;KAEhB;IAiCD,IA/BI,aAAa,aAAa,MAAA,KAAW,KACvC,SAAS,IAAA,CACP,MACE,kHACA,SAAS,iCAAA,IAKf,aAAa,OAAA,CAAQ,CAAC,qBAA0B,UAAe;QACxD,oBAAoB,IAAA,IACvB,SAAS,IAAA,CACP,MACE,CAAA,6BAAA,EAAgC,KAAK,CAAA,8EAAA,CAAA,EACrC,SAAS,iCAAA,IAKV,sJAAA,EAAc,oBAAoB,OAAO,KAC5C,SAAS,IAAA,CACP,MACE,CAAA,yDAAA,EACE,oBAAoB,IAAA,IAAQ,gBAC9B,CAAA,CAAA,CAAA,EACA,SAAS,iCAAA;IAIjB,CAAC,GAEG,OAAO,QAAQ,YAAA,IAAiB,UAAU;QAC5C,MAAM,aAAa,oBAAoB,QAAQ,YAAY;QACvD,eAAe,CAAA,KACjB,SAAS,IAAA,CAAK,MAAM,YAAY,SAAS,iCAAiC,CAAC;IAE/E,OACE,SAAS,IAAA,CACP,MACE,6DACA,SAAS,iCAAA;IAKf,IAAI,OAAO,QAAQ,UAAA,IAAe,UAAU;QAC1C,MAAM,oBAAoB,kBAAkB,QAAQ,YAAA,EAAc,QAAQ,UAAU;QAChF,sBAAsB,CAAA,KACxB,SAAS,IAAA,CAAK,MAAM,mBAAmB,SAAS,iCAAiC,CAAC;IAEtF,OACE,SAAS,IAAA,CACP,MACE,2DACA,SAAS,iCAAA;IAKf,OACE,QAAQ,SAAA,IACR,OAAO,QAAQ,SAAA,IAAc,cAC7B,OAAO,QAAQ,SAAA,IAAc,YAE7B,SAAS,IAAA,CACP,MACE,sMACA,SAAS,iCAAA,IAKf,SAAS,IAAA,CAAK,GAAGC,kBAAgB,OAAO,CAAC,GAElC;QACL,GAAG,OAAA;QACH,WAAW;IAAA;AAEf;AAEA,SAASA,kBAAgB,OAAA,EAAwC;IAC/D,MAAM,EAAC,OAAA,CAAA,CAAA,GAAW,SACZ,WAAW,CAAA,CAAA;IAajB,OAXA,SAAS,IAAA,IACJ;QAAC;QAAU,cAAc;KAAA,CACzB,MAAA,CAAO,CAAC,MAAQ,OAAO,OAAO,EAC9B,GAAA,CAAI,CAAC,MACJ,MACE,CAAA,EAAA,EAAK,GAAG,CAAA,0EAAA,EAA6E,GAAG,CAAA,GAAA,CAAA,EACxF,SAAS,kCAAA,KAKZ,sJAIA,UAAA,EAAc,OAAO,IAStB,OAAO,QAAQ,MAAA,IAAW,cAAc,OAAO,QAAQ,YAAA,GAAiB,MACnE,SAAS,MAAA,CACd,MACE,0JACA,SAAS,2CAAA,KAKX,OAAO,QAAQ,MAAA,IAAW,cAAe,CAAC,QAAQ,MAAA,IAAU,CAAC,QAAQ,YAAA,GAChE,WAGL,OAAO,QAAQ,MAAA,IAAW,WACrB,SAAS,MAAA,CACd,MAAM,CAAA,yCAAA,EAA4C,OAAO,QAAQ,MAAM,EAAE,KAIzE,OAAO,QAAQ,YAAA,GAAiB,OAAe,CAAC,sJAAA,EAAc,QAAQ,YAAY,IAC7E,SAAS,MAAA,CAAO,MAAM,2CAA6C,CAAC,IAGzE,QAAQ,YAAA,GACH,SAAS,MAAA,CACd,OAAO,IAAA,CAAK,QAAQ,YAAY,EAC7B,MAAA,CAAO,CAAC,MAAQ,IAAI,UAAA,CAAW,IAAI,KAAK,IAAI,UAAA,CAAW,GAAG,CAAC,EAC3D,GAAA,CAAI,CAAC,MAAQ,MAAM,CAAA,0DAAA,EAA6D,GAAG,CAAA,EAAA,CAAI,CAAC,KAIxF,WAvCE,SAAS,MAAA,CACd,MACE,wDACA,SAAS,yBAAA,KAPN;AA4CX;ACnMA,MAAM,WAAW;IAAC;IAAc;IAAY,UAAU;CAAA;AAEtD,IAAA,QAAe,CAAC,SAAc,mBAAwB;IACpD,MAAM,WAAW,CAAA,CAAA,EACX,SAAS,QAAQ,MAAA;IAEnB,UACF,SAAS,IAAA,CAAK,GAAG,eAAe,QAAQ;QAAC,YAAY,CAAA;IAAA,CAAK,CAAC;IAG7D,IAAI,UAAU,QAAQ,OAAA;IACtB,MAAM,WAAW,SAAS,UACpB,kBAAkB,MAAM,OAAA,CAAQ,QAAQ,IAC1C,SAAS,MAAA,CAAO,CAAC,OAAS,SAAS,QAAA,CAAS,IAAI,CAAC,IACjD,EAAA,EAEE,oBAAoB;QAAC;QAAS;QAAW,MAAM;KAAA,EAE/C,wBAAwB,MAAM,OAAA,CAAQ,MAAM,IAC9C,QAAQ,OAAO,CAAC,QAAU,kBAAkB,QAAA,CAAS,MAAM,IAAI,CAAC,IAChE,CAAA,CAAA;IAEJ,OAAI,OAAO,WAAa,OAAe,CAAC,MAAM,OAAA,CAAQ,QAAQ,IAC5D,SAAS,IAAA,CACP,MACE,yEACA,SAAS,4BAAA,KAGJ,gBAAgB,MAAA,GAAS,IAAA,CAClC,SAAS,IAAA,CACP,QACE,CAAA,qFAAA,EAAwF,gBAAgB,IAAA,CACtG,OACD,IAGL,UAAU;QAAC,GAAG,OAAA;QAAS,UAAU,SAAU,MAAA,CAAO,CAAC,OAAS,CAAC,SAAS,QAAA,CAAS,IAAI,CAAC;IAAA,CAAA,IAC3E,sBAAsB,MAAA,GAAS,KACxC,SAAS,IAAA,CACP,MACE,CAAA,YAAA,EAAe,kBAAkB,IAAA,CAC/B,QACD,8CAAA,CAAA,IAKA;QACL,GAAG,OAAA;QACH;QACA,QAAA,CAAS,MAAM,OAAA,CAAQ,MAAM,IAAI,SAAS,CAAA,CAAA,EAAI,GAAA,CAAI,CAAC,OAAO,UAAU;YAClE,MAAM,EAAC,IAAA,EAAM,GAAG,aAAA,CAAA,GAAgB,OAC1B,EAAC,SAAA,EAAW,GAAG,UAAA,CAAA,GAAa,eAAe,KAAA,CAAM,cAAc,KAAK;YAC1E,OAAO;gBACL;gBACA,GAAG,SAAA;gBACH,WAAW,cAAc,KAAqB,EAAE,MAAA,CAAO,aAAa,CAAA,CAAE;YAAA;QAE1E,CAAC;QACD,WAAW;IAAA;AAEf;AC3DA,SAAS,gBAAgB,OAAA,EAAc;IACrC,OAAI,MAAM,OAAA,CAAQ,QAAQ,EAAE,IACnB,QAAQ,EAAA,GAEV,QAAQ,EAAA,GAAK;QAAC,QAAQ,EAAE;KAAA,GAAI,QAAQ,EAAA;AAC7C;AAEA,IAAA,YAAe,CAAC,SAAc,mBAAwB;IACpD,MAAM,YAAY,MAAM,OAAA,CAAQ,QAAQ,EAAE,iJAAK,UAAA,EAAc,QAAQ,EAAE,GACjE,eAAe,gBAAgB,OAAO,GAEtC,WAAW,gJAAA,EAAQ;QACvB,YACI,SAAS,cAAc,CAAC,IAAM,GAAG,EAAE,IAAI,CAAA,CAAA,EAAI,EAAE,IAAI,EAAE,EAAE,GAAA,CAAI,CAAC,QACxD,MACE,CAAA,MAAA,EAAS,MAAM,MAAM,CAAA,+CAAA,EAAkD,KAAA,CAAM,CAAC,CAAA,CAAE,IAAI,CAAA,uGAAA,CAAA,EACpF,SAAS,oBAAA,KAGb,MACE,qIACA,SAAS,oBAAA;KAEhB;IAED,OAAI,aAAa,aAAa,MAAA,KAAW,KACvC,SAAS,IAAA,CACP,MACE,gGACA,SAAS,oBAAA,IAKf,SAAS,IAAA,CAAK,GAAG,gBAAgB,OAAO,CAAC,GAElC;QACL,GAAG,OAAA;QACH,IAAA,CAAK,YAAY,eAAe,CAAA,CAAA,EAAI,GAAA,CAAI,eAAe,KAAK;QAC5D,WAAW;IAAA;AAEf;AAEA,SAAS,gBAAgB,OAAA,EAAwC;IAC/D,MAAM,EAAC,OAAA,CAAA,CAAA,GAAW,SACZ,WAAW,CAAA,CAAA;IAajB,OAXA,SAAS,IAAA,IACJ;QAAC;QAAU,cAAc;KAAA,CACzB,MAAA,CAAO,CAAC,MAAQ,OAAO,OAAO,EAC9B,GAAA,CAAI,CAAC,MACJ,MACE,CAAA,EAAA,EAAK,GAAG,CAAA,0EAAA,EAA6E,GAAG,CAAA,GAAA,CAAA,EACxF,SAAS,kCAAA,KAKZ,sJAIA,UAAA,EAAc,OAAO,IAStB,OAAO,QAAQ,MAAA,IAAW,cAAc,OAAO,QAAQ,YAAA,GAAiB,MACnE,SAAS,MAAA,CACd,MACE,0JACA,SAAS,2CAAA,KAKX,OAAO,QAAQ,MAAA,IAAW,cAAe,CAAC,QAAQ,MAAA,IAAU,CAAC,QAAQ,YAAA,GAChE,WAGL,OAAO,QAAQ,MAAA,IAAW,WACrB,SAAS,MAAA,CACd,MAAM,CAAA,yCAAA,EAA4C,OAAO,QAAQ,MAAM,EAAE,KAIzE,OAAO,QAAQ,YAAA,GAAiB,OAAe,4IAAC,WAAA,EAAc,QAAQ,YAAY,IAC7E,SAAS,MAAA,CAAO,MAAM,2CAA6C,CAAC,IAGzE,QAAQ,YAAA,GACH,SAAS,MAAA,CACd,OAAO,IAAA,CAAK,QAAQ,YAAY,EAC7B,MAAA,CAAO,CAAC,MAAQ,IAAI,UAAA,CAAW,IAAI,KAAK,IAAI,UAAA,CAAW,GAAG,CAAC,EAC3D,GAAA,CAAI,CAAC,MAAQ,MAAM,CAAA,0DAAA,EAA6D,GAAG,CAAA,EAAA,CAAI,CAAC,KAIxF,WAvCE,SAAS,MAAA,CACd,MACE,wDACA,SAAS,yBAAA,KAPN;AA4CX;AC1GA,IAAA,WAAe,CAAC,SAAc,mBAAwB;IACpD,MAAM,UAAU,CAAA,CAAQ,QAAQ,IAAA;IAChC,IAAI,CAAC,WAAW,OAAO,IAAA,CAAK,OAAO,EAAE,MAAA,KAAW,GAE9C,OAAO;QACL,GAAG,OAAA;QACH,WAAW;YACT,MACE,kGACA,SAAS,YAAA;SACX;IACF;IAIJ,MAAM,WAAW,CAAA,CAAA;IACjB,OAAI,mBAAmB,OAAO,IAC5B,SAAS,IAAA,CACP,MACE,kIACA,SAAS,kBAAA,KAGH,UAED,eAAe,UAAA,CAAW,QAAQ,IAAI,KAC/C,SAAS,IAAA,CACP,MACE,CAAA,oBAAA,EAAuB,QAAQ,IAAI,CAAA,qBAAA,CAAA,EACnC,SAAS,kBAAA,KALb,SAAS,IAAA,CAAK,MAAM,qBAAqB,SAAS,iBAAiB,CAAC,GAUlE,eAAe,WAAA,CAAY,QAAQ,IAAI,KACzC,SAAS,IAAA,CACP,MACE,CAAA,qCAAA,EAAwC,QAAQ,IAAI,CAAA,mCAAA,CAAA,IAK1D,SAAS,IAAA,CAAK,GAAG,kBAAkB,OAAO,CAAC,GAEvC,WAAW,WAAW,OAAO,QAAQ,KAAA,IAAU,YACjD,SAAS,IAAA,CAAK,QAAQ,+BAA+B,SAAS,kBAAkB,CAAC,GAE5E;QACL,GAAG,OAAA;QACH,WAAW;IAAA;AAEf;AAEA,SAAS,mBAAmB,OAAA,EAAc;IACxC,OAAO,CAAC,QAAQ,IAAA,IAAQ,QAAQ,OAAA,IAAA,CAAY,QAAQ,OAAA,CAAQ,IAAA,IAAQ,QAAQ,OAAA,CAAQ,KAAA;AACtF;ACxDA,IAAA,OAAe,CAAC,SAAc,mBAAwB;IACpD,MAAM,WAAW,CAAA,CAAA;IAEjB,OAAI,QAAQ,OAAA,IAAW,QAAQ,OAAA,CAAQ,SAAA,IAAA,CACrC,SAAS,IAAA,CACP,QACE,mEACA,SAAS,uBAAA,IAIb,QAAQ,OAAA,CAAQ,OAAA,GAAU,QAAQ,OAAA,CAAQ,SAAA,GAGrC;QACL,GAAG,OAAA;QACH,WAAW;IAAA;AAEf;ACLA,MAAM,eAAe;IACnB;IACA;IACA;IACA;IACA;IAAA,OACAC;IACA,UAAU;IACV;IACA;IACA;AACF,GAEM,iBAAiB,CAAC,iBAAwB,CAAC,YAAA,CAAoB;YACnE,MAAM,CAAA,sBAAA,EAAyB,eAAe,KAAK,CAAA,CAAA,CAAA;YACnD,GAAG,SAAA;YACH,WAAW,CAAA,CAAA;QACb,CAAA;AAEA,SAAS,QAAA,GAAW,QAAA,EAAe;IACjC,OAAO,CAAC,YAAiB,iBAChB,SAAS,MAAA,CACd,CAAC,QAAa,YAAiB;YAC7B,MAAM,MAAM,QAAQ,QAAQ,cAAc;YAC1C,OAAO;gBACL,GAAG,GAAA;gBACH,WAAW,OAAO,SAAA,CAAU,MAAA,CAAO,IAAI,SAAS;YAAA;QAEpD,GACA;YAAC,WAAW,CAAA,CAAA;YAAI,GAAG,UAAA;QAAA;AAGzB;AASO,SAAS,eACd,WAAA,EACA,EAAC,wBAAwB,CAAC,WAAa,QAAA,CAAA,CAAA,GAAqB,CAAA,CAAA,EAC5D;IACA,OAAO,qBAAqB,aAAa,CAAC,WAAW,mBAAmB;QACtE,MAAM,cACH,aACC,UAAU,IAAA,IACT,sBAAsB,YAAY,CAAA,CAAU,UAAU,IAAI,CAAA,IAC7D,eAAe,cAAc;QAE/B,OAAI,eAAe,MAAA,GACV,QAAQ,UAAU,QAAQ,WAAW,EAAE,WAAW,cAAc,IAGlE,QAAQ,QAAQ,WAAW,EAAE,WAAW,cAAc;IAC/D,CAAC;AACH;ACvEO,MAAM,wBAAwB,MAAM;IAClC,SAAA;IACP,YAAY,QAAA,CAA0C;QACpD,KAAA,CAAM,iBAAiB,GACvB,IAAA,CAAK,QAAA,GAAW,UAChB,IAAA,CAAK,IAAA,GAAO;IACd;AACF;ACOA,MAAM,oLAAgB,SAAA,CAAO,OAAA,CAAQ;IACnC,MAAM;IACN,OAAO;AACT,CAAC;AAEM,SAAS,8BAA8B,SAAA,EAA6C;IACzF,MAAM,YAAY,eAAe,UAAU,KAAK,EAAE,QAAA,IAE5C,WADa,cAAc,SAAS,EACd,MAAA,CAAO,CAAC,QAClC,MAAM,QAAA,CAAS,IAAA,CAAK,CAAC,UAAoC,QAAQ,QAAA,KAAa,OAAO;IAGvF,IAAI,SAAS,MAAA,GAAS,GACpB,MAAM,IAAI,gBAAgB,QAAQ;IAGpC,2KAAO,SAAA,CAAO,OAAA,CAAQ;QACpB,MAAM,UAAU,IAAA;QAChB,OAAO,UAAU,KAAA,CAAM,GAAA,CAAI,UAAU,EAAE,MAAA,CAAO,OAAO;QACrD,QAAQ;IAAA,CACT;AACH;AAIA,SAAS,WAAW,GAAA,EAAc;IAChC,IAAI,wIAAC,UAAA,EAAS,GAAG,EAAG,CAAA;IACpB,MAAM,8IAAM,UAAA,EAAU,GAAG;IACzB,OAAA,SAAS,GAAG,GACL;AACT;AAEA,SAAS,SAAS,GAAA,EAAc;IAC9B,2IAAK,UAAA,EAAS,GAAG,GAIjB;QAAA,IAAI,MAAM,OAAA,CAAQ,GAAG,GAAG;YACtB,IAAI,OAAA,CAAQ,QAAQ;YACpB;QACF;QAEA,KAAA,MAAW,KAAK,OAAO,MAAA,CAAO,GAAG,EAC/B,SAAS,CAAC;QAGZ,iBAAiB,GAAG;IAAA;AACtB;AAGA,SAAS,iBAAiB,GAAA,EAAc;IACtC,IAAI,EAAC,gJAAA,EAAS,GAAG,KAAK,CAAA,CAAE,gBAAgB,GAAA,EAAM,CAAA;IAG9C,MAAM,qBAAqB,MAAM,OAAA,CAAQ,IAAI,UAAU,IAAI,IAAI,UAAA,GAAa;QAAC,IAAI,UAAU;KAAA;IAE3F,IAAI,UAAA,GAAa,mBACd,GAAA,CAAI,CAAC,UAAU;QACd,2IAAK,UAAA,EAAS,KAAK,GAEnB,OAAO,CAAC,aAAoB;YAC1B,IAAI,OAAO;YACX,MAAM,QAAQ,WAAW,QAAQ,MAAM,KAAA,GAAQ,KAAA,GACzC,QAAQ,WAAW,QAAQ,MAAM,KAAA,GAAQ,KAAA,GACzC,UAAU,aAAa,QAAQ,MAAM,OAAA,GAAU,KAAA;YAErD,IAAI,CAAA,CAAA,CAAC,SAAS,CAAC,MAAM,OAAA,CAAQ,KAAK,CAAA,GAGlC;gBAAI,aAAa,KAAK,KAAA,CAAM,YAAY,KAAA,KAAa,OAAO,WAAY,QAAA,KAAA,CACtE,OAAO,IAAA,CAAK,KAAK,CAAA,CAAE,OAAO,CAAA;gBAI5B,KAAA,MAAW,YAAY,MACrB,OAAO,cAAc,MAAM,QAAQ;gBAGrC,OAAO;YAAA;QACT;IACF,CAAC,EACA,MAAA,CAAO,OAAO;AACnB;AAEA,SAAS,qBAAqB,GAAA,EAAmB;IAC/C,2IAAK,UAAA,EAAS,GAAG,GAEjB,OAAI,MAAM,OAAA,CAAQ,GAAG,IACZ,IAAI,GAAA,CAAI,oBAAoB,EAAE,MAAA,CAAO,OAAO,IAG9C,CAAC,aAAkB;QACxB,IAAI,OAAO;QAEX,MAAM,QAAQ,YAAY,MAAM,IAAI,MAAA,GAAS,KAAA,GACvC,QAAQ,YAAY,MAAM,IAAI,MAAA,GAAS,KAAA,GACvC,UAAU,cAAc,MAAM,IAAI,QAAA,GAAW,KAAA;QAEnD,IAAI,CAAA,CAAA,CAAC,SAAS,CAAC,MAAM,OAAA,CAAQ,KAAK,CAAA,GAGlC;YAAI,OAAO,SAAU,YAAA,CACnB,OAAO,IAAA,CAAK,KAAK,CAAA,CAAE,OAAO,CAAA;YAI5B,KAAA,MAAW,YAAY,MACrB,OAAO,cAAc,MAAM,QAAQ;YAGrC,OAAO;QAAA;IACT;AACF;AAGA,SAAS,cAAc,IAAA,EAAa,QAAA,EAA0B;IAC5D,IAAI,CAAC,YAAY,OAAO,YAAa,UACnC,OAAO;IAGT,MAAM,OAAO,UAAU,WAAW,SAAS,IAAA,GAAO,KAAA,GAC5C,aAAa,gBAAgB,WAAW,SAAS,UAAA,GAAa,KAAA;IAEpE,OAAQ,MAAA;QACN,KAAK;YACH,IAAI,eAAe,YACjB,OAAO,KAAK,QAAA,CAAA;YACP,IAAI,eAAe,YACxB,OAAO,KAAK,QAAA,CAAA;YAEd;QAEF,KAAK;YACH,IAAI,OAAO,cAAe,UACxB,OAAO,KAAK,IAAA,CAAK,UAAgC;YAEnD;QAEF,KAAK;YACH,IAAI,OAAO,cAAe,YAAY,OAAO,cAAe,UAC1D,OAAO,KAAK,GAAA,CAAI,UAAU;YAE5B;QAEF,KAAK;YACH,IAAI,OAAO,cAAe,YAAY,OAAO,cAAe,UAC1D,OAAO,KAAK,GAAA,CAAI,UAAU;YAE5B;QAEF,KAAK;YACH,IAAI,OAAO,cAAe,UACxB,OAAO,KAAK,MAAA,CAAO,UAAU;YAE/B;QAEF,KAAK;YACH,OAAO,KAAK,OAAA,CAAA;QAEd,KAAK;YACH,OAAO,KAAK,KAAA,CAAA;QAEd,KAAK;YACH,OAAO,KAAK,MAAA,CAAA;QAEd,KAAK;YACH,OAAO,KAAK,SAAA,CAAA;QAEd,KAAK;YACH,IAAI,OAAO,cAAe,UACxB,OAAO,KAAK,SAAA,CAAU,UAAU;YAElC;QAEF,KAAK;YACH,OAAO,KAAK,QAAA,CAAA;QAEd,KAAK;YACH,OAAO,KAAK,QAAA,CAAA;QAEd,KAAK;YACH,IAAI,OAAO,cAAe,UACxB,OAAO,KAAK,WAAA,CAAY,UAAU;YAEpC;QAEF,KAAK;YACH,IAAI,OAAO,cAAe,UACxB,OAAO,KAAK,QAAA,CAAS,UAAU;YAEjC;QAEF,KAAK;YACH,IAAI,eAAe,aACjB,OAAO,KAAK,SAAA,CAAA;YACP,IAAI,eAAe,aACxB,OAAO,KAAK,SAAA,CAAA;YAEd;QAEF,KAAK;YACH,IAAI,MAAM,OAAA,CAAQ,UAAU,GAC1B,OAAO,KAAK,KAAA,CAAM,UAAU;YAE9B;QAEF,KAAK;YACH,2IACE,UAAA,EAAS,UAAU,KACnB,aAAa,cAAA,CACZ,OAAO,WAAW,OAAA,IAAY,YAAY,WAAW,OAAA,YAAmB,MAAA,GACzE;gBACA,MAAM,UAAe,CAAA;gBACjB,UAAU,cAAc,OAAO,WAAW,IAAA,IAAS,YAAA,CACrD,QAAQ,IAAA,GAAO,WAAW,IAAA,GAExB,YAAY,cAAA,CACd,QAAQ,MAAA,GAAS,WAAW,MAAA;gBAE9B,MAAM,UACJ,OAAO,WAAW,OAAA,IAAY,WAC1B,eAAe,WAAW,OAAO,IACjC,WAAW,OAAA;gBACjB,OAAO,KAAK,KAAA,CAAM,SAAS,OAAO;YACpC;YACA;QAEF,KAAK;YACH,2IAAI,UAAA,EAAS,UAAU,KAAK,aAAa,YACvC,OAAO,KAAK,GAAA,CAAI,WAAW,OAA+B;YAE5D;QAEF,KAAK;YACH,OAAO,KAAK,aAAA,CAAA;QAEd,KAAK;YACH,OAAO,KAAK,GAAA,CAAI,qBAAqB,UAAU,CAAC;QAElD,KAAK;YACH,OAAO,KAAK,MAAA,CAAO,qBAAqB,UAAU,CAAC;QAErD,KAAK;YAGH,IAAI,eAAe,KAAA,EAAW,CAAA,OAAO,KAAK,MAAA,CAAO,IAAM,CAAA,CAAI;YAC3D,IAAI,OAAO,cAAe,WAAY,CAAA,OAAO,KAAK,MAAA,CAAO,UAA6B;YACtF;QAEF,KAAK;YAGH,IAAI,eAAe,KAAA,EAAW,CAAA,OAAO,KAAK,KAAA,CAAM,IAAM,CAAA,CAAI;YAC1D,IAAI,OAAO,cAAe,WAAY,CAAA,OAAO,KAAK,KAAA,CAAM,UAA4B;YACpF;IAGA;IAGJ,OAAO;AACT;AAEA,MAAM,eAAe,CAAC,QACb,CAAC,CAAC,SAAS,OAAO,SAAU,YAAY;QAAC;QAAS;QAAW,MAAM;KAAA,CAAE,QAAA,CAAS,KAAK;AAG5F,SAAS,eAAe,GAAA,EAAqB;IAE3C,MAAM,QAAQ,IAAI,KAAA,CAAM,sBAAsB;IAC9C,OAAI,QACK,IAAI,OAAO,KAAA,CAAM,CAAC,CAAA,EAAG,KAAA,CAAM,CAAC,CAAC,IAG/B,IAAI,OAAO,GAAG;AACvB;ACtQA,MAAM,wBAAwB,CAAC,WAAA,CAAuD;QACpF,KAAK;YACH,MAAM;YACN,OAAO;gBAAC,MAAM;YAAA;QAAQ;QAExB,OAAO;YACL,MAAM;YACN,OAAO;gBAAC,MAAM;gBAAU,OAAO;YAAA;QAAQ;QAEzC,YAAY;YACV,MAAM;YACN,OAAO;gBAAC,MAAM;YAAA;QAAQ;QAExB,YAAY;YACV,MAAM;YACN,OAAO;gBAAC,MAAM;YAAA;QAAQ;QAExB,MAAM;YACJ,MAAM;YACN,OAAO;gBAAC,MAAM;YAAA;QAAQ;IAE1B,CAAA,GACM,WAAA,aAAA,GAAA,IAAe,IAAsB;IACzC;QAAC;QAAQ;YAAC,MAAM;QAAA,CAAS;KAAA;IACzB;QAAC;QAAO;YAAC,MAAM;QAAA,CAAS;KAAA;IACxB;QAAC;QAAY;YAAC,MAAM;QAAA,CAAS;KAAA;IAC7B;QAAC;QAAQ;YAAC,MAAM;QAAA,CAAS;KAAA;IACzB;QAAC;QAAW;YAAC,MAAM;QAAA,CAAU;KAAA;IAC7B;QAAC;QAAS;YAAC,MAAM;QAAA,CAAS;KAAA;CAC3B;AAMM,SAAS,cACd,SAAA,EACA,iBAAuC,CAAA,CAAA,EAC3B;IACZ,MAAM,eAAA,aAAA,GAAA,IAAmB,IAAA,GACnB,gBAAgB,aAAA,GAAA,IAAI,IAAA,GACpB,SAAqB,CAAA,CAAA;IAGG,mBAAmB,SAAS,EACpC,OAAA,CAAQ,CAAC,aAAa;QAC1C,MAAM,aAAa,UAAU,GAAA,CAAI,QAAQ;QACzC,IAAI,eAAe,KAAA,GACjB;QAEF,MAAM,OAAO,gBAAgB,UAAU;QACnC,SAAS,QAAA,CAGT,KAAK,IAAA,KAAS,UAChB,aAAa,GAAA,CAAI,UAAU,GAEzB,KAAK,IAAA,KAAS,cAChB,cAAc,GAAA,CAAI,UAAU,IAAI,GAGlC,OAAO,IAAA,CAAK,IAAI,CAAA;IAClB,CAAC;IAED,SAAS,gBACP,UAAA,EACuD;QACvD,IAAI;QAOJ,IANI,WAAW,IAAA,GACb,WAAW,WAAW,IAAA,CAAK,IAAA,GAClB,cAAc,cAAA,CACvB,WAAW,WAAW,QAAA,GAGpB,aAAa,cAAc,aAAa,UAAU,GAAG;YACvD,MAAM,oBAAoB,sBAAsB,WAAW,IAAI,GAEzDC,UAAS,aAAa,UAAU;YACtC,OAAIA,QAAO,IAAA,KAAS,YACX,OAGF;gBACL,MAAM,WAAW,IAAA;gBACjB,MAAM;gBACN,YAAY;oBACV,GAAG,iBAAA;oBACH,GAAGA,QAAO,UAAA;gBAAA;YACZ;QAEJ;QAEA,MAAM,QAAQ,kBAAkB,UAAU;QAC1C,OAAI,MAAM,IAAA,KAAS,YACV,OAEL,MAAM,IAAA,KAAS,WAAA,CACjB,MAAM,UAAA,GAAa;YACjB,OAAO;gBACL,MAAM;gBACN,OAAO;oBACL,MAAM;oBACN,OAAO,WAAW,IAAA;gBAAA;YACpB;YAEF,GAAG,MAAM,UAAA;QAAA,GAEJ;YACL,MAAM,WAAW,IAAA;YACjB,MAAM;YACN;QAAA,CAAA,IAIG;YACL,MAAM,WAAW,IAAA;YACjB,MAAM;YACN;QAAA;IAEJ;IAEA,SAAS,kBAAkB,UAAA,EAAwC;QAEjE,IAAI,aAAa,GAAA,CAAI,WAAW,IAAK,GACnC,OAAO;YAAC,MAAM;YAAU,MAAM,WAAW,IAAA,CAAM,IAAA;QAAA;QAKjD,IAAI,WAAW,IAAA,EAAM,MAAM,SAAS,UAClC,OAAO;YAAC,MAAM;YAAU,MAAM,WAAW,IAAA,CAAK,IAAA;QAAA;QAGhD,IAAI,aAAa,UAAU,GACzB,OAAO,8BAA8B,UAAU;QAGjD,IAAI,aAAa,UAAU,GACzB,OAAO,8BAA8B,UAAU;QAIjD,IAAI,WAAW,IAAA,IAAQ,SAAS,GAAA,CAAI,WAAW,IAAA,CAAK,IAAI,GACtD,OAAO,SAAS,GAAA,CAAI,WAAW,IAAA,CAAK,IAAI;QAI1C,IAAI,4BAA4B,UAAU,GACxC,OAAO;YAAC,MAAM;QAAA;QAIhB,IAAI,8BAA8B,UAAU,GAC1C,OAAO;YAAC,MAAM;QAAA;QAGhB,IAAI,gBAAgB,UAAU,GAC5B,OAAO,iCAAiC,UAAU;QAGpD,IAAI,YAAY,UAAU,GACxB,OAAO,YAAY,UAAU;QAG/B,IAAI,aAAa,UAAU,GACzB,OAAO,aAAa,UAAU;QAGhC,IAAI,SAAS,UAAU,GAAG,SAAS,YAAY;YAC7C,MAAM,MAAM,cAAc,GAAA,CAAI,WAAW,IAAI;YAC7C,OAAI,QAAQ,KAAA,IACH;gBAAC,MAAM;YAAA,IAET;gBAAC,MAAM;gBAAU,YAAY,KAAK;YAAA;QAC3C;QAEA,MAAM,IAAI,MAAM,CAAA,MAAA,EAAS,WAAW,IAAI,CAAA,WAAA,CAAa;IACvD;IAEA,SAAS,aACP,UAAA,EACkC;QAClC,MAAM,aAA8C,CAAA,GAE9C,SAAS,aAAa,UAAU;QACtC,KAAA,MAAW,SAAS,OAAQ;YAC1B,MAAM,kBAAkB,gBAAgB,KAAK,GACvC,QAAQ,kBAAkB,MAAM,IAAI;YAC1C,IAAI,UAAU,MACZ;YAKE,iBAAiB,KAAK,KAAK,MAAM,IAAA,KAAS,YAAA,CAC5C,MAAM,UAAA,CAAW,KAAA,CAAM,QAAA,GAAW,CAAA,CAAA;YAKpC,MAAM,WAAW,eAAe,qBAAA,GAAwB,oBAAoB,CAAA,IAAQ,CAAA;YAEpF,UAAA,CAAW,MAAM,IAAI,CAAA,GAAI;gBACvB,MAAM;gBACN;gBACA;YAAA;QAEJ;QAGA,OAAI,OAAO,IAAA,CAAK,UAAU,EAAE,MAAA,KAAW,IAC9B;YAAC,MAAM;QAAA,IAAA,CAGZ,WAAW,IAAA,EAAM,SAAS,cAAc,WAAW,IAAA,KAAS,YAAA,CAC9D,WAAW,KAAA,GAAQ;YACjB,MAAM;YACN,OAAO;gBACL,MAAM;gBACN,OAAO,WAAW,IAAA;YAAA;QACpB,CAAA,GAIG;YACL,MAAM;YACN;QAAA,CAAA;IAEJ;IAEA,SAAS,YAAY,eAAA,EAAgE;QACnF,MAAM,KAAiB,CAAA,CAAA;QACvB,KAAA,MAAW,QAAQ,gBAAgB,EAAA,CAAI;YACrC,MAAM,QAAQ,kBAAkB,IAAI;YAChC,MAAM,IAAA,KAAS,WACjB,GAAG,IAAA,CAAK;gBACN,MAAM;gBACN,YAAY;oBACV,MAAM,eAAA;gBAAe;gBAEvB,MAAM;YAAA,CACkB,IAAA,CACjB,MAAM,IAAA,KAAS,YAAA,CACxB,MAAM,IAAA,GAAO;gBACX,MAAM;gBACN,YAAY;oBACV,MAAM,eAAA;gBAAe;YACvB,CAAA,GAEF,GAAG,IAAA,CAAK,KAAK,CAAA;QAIjB;QAEA,OAAI,GAAG,MAAA,KAAW,IACT;YAAC,MAAM;QAAA,IAGT;YACL,MAAM;YACN,IACE,GAAG,MAAA,GAAS,IACR;gBACE,MAAM;gBACN;YAAA,IAEF,EAAA,CAAG,CAAC,CAAA;QAAA;IAEd;IAEA,OAAO;AACT;AAEA,SAAS,iBAAkD;IACzD,OAAO;QACL,MAAM;QACN,OAAO;YACL,MAAM;QAAA;IACR;AAEJ;AAEA,SAAS,gBAAgB,KAAA,EAA6B;IACpD,MAAM,EAAC,UAAA,EAAA,GAAc,MAAM,IAAA;IAC3B,IAAI,CAAC,YACH,OAAO,CAAA;IAET,MAAM,QAAQ,MAAM,OAAA,CAAQ,UAAU,IAAI,aAAa;QAAC,UAAU;KAAA;IAClE,KAAA,MAAW,QAAQ,MAAO;QACxB,IAAI,WAAW,CAAA;QAIf,MAAM,QAAQ,IAAI,MAChB,CAAA,GACA;YACE,KAAK,CAAC,QAAQ,aAAe,IAAA,CACvB,eAAe,cAAA,CACjB,WAAW,CAAA,CAAA,GAEN,KAAA;QAAA;QAYb,IAPI,OAAO,QAAS,cAAA,CAClB,KAAK,KAAK,GACN,QAAA,KAKF,OAAO,QAAS,YAAY,SAAS,QAAQ,eAAe,QAC1D,KAAK,SAAA,KAAc,YACrB,OAAO,CAAA;IAGb;IAEA,OAAO,CAAA;AACT;AAEA,SAAS,iBAAiB,KAAA,EAA6B;IACrD,MAAM,EAAC,UAAA,EAAA,GAAc,MAAM,IAAA;IAC3B,IAAI,CAAC,YACH,OAAO,CAAA;IAET,MAAM,QAAQ,MAAM,OAAA,CAAQ,UAAU,IAAI,aAAa;QAAC,UAAU;KAAA;IAClE,KAAA,MAAW,QAAQ,MAAO;QACxB,IAAI,gBAAgB,CAAA;QAIpB,MAAM,QAAQ,IAAI,MAChB,CAAA,GACA;YACE,KAAK,CAAC,QAAQ,aAAe,IAAA,CACvB,eAAe,mBAAA,CACjB,gBAAgB,CAAA,CAAA,GAEX,KAAA;QAAA;QAYb,IAPI,OAAO,QAAS,cAAA,CAClB,KAAK,KAAK,GACN,aAAA,KAMJ,OAAO,QAAS,YAChB,SAAS,QACT,YAAY,QACZ,MAAM,OAAA,CAAQ,KAAK,MAAM,KAErB,KAAK,MAAA,CAAO,IAAA,CAAK,CAAC,IAAM,EAAE,IAAA,KAAS,eAAe,GACpD,OAAO,CAAA;IAGb;IAEA,OAAO,CAAA;AACT;AAEA,SAAS,aAAa,OAAA,EAAwD;IAC5E,OAAO,OAAO,SAAS,QAAQ,KAAK,QAAQ,QAAA,KAAa,YAAY,YAAY;AACnF;AACA,SAAS,YAAY,OAAA,EAAuD;IAC1E,OAAO,OAAO,SAAS,OAAO;AAChC;AACA,SAAS,gBAAgB,OAAA,EAA2D;IAClF,OAAO,OAAO,SAAS,WAAW;AACpC;AACA,SAAS,4BAA4B,OAAA,EAA2B;IAC9D,OAAO,OAAO,SAAS,uBAAuB;AAChD;AACA,SAAS,8BAA8B,OAAA,EAA2B;IAChE,OAAO,OAAO,SAAS,yBAAyB;AAClD;AACA,SAAS,aAAa,OAAA,EAAwD;IAC5E,OAAO,OAAO,SAAS,QAAQ;AACjC;AACA,SAAS,aAAa,OAAA,EAAwD;IAC5E,OAAO,OAAO,SAAS,QAAQ;AACjC;AACA,SAAS,8BACP,gBAAA,EACgD;IAChD,MAAM,cAAc,iBAAiB,OAAA,EAAS;IAC9C,OAAI,eAAe,MAAM,OAAA,CAAQ,WAAW,IACnC;QACL,MAAM;QACN,IAAI,YAAY,GAAA,CAAI,CAAC,IAAA,CAAO;gBAC1B,MAAM;gBACN,OAAO,OAAO,KAAM,WAAW,IAAI,EAAE,KAAA;YAAA,CAAA,CACrC;IAAA,IAGC;QACL,MAAM;IAAA;AAEV;AAEA,SAAS,8BACP,gBAAA,EACgD;IAChD,MAAM,cAAc,iBAAiB,OAAA,EAAS;IAC9C,OAAI,eAAe,MAAM,OAAA,CAAQ,WAAW,IACnC;QACL,MAAM;QACN,IAAI,YAAY,GAAA,CAAI,CAAC,IAAA,CAAO;gBAC1B,MAAM;gBACN,OAAO,OAAO,KAAM,WAAW,IAAI,EAAE,KAAA;YAAA,CAAA,CACrC;IAAA,IAGC;QACL,MAAM;IAAA;AAEV;AAEA,SAAS,iCACPC,UAAAA,EACgD;IAChD,MAAM,aAAa,qBAAqBA,UAAS;IACjD,OAAI,WAAW,MAAA,KAAW,IACjB,uKAAA,EAAwB,UAAA,CAAW,CAAC,CAAC,IAGvC;QACL,MAAM;QACN,IAAI,WAAW,GAAA,CAAI,CAAC,oJAAS,0BAAA,EAAwB,IAAI,CAAC;IAAA;AAE9D;AAGA,SAAS,qBAAqB,IAAA,EAAqC;IACjE,MAAM,gBAAgB,qBAAqB,IAAI;IAE/C,OAAO,CAAC;WAAG,IAAI,IAAI,cAAc,GAAA,CAAI,CAAC,MAAQ,IAAI,IAAI,CAAC,CAAC;KAAA;AAC1D;AAEA,SAAS,qBAAqB,IAAA,EAA+C;IAC3E,MAAM,QAAQ,QAAQ,OAAO,KAAK,EAAA,GAAK,CAAA,CAAA;IACvC,OAAI,UAAU,QAAQ,gBAAgB,KAAK,IAAK,IACvC,CAAC;WAAG,qBAAqB,KAAK,IAAI,GAAG;WAAG,KAAK;KAAA,GAG/C;AACT;AAGA,SAAS,aAAa,IAAA,EAA0D;IAC9E,OAAI,YAAY,OACP,KAAK,IAAA,GAAO,aAAa,KAAK,IAAI,EAAE,MAAA,CAAO,KAAK,MAAM,IAAI,KAAK,MAAA,GAGjE,CAAA,CAAA;AACT;AAGA,SAAS,OACP,OAAA,EACA,QAAA,EACS;IACT,IAAI,OAA+D;IACnE,MAAO,MAAM;QACX,IAAI,KAAK,IAAA,KAAS,YAAa,KAAK,IAAA,IAAQ,KAAK,IAAA,CAAK,IAAA,KAAS,UAC7D,OAAO,CAAA;QAGT,OAAO,KAAK,IAAA;IACd;IACA,OAAO,CAAA;AACT;AAGA,SAAS,SAAS,OAAA,EAAyD;IACzE,IAAI,OAA+D;IACnE,MAAO,MAAM;QACX,IAAI,CAAC,KAAK,IAAA,EACR,OAAO;QAET,OAAO,KAAK,IAAA;IACd;AAGF;AAGA,SAAS,mBAAmB,cAAA,EAAqC;IAC/D,MAAM,OAAA,aAAA,GAAA,IAAW,IAAA;IAGjB,SAAS,iBACP,UAAA,EACA,YAAA,EACM;QACN,IAAI,CAAA,KAAK,GAAA,CAAI,UAAU,GAAA;YAKvB,IAFA,KAAK,GAAA,CAAI,UAAU,GAEf,YAAY,YACd,KAAA,MAAW,SAAS,aAAa,UAAU,EAAG;gBAC5C,MAAM,OAAO,SAAS,MAAM,IAAI;gBAChC,IAAI,KAAM,IAAA,KAAS,YAAY;oBAC7B,aAAa,GAAA,CAAI,IAAK;oBACtB;gBACF;gBAEA,IAAI;gBACA,WAAW,IAAA,CAAM,IAAA,GACnB,iBAAiB,MAAM,IAAA,CAAK,IAAA,CAAM,IAAA,GACzB,cAAc,WAAW,IAAA,IAAA,CAClC,iBAAiB,MAAM,IAAA,CAAK,QAAA,GAAA,CAG1B,mBAAmB,YAAY,mBAAmB,OAAA,KAAA,CAChD,gBAAgB,MAAM,IAAI,IAC5B,MAAM,IAAA,CAAK,EAAA,CAAG,OAAA,CAAQ,CAAC,MAAQ,aAAa,GAAA,CAAI,IAAI,IAAK,CAAC,IAE1D,aAAa,GAAA,CAAI,MAAM,IAAI,CAAA,GAG/B,iBAAiB,MAAM,IAAA,EAAM,YAAY;YAC3C;iBAAA,IACS,QAAQ,YACjB,KAAA,MAAW,QAAQ,WAAW,EAAA,CAC5B,iBAAiB,MAAM,YAAY;QAAA;IAGzC;IACA,MAAM,gBAAA,aAAA,GAAA,IAAoB,IAAA;IAC1B,eAAe,YAAA,CAAA,EAAe,OAAA,CAAQ,CAAC,aAAa;QAClD,MAAM,aAAa,eAAe,GAAA,CAAI,QAAQ;QAC9C,IAAI,eAAe,KAAA,KAAa,WAAW,IAAA,KAAS,MAClD;QAEF,MAAM,eAAA,aAAA,GAAA,IAAmB,IAAA;QAEzB,iBAAiB,YAAY,YAAY,GACzC,cAAc,GAAA,CAAI,YAAY,YAAY,GAC1C,KAAK,KAAA,CAAA;IACP,CAAC;IAGD,MAAM,YAAsB,CAAA,CAAA,EAEtB,oBAAA,aAAA,GAAA,IAAwB,OAGxB,UAAU,aAAA,GAAA,IAAI,IAAA;IAGpB,SAAS,MAAM,IAAA,EAAwB;QAKrC,IAJI,QAAQ,GAAA,CAAI,IAAI,KAIhB,kBAAkB,GAAA,CAAI,IAAI,GAC5B;QAGF,kBAAkB,GAAA,CAAI,IAAI;QAC1B,MAAM,OAAO,cAAc,GAAA,CAAI,IAAI;QAC/B,SAAS,KAAA,KACX,KAAK,OAAA,CAAQ,CAAC,MAAQ,MAAM,GAAG,CAAC,GAElC,kBAAkB,MAAA,CAAO,IAAI,GAC7B,QAAQ,GAAA,CAAI,IAAI,GAEX,UAAU,QAAA,CAAS,KAAK,IAAI,KAC/B,UAAU,OAAA,CAAQ,KAAK,IAAI;IAE/B;IAEA,KAAA,MAAW,CAAC,IAAI,CAAA,IAAK,cACnB,MAAM,IAAI;IAGZ,OAAO;AACT;AClmBA,SAAS,yBAAyB,SAAA,EAAmB;IACnD,OAAO,WAAY;QACjB,OAAO;YACL,WAAW;gBACT;oBACE,UAAU;oBACV,SAAS,CAAA,2CAAA,EAA8C,SAAS,CAAA,CAAA,CAAA;gBAAA;aAClE;QACF;IAEJ;AACF;AAOO,SAAS,gCACd,WAAA,EACqF;IAGrF,MAAM,YAAY,eAFJ;QAAC,WAAW;KAAA,EAEc;QACtC,uBAAuB,CAACC,gBAAAA,CAAkB;gBACxC,GAAGA,aAAAA;gBACH,UAAU,yBAAyB,UAAU;gBAC7C,OAAO,yBAAyB,OAAO;gBACvC,MAAM,yBAAyB,MAAM;gBACrC,OAAO,yBAAyB,cAAc;gBAC9C,WAAW,yBAAyB,WAAW;gBAC/C,uBAAuB,yBAAyB,yBAAyB;YAAA,CAAA;IAC3E,CACD,GAIK,SAFa,cAAc,UAAU,QAAA,EAAU,EAGlD,GAAA,CAAI,CAAC,QAAU,MAAM,QAAA,CAAS,MAAA,CAAO,CAAC,EAAC,QAAA,EAAA,GAAc,aAAa,OAAO,CAAC,EAC1E,MAAA,CAAO,CAAC,WAAa,SAAS,MAAM;IAEvC,OAAO;QAAC,OAAO,MAAA,KAAW;QAAG,MAAM;KAAA;AACrC","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"debugId":null}},
    {"offset": {"line": 4472, "column": 0}, "map": {"version":3,"file":"index.mjs","sources":["file:///Users/isseemii/app/letterseed/node_modules/%40sanity/schema/src/_exports/index.ts"],"sourcesContent":["import {DeprecatedDefaultSchema, Schema as NamedSchema} from '../legacy/Schema'\n\nexport default DeprecatedDefaultSchema\nexport const Schema = NamedSchema\nexport {Rule} from '../legacy/Rule'\nexport {type SchemaValidationResult} from '../sanity/typedefs'\n"],"names":["NamedSchema"],"mappings":";;;;;;AAGO,MAAM,6KAASA,SAAAA","ignoreList":[0],"debugId":null}}]
}